/*!
 * jQuery.filer minified
 * Copyright (c) 2016 CreativeDream
 * Website: https://github.com/CreativeDream/jquery.filer
 * Version: 1.3 (14-Sep-2016)
 * Requires: jQuery v1.7.1 or later
 */
!function(a){"use strict";a.fn.filer=function(b){return this.each(function(c,d){var e=a(d),f=".jFiler",g=a(),h=a(),i=a(),j=[],k=a.isFunction(b)?b(e,a.fn.filer.defaults):b,l=k&&a.isPlainObject(k)?a.extend(!0,{},a.fn.filer.defaults,k):a.fn.filer.defaults,m={init:function(){e.wrap('<div class="jFiler"></div>'),m._set("props"),e.prop("jFiler").boxEl=g=e.closest(f),m._changeInput()},_bindInput:function(){l.changeInput&&h.length>0&&h.on("click",m._clickHandler),e.on({focus:function(){h.addClass("focused")},blur:function(){h.removeClass("focused")},change:m._onChange}),l.dragDrop&&(l.dragDrop.dragContainer.on("drag dragstart dragend dragover dragenter dragleave drop",function(a){a.preventDefault(),a.stopPropagation()}),l.dragDrop.dragContainer.on("drop",m._dragDrop.drop),l.dragDrop.dragContainer.on("dragover",m._dragDrop.dragEnter),l.dragDrop.dragContainer.on("dragleave",m._dragDrop.dragLeave)),l.uploadFile&&l.clipBoardPaste&&a(window).on("paste",m._clipboardPaste)},_unbindInput:function(b){l.changeInput&&h.length>0&&h.off("click",m._clickHandler),b&&(e.off("change",m._onChange),l.dragDrop&&(l.dragDrop.dragContainer.off("drop",m._dragDrop.drop),l.dragDrop.dragContainer.off("dragover",m._dragDrop.dragEnter),l.dragDrop.dragContainer.off("dragleave",m._dragDrop.dragLeave)),l.uploadFile&&l.clipBoardPaste&&a(window).off("paste",m._clipboardPaste))},_clickHandler:function(){if(!l.uploadFile&&l.addMore&&0!=e.val().length){m._unbindInput(!0);var b=a('<input type="file" />'),c=e.prop("attributes");a.each(c,function(){"required"!=this.name&&b.attr(this.name,this.value)}),e.after(b),j.push(b),e=b,m._bindInput(),m._set("props")}e.click()},_applyAttrSettings:function(){var a=["name","limit","maxSize","fileMaxSize","extensions","changeInput","showThumbs","appendTo","theme","addMore","excludeName","files","uploadUrl","uploadData","options"];for(var b in a){var c="data-jfiler-"+a[b];if(m._assets.hasAttr(c)){switch(a[b]){case"changeInput":case"showThumbs":case"addMore":l[a[b]]=["true","false"].indexOf(e.attr(c))>-1?"true"==e.attr(c):e.attr(c);break;case"extensions":l[a[b]]=e.attr(c).replace(/ /g,"").split(",");break;case"uploadUrl":l.uploadFile&&(l.uploadFile.url=e.attr(c));break;case"uploadData":l.uploadFile&&(l.uploadFile.data=JSON.parse(e.attr(c)));break;case"files":case"options":l[a[b]]=JSON.parse(e.attr(c));break;default:l[a[b]]=e.attr(c)}e.removeAttr(c)}}},_changeInput:function(){if(m._applyAttrSettings(),null!=l.beforeRender&&"function"==typeof l.beforeRender?l.beforeRender(g,e):null,l.theme&&g.addClass("jFiler-theme-"+l.theme),"input"!=e.get(0).tagName.toLowerCase()&&"file"!=e.get(0).type)h=e,e=a('<input type="file" name="'+l.name+'" />'),e.css({position:"absolute",left:"-9999px",top:"-9999px","z-index":"-9999"}),g.prepend(e),m._isGn=e;else if(l.changeInput){switch(typeof l.changeInput){case"boolean":h=a('<div class="jFiler-input"><div class="jFiler-input-caption"><span>'+l.captions.feedback+'</span></div><div class="jFiler-input-button">'+l.captions.button+'</div></div>"');break;case"string":case"object":h=a(l.changeInput);break;case"function":h=a(l.changeInput(g,e,l))}e.after(h),e.css({position:"absolute",left:"-9999px",top:"-9999px","z-index":"-9999"})}e.prop("jFiler").newInputEl=h,l.dragDrop&&(l.dragDrop.dragContainer=l.dragDrop.dragContainer?a(l.dragDrop.dragContainer):h),(!l.limit||l.limit&&l.limit>=2)&&(e.attr("multiple","multiple"),"[]"!=e.attr("name").slice(-2)?e.attr("name",e.attr("name")+"[]"):null),e.attr("disabled")||l.disabled?(l.disabled=!0,m._unbindInput(!0),g.addClass("jFiler-disabled")):(l.disabled=!1,m._bindInput(),g.removeClass("jFiler-disabled")),l.files&&m._append(!1,{files:l.files}),null!=l.afterRender&&"function"==typeof l.afterRender?l.afterRender(i,g,h,e):null},_clear:function(){m.files=null,e.prop("jFiler").files=null,l.uploadFile||l.addMore||m._reset(),m._set("feedback",m._itFl&&m._itFl.length>0?m._itFl.length+" "+l.captions.feedback2:l.captions.feedback),null!=l.onEmpty&&"function"==typeof l.onEmpty?l.onEmpty(g,h,e):null},_reset:function(b){if(!b){if(!l.uploadFile&&l.addMore){for(var c=0;c<j.length;c++)j[c].remove();j=[],m._unbindInput(!0),e=m._isGn?m._isGn:a(d),m._bindInput()}m._set("input","")}m._itFl=[],m._itFc=null,m._ajFc=0,m._set("props"),e.prop("jFiler").files_list=m._itFl,e.prop("jFiler").current_file=m._itFc,m._itFr=[],g.find("input[name^='jfiler-items-exclude-']:hidden").remove(),i.fadeOut("fast",function(){a(this).remove()}),e.prop("jFiler").listEl=i=a()},_set:function(a,b){switch(a){case"input":e.val(b);break;case"feedback":h.length>0&&h.find(".jFiler-input-caption span").html(b);break;case"props":e.prop("jFiler")||e.prop("jFiler",{options:l,listEl:i,boxEl:g,newInputEl:h,inputEl:e,files:m.files,files_list:m._itFl,current_file:m._itFc,append:function(a){return m._append(!1,{files:[a]})},enable:function(){l.disabled&&(l.disabled=!1,e.removeAttr("disabled"),g.removeClass("jFiler-disabled"),m._bindInput())},disable:function(){l.disabled||(l.disabled=!0,g.addClass("jFiler-disabled"),m._unbindInput(!0))},remove:function(a){return m._remove(null,{binded:!0,data:{id:a}}),!0},reset:function(){return m._reset(),m._clear(),!0},retry:function(a){return m._retryUpload(a)}})}},_filesCheck:function(){var b=0;if(l.limit&&m.files.length+m._itFl.length>l.limit)return l.dialogs.alert(m._assets.textParse(l.captions.errors.filesLimit)),!1;for(var c=0;c<m.files.length;c++){var d=m.files[c],e=d.name.split(".").pop().toLowerCase(),f={name:d.name,size:d.size,size2:m._assets.bytesToSize(d.size),type:d.type,ext:e};if(null!=l.extensions&&a.inArray(e,l.extensions)==-1&&a.inArray(f.type,l.extensions)==-1)return l.dialogs.alert(m._assets.textParse(l.captions.errors.filesType,f)),!1;if(null!=l.maxSize&&m.files[c].size>1048576*l.maxSize||null!=l.fileMaxSize&&m.files[c].size>1048576*l.fileMaxSize)return l.dialogs.alert(m._assets.textParse(l.captions.errors.filesSize,f)),!1;if(4096==d.size&&0==d.type.length)return l.dialogs.alert(m._assets.textParse(l.captions.errors.folderUpload,f)),!1;if(null!=l.onFileCheck&&"function"==typeof l.onFileCheck?l.onFileCheck(f,l,m._assets.textParse)===!1:null)return!1;if((l.uploadFile||l.addMore)&&!l.allowDuplicates){var f=m._itFl.filter(function(a,b){if(a.file.name==d.name&&a.file.size==d.size&&a.file.type==d.type&&(!d.lastModified||a.file.lastModified==d.lastModified))return!0});if(f.length>0){if(1==m.files.length)return!1;d._pendRemove=!0}}b+=m.files[c].size}return!(null!=l.maxSize&&b>=Math.round(1048576*l.maxSize))||(l.dialogs.alert(m._assets.textParse(l.captions.errors.filesSizeAll)),!1)},_thumbCreator:{create:function(b){var c=m.files[b],d=m._itFc?m._itFc.id:b,e=c.name,f=c.size,g=c.file,h=c.type?c.type.split("/",1):"".toString().toLowerCase(),j=e.indexOf(".")!=-1?e.split(".").pop().toLowerCase():"",k=l.uploadFile?'<div class="jFiler-jProgressBar">'+l.templates.progressBar+"</div>":"",n={id:d,name:e,size:f,size2:m._assets.bytesToSize(f),url:g,type:h,extension:j,icon:m._assets.getIcon(j,h),icon2:m._thumbCreator.generateIcon({type:h,extension:j}),image:'<div class="jFiler-item-thumb-image fi-loading"></div>',progressBar:k,_appended:c._appended},o="";return c.opts&&(n=a.extend({},c.opts,n)),o=a(m._thumbCreator.renderContent(n)).attr("data-jfiler-index",d),o.get(0).jfiler_id=d,m._thumbCreator.renderFile(c,o,n),c.forList?o:(m._itFc.html=o,o.hide()[l.templates.itemAppendToEnd?"appendTo":"prependTo"](i.find(l.templates._selectors.list)).show(),void(c._appended||m._onSelect(b)))},renderContent:function(a){return m._assets.textParse(a._appended?l.templates.itemAppend:l.templates.item,a)},renderFile:function(b,c,d){if(0==c.find(".jFiler-item-thumb-image").length)return!1;if(b.file&&"image"==d.type){var e='<img src="'+b.file+'" draggable="false" />',f=c.find(".jFiler-item-thumb-image.fi-loading");return a(e).error(function(){e=m._thumbCreator.generateIcon(d),c.addClass("jFiler-no-thumbnail"),f.removeClass("fi-loading").html(e)}).load(function(){f.removeClass("fi-loading").html(e)}),!0}if(window.File&&window.FileList&&window.FileReader&&"image"==d.type&&d.size<1e7){var g=new FileReader;g.onload=function(a){var b=c.find(".jFiler-item-thumb-image.fi-loading");if(l.templates.canvasImage){var e=document.createElement("canvas"),f=e.getContext("2d"),g=new Image;g.onload=function(){var a=b.height(),c=b.width(),d=g.height/a,h=g.width/c,i=d<h?d:h,j=g.height/i,k=g.width/i,l=Math.ceil(Math.log(g.width/k)/Math.log(2));if(e.height=a,e.width=c,g.width<e.width||g.height<e.height||l<=1){var m=g.width<e.width?e.width/2-g.width/2:g.width>e.width?-(g.width-e.width)/2:0,n=g.height<e.height?e.height/2-g.height/2:0;f.drawImage(g,m,n,g.width,g.height)}else{var o=document.createElement("canvas"),p=o.getContext("2d");o.width=.5*g.width,o.height=.5*g.height,p.fillStyle="#fff",p.fillRect(0,0,o.width,o.height),p.drawImage(g,0,0,o.width,o.height),p.drawImage(o,0,0,.5*o.width,.5*o.height),f.drawImage(o,k>e.width?k-e.width:0,0,.5*o.width,.5*o.height,0,0,k,j)}b.removeClass("fi-loading").html('<img src="'+e.toDataURL("image/png")+'" draggable="false" />')},g.onerror=function(){c.addClass("jFiler-no-thumbnail"),b.removeClass("fi-loading").html(m._thumbCreator.generateIcon(d))},g.src=a.target.result}else b.removeClass("fi-loading").html('<img src="'+a.target.result+'" draggable="false" />')},g.readAsDataURL(b)}else{var e=m._thumbCreator.generateIcon(d),f=c.find(".jFiler-item-thumb-image.fi-loading");c.addClass("jFiler-no-thumbnail"),f.removeClass("fi-loading").html(e)}},generateIcon:function(b){var c=new Array(3);if(b&&b.type&&b.type[0]&&b.extension)switch(b.type[0]){case"image":c[0]="f-image",c[1]='<i class="icon-jfi-file-image"></i>';break;case"video":c[0]="f-video",c[1]='<i class="icon-jfi-file-video"></i>';break;case"audio":c[0]="f-audio",c[1]='<i class="icon-jfi-file-audio"></i>';break;default:c[0]="f-file f-file-ext-"+b.extension,c[1]=b.extension.length>0?"."+b.extension:"",c[2]=1}else c[0]="f-file",c[1]=b.extension&&b.extension.length>0?"."+b.extension:"",c[2]=1;var d='<span class="jFiler-icon-file '+c[0]+'">'+c[1]+"</span>";if(1==c[2]){var e=m._assets.text2Color(b.extension);if(e){var f=a(d).appendTo("body");f.css("background-color",m._assets.text2Color(b.extension)),d=f.prop("outerHTML"),f.remove()}}return d},_box:function(b){if(null!=l.beforeShow&&"function"==typeof l.beforeShow&&!l.beforeShow(m.files,i,g,h,e))return!1;if(i.length<1){if(l.appendTo)var c=a(l.appendTo);else var c=g;c.find(".jFiler-items").remove(),i=a('<div class="jFiler-items jFiler-row"></div>'),e.prop("jFiler").listEl=i,i.append(m._assets.textParse(l.templates.box)).appendTo(c),i.on("click",l.templates._selectors.remove,function(c){c.preventDefault();var d=[b?b.remove.event:c,b?b.remove.el:a(this).closest(l.templates._selectors.item)],e=function(a){m._remove(d[0],d[1])};l.templates.removeConfirmation?l.dialogs.confirm(l.captions.removeConfirmation,e):e()})}for(var d=0;d<m.files.length;d++)m.files[d]._appended||(m.files[d]._choosed=!0),m._addToMemory(d),m._thumbCreator.create(d)}},_upload:function(b){var c=m._itFl[b],d=c.html,f=new FormData;if(f.append(e.attr("name"),c.file,!!c.file.name&&c.file.name),null!=l.uploadFile.data&&a.isPlainObject("function"==typeof l.uploadFile.data?l.uploadFile.data(c.file):l.uploadFile.data))for(var g in l.uploadFile.data)f.append(g,l.uploadFile.data[g]);m._ajax.send(d,f,c)},_ajax:{send:function(b,c,d){return d.ajax=a.ajax({url:l.uploadFile.url,data:c,type:l.uploadFile.type,enctype:l.uploadFile.enctype,xhr:function(){var c=a.ajaxSettings.xhr();return c.upload&&c.upload.addEventListener("progress",function(a){m._ajax.progressHandling(a,b)},!1),c},complete:function(a,b){d.ajax=!1,m._ajFc++,l.uploadFile.synchron&&d.id+1<m._itFl.length&&m._upload(d.id+1),m._ajFc>=m.files.length&&(m._ajFc=0,e.get(0).value="",null!=l.uploadFile.onComplete&&"function"==typeof l.uploadFile.onComplete?l.uploadFile.onComplete(i,g,h,e,a,b):null)},beforeSend:function(a,c){return null==l.uploadFile.beforeSend||"function"!=typeof l.uploadFile.beforeSend||l.uploadFile.beforeSend(b,i,g,h,e,d.id,a,c)},success:function(a,c,f){d.uploaded=!0,null!=l.uploadFile.success&&"function"==typeof l.uploadFile.success?l.uploadFile.success(a,b,i,g,h,e,d.id,c,f):null},error:function(a,c,f){d.uploaded=!1,null!=l.uploadFile.error&&"function"==typeof l.uploadFile.error?l.uploadFile.error(b,i,g,h,e,d.id,a,c,f):null},statusCode:l.uploadFile.statusCode,cache:!1,contentType:!1,processData:!1}),d.ajax},progressHandling:function(a,b){if(a.lengthComputable){var c=Math.round(100*a.loaded/a.total).toString();null!=l.uploadFile.onProgress&&"function"==typeof l.uploadFile.onProgress?l.uploadFile.onProgress(c,b,i,g,h,e):null,b.find(".jFiler-jProgressBar").find(l.templates._selectors.progressBar).css("width",c+"%")}}},_dragDrop:{dragEnter:function(a){clearTimeout(m._dragDrop._drt),l.dragDrop.dragContainer.addClass("dragged"),m._set("feedback",l.captions.drop),null!=l.dragDrop.dragEnter&&"function"==typeof l.dragDrop.dragEnter?l.dragDrop.dragEnter(a,h,e,g):null},dragLeave:function(a){clearTimeout(m._dragDrop._drt),m._dragDrop._drt=setTimeout(function(a){return m._dragDrop._dragLeaveCheck(a)?(l.dragDrop.dragContainer.removeClass("dragged"),m._set("feedback",l.captions.feedback),void(null!=l.dragDrop.dragLeave&&"function"==typeof l.dragDrop.dragLeave?l.dragDrop.dragLeave(a,h,e,g):null)):(m._dragDrop.dragLeave(a),!1)},100,a)},drop:function(a){clearTimeout(m._dragDrop._drt),l.dragDrop.dragContainer.removeClass("dragged"),m._set("feedback",l.captions.feedback),a&&a.originalEvent&&a.originalEvent.dataTransfer&&a.originalEvent.dataTransfer.files&&a.originalEvent.dataTransfer.files.length>0&&m._onChange(a,a.originalEvent.dataTransfer.files),null!=l.dragDrop.drop&&"function"==typeof l.dragDrop.drop?l.dragDrop.drop(a.originalEvent.dataTransfer.files,a,h,e,g):null},_dragLeaveCheck:function(b){var c=a(b.currentTarget),d=0;return!(!c.is(h)&&(d=h.find(c).length,d>0))}},_clipboardPaste:function(a,b){if((b||a.originalEvent.clipboardData||a.originalEvent.clipboardData.items)&&(!b||a.originalEvent.dataTransfer||a.originalEvent.dataTransfer.items)&&!m._clPsePre){var c=b?a.originalEvent.dataTransfer.items:a.originalEvent.clipboardData.items,d=function(a,b,c){b=b||"",c=c||512;for(var d=atob(a),e=[],f=0;f<d.length;f+=c){for(var g=d.slice(f,f+c),h=new Array(g.length),i=0;i<g.length;i++)h[i]=g.charCodeAt(i);var j=new Uint8Array(h);e.push(j)}var k=new Blob(e,{type:b});return k};if(c)for(var e=0;e<c.length;e++)if(c[e].type.indexOf("image")!==-1||c[e].type.indexOf("text/uri-list")!==-1){if(b)try{window.atob(a.originalEvent.dataTransfer.getData("text/uri-list").toString().split(",")[1])}catch(a){return}var f=b?d(a.originalEvent.dataTransfer.getData("text/uri-list").toString().split(",")[1],"image/png"):c[e].getAsFile();f.name=Math.random().toString(36).substring(5),f.name+=f.type.indexOf("/")!=-1?"."+f.type.split("/")[1].toString().toLowerCase():".png",m._onChange(a,[f]),m._clPsePre=setTimeout(function(){delete m._clPsePre},1e3)}}},_onSelect:function(b){l.uploadFile&&!a.isEmptyObject(l.uploadFile)&&(!l.uploadFile.synchron||l.uploadFile.synchron&&0==a.grep(m._itFl,function(a){return a.ajax}).length)&&m._upload(m._itFc.id),m.files[b]._pendRemove&&(m._itFc.html.hide(),m._remove(null,{binded:!0,data:{id:m._itFc.id}})),null!=l.onSelect&&"function"==typeof l.onSelect?l.onSelect(m.files[b],m._itFc.html,i,g,h,e):null,b+1>=m.files.length&&(null!=l.afterShow&&"function"==typeof l.afterShow?l.afterShow(i,g,h,e):null)},_onChange:function(b,c){if(c){if(!c||0==c.length)return m._set("input",""),m._clear(),!1;m.files=c}else{if(!e.get(0).files||"undefined"==typeof e.get(0).files||0==e.get(0).files.length)return l.uploadFile||l.addMore||(m._set("input",""),m._clear()),!1;m.files=e.get(0).files}if(l.uploadFile||l.addMore||m._reset(!0),e.prop("jFiler").files=m.files,!m._filesCheck()||null!=l.beforeSelect&&"function"==typeof l.beforeSelect&&!l.beforeSelect(m.files,i,g,h,e))return m._set("input",""),m._clear(),l.addMore&&j.length>0&&(m._unbindInput(!0),j[j.length-1].remove(),j.splice(j.length-1,1),e=j.length>0?j[j.length-1]:a(d),m._bindInput()),!1;if(m._set("feedback",m.files.length+m._itFl.length+" "+l.captions.feedback2),l.showThumbs)m._thumbCreator._box();else for(var f=0;f<m.files.length;f++)m.files[f]._choosed=!0,m._addToMemory(f),m._onSelect(f)},_append:function(a,b){var c=!!b&&b.files;if(c&&!(c.length<=0)&&(m.files=c,e.prop("jFiler").files=m.files,l.showThumbs)){for(var d=0;d<m.files.length;d++)m.files[d]._appended=!0;m._thumbCreator._box()}},_getList:function(a,b){var c=!!b&&b.files;if(c&&!(c.length<=0)&&(m.files=c,e.prop("jFiler").files=m.files,l.showThumbs)){for(var d=[],f=0;f<m.files.length;f++)m.files[f].forList=!0,d.push(m._thumbCreator.create(f));b.callback&&b.callback(d,i,g,h,e)}},_retryUpload:function(b,c){var d=parseInt("object"==typeof c?c.attr("data-jfiler-index"):c),f=m._itFl.filter(function(a,b){return a.id==d});return f.length>0&&(!l.uploadFile||a.isEmptyObject(l.uploadFile)||f[0].uploaded?void 0:(m._itFc=f[0],e.prop("jFiler").current_file=m._itFc,m._upload(d),!0))},_remove:function(b,d){if(d.binded){if("undefined"!=typeof d.data.id&&(d=i.find(l.templates._selectors.item+"[data-jfiler-index='"+d.data.id+"']"),0==d.length))return!1;d.data.el&&(d=d.data.el)}var f=function(b){var d=g.find("input[name^='jfiler-items-exclude-']:hidden").first();0==d.length&&(d=a('<input type="hidden" name="jfiler-items-exclude-'+(l.excludeName?l.excludeName:("[]"!=e.attr("name").slice(-2)?e.attr("name"):e.attr("name").substring(0,e.attr("name").length-2))+"-"+c)+'">'),d.appendTo(g)),b&&a.isArray(b)&&(b=JSON.stringify(b),d.val(b))},j=function(b,c){var d=m._itFl[c],e=[];if(d.file._choosed||d.file._appended||d.uploaded){m._itFr.push(d);for(var g=m._itFl.filter(function(a){return a.file.name==d.file.name}),h=0;h<m._itFr.length;h++)l.addMore&&m._itFr[h]==d&&g.length>0&&(m._itFr[h].remove_name=g.indexOf(d)+"://"+m._itFr[h].file.name),e.push(m._itFr[h].remove_name?m._itFr[h].remove_name:m._itFr[h].file.name)}f(e),m._itFl.splice(c,1),m._itFl.length<1?(m._reset(),m._clear()):m._set("feedback",m._itFl.length+" "+l.captions.feedback2),b.fadeOut("fast",function(){a(this).remove()})},k=d.get(0).jfiler_id||d.attr("data-jfiler-index"),n=null;for(var o in m._itFl)"length"!==o&&m._itFl.hasOwnProperty(o)&&m._itFl[o].id==k&&(n=o);return!!m._itFl.hasOwnProperty(n)&&(m._itFl[n].ajax?(m._itFl[n].ajax.abort(),void j(d,n)):void(null!=l.onRemove&&"function"==typeof l.onRemove&&l.onRemove(d,m._itFl[n].file,n,i,g,h,e)===!1||j(d,n)))},_addToMemory:function(b){m._itFl.push({id:m._itFl.length,file:m.files[b],html:a(),ajax:!1,uploaded:!1}),(l.addMore||m.files[b]._appended)&&(m._itFl[m._itFl.length-1].input=e),m._itFc=m._itFl[m._itFl.length-1],e.prop("jFiler").files_list=m._itFl,e.prop("jFiler").current_file=m._itFc},_assets:{bytesToSize:function(a){if(0==a)return"0 Byte";var b=1e3,c=["Bytes","KB","MB","GB","TB","PB","EB","ZB","YB"],d=Math.floor(Math.log(a)/Math.log(b));return(a/Math.pow(b,d)).toPrecision(3)+" "+c[d]},hasAttr:function(a,b){var b=b?b:e,c=b.attr(a);return!(!c||"undefined"==typeof c)},getIcon:function(b,c){var d=["audio","image","text","video"];return a.inArray(c,d)>-1?'<i class="icon-jfi-file-'+c+" jfi-file-ext-"+b+'"></i>':'<i class="icon-jfi-file-o jfi-file-type-'+c+" jfi-file-ext-"+b+'"></i>'},textParse:function(b,c){switch(c=a.extend({},{limit:l.limit,maxSize:l.maxSize,fileMaxSize:l.fileMaxSize,extensions:l.extensions?l.extensions.join(","):null},c&&a.isPlainObject(c)?c:{},l.options),typeof b){case"string":return b.replace(/\{\{fi-(.*?)\}\}/g,function(a,b){return b=b.replace(/ /g,""),b.match(/(.*?)\|limitTo\:(\d+)/)?b.replace(/(.*?)\|limitTo\:(\d+)/,function(a,b,d){var b=c[b]?c[b]:"",e=b.substring(0,d);return e=b.length>e.length?e.substring(0,e.length-3)+"...":e}):c[b]?c[b]:""});case"function":return b(c);default:return b}},text2Color:function(a){if(!a||0==a.length)return!1;for(var b=0,c=0;b<a.length;c=a.charCodeAt(b++)+((c<<5)-c));for(var b=0,d="#";b<3;d+=("00"+(c>>2*b++&255).toString(16)).slice(-2));return d}},files:null,_itFl:[],_itFc:null,_itFr:[],_itPl:[],_ajFc:0};return e.on("filer.append",function(a,b){m._append(a,b)}).on("filer.remove",function(a,b){b.binded=!0,m._remove(a,b)}).on("filer.reset",function(a){return m._reset(),m._clear(),!0}).on("filer.generateList",function(a,b){return m._getList(a,b)}).on("filer.retry",function(a,b){return m._retryUpload(a,b)}),m.init(),this})},a.fn.filer.defaults={limit:null,maxSize:null,fileMaxSize:null,extensions:null,changeInput:!0,showThumbs:!1,appendTo:null,theme:"default",templates:{box:'<ul class="jFiler-items-list jFiler-items-default"></ul>',item:'<li class="jFiler-item"><div class="jFiler-item-container"><div class="jFiler-item-inner"><div class="jFiler-item-icon pull-left">{{fi-icon}}</div><div class="jFiler-item-info pull-left"><div class="jFiler-item-title" title="{{fi-name}}">{{fi-name | limitTo:30}}</div><div class="jFiler-item-others"><span>size: {{fi-size2}}</span><span>type: {{fi-extension}}</span><span class="jFiler-item-status">{{fi-progressBar}}</span></div><div class="jFiler-item-assets"><ul class="list-inline"><li><a class="icon-jfi-trash jFiler-item-trash-action"></a></li></ul></div></div></div></div></li>',itemAppend:'<li class="jFiler-item"><div class="jFiler-item-container"><div class="jFiler-item-inner"><div class="jFiler-item-icon pull-left">{{fi-icon}}</div><div class="jFiler-item-info pull-left"><div class="jFiler-item-title">{{fi-name | limitTo:35}}</div><div class="jFiler-item-others"><span>size: {{fi-size2}}</span><span>type: {{fi-extension}}</span><span class="jFiler-item-status"></span></div><div class="jFiler-item-assets"><ul class="list-inline"><li><a class="icon-jfi-trash jFiler-item-trash-action"></a></li></ul></div></div></div></div></li>',progressBar:'<div class="bar"></div>',itemAppendToEnd:!1,removeConfirmation:!0,canvasImage:!0,_selectors:{list:".jFiler-items-list",item:".jFiler-item",progressBar:".bar",remove:".jFiler-item-trash-action"}},files:null,uploadFile:null,dragDrop:null,addMore:!1,allowDuplicates:!1,clipBoardPaste:!0,excludeName:null,beforeRender:null,afterRender:null,beforeShow:null,beforeSelect:null,onSelect:null,onFileCheck:null,afterShow:null,onRemove:null,onEmpty:null,options:null,dialogs:{alert:function(a){return alert(a)},confirm:function(a,b){confirm(a)?b():null}},captions:{button:"Choose Files",feedback:"Choose files To Upload",feedback2:"files were chosen",drop:"Drop file here to Upload",removeConfirmation:"Are you sure you want to remove this file?",errors:{filesLimit:"Only {{fi-limit}} files are allowed to be uploaded.",filesType:"Only Images are allowed to be uploaded.",filesSize:"{{fi-name}} is too large! Please upload file up to {{fi-fileMaxSize}} MB.",filesSizeAll:"Files you've choosed are too large! Please upload files up to {{fi-maxSize}} MB.",folderUpload:"You are not allowed to upload folders."}}}}(jQuery);
/*! Tablesaw - v2.0.3 - 2016-06-03
* https://github.com/filamentgroup/tablesaw
* Copyright (c) 2016 Filament Group; Licensed MIT */
/*
* tablesaw: A set of plugins for responsive tables
* Stack and Column Toggle tables
* Copyright (c) 2013 Filament Group, Inc.
* MIT License
*/

if( typeof Tablesaw === "undefined" ) {
	Tablesaw = {
		i18n: {
			modes: [ 'Stack', 'Swipe', 'Toggle' ],
			columns: 'Col<span class=\"a11y-sm\">umn</span>s',
			columnBtnText: 'Columns',
			columnsDialogError: 'No eligible columns.',
			sort: 'Sort'
		},
		// cut the mustard
		mustard: 'querySelector' in document &&
			( !window.blackberry || window.WebKitPoint ) &&
			!window.operamini
	};
}
if( !Tablesaw.config ) {
	Tablesaw.config = {};
}
if( Tablesaw.mustard ) {
	jQuery( document.documentElement ).addClass( 'tablesaw-enhanced' );
}

;(function( $ ) {
	var pluginName = "table",
		classes = {
			toolbar: "tablesaw-bar"
		},
		events = {
			create: "tablesawcreate",
			destroy: "tablesawdestroy",
			refresh: "tablesawrefresh"
		},
		defaultMode = "stack",
		initSelector = "table[data-tablesaw-mode],table[data-tablesaw-sortable]";

	var Table = function( element ) {
		if( !element ) {
			throw new Error( "Tablesaw requires an element." );
		}

		this.table = element;
		this.$table = $( element );

		this.mode = this.$table.attr( "data-tablesaw-mode" ) || defaultMode;

		this.init();
	};

	Table.prototype.init = function() {
		// assign an id if there is none
		if ( !this.$table.attr( "id" ) ) {
			this.$table.attr( "id", pluginName + "-" + Math.round( Math.random() * 10000 ) );
		}

		this.createToolbar();

		var colstart = this._initCells();

		this.$table.trigger( events.create, [ this, colstart ] );
	};

	Table.prototype._initCells = function() {
		var colstart,
			thrs = this.table.querySelectorAll( "thead tr" ),
			self = this;

		$( thrs ).each( function(){
			var coltally = 0;

			$( this ).children().each( function(){
				var span = parseInt( this.getAttribute( "colspan" ), 10 ),
					sel = ":nth-child(" + ( coltally + 1 ) + ")";

				colstart = coltally + 1;

				if( span ){
					for( var k = 0; k < span - 1; k++ ){
						coltally++;
						sel += ", :nth-child(" + ( coltally + 1 ) + ")";
					}
				}

				// Store "cells" data on header as a reference to all cells in the same column as this TH
				this.cells = self.$table.find("tr").not( thrs[0] ).not( this ).children().filter( sel );
				coltally++;
			});
		});

		return colstart;
	};

	Table.prototype.refresh = function() {
		this._initCells();

		this.$table.trigger( events.refresh );
	};

	Table.prototype.createToolbar = function() {
		// Insert the toolbar
		// TODO move this into a separate component
		var $toolbar = this.$table.prev().filter( '.' + classes.toolbar );
		if( !$toolbar.length ) {
			$toolbar = $( '<div>' )
				.addClass( classes.toolbar )
				.insertBefore( this.$table );
		}
		this.$toolbar = $toolbar;

		if( this.mode ) {
			this.$toolbar.addClass( 'mode-' + this.mode );
		}
	};

	Table.prototype.destroy = function() {
		// Don’t remove the toolbar. Some of the table features are not yet destroy-friendly.
		this.$table.prev().filter( '.' + classes.toolbar ).each(function() {
			this.className = this.className.replace( /\bmode\-\w*\b/gi, '' );
		});

		var tableId = this.$table.attr( 'id' );
		$( document ).unbind( "." + tableId );
		$( window ).unbind( "." + tableId );

		// other plugins
		this.$table.trigger( events.destroy, [ this ] );

		this.$table.removeData( pluginName );
	};

	// Collection method.
	$.fn[ pluginName ] = function() {
		return this.each( function() {
			var $t = $( this );

			if( $t.data( pluginName ) ){
				return;
			}

			var table = new Table( this );
			$t.data( pluginName, table );
		});
	};

	$( document ).on( "enhance.tablesaw", function( e ) {
		// Cut the mustard
		if( Tablesaw.mustard ) {
			$( e.target ).find( initSelector )[ pluginName ]();
		}
	});

}( jQuery ));

;(function( win, $, undefined ){

	var classes = {
		stackTable: 'tablesaw-stack',
		cellLabels: 'tablesaw-cell-label',
		cellContentLabels: 'tablesaw-cell-content'
	};

	var data = {
		obj: 'tablesaw-stack'
	};

	var attrs = {
		labelless: 'data-tablesaw-no-labels',
		hideempty: 'data-tablesaw-hide-empty'
	};

	var Stack = function( element ) {

		this.$table = $( element );

		this.labelless = this.$table.is( '[' + attrs.labelless + ']' );
		this.hideempty = this.$table.is( '[' + attrs.hideempty + ']' );

		if( !this.labelless ) {
			// allHeaders references headers, plus all THs in the thead, which may include several rows, or not
			this.allHeaders = this.$table.find( "th" );
		}

		this.$table.data( data.obj, this );
	};

	Stack.prototype.init = function( colstart ) {
		this.$table.addClass( classes.stackTable );

		if( this.labelless ) {
			return;
		}

		// get headers in reverse order so that top-level headers are appended last
		var reverseHeaders = $( this.allHeaders );
		var hideempty = this.hideempty;
		
		// create the hide/show toggles
		reverseHeaders.each(function(){
			var $t = $( this ),
				$cells = $( this.cells ).filter(function() {
					return !$( this ).parent().is( "[" + attrs.labelless + "]" ) && ( !hideempty || !$( this ).is( ":empty" ) );
				}),
				hierarchyClass = $cells.not( this ).filter( "thead th" ).length && " tablesaw-cell-label-top",
				// TODO reduce coupling with sortable
				$sortableButton = $t.find( ".tablesaw-sortable-btn" ),
				html = $sortableButton.length ? $sortableButton.html() : $t.html();

			if( html !== "" ){
				if( hierarchyClass ){
					var iteration = parseInt( $( this ).attr( "colspan" ), 10 ),
						filter = "";

					if( iteration ){
						filter = "td:nth-child("+ iteration +"n + " + ( colstart ) +")";
					}
					$cells.filter( filter ).prepend( "<b class='" + classes.cellLabels + hierarchyClass + "'>" + html + "</b>"  );
				} else {
					$cells.wrapInner( "<span class='" + classes.cellContentLabels + "'></span>" );
					$cells.prepend( "<b class='" + classes.cellLabels + "'>" + html + "</b>"  );
				}
			}
		});
	};

	Stack.prototype.destroy = function() {
		this.$table.removeClass( classes.stackTable );
		this.$table.find( '.' + classes.cellLabels ).remove();
		this.$table.find( '.' + classes.cellContentLabels ).each(function() {
			$( this ).replaceWith( this.childNodes );
		});
	};

	// on tablecreate, init
	$( document ).on( "tablesawcreate", function( e, Tablesaw, colstart ){
		if( Tablesaw.mode === 'stack' ){
			var table = new Stack( Tablesaw.table );
			table.init( colstart );
		}

	} );

	$( document ).on( "tablesawdestroy", function( e, Tablesaw ){

		if( Tablesaw.mode === 'stack' ){
			$( Tablesaw.table ).data( data.obj ).destroy();
		}

	} );

}( this, jQuery ));
;(function( $ ) {
	var pluginName = "tablesawbtn",
		methods = {
			_create: function(){
				return $( this ).each(function() {
					$( this )
						.trigger( "beforecreate." + pluginName )
						[ pluginName ]( "_init" )
						.trigger( "create." + pluginName );
				});
			},
			_init: function(){
				var oEl = $( this ),
					sel = this.getElementsByTagName( "select" )[ 0 ];

				if( sel ) {
					$( this )
						.addClass( "btn-select" )
						[ pluginName ]( "_select", sel );
				}
				return oEl;
			},
			_select: function( sel ) {
				var update = function( oEl, sel ) {
					var opts = $( sel ).find( "option" ),
						label, el, children;

					opts.each(function() {
						var opt = this;
						if( opt.selected ) {
							label = document.createTextNode( opt.text );
						}
					});

					children = oEl.childNodes;
					if( opts.length > 0 ){
						for( var i = 0, l = children.length; i < l; i++ ) {
							el = children[ i ];

							if( el && el.nodeType === 3 ) {
								oEl.replaceChild( label, el );
							}
						}
					}
				};

				update( this, sel );
				$( this ).bind( "change refresh", function() {
					update( this, sel );
				});
			}
		};

	// Collection method.
	$.fn[ pluginName ] = function( arrg, a, b, c ) {
		return this.each(function() {

		// if it's a method
		if( arrg && typeof( arrg ) === "string" ){
			return $.fn[ pluginName ].prototype[ arrg ].call( this, a, b, c );
		}

		// don't re-init
		if( $( this ).data( pluginName + "active" ) ){
			return $( this );
		}

		// otherwise, init

		$( this ).data( pluginName + "active", true );
			$.fn[ pluginName ].prototype._create.call( this );
		});
	};

	// add methods
	$.extend( $.fn[ pluginName ].prototype, methods );

}( jQuery ));
;(function( win, $, undefined ){

	var ColumnToggle = function( element ) {

		this.$table = $( element );

		this.classes = {
			columnToggleTable: 'tablesaw-columntoggle',
			columnBtnContain: 'tablesaw-columntoggle-btnwrap tablesaw-advance',
			columnBtn: 'tablesaw-columntoggle-btn tablesaw-nav-btn down',
			popup: 'tablesaw-columntoggle-popup',
			priorityPrefix: 'tablesaw-priority-',
			// TODO duplicate class, also in tables.js
			toolbar: 'tablesaw-bar'
		};

		// Expose headers and allHeaders properties on the widget
		// headers references the THs within the first TR in the table
		this.headers = this.$table.find( 'tr:first > th' );

		this.$table.data( 'tablesaw-coltoggle', this );
	};

	ColumnToggle.prototype.init = function() {

		var tableId,
			id,
			$menuButton,
			$popup,
			$menu,
			$btnContain,
			self = this;

		this.$table.addClass( this.classes.columnToggleTable );

		tableId = this.$table.attr( "id" );
		id = tableId + "-popup";
		$btnContain = $( "<div class='" + this.classes.columnBtnContain + "'></div>" );
		$menuButton = $( "<a href='#" + id + "' class='btn btn-micro " + this.classes.columnBtn +"' data-popup-link>" +
										"<span>" + Tablesaw.i18n.columnBtnText + "</span></a>" );
		$popup = $( "<div class='dialog-table-coltoggle " + this.classes.popup + "' id='" + id + "'></div>" );
		$menu = $( "<div class='btn-group'></div>" );

		var hasNonPersistentHeaders = false;
		$( this.headers ).not( "td" ).each( function() {
			var $this = $( this ),
				priority = $this.attr("data-tablesaw-priority"),
				$cells = self.$getCells( this );

			if( priority && priority !== "persist" ) {
				$cells.addClass( self.classes.priorityPrefix + priority );

				$("<label><input type='checkbox' checked>" + $this.text() + "</label>" )
					.appendTo( $menu )
					.children( 0 )
					.data( "tablesaw-header", this );

				hasNonPersistentHeaders = true;
			}
		});

		if( !hasNonPersistentHeaders ) {
			$menu.append( '<label>' + Tablesaw.i18n.columnsDialogError + '</label>' );
		}

		$menu.appendTo( $popup );

		// bind change event listeners to inputs - TODO: move to a private method?
		$menu.find( 'input[type="checkbox"]' ).on( "change", function(e) {
			var checked = e.target.checked;

			self.$getCellsFromCheckbox( e.target )
				.toggleClass( "tablesaw-cell-hidden", !checked )
				.toggleClass( "tablesaw-cell-visible", checked );

			self.$table.trigger( 'tablesawcolumns' );
		});

		$menuButton.appendTo( $btnContain );
		$btnContain.appendTo( this.$table.prev().filter( '.' + this.classes.toolbar ) );


		function closePopup( event ) {
			// Click came from inside the popup, ignore.
			if( event && $( event.target ).closest( "." + self.classes.popup ).length ) {
				return;
			}

			$( document ).unbind( 'click.' + tableId );
			$menuButton.removeClass( 'up' ).addClass( 'down' );
			$btnContain.removeClass( 'visible' );
		}

		var closeTimeout;
		function openPopup() {
			$btnContain.addClass( 'visible' );
			$menuButton.removeClass( 'down' ).addClass( 'up' );

			$( document ).unbind( 'click.' + tableId, closePopup );

			window.clearTimeout( closeTimeout );
			closeTimeout = window.setTimeout(function() {
				$( document ).one( 'click.' + tableId, closePopup );
			}, 15 );
		}

		$menuButton.on( "click.tablesaw", function( event ) {
			event.preventDefault();

			if( !$btnContain.is( ".visible" ) ) {
				openPopup();
			} else {
				closePopup();
			}
		});

		$popup.appendTo( $btnContain );

		this.$menu = $menu;

		$(window).on( "resize." + tableId, function(){
			self.refreshToggle();
		});

		this.refreshToggle();
	};

	ColumnToggle.prototype.$getCells = function( th ) {
		return $( th ).add( th.cells );
	};

	ColumnToggle.prototype.$getCellsFromCheckbox = function( checkbox ) {
		var th = $( checkbox ).data( "tablesaw-header" );
		return this.$getCells( th );
	};

	ColumnToggle.prototype.refreshToggle = function() {
		var self = this;
		this.$menu.find( "input" ).each( function() {
			this.checked = self.$getCellsFromCheckbox( this ).eq( 0 ).css( "display" ) === "table-cell";
		});
	};

	ColumnToggle.prototype.refreshPriority = function(){
		var self = this;
		$(this.headers).not( "td" ).each( function() {
			var $this = $( this ),
				priority = $this.attr("data-tablesaw-priority"),
				$cells = $this.add( this.cells );

			if( priority && priority !== "persist" ) {
				$cells.addClass( self.classes.priorityPrefix + priority );
			}
		});
	};

	ColumnToggle.prototype.destroy = function() {
		// table toolbars, document and window .tableId events
		// removed in parent tables.js destroy method

		this.$table.removeClass( this.classes.columnToggleTable );
		this.$table.find( 'th, td' ).each(function() {
			var $cell = $( this );
			$cell.removeClass( 'tablesaw-cell-hidden' )
				.removeClass( 'tablesaw-cell-visible' );

			this.className = this.className.replace( /\bui\-table\-priority\-\d\b/g, '' );
		});
	};

	// on tablecreate, init
	$( document ).on( "tablesawcreate", function( e, Tablesaw ){

		if( Tablesaw.mode === 'columntoggle' ){
			var table = new ColumnToggle( Tablesaw.table );
			table.init();
		}

	} );

	$( document ).on( "tablesawdestroy", function( e, Tablesaw ){
		if( Tablesaw.mode === 'columntoggle' ){
			$( Tablesaw.table ).data( 'tablesaw-coltoggle' ).destroy();
		}
	} );

}( this, jQuery ));
;(function( win, $, undefined ){

	$.extend( Tablesaw.config, {
		swipe: {
			horizontalThreshold: 15,
			verticalThreshold: 30
		}
	});

	function isIE8() {
		var div = document.createElement('div'),
			all = div.getElementsByTagName('i');

		div.innerHTML = '<!--[if lte IE 8]><i></i><![endif]-->';

		return !!all.length;
	}

	var classes = {
		// TODO duplicate class, also in tables.js
		toolbar: "tablesaw-bar",
		hideBtn: "disabled",
		persistWidths: "tablesaw-fix-persist",
		allColumnsVisible: 'tablesaw-all-cols-visible'
	};

	function createSwipeTable( $table ){

		var $btns = $( "<div class='tablesaw-advance'></div>" ),
			$prevBtn = $( "<a href='#' class='tablesaw-nav-btn btn btn-micro left' title='Previous Column'></a>" ).appendTo( $btns ),
			$nextBtn = $( "<a href='#' class='tablesaw-nav-btn btn btn-micro right' title='Next Column'></a>" ).appendTo( $btns ),
			$headerCells = $table.find( "thead th" ),
			$headerCellsNoPersist = $headerCells.not( '[data-tablesaw-priority="persist"]' ),
			headerWidths = [],
			$head = $( document.head || 'head' ),
			tableId = $table.attr( 'id' ),
			// TODO switch this to an nth-child feature test
			supportsNthChild = !isIE8();

		if( !$headerCells.length ) {
			throw new Error( "tablesaw swipe: no header cells found. Are you using <th> inside of <thead>?" );
		}

		// Calculate initial widths
		$table.css('width', 'auto');
		$headerCells.each(function() {
			headerWidths.push( $( this ).outerWidth() );
		});
		$table.css( 'width', '' );

		$btns.appendTo( $table.prev().filter( '.tablesaw-bar' ) );

		$table.addClass( "tablesaw-swipe" );

		if( !tableId ) {
			tableId = 'tableswipe-' + Math.round( Math.random() * 10000 );
			$table.attr( 'id', tableId );
		}

		function $getCells( headerCell ) {
			return $( headerCell.cells ).add( headerCell );
		}

		function showColumn( headerCell ) {
			$getCells( headerCell ).removeClass( 'tablesaw-cell-hidden' );
		}

		function hideColumn( headerCell ) {
			$getCells( headerCell ).addClass( 'tablesaw-cell-hidden' );
		}

		function persistColumn( headerCell ) {
			$getCells( headerCell ).addClass( 'tablesaw-cell-persist' );
		}

		function isPersistent( headerCell ) {
			return $( headerCell ).is( '[data-tablesaw-priority="persist"]' );
		}

		function unmaintainWidths() {
			$table.removeClass( classes.persistWidths );
			$( '#' + tableId + '-persist' ).remove();
		}

		function maintainWidths() {
			var prefix = '#' + tableId + '.tablesaw-swipe ',
				styles = [],
				tableWidth = $table.width(),
				hash = [],
				newHash;

			$headerCells.each(function( index ) {
				var width;
				if( isPersistent( this ) ) {
					width = $( this ).outerWidth();

					// Only save width on non-greedy columns (take up less than 75% of table width)
					if( width < tableWidth * 0.75 ) {
						hash.push( index + '-' + width );
						styles.push( prefix + ' .tablesaw-cell-persist:nth-child(' + ( index + 1 ) + ') { width: ' + width + 'px; }' );
					}
				}
			});
			newHash = hash.join( '_' );

			$table.addClass( classes.persistWidths );

			var $style = $( '#' + tableId + '-persist' );
			// If style element not yet added OR if the widths have changed
			if( !$style.length || $style.data( 'hash' ) !== newHash ) {
				// Remove existing
				$style.remove();

				if( styles.length ) {
					$( '<style>' + styles.join( "\n" ) + '</style>' )
						.attr( 'id', tableId + '-persist' )
						.data( 'hash', newHash )
						.appendTo( $head );
				}
			}
		}

		function getNext(){
			var next = [],
				checkFound;

			$headerCellsNoPersist.each(function( i ) {
				var $t = $( this ),
					isHidden = $t.css( "display" ) === "none" || $t.is( ".tablesaw-cell-hidden" );

				if( !isHidden && !checkFound ) {
					checkFound = true;
					next[ 0 ] = i;
				} else if( isHidden && checkFound ) {
					next[ 1 ] = i;

					return false;
				}
			});

			return next;
		}

		function getPrev(){
			var next = getNext();
			return [ next[ 1 ] - 1 , next[ 0 ] - 1 ];
		}

		function nextpair( fwd ){
			return fwd ? getNext() : getPrev();
		}

		function canAdvance( pair ){
			return pair[ 1 ] > -1 && pair[ 1 ] < $headerCellsNoPersist.length;
		}

		function matchesMedia() {
			var matchMedia = $table.attr( "data-tablesaw-swipe-media" );
			return !matchMedia || ( "matchMedia" in win ) && win.matchMedia( matchMedia ).matches;
		}

		function fakeBreakpoints() {
			if( !matchesMedia() ) {
				return;
			}

			var extraPaddingPixels = 20,
				containerWidth = $table.parent().width(),
				persist = [],
				sum = 0,
				sums = [],
				visibleNonPersistantCount = $headerCells.length;

			$headerCells.each(function( index ) {
				var $t = $( this ),
					isPersist = $t.is( '[data-tablesaw-priority="persist"]' );

				persist.push( isPersist );

				sum += headerWidths[ index ] + ( isPersist ? 0 : extraPaddingPixels );
				sums.push( sum );

				// is persistent or is hidden
				if( isPersist || sum > containerWidth ) {
					visibleNonPersistantCount--;
				}
			});

			var needsNonPersistentColumn = visibleNonPersistantCount === 0;

			$headerCells.each(function( index ) {
				if( persist[ index ] ) {

					// for visual box-shadow
					persistColumn( this );
					return;
				}

				if( sums[ index ] <= containerWidth || needsNonPersistentColumn ) {
					needsNonPersistentColumn = false;
					showColumn( this );
				} else {
					hideColumn( this );
				}
			});

			if( supportsNthChild ) {
				unmaintainWidths();
			}
			$table.trigger( 'tablesawcolumns' );
		}

		function advance( fwd ){
			var pair = nextpair( fwd );
			if( canAdvance( pair ) ){
				if( isNaN( pair[ 0 ] ) ){
					if( fwd ){
						pair[0] = 0;
					}
					else {
						pair[0] = $headerCellsNoPersist.length - 1;
					}
				}

				if( supportsNthChild ) {
					maintainWidths();
				}

				hideColumn( $headerCellsNoPersist.get( pair[ 0 ] ) );
				showColumn( $headerCellsNoPersist.get( pair[ 1 ] ) );

				$table.trigger( 'tablesawcolumns' );
			}
		}

		$prevBtn.add( $nextBtn ).click(function( e ){
			advance( !!$( e.target ).closest( $nextBtn ).length );
			e.preventDefault();
		});

		function getCoord( event, key ) {
			return ( event.touches || event.originalEvent.touches )[ 0 ][ key ];
		}

		$table
			.bind( "touchstart.swipetoggle", function( e ){
				var originX = getCoord( e, 'pageX' ),
					originY = getCoord( e, 'pageY' ),
					x,
					y;

				$( win ).off( "resize", fakeBreakpoints );

				$( this )
					.bind( "touchmove", function( e ){
						x = getCoord( e, 'pageX' );
						y = getCoord( e, 'pageY' );
						var cfg = Tablesaw.config.swipe;
						if( Math.abs( x - originX ) > cfg.horizontalThreshold && Math.abs( y - originY ) < cfg.verticalThreshold ) {
							e.preventDefault();
						}
					})
					.bind( "touchend.swipetoggle", function(){
						var cfg = Tablesaw.config.swipe;
						if( Math.abs( y - originY ) < cfg.verticalThreshold ) {
							if( x - originX < -1 * cfg.horizontalThreshold ){
								advance( true );
							}
							if( x - originX > cfg.horizontalThreshold ){
								advance( false );
							}
						}

						window.setTimeout(function() {
							$( win ).on( "resize", fakeBreakpoints );
						}, 300);
						$( this ).unbind( "touchmove touchend" );
					});

			})
			.bind( "tablesawcolumns.swipetoggle", function(){
				var canGoPrev = canAdvance( getPrev() );
				var canGoNext = canAdvance( getNext() );
				$prevBtn[ canGoPrev ? "removeClass" : "addClass" ]( classes.hideBtn );
				$nextBtn[ canGoNext ? "removeClass" : "addClass" ]( classes.hideBtn );

				$prevBtn.closest( "." + classes.toolbar )[ !canGoPrev && !canGoNext ? 'addClass' : 'removeClass' ]( classes.allColumnsVisible );
			})
			.bind( "tablesawnext.swipetoggle", function(){
				advance( true );
			} )
			.bind( "tablesawprev.swipetoggle", function(){
				advance( false );
			} )
			.bind( "tablesawdestroy.swipetoggle", function(){
				var $t = $( this );

				$t.removeClass( 'tablesaw-swipe' );
				$t.prev().filter( '.tablesaw-bar' ).find( '.tablesaw-advance' ).remove();
				$( win ).off( "resize", fakeBreakpoints );

				$t.unbind( ".swipetoggle" );
			});

		fakeBreakpoints();
		$( win ).on( "resize", fakeBreakpoints );
	}



	// on tablecreate, init
	$( document ).on( "tablesawcreate", function( e, Tablesaw ){

		if( Tablesaw.mode === 'swipe' ){
			createSwipeTable( Tablesaw.$table );
		}

	} );

}( this, jQuery ));

;(function( $ ) {
	function getSortValue( cell ) {
		return $.map( cell.childNodes, function( el ) {
				var $el = $( el );
				if( $el.is( 'input, select' ) ) {
					return $el.val();
				} else if( $el.hasClass( 'tablesaw-cell-label' ) ) {
					return;
				}
				return $.trim( $el.text() );
			}).join( '' );
	}

	var pluginName = "tablesaw-sortable",
		initSelector = "table[data-" + pluginName + "]",
		sortableSwitchSelector = "[data-" + pluginName + "-switch]",
		attrs = {
			defaultCol: "data-tablesaw-sortable-default-col",
			numericCol: "data-tablesaw-sortable-numeric"
		},
		classes = {
			head: pluginName + "-head",
			ascend: pluginName + "-ascending",
			descend: pluginName + "-descending",
			switcher: pluginName + "-switch",
			tableToolbar: 'tablesaw-toolbar',
			sortButton: pluginName + "-btn"
		},
		methods = {
			_create: function( o ){
				return $( this ).each(function() {
					var init = $( this ).data( "init" + pluginName );
					if( init ) {
						return false;
					}
					$( this )
						.data( "init"+ pluginName, true )
						.trigger( "beforecreate." + pluginName )
						[ pluginName ]( "_init" , o )
						.trigger( "create." + pluginName );
				});
			},
			_init: function(){
				var el = $( this ),
					heads,
					$switcher;

				var addClassToTable = function(){
						el.addClass( pluginName );
					},
					addClassToHeads = function( h ){
						$.each( h , function( i , v ){
							$( v ).addClass( classes.head );
						});
					},
					makeHeadsActionable = function( h , fn ){
						$.each( h , function( i , v ){
							var b = $( "<button class='" + classes.sortButton + "'/>" );
							b.bind( "click" , { col: v } , fn );
							$( v ).wrapInner( b );
						});
					},
					clearOthers = function( sibs ){
						$.each( sibs , function( i , v ){
							var col = $( v );
							col.removeAttr( attrs.defaultCol );
							col.removeClass( classes.ascend );
							col.removeClass( classes.descend );
						});
					},
					headsOnAction = function( e ){
						if( $( e.target ).is( 'a[href]' ) ) {
							return;
						}

						e.stopPropagation();
						var head = $( this ).parent(),
							v = e.data.col,
							newSortValue = heads.index( head );

						clearOthers( head.siblings() );
						if( head.hasClass( classes.descend ) ){
							el[ pluginName ]( "sortBy" , v , true);
							newSortValue += '_asc';
						} else {
							el[ pluginName ]( "sortBy" , v );
							newSortValue += '_desc';
						}
						if( $switcher ) {
							$switcher.find( 'select' ).val( newSortValue ).trigger( 'refresh' );
						}

						e.preventDefault();
					},
					handleDefault = function( heads ){
						$.each( heads , function( idx , el ){
							var $el = $( el );
							if( $el.is( "[" + attrs.defaultCol + "]" ) ){
								if( !$el.hasClass( classes.descend ) ) {
									$el.addClass( classes.ascend );
								}
							}
						});
					},
					addSwitcher = function( heads ){
						$switcher = $( '<div>' ).addClass( classes.switcher ).addClass( classes.tableToolbar ).html(function() {
							var html = [ '<label>' + Tablesaw.i18n.sort + ':' ];

							html.push( '<span class="btn btn-small">&#160;<select>' );
							heads.each(function( j ) {
								var $t = $( this );
								var isDefaultCol = $t.is( "[" + attrs.defaultCol + "]" );
								var isDescending = $t.hasClass( classes.descend );

								var hasNumericAttribute = $t.is( '[data-sortable-numeric]' );
								var numericCount = 0;
								// Check only the first four rows to see if the column is numbers.
								var numericCountMax = 5;

								$( this.cells ).slice( 0, numericCountMax ).each(function() {
									if( !isNaN( parseInt( getSortValue( this ), 10 ) ) ) {
										numericCount++;
									}
								});
								var isNumeric = numericCount === numericCountMax;
								if( !hasNumericAttribute ) {
									$t.attr( "data-sortable-numeric", isNumeric ? "" : "false" );
								}

								html.push( '<option' + ( isDefaultCol && !isDescending ? ' selected' : '' ) + ' value="' + j + '_asc">' + $t.text() + ' ' + ( isNumeric ? '&#x2191;' : '(A-Z)' ) + '</option>' );
								html.push( '<option' + ( isDefaultCol && isDescending ? ' selected' : '' ) + ' value="' + j + '_desc">' + $t.text() + ' ' + ( isNumeric ? '&#x2193;' : '(Z-A)' ) + '</option>' );
							});
							html.push( '</select></span></label>' );

							return html.join('');
						});

						var $toolbar = el.prev().filter( '.tablesaw-bar' ),
							$firstChild = $toolbar.children().eq( 0 );

						if( $firstChild.length ) {
							$switcher.insertBefore( $firstChild );
						} else {
							$switcher.appendTo( $toolbar );
						}
						$switcher.find( '.btn' ).tablesawbtn();
						$switcher.find( 'select' ).on( 'change', function() {
							var val = $( this ).val().split( '_' ),
								head = heads.eq( val[ 0 ] );

							clearOthers( head.siblings() );
							el[ pluginName ]( 'sortBy', head.get( 0 ), val[ 1 ] === 'asc' );
						});
					};

					addClassToTable();
					heads = el.find( "thead th[data-" + pluginName + "-col]" );
					addClassToHeads( heads );
					makeHeadsActionable( heads , headsOnAction );
					handleDefault( heads );

					if( el.is( sortableSwitchSelector ) ) {
						addSwitcher( heads, el.find('tbody tr:nth-child(-n+3)') );
					}
			},
			getColumnNumber: function( col ){
				return $( col ).prevAll().length;
			},
			getTableRows: function(){
				return $( this ).find( "tbody tr" );
			},
			sortRows: function( rows , colNum , ascending, col ){
				var cells, fn, sorted;
				var getCells = function( rows ){
						var cells = [];
						$.each( rows , function( i , r ){
							var element = $( r ).children().get( colNum );
							cells.push({
								element: element,
								cell: getSortValue( element ),
								rowNum: i
							});
						});
						return cells;
					},
					getSortFxn = function( ascending, forceNumeric ){
						var fn,
							regex = /[^\-\+\d\.]/g;
						if( ascending ){
							fn = function( a , b ){
								if( forceNumeric ) {
									return parseFloat( a.cell.replace( regex, '' ) ) - parseFloat( b.cell.replace( regex, '' ) );
								} else {
									return a.cell.toLowerCase() > b.cell.toLowerCase() ? 1 : -1;
								}
							};
						} else {
							fn = function( a , b ){
								if( forceNumeric ) {
									return parseFloat( b.cell.replace( regex, '' ) ) - parseFloat( a.cell.replace( regex, '' ) );
								} else {
									return a.cell.toLowerCase() < b.cell.toLowerCase() ? 1 : -1;
								}
							};
						}
						return fn;
					},
					applyToRows = function( sorted , rows ){
						var newRows = [], i, l, cur;
						for( i = 0, l = sorted.length ; i < l ; i++ ){
							cur = sorted[ i ].rowNum;
							newRows.push( rows[cur] );
						}
						return newRows;
					};

				cells = getCells( rows );
				var customFn = $( col ).data( 'tablesaw-sort' );
				fn = ( customFn && typeof customFn === "function" ? customFn( ascending ) : false ) ||
					getSortFxn( ascending, $( col ).is( '[data-sortable-numeric]' ) && !$( col ).is( '[data-sortable-numeric="false"]' ) );
				sorted = cells.sort( fn );
				rows = applyToRows( sorted , rows );
				return rows;
			},
			replaceTableRows: function( rows ){
				var el = $( this ),
					body = el.find( "tbody" );
				body.html( rows );
			},
			makeColDefault: function( col , a ){
				var c = $( col );
				c.attr( attrs.defaultCol , "true" );
				if( a ){
					c.removeClass( classes.descend );
					c.addClass( classes.ascend );
				} else {
					c.removeClass( classes.ascend );
					c.addClass( classes.descend );
				}
			},
			sortBy: function( col , ascending ){
				var el = $( this ), colNum, rows;

				colNum = el[ pluginName ]( "getColumnNumber" , col );
				rows = el[ pluginName ]( "getTableRows" );
				rows = el[ pluginName ]( "sortRows" , rows , colNum , ascending, col );
				el[ pluginName ]( "replaceTableRows" , rows );
				el[ pluginName ]( "makeColDefault" , col , ascending );
			}
		};

	// Collection method.
	$.fn[ pluginName ] = function( arrg ) {
		var args = Array.prototype.slice.call( arguments , 1),
			returnVal;

		// if it's a method
		if( arrg && typeof( arrg ) === "string" ){
			returnVal = $.fn[ pluginName ].prototype[ arrg ].apply( this[0], args );
			return (typeof returnVal !== "undefined")? returnVal:$(this);
		}
		// check init
		if( !$( this ).data( pluginName + "data" ) ){
			$( this ).data( pluginName + "active", true );
			$.fn[ pluginName ].prototype._create.call( this , arrg );
		}
		return $(this);
	};
	// add methods
	$.extend( $.fn[ pluginName ].prototype, methods );

	$( document ).on( "tablesawcreate", function( e, Tablesaw ) {
		if( Tablesaw.$table.is( initSelector ) ) {
			Tablesaw.$table[ pluginName ]();
		}
	});

}( jQuery ));

;(function( win, $, undefined ){

	var MM = {
		attr: {
			init: 'data-tablesaw-minimap'
		}
	};

	function createMiniMap( $table ){

		var $btns = $( '<div class="tablesaw-advance minimap">' ),
			$dotNav = $( '<ul class="tablesaw-advance-dots">' ).appendTo( $btns ),
			hideDot = 'tablesaw-advance-dots-hide',
			$headerCells = $table.find( 'thead th' );

		// populate dots
		$headerCells.each(function(){
			$dotNav.append( '<li><i></i></li>' );
		});

		$btns.appendTo( $table.prev().filter( '.tablesaw-bar' ) );

		function showMinimap( $table ) {
			var mq = $table.attr( MM.attr.init );
			return !mq || win.matchMedia && win.matchMedia( mq ).matches;
		}

		function showHideNav(){
			if( !showMinimap( $table ) ) {
				$btns.hide();
				return;
			}
			$btns.show();

			// show/hide dots
			var dots = $dotNav.find( "li" ).removeClass( hideDot );
			$table.find( "thead th" ).each(function(i){
				if( $( this ).css( "display" ) === "none" ){
					dots.eq( i ).addClass( hideDot );
				}
			});
		}

		// run on init and resize
		showHideNav();
		$( win ).on( "resize", showHideNav );


		$table
			.bind( "tablesawcolumns.minimap", function(){
				showHideNav();
			})
			.bind( "tablesawdestroy.minimap", function(){
				var $t = $( this );

				$t.prev().filter( '.tablesaw-bar' ).find( '.tablesaw-advance' ).remove();
				$( win ).off( "resize", showHideNav );

				$t.unbind( ".minimap" );
			});
	}



	// on tablecreate, init
	$( document ).on( "tablesawcreate", function( e, Tablesaw ){

		if( ( Tablesaw.mode === 'swipe' || Tablesaw.mode === 'columntoggle' ) && Tablesaw.$table.is( '[ ' + MM.attr.init + ']' ) ){
			createMiniMap( Tablesaw.$table );
		}

	} );

}( this, jQuery ));

;(function( win, $ ) {

	var S = {
		selectors: {
			init: 'table[data-tablesaw-mode-switch]'
		},
		attributes: {
			excludeMode: 'data-tablesaw-mode-exclude'
		},
		classes: {
			main: 'tablesaw-modeswitch',
			toolbar: 'tablesaw-toolbar'
		},
		modes: [ 'stack', 'swipe', 'columntoggle' ],
		init: function( table ) {
			var $table = $( table ),
				ignoreMode = $table.attr( S.attributes.excludeMode ),
				$toolbar = $table.prev().filter( '.tablesaw-bar' ),
				modeVal = '',
				$switcher = $( '<div>' ).addClass( S.classes.main + ' ' + S.classes.toolbar ).html(function() {
					var html = [ '<label>' + Tablesaw.i18n.columns + ':' ],
						dataMode = $table.attr( 'data-tablesaw-mode' ),
						isSelected;

					html.push( '<span class="btn btn-small">&#160;<select>' );
					for( var j=0, k = S.modes.length; j<k; j++ ) {
						if( ignoreMode && ignoreMode.toLowerCase() === S.modes[ j ] ) {
							continue;
						}

						isSelected = dataMode === S.modes[ j ];

						if( isSelected ) {
							modeVal = S.modes[ j ];
						}

						html.push( '<option' +
							( isSelected ? ' selected' : '' ) +
							' value="' + S.modes[ j ] + '">' + Tablesaw.i18n.modes[ j ] + '</option>' );
					}
					html.push( '</select></span></label>' );

					return html.join('');
				});

			var $otherToolbarItems = $toolbar.find( '.tablesaw-advance' ).eq( 0 );
			if( $otherToolbarItems.length ) {
				$switcher.insertBefore( $otherToolbarItems );
			} else {
				$switcher.appendTo( $toolbar );
			}

			$switcher.find( '.btn' ).tablesawbtn();
			$switcher.find( 'select' ).bind( 'change', S.onModeChange );
		},
		onModeChange: function() {
			var $t = $( this ),
				$switcher = $t.closest( '.' + S.classes.main ),
				$table = $t.closest( '.tablesaw-bar' ).nextUntil( $table ).eq( 0 ),
				val = $t.val();

			$switcher.remove();
			$table.data( 'table' ).destroy();

			$table.attr( 'data-tablesaw-mode', val );
			$table.table();
		}
	};

	$( win.document ).on( "tablesawcreate", function( e, Tablesaw ) {
		if( Tablesaw.$table.is( S.selectors.init ) ) {
			S.init( Tablesaw.table );
		}
	});

})( this, jQuery );
$.validator.methods.range = function (value, element, param) {
    var globalizedValue = value.replace(",", ".");
    return this.optional(element) || (globalizedValue >= param[0] && globalizedValue <= param[1]);
}

$.validator.methods.number = function (value, element) {
    return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
}
if (!Array.prototype.find) {
    Array.prototype.find = function (predicate) {
        'use strict';
        if (this == null) {
            throw new TypeError('Array.prototype.find called on null or undefined');
        }
        if (typeof predicate !== 'function') {
            throw new TypeError('predicate must be a function');
        }
        var list = Object(this);
        var length = list.length >>> 0;
        var thisArg = arguments[1];
        var value;

        for (var i = 0; i < length; i++) {
            value = list[i];
            if (predicate.call(thisArg, value, i, list)) {
                return value;
            }
        }
        return undefined;
    };
}

if (!Date.prototype.toShortDateString) {
    Date.prototype.toShortDateString = function () {
        return this.getFullYear() +
            "-" +
            ("0" + (this.getMonth() + 1)).slice(-2) +
            "-" +
            ("0" + this.getDate()).slice(-2);
    };
}

var GroCommon = GroCommon || (function () {

    var dateFromISO = function (s) {
        s = s.split(/\D/);
        return new Date(Date.UTC(s[0], --s[1] || '', s[2] || '', s[3] || '', s[4] || '', s[5] || '', s[6] || ''));
    };

    var parseInt32 = function (s) {
        var value = parseInt(s);
        if (isNaN(value)) value = 0;

        return value;
    };

    var blockUI = function () {
        //Block UI
    };

    var unblockUI = function () {
        //Unblock UI
    };
    var handleExternalLink = function () {
        var $a = $('a');
        $a.each(function () {
            var href = $(this).attr('href');
            var target = $(this).attr("target");

            if (!!target) {
                return;
            }

            if ($(this).closest(".agri-chart__content").length) {
                return;
            }

            var isExternalLink = href != undefined && href.trim().indexOf("/") !== 0 && href.trim() !== "#" && href.trim().indexOf("script:void") && href.trim().indexOf("script:window.print()") < 0;
            if (isExternalLink) {
                $(this).attr("target", "_blank");
            }
        });
    };

    var getIdxOfElement = function ($element, $array) {
        return $array.index($element);
    };

    var disableOrEnableElement = function (elementSelector, $currentInput, $recursive) {
        var agreementElements = $(elementSelector);
        var $currentElement = $currentInput.closest(elementSelector);
        var $isEmpty = $currentInput.html().trim() + $currentInput.val().trim() === "";
        if (agreementElements.length > 0) {
            var idx = getIdxOfElement($currentElement, $(agreementElements));
            if (idx >= 0 && idx < agreementElements.length - 1) {
                // enable the element right after the current element.
                var $nextElement = $(agreementElements[idx + 1]);
                if (!$isEmpty && $nextElement.hasClass('disabled')) {
                    $nextElement.removeClass('disabled');
                    disableOrEnableElement(elementSelector, $nextElement.find('input'));
                } else if (($isEmpty || $recursive) && !$nextElement.hasClass('disabled')) {
                    $nextElement.addClass('disabled');
                    disableOrEnableElement(elementSelector, $nextElement.find('input'), true);
                }
            }
        }
    };

    var modalInfoClass = {
        warning: "warning",
        error: "warning",
        info: "-info-circle",
        success: "success"
    };
    var getModalIconClass = function (popupType) {
        if (!popupType) {
            return "";
        }
        var cssClass = modalInfoClass[popupType];
        if (!cssClass) {
            cssClass = "";
        }
        return cssClass;
    };
    return {
        blockUI: blockUI,
        unblockUI: unblockUI,
        handleExternalLink: handleExternalLink,
        dateFromISO: dateFromISO,
        parseInt: parseInt32,
        getModalIconClass: getModalIconClass,
        modalInfoClass: modalInfoClass,
        disableOrEnableElement: disableOrEnableElement
    };
})();

var ImagePlaceHolder = function () {
    var elements = $("img[data-img-source]");
    elements.each(function () {
        var element = this;
        $(element).attr("src", $(element).data("imgSource"));
        $(element).on("error",
            function (event) {
                $(event.target).on("error", null);
                if ($(event.target).data("placeholder")) {
                    $(event.target).attr("src", $(event.target).data("placeholder"));
                }
            });
    });
};

var UploadImageModule = function (options) {
    var settings = {
        fileSelector: "",
        previewImgSelector: "",
        uploadBtnSelector: "",
        linkSelector: "",
        handleUrl: "",
        cancelUploadBtnSelector: "",
        deleteLinkSelector: "",
        handleDeleteUrl: "",
        errorMessage: "",
        prevImageData: "",
        isNeedToUpdateHeader: false,

        messages: {
            confirmationDialogSelector: "#dialog-confirmation",
            delConfirmationMess: "Är du säker på att du vill ta bort bilden?",
            yesDelBtnText: "Ja, ta bort",
            noDelBtnText: "Nej, spara den",

            uploadingErrorMessage: "Något gick fel när du försökte ladda upp bilden. Vänligen försök igen.",
            uploadingErrorTitle: "Bilden kunde inte laddas upp",

            informationDialogSelector: "#informationDialog"
        }
        //addition for dialogs
        //confirmationDialogSelector: "#dialog-confirmation",
        //delConfirmationMess: "Är du säker på att du vill ta bort bilden?",
        //yesDelBtnText: "Ja, ta bort",
        //noDelBtnText: "Nej, spara den"
    };
    var _prevImageData;
    var _data = []; //add params to request following format [{"key": "id", "value": 1},{"key": "name", "value": "abc"}]
    var dialogType = GroCommon.modalInfoClass;

    $.extend(settings, options);

    var buildParamsForRequest = function () {
        var data = new FormData();
        if (_data && _data.length > 0) {
            for (var i = 0; i < _data.length; i++) {
                var param = _data[i];
                if (param.key && param.value) {
                    data.append(param.key, param.value);
                }
            }
        }
        return data;
    };

    var attachFileOnChangeEvent = function () {
        $(settings.fileSelector).change(function () {
            var file = this.files[0];
            var imagefile = file.type;
            var match = ["image/jpeg", "image/png", "image/jpg"];
            if (!((imagefile === match[0]) || (imagefile === match[1]) || (imagefile === match[2]))) {
                $(settings.previewImgSelector).attr('src', _prevImageData);
                return false;
            } else {
                var reader = new FileReader();
                reader.onload = function (event) {
                    $(settings.previewImgSelector).attr('src', event.target.result);
                    //show Cancel/Upload buttons
                    $(settings.uploadBtnSelector).parent().show();

                };
                reader.readAsDataURL(this.files[0]);
            }
        });
    };

    var attachOpenFileDialog = function () {
        $(settings.linkSelector).on('click',
            function (e) {
                $('.popup-sub, .list-action-item').hide();
                e.preventDefault();
                $(settings.fileSelector).trigger('click');
            });
    };

    var attachUploadFileClickEvent = function () {
        $(settings.uploadBtnSelector).on('click', function () {
            var data = buildParamsForRequest();
            var files = $(settings.fileSelector).get(0).files;

            // Add the uploaded image content to the form data collection
            if (files.length > 0) {
                var fileSize = files[0].size;
                if (fileSize > 4096000) {
                    showInformationDialog("", "Filen är för stor. Maximal filstorlek 4MB.", dialogType.error);
                    return;
                }
                data.append("UploadedImage", files[0]);
            }
            $(settings.previewImgSelector).prev().show();
            $(settings.uploadBtnSelector).parent().hide();
            $.ajax({
                url: settings.handleUrl,
                type: "POST",
                data: data,
                contentType: false, // The content type used when sending data to the server.
                cache: false,
                processData: false, // To send DOMDocument or non processed data file it is set to false
                success: function (result) {
                    $(settings.previewImgSelector).prev().hide();

                    if (result.success) {
                        $(settings.uploadBtnSelector).parent().hide();
                        $(settings.deleteLinkSelector).show();

                        _prevImageData = $(settings.previewImgSelector).attr("src");
                        if (settings.isNeedToUpdateHeader) {
                            $('.lm__user-avatar-wrapper .header_user_avatar').attr('src', _prevImageData);
                        }

                        MachineDetailPage.autoFitImages();
                    } else {
                        $(settings.previewImgSelector).attr("src", _prevImageData);
                        //var message = settings.errorMessage!=="" ? settings.errorMessage : "Det uppstod ett fel när bilden skulle laddas upp. Var god försök igen!";
                        showInformationDialog(settings.messages.uploadingErrorTitle, settings.messages.uploadingErrorMessage, dialogType.error);
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    $(settings.previewImgSelector).prev().hide();
                    $(settings.previewImgSelector).attr("src", _prevImageData);
                    var message = "Det uppstod ett fel när bilden skulle laddas upp: " + errorThrown.toString();
                    showInformationDialog(this.settings.uploadingErrorTitle, message, dialogType.error);
                }
            });
        });
    };

    var attactCancelUploadEvent = function () {
        $(settings.cancelUploadBtnSelector).on('click', function () {
            //$(_fileSelector).val('');
            $(settings.fileSelector).val('');
            $(settings.uploadBtnSelector).parent().hide();
            $(settings.previewImgSelector).attr("src", _prevImageData);
        });
    };
    var deleteImage = function () {
        $(settings.previewImgSelector).prev().show();
        $('.popup-sub, .list-action-item').hide();

        var data = buildParamsForRequest();

        $.ajax({
            url: settings.handleDeleteUrl,
            type: "POST",
            data: data,
            contentType: false, // The content type used when sending data to the server.
            cache: false,
            processData: false, // To send DOMDocument or non processed data file it is set to false
            success: function (result) {
                $(settings.previewImgSelector).prev().hide();
                if (result.success) {
                    _prevImageData = result.imageUrl;

                    $(settings.deleteLinkSelector).hide();
                    $(settings.previewImgSelector).attr("src", _prevImageData);

                    if (this.settings.isNeedToUpdateHeader) { //only using for update user avatar on header
                        $('.lm__user-avatar-wrapper .header_user_avatar').attr('src', _prevImageData);
                    }
                } else {
                    $(settings.previewImgSelector).attr("src", _prevImageData);
                    //alert("Det uppstod ett fel när bilden skulle laddas upp. Var god försök igen!");
                    showInformationDialog("", "Det uppstod ett fel när bilden skulle laddas upp. Var god försök igen!", dialogType.error);
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                $(settings.previewImgSelector).prev().hide();
                $(settings.previewImgSelector).attr("src", _prevImageData);
                //alert("Det uppstod ett fel när bilden skulle tas bort: " + errorThrown.toString());
                var message = "Det uppstod ett fel när bilden skulle tas bort: " + errorThrown.toString();
                showInformationDialog(message, "", dialogType.error);
            }
        });
    };

    var attachDeleteFileClickEvent = function () {
        $(settings.deleteLinkSelector).on('click', function () {
            showDelConfirmationDialog(deleteImage);
        });
    };


    function showDelConfirmationDialog(callback) {
        var $dialog = $(settings.messages.confirmationDialogSelector);
        if ($dialog.length === 0) {
            return;
        }
        $(".modal-header-title", $dialog).html(settings.delConfirmationMess);
        var $yesBtn = $(".success-confirm-inform.yes", $dialog);
        var $noBtn = $(".success-confirm-inform.no", $dialog);
        $noBtn.html(settings.noDelBtnText);
        $yesBtn.html(settings.yesDelBtnText);

        $yesBtn.click(function () {
            callback();
        });

        $dialog.fadeIn();
    }
    var initDataForRequest = function (data) {
        _data = data;
    };

    var initUploadFile = function (options) {
        if (!options) {
            $.extend(settings, options);
        }
        _prevImageData = $(settings.previewImgSelector).attr("src");

        attachOpenFileDialog();
        attachFileOnChangeEvent();
        attachUploadFileClickEvent();
        attactCancelUploadEvent();
    };

    var initDeleteFile = function (options) {
        if (!options) {
            $.extend(settings, options);
        }

        attachDeleteFileClickEvent();
    };

    function showInformationDialog(title, message, dialogType) {
        var $informationDialog = $(settings.messages.informationDialogSelector);
        var $iconElement = $informationDialog.find("span.popup-type");
        if (dialogType) {
            $iconElement.removeClass("hidden");
            $iconElement.addClass(GroCommon.getModalIconClass(dialogType));
        } else {
            $iconElement.addClass("hidden");
        }

        $informationDialog.find('#dialogTitle').html(title);
        $informationDialog.find('#dialogContent').html(message);
        if ($informationDialog.hasClass('hidden')) {
            $informationDialog.removeClass('hidden');
        } else {
            $informationDialog.fadeIn();
        }
    }

    return {
        initDataForRequest: initDataForRequest,
        initUploadFile: initUploadFile,
        initDeleteFile: initDeleteFile
    };
};

$(function () {
    ImagePlaceHolder();
});

$(function () {
    $("input[type=button].submit").click(function () {
        $(this).attr("disabled", "disabled");
        var form = $(this).closest("form");
        if (form) {
            $(form).submit();
        }
    });

    $("form").keyup(function (event) {
        if (event.which === 13) {
            // key enter
            var form = $(event.target).closest("form");
            if (form) {
                var submitBtn = getSubmitBtn(form);
                if (submitBtn !== undefined) {
                    $(submitBtn).click();
                }
            }
        }
    });
    function getSubmitBtn(form) {
        var btnSubmit = $("button.submit.trigger-on-enter", $(form));
        if (btnSubmit.length > 0) {
            return btnSubmit;
        }

        var btnTypeSubmit = $("button[type=submit].trigger-on-enter", $(form));
        if (btnTypeSubmit.length > 0) {
            return btnTypeSubmit;
        }

        var inputSubmit = $("input[type=submit].trigger-on-enter", $(form));
        if (inputSubmit.length > 0) {
            return inputSubmit;
        }
        return undefined;
    }

    $(".lm__modal__wrapper .mask").on("click", function () {
        $(this).closest(".lm__modal__wrapper").addClass("hidden");
    });
});
/*------------------------------------*\
    #URL
\*------------------------------------*/


window.gro = window.gro || {};
gro.modules = gro.modules || {};


gro.modules.url = (function () {
    var priv = {};
    var pub = {};

    /**
     * Private initialization method
     */
    priv.init = function () {
    };

    /**
     * Add a URL parameter (or changing it if it already exists)
     * @param {search} string  - This is typically document.location.search
     * @param {key}    string  - The key to set
     * @param {val}    string  - Value
     */
    pub.addUrlParam = function (search, key, val) {
        var newParam = key + "=" + val;
        var params = "?" + newParam;

        if (search) {
            var keyFound = search.indexOf(key) !== -1;

            // Try to replace an existing parameter
            params = search.replace(new RegExp("([\?&])" + key + "[^&]*"), "$1" + newParam);

            // If key was not found and nothing was replaced, add the new param
            if (!keyFound && params === search) {
                params += "&" + newParam;
            }
        }

        // Push to browser history
        if (history.pushState) {
            var newUrl = window.location.origin + window.location.pathname + params;
            window.history.pushState({ path: newUrl }, "", newUrl);
        }
    };

    /**
     * Get parameter from URL
     * @param {key} string - The key to get
     * @return      string - The value
     */
    pub.getUrlParam = function (key) {
        var query = window.location.search.substring(1);
        var vars = query.split("&");

        for (var i = 0; i < vars.length; i++) {
            var pair = vars[i].split("=");

            if (pair[0] === key) {
                return pair[1];
            }
        }

        return false;
    };

    // Initialize module
    $(function () {
        priv.init();
    });

    // Expose public methods
    return pub;

})();

;(function( $ ) {
	$(document).trigger("enhance.tablesaw");

	// hide toggle if have no option columns.
	if ($(".tablesaw").length > 0) {
	    $(".tablesaw-bar").hide();
	    $(".tablesaw").each(function () {
	        var _that = $(this);
	        var tableHeads = _that.find('thead tr th');
	        var tableBar = _that.prev();

	        if (tableHeads.length > 2) {
	            tableBar.removeAttr("style");
	        } else {
	            _that.css("min-width", "inherit");
	        }
	    });
	}

	function DeleteTableRowWithAnimation(cellButton) {
        var row = $(cellButton).closest("tr").addClass("deleted").children("td");
        setTimeout(function () {
                $(row)
                .animate({ paddingTop: 0, paddingBottom: 0 }, 500)
                .wrapInner("<div />")
                .children()
                .slideUp(500, function() { $(this).closest('tr').remove(); });
    	    }, 1000
        );
	}

//	$(".lm__internal-table tbody tr .lm__form-btn").click(function () {
//	    DeleteTableRowWithAnimation($(this));
//	});
})( jQuery );
$(function () {
    function isTouchDevice() {
        return "ontouchstart" in window || // works on most browsers
            navigator.maxTouchPoints; // works on IE10/11 and Surface
    }

    var headerMainNavigation = function () {

        var toggleButton = $(".lm_toggle-menu");
        var parentList = $(".lm__main-navigation > ul > li").has("ul");
        var childList = $(".lm__main-navigation > ul li ul li").has(".lm__child-sub-navigation");
        var mainNav = toggleButton.next();
        var settingBtn = $(".lm__settings > a");
        var subNavigation = $(".lm__sub-navigation");
        var settingWrapper = $(".lm__user-avatar-wrapper");

        var removeActiveState = function () {
            mainNav.removeAttr("style");
            parentList.find("ul").slideUp("slow", function () {
                $(this).prev().removeClass("minus-sign").addClass("plus-sign");
                $(this).closest("li").removeClass("open");
                $(this).removeAttr("style");
            });
            //childList.find("ul").slideUp("slow", function () {
            //    $(this).prev().find(".toggle-icon").removeClass("minus-sign").addClass("plus-sign");
            //    $(this).removeAttr("style");
            //});
            toggleButton.removeClass("active");
            $(".humb").removeClass("open");
            settingBtn.parent().find(".lm_sub-settings").slideUp(function () {
                settingBtn.parent().removeClass("active");
            });
            $(".lm__navigation-wrapper.showed-menu").removeClass("showed-menu");
            settingWrapper.find(".lm__user-avatar").next().slideUp();
            $(".user-info-wrapper > a").next().slideUp();
        };

        var addSettingEvent = function () {
            var avatar = settingWrapper.find(".lm__user-avatar");
            avatar.click(function () {
                removeActiveState();
                var sub = $(this).next();

                $(this).toggleClass("active");
                if (sub.css("display") === "none") {
                    sub.slideDown();
                } else {
                    sub.slideUp();
                }
                return false;
            });
        };

        var addUserInfoEvent = function () {
            var userInfoWrapper = $(".user-info-wrapper > a");
            userInfoWrapper.click(function () {
                removeActiveState();

                if ($(this).next().css("display") === "none") {
                    userInfoWrapper.addClass("active");
                    $(this).next().slideDown();
                } else {
                    userInfoWrapper.removeClass("active");
                    $(this).next().slideUp();
                }

                return false;
            });
        };

        var addToggleMenu = function () {

            // Remove padding from settings dot button if anchor link has no content.
            if ($(".lm__settings > a").text() === "") {
                $(".lm__settings > a").css({ padding: "0 25px" });
            }

            $(document).on("click", function (e) {
                removeActiveState();
            }).on("touchstart", function (e) {
                var $this = $(e.target);
                if ($this.attr("class") === "lm__user-info" || $($this).parents(".user-info-wrapper").length > 0) {
                    return;
                } else {
                    $(".user-info-wrapper > a").next().slideUp();
                }
            });

            // Toggle Settings
            settingBtn.off("click").on("click", function (e) {
                e.stopPropagation();
                removeActiveState();
                var subMenu = $(this).next();

                parentList.find(".lm_sub-settings").slideUp();
                if (subMenu.css("display") === "none") {
                    subMenu.slideDown("fast", function () {
                        if ($(this).is(":visible"))
                            $(this).css("display", "inline-block");
                    });
                    $(this).parent().addClass("active");
                } else {
                    subMenu.slideUp("fast", function () {
                        $(this).parent().removeClass("active");
                    });
                }

                toggleButton.removeClass("active");
                $(".humb").removeClass("open");
                subNavigation.slideUp("slow", function () {
                    $(this).removeAttr("style");
                });

                return false;
            });

            // Toggle menu navigation
            toggleButton.off("click").on("click", function (e) {
                e.stopPropagation();

                var $this = $(this);
                var subMenu = $this.next();
                //if (isTouchDevice()) {
                //    subMenu.css({
                //        "max-height": "calc(100vh - 100px)",
                //        "overflow": "hidden",
                //        "overflow-y": "visible"
                //    });
                //}
                if (subMenu.css("display") === "none") {
                    subMenu.slideDown("fast");
                    $this.addClass("active").find(".humb").addClass("open");
                } else {
                    subMenu.slideUp("fast");
                    $this.removeClass("active").find(".humb").removeClass("open");
                }

                settingBtn.parent().removeClass("active").find(">a").next().slideUp();
                return false;
            });

            // Toggle sub-menu
            parentList.each(function () {
                $(this).find("> a").off("click").on("click", function () {
                    var $this = $(this);
                    parentList.not($this.parent()).find("ul").slideUp(function () {
                        $(this).prev().removeClass("minus-sign").addClass("plus-sign");
                        $(this).closest("li").removeClass("open");
                    });
                    settingBtn.parent().removeClass("active").find(".lm_sub-settings").slideUp();

                    if ($(this).css("display") !== "none") {
                        $this.removeClass("plus-sign").addClass("minus-sign");
                        $(this).closest("li").addClass("open");
                    }

                    $this.next().slideToggle(function () {
                        if ($(this).css("display") === "none") {
                            $this.removeClass("minus-sign").addClass("plus-sign");
                            $(this).closest("li").removeClass("open");
                        }
                    });
                    if ($(window).width() < 1083) {
                        $this.next().find(".lm__child-sub-navigation").slideToggle();
                    }
                    return false;
                });
            });

            //childList.each(function () {
            //    $(this).find(">a .toggle-icon").off("click").on("click", function (e) {
            //        var $this = $(this);
            //        childList.not($this.parent().parent()).find("ul").slideUp(function () {
            //            $(this).prev().find(".toggle-icon").removeClass("minus-sign").addClass("plus-sign");
            //        });
            //        $this.parent().next().slideToggle(function () {
            //            if ($(this).css("display") == "none") {
            //                $this.removeClass("minus-sign").addClass("plus-sign");
            //            } else {
            //                $this.removeClass("plus-sign").addClass("minus-sign");
            //            }
            //        });
            //        return false;
            //    });
            //});
        };

        var resizeSubNav = function () {
            var wHeight = $(window).height() - 50;
            var subHeight = $(".lm_sub-settings").height();
            if (subHeight > wHeight) $(".lm_sub-settings").css({ height: $(window).height() - 50 + "px" });
            else $(".lm_sub-settings").css("height", "auto");
            //$(".humb").removeClass("open");
        };

        var setIconForParentMenu = function () {
            // set icon for menu which have sub menu
            parentList.each(function () {
                var $this = $(this);
                if ($this.has(".lm__sub-navigation")) {
                    $this.find(">a").addClass("plus-sign");
                }
            });

            //childList.each(function () {
            //    var $this = $(this);
            //    if ($this.has(".lm__child-sub-navigation")) {
            //        $this.find(">a .toggle-icon").addClass("plus-sign");
            //    }
            //});
        };

        var responsiveIcon = function () {
            if ($(window).width() >= 1083) {
                parentList.find(">a").addClass("hide-icon");
                //childList.find(">ul").hide();
            }
            else {
                parentList.find(">a").removeClass("hide-icon");
                //childList.find(">ul").removeAttr("style");
            }
        };

        var setLogoutUrl = function () {
            if ($(".js-page-identifier-header").length) {
                var url = $(".js-page-identifier-header").data("logout-url");
                document.getElementById("logoutRedirect").value = location.origin + url;
            }
        };

        return {
            init: function () {
                setIconForParentMenu();
                responsiveIcon();

                removeActiveState();
                addToggleMenu();
                addSettingEvent();
                addUserInfoEvent();
                resizeSubNav();
                setLogoutUrl();

                $(window).on("resize orientationchange", function () {
                    if ($(window).width() >= 1083) $(".lm__main-navigation > ul").removeAttr("style");

                    resizeSubNav();
                    responsiveIcon();
                });
            }
        };
    };

    var sidebarNavigation = function () {

        var sidebarNav = $(".lm__category-nav > ul > li").has("ul");

        var addAccordion = function () {
            sidebarNav.each(function () {
                if ($(this).find("ul li.active").length > 0 || $(this).hasClass("active")) $(this).addClass("open").find("ul").slideDown();
                else $(this).removeClass("open");
            });
        };

        return {
            init: function () {
                addAccordion();
            }
        };
    };

    var messageHub = function () {
        var getTotalUnreadMessage = function () {
            if ($("#totalUnread").length || $("#totalStarred").length) {
                $.ajax({
                    dataType: "json",
                    url: "/api/user/get-inbox-statistics",
                    type: "post",
                    cache: false,
                    success: function (data) {
                        if (data && data.totalUnRead > 0) {
                            if (!$("#totalUnread").hasClass("lm__messages-count")) {
                                $("#totalUnread").addClass("lm__messages-count");
                            }
                            $("#totalUnread").html(data.totalUnRead);
                        }
                        else {
                            if ($("#totalUnread").hasClass("lm__messages-count")) {
                                $("#totalUnread").removeClass("lm__messages-count");
                            }
                            $("#totalUnread").html("");
                        }

                        if (data && data.totalStarred > 0) {
                            if (!$("#totalStarred").hasClass("lm__messages-stat-count")) {
                                $("#totalStarred").addClass("lm__messages-stat-count");
                            }
                            $("#totalStarred").html(data.totalStarred);
                        }
                        else {
                            if ($("#totalStarred").hasClass("lm__messages-stat-count")) {
                                $("#totalStarred").removeClass("lm__messages-stat-count");
                            }
                            $("#totalStarred").html("");
                        }

                    }
                });
            }
        };

        return {
            init: function () {
                getTotalUnreadMessage();
            }
        };
    };

    var customerList = function () {
        var registerEventHandler = function () {
            var customerContainer = $(".user-id__wrapper.lm__radio");
            if (!!customerContainer) {
                customerContainer.on("click", function () {
                    var newCustomerNo = $(this).attr("data-customer-no");
                    var currentActiveNo = $("a.lm__user-info").attr("data-active-No");
                    if (newCustomerNo === currentActiveNo) {
                        return;
                    }
                    var newCustomerName = $(this).attr("data-customer-name");

                    // udpate newvalue for view;
                    $(".lm__user-info .lm__user-id").html(newCustomerNo);
                    $("a.lm__user-info").attr("data-active-No", newCustomerNo);
                    $(".lm__user-info .lm__user-summary").html(newCustomerName);

                    $("#newCustomerNumber").val(newCustomerNo);
                    //$("#referenceLink").val(window.location.href);
                    $("#customerNumberForm").submit();

                });
            }
        };

        return {
            init: function () {
                registerEventHandler();
            }
        };
    };

    // disable :hover on touch devices
    // based on https://gist.github.com/4404503
    // via https://twitter.com/javan/status/284873379062890496
    // + https://twitter.com/pennig/status/285790598642946048
    // re http://retrogamecrunch.com/tmp/hover
    // NOTE: we should use .no-touch class on CSS
    // instead of relying on this JS code
    function removeHoverCssRule() {
        try {
            var ignore = /:hover/;
            for (var i = 0; i < document.styleSheets.length; i++) {
                var sheet = document.styleSheets[i];
                if (!sheet.cssRules) {
                    continue;
                }
                for (var j = sheet.cssRules.length - 1; j >= 0; j--) {
                    var rule = sheet.cssRules[j];
                    if (rule.type === CSSRule.STYLE_RULE && ignore.test(rule.selectorText)) {
                        sheet.deleteRule(j);
                    }
                }
            }
        }
        catch (e) {
        }
    }

    function adjustStickyHeaderWidth() {
        var contentWidth = $(".lm__contents").width();
        var stickyHeader = $(".sticky-header");
        var leftColumn = $(".internal-page > .wrapper >.layout > .layout__item:first-child").width();
        var internalNav = $(".internal-navigation");

        if (stickyHeader.hasClass("fixed")) {
            stickyHeader.css({ width: contentWidth + "px" });
        } else {
            stickyHeader.removeAttr("style");
        }
        internalNav.css({ "width": leftColumn });
    }

    $(document).ready(function () {
        if ($(".lm__navigation-wrapper") != undefined && $(".lm__navigation-wrapper") != null && $(".lm__navigation-wrapper").length > 0) {
            // Client Sites - Main Navigation
            if ($(".lm__navigation-wrapper").length > 0) {
                $(window).scroll(function () {
                    if ($(this).scrollTop() > $(".lm__navigation-wrapper").offset().top) {
                        $(".lm__navigation").addClass("fixed");
                    }
                    if ($(this).scrollTop() <= $(".lm__navigation-wrapper").offset().top) {
                        $(".lm__navigation").removeClass("fixed");
                    }
                });
            }

            var headerMainNav = new headerMainNavigation();
            headerMainNav.init();

            var sidebarNav = new sidebarNavigation();
            sidebarNav.init();
            var mh = new messageHub();
            mh.init();

            // change customer number
            if (!!$("#customer_list_selection")) {
                $("#customer_list_selection").on("change", function (e) {
                    var form = $(e.target).parents("form");
                    form.submit();
                });
            }

            var cl = new customerList();
            cl.init();

            if (isTouchDevice()) {
                removeHoverCssRule();
            }
        }

        // Internal Sites - Search box
        if ($(".lm__header.internal-page").length) {


            $(window).scroll(function () {
                if ($(this).scrollTop() > $(".lm__header.internal-page").offset().top) {
                    $(".sticky-header").addClass("fixed")
                        .css({ width: $(".lm__contents").width() + "px" });
                }
                if ($(this).scrollTop() <= $(".lm__header.internal-page").offset().top) {
                    $(".sticky-header").removeClass("fixed")
                        .removeAttr("style");
                }
            });

            $(window).resize(function () {
                adjustStickyHeaderWidth();
            });

            adjustStickyHeaderWidth();
        }
        if (GroCommon) {
            GroCommon.handleExternalLink();
        }
    });

});


$(document).ready(function () {
    $("#header-internal-search .dropdown li a").click(function () {
        var searchOption = $(this).attr("data-value");
        $("#searchOption").val(searchOption);
    });
    $("button#internal-search").click(function () {
        var searchKey = $("#input-key-search").val();
        if (searchKey.trim() !== "") {
            $("#searchKey").val(searchKey);
            $("#internalSearchForm").submit();
        }
    });

    $("header.internal-page a.close-btn").click(function () {
        if ($(this).closest("#customer-popup").hasClass('open')) {
            $.ajax({
                dataType: "json",
                url: '/internal-portal/close-customer-session',
                type: 'get',
                cache: false,
                success: function (data) {
                    if (data) {
                        // reload the page
                        location.reload();
                    }
                }
            });
        }
    });

});


/* PROGRESS CIRCLE COMPONENT */
(function ($) {

    $.fn.circliful = function (options, callback) {

        var settings = $.extend({
            // These are the defaults.
            startdegree: 0,
            fgcolor: "#556b2f",
            bgcolor: "#eee",
            fill: false,
            width: 15,
            dimension: 200,
            fontsize: 15,
            percent: 50,
            animationstep: 1.0,
            iconsize: '20px',
            iconcolor: '#999',
            border: 'default',
            complete: null,
            bordersize: 10
        }, options);

        return this.each(function () {

            var customSettings = ["fgcolor", "bgcolor", "fill", "width", "dimension", "fontsize", "animationstep", "endPercent", "icon", "iconcolor", "iconsize", "border", "startdegree", "bordersize"];

            var customSettingsObj = {};
            var icon = '';
            var endPercent = 0;
            var obj = $(this);
            var fill = false;
            var text, info;

            obj.addClass('circliful');

            checkDataAttributes(obj);

            if (obj.data('text') != undefined) {
                text = obj.data('text');

                if (obj.data('icon') != undefined) {
                    icon = $('<i></i>')
                        .addClass('fa ' + $(this).data('icon'))
                        .css({
                            'color': customSettingsObj.iconcolor,
                            'font-size': customSettingsObj.iconsize
                        });
                }

                if (obj.data('type') != undefined) {
                    type = $(this).data('type');

                    if (type == 'half') {
                        addCircleText(obj, 'circle-text-half', (customSettingsObj.dimension / 1.45));
                    } else {
                        addCircleText(obj, 'circle-text', customSettingsObj.dimension);
                    }
                } else {
                    addCircleText(obj, 'circle-text', customSettingsObj.dimension);
                }
            }

            if ($(this).data("total") != undefined && $(this).data("part") != undefined) {
                var total = $(this).data("total") / 100;

                percent = (($(this).data("part") / total) / 100).toFixed(3);
                endPercent = ($(this).data("part") / total).toFixed(3);
            } else {
                if ($(this).data("percent") != undefined) {
                    percent = $(this).data("percent") / 100;
                    endPercent = $(this).data("percent");
                } else {
                    percent = settings.percent / 100;
                }
            }

            if ($(this).data('info') != undefined) {
                info = $(this).data('info');

                if ($(this).data('type') != undefined) {
                    type = $(this).data('type');

                    if (type == 'half') {
                        addInfoText(obj, 0.9);
                    } else {
                        addInfoText(obj, 1.25);
                    }
                } else {
                    addInfoText(obj, 1.25);
                }
            }

            $(this).width(customSettingsObj.dimension + 'px');

            var canvas = $('<canvas></canvas>').attr({
                width: customSettingsObj.dimension,
                height: customSettingsObj.dimension
            }).appendTo($(this)).get(0);

            var context = canvas.getContext('2d');
            var container = $(canvas).parent();
            var x = canvas.width / 2;
            var y = canvas.height / 2;
            var degrees = customSettingsObj.percent * 360.0;
            var radians = degrees * (Math.PI / 180);
            var radius = canvas.width / 2.5;
            var startAngle = 2.3 * Math.PI;
            var endAngle = 0;
            var counterClockwise = false;
            var curPerc = customSettingsObj.animationstep === 0.0 ? endPercent : 0.0;
            var curStep = Math.max(customSettingsObj.animationstep, 0.0);
            var circ = Math.PI * 2;
            var quart = Math.PI / 2;
            var type = '';
            var fireCallback = true;
            var additionalAngelPI = (customSettingsObj.startdegree / 180) * Math.PI;

            if ($(this).data('type') != undefined) {
                type = $(this).data('type');

                if (type == 'half') {
                    startAngle = 2.0 * Math.PI;
                    endAngle = 3.13;
                    circ = Math.PI;
                    quart = Math.PI / 0.996;
                }
            }

            /**
             * adds text to circle
             *
             * @param obj
             * @param cssClass
             * @param lineHeight
             */
            function addCircleText(obj, cssClass, lineHeight) {
                $("<span></span>")
                    .appendTo(obj)
                    .addClass(cssClass)
                    .text(text)
                    .prepend(icon)
                    .css({
                        'line-height': lineHeight + 'px',
                        'font-size': customSettingsObj.fontsize + 'px',
                        'color': parseInt(text) > 0 ? customSettingsObj.fgcolor : customSettingsObj.bgcolor
                    });
            }

            /**
             * adds info text to circle
             *
             * @param obj
             * @param factor
             */
            function addInfoText(obj, factor) {
                $('<span></span>')
                    .appendTo(obj)
                    .addClass('circle-info-half')
                    .css(
                        'line-height', (customSettingsObj.dimension * factor) + 'px'
                    )
                    .text(info);
            }

            /**
             * checks which data attributes are defined
             * @param obj
             */
            function checkDataAttributes(obj) {
                $.each(customSettings, function (index, attribute) {
                    if (obj.data(attribute) != undefined) {
                        customSettingsObj[attribute] = obj.data(attribute);
                    } else {
                        customSettingsObj[attribute] = $(settings).attr(attribute);
                    }

                    if (attribute == 'fill' && obj.data('fill') != undefined) {
                        fill = true;
                    }
                });
            }

            /**
             * animate foreground circle
             * @param current
             */
            function animate(current) {

                context.clearRect(0, 0, canvas.width, canvas.height);

                context.beginPath();
                context.arc(x, y, radius, endAngle, startAngle, false);

                context.lineWidth = customSettingsObj.bordersize + 1;

                context.strokeStyle = customSettingsObj.bgcolor;
                context.stroke();

                if (fill) {
                    context.fillStyle = customSettingsObj.fill;
                    context.fill();
                }

                context.beginPath();
                context.arc(x, y, radius, -(quart) + additionalAngelPI, ((circ) * current) - quart + additionalAngelPI, false);

                if (customSettingsObj.border == 'outline') {
                    context.lineWidth = customSettingsObj.width + 13;
                } else if (customSettingsObj.border == 'inline') {
                    context.lineWidth = customSettingsObj.width - 13;
                }

                context.strokeStyle = customSettingsObj.fgcolor;
                context.stroke();

                if (curPerc < endPercent) {
                    curPerc += curStep;
                    requestAnimationFrame(function () {
                        animate(Math.min(curPerc, endPercent) / 100);
                    }, obj);
                }

                if (curPerc == endPercent && fireCallback && typeof (options) != "undefined") {
                    if ($.isFunction(options.complete)) {
                        options.complete();

                        fireCallback = false;
                    }
                }
            }

            animate(curPerc / 100);

        });
    };

    $(document).ready(function () {
        $('.circle-progress').circliful();
    });
}(jQuery));

$(function () {
    var modal = $(".lm__modal-alert");
    var containerData = modal.find(".lm__modal-dialog");

    var agreementData = function () {
        var modal = $(".lm__modal-alert");
        var closeModal = modal.find(".modal-close");
        var loadingIcon = modal.find(".loader-wrapper");
        var confirm = modal.find(".success-confirm");

        var closeModalAlert = function () {
            modal.fadeOut(function () {
                containerData.find(".modal-header-title").closest(".modal-injected-content").remove();
            });

            loadingIcon.fadeIn();

            return false;
        };

        var addEvents = function () {
            modal.bind("click", closeModalAlert);
            containerData.bind("click", function (event) { event.preventDefault(); return false; });
            closeModal.bind("click", closeModalAlert);
            confirm.bind("click", closeModalAlert);
        };

        return {
            init: function () {
                addEvents();
                return true;
            }
        };
    };

    function bindData(data) {
        var loadingIcon = modal.find(".loader-wrapper");
        $(".modal-content-wrapper").prepend(data);
        loadingIcon.fadeOut();
    }

    function getUrlParameter(sParam) {
        var sPageUrl = window.location.search.substring(1);
        var sUrlVariables = sPageUrl.split("&");
        for (var i = 0; i < sUrlVariables.length; i++) {
            var sParameterName = sUrlVariables[i].split("=");
            if (sParameterName[0] === sParam) {
                return sParameterName[1];
            }
        }
        return '';
    }

    $(document).ready(function () {

        // enhance table saw to make responsive table
        $(document).trigger("enhance.tablesaw");

        var ad = new agreementData();
        ad.init();

        if ($(".seedDiv").length) {

        }

        // Load other tabs/Agreements in the background when page is loaded.
        if ($(".my-agreements-overview").length) {
            var tab = getUrlParameter("tab");
            var currentPageId = $("#CurrentPageId").val();
            var forageUrl = "/api/myagreements/forage";
            var feedUrl = "/api/myagreements/feed";
            var seedUrl = "/api/myagreements/seed";
            var grainUrl = "/api/myagreements/grain";
            var merchandiseUrl = "/api/myagreements/merchandise";

            // If user goes to seed agreements with toggle activated, get articles from backend.
            if (tab === "seed") {
                var toggle = getUrlParameter("toggle");
                var agreementNumber = ((toggle) ? toggle.replace(/^\D+/g, '') : ''); // replace all leading non-digits with nothing

                if (agreementNumber) {
                    var url = "/api/seedagreement/getconnectedseedagreements";
                    var divId = "seed-child-agreements-" + agreementNumber;
                    var totalQuantityDivId = "totalquantity-" + agreementNumber;

                    $.ajax({
                        type: "POST",
                        url: url,
                        cache: false,
                        data: { agreementNumber: agreementNumber, pageId: currentPageId, acceptedQuantity: "" },
                        success: function (data) {
                            if (data.length !== 0) {
                                if (data.ModelString.length !== 0) {
                                    $("#" + divId).html(data.ModelString);
                                }
                                $("#" + totalQuantityDivId).html("-");
                            }
                        },
                        error: function (e) {
                            console.log("Something went wrong with the AJAX request!");
                            console.log(e.responseText);
                        }
                    });
                }

                // Get all connected agreements in the background
                var seedAgreementsCommaSeparatedList = $("#SeedAgreementsCommaSeparatedList").val();

                if (seedAgreementsCommaSeparatedList.length !== 0) {
                    var stringArray = seedAgreementsCommaSeparatedList.split(",");
                    var seedConnectedAgreementsUrl = "/api/seedagreement/getconnectedseedagreements";

                    for (var i = 0; i < stringArray.length; i++) {
                        // Trim the excess whitespace.
                        stringArray[i] = stringArray[i].replace(/^\s*/, "").replace(/\s*$/, "");
                        var agreement = stringArray[i];
                        var acceptedQuantity = $("#AcceptedQuantity-" + agreement).val();

                        $.ajax({
                            type: "POST",
                            url: seedConnectedAgreementsUrl,
                            cache: false,
                            data: { agreementNumber: agreement, pageId: currentPageId, acceptedQuantity: acceptedQuantity },
                            success: function (data) {
                                // Only for caching purpose in the background
                            },
                            error: function (e) {
                                console.log("Something went wrong with the AJAX request!");
                                console.log(e.responseText);
                            }
                        });
                    }
                }
            }

            if (tab !== "grain") {
                $.ajax({
                    type: "POST",
                    url: grainUrl,
                    cache: false,
                    data: { pageId: currentPageId },
                    success: function (data) {
                        if (data.length !== 0) {
                            if (data.ModelString.length !== 0) {
                                $("#grainDiv").html(data.ModelString);
                            }
                        }
                    },
                    error: function (e) {
                        console.log("Something went wrong with the AJAX request!");
                        console.log(e.responseText);
                    }
                });
            }

            if (tab !== "seed") {
                $.ajax({
                    type: "POST",
                    url: seedUrl,
                    cache: false,
                    data: { pageId: currentPageId },
                    success: function (data) {
                        if (data.length !== 0) {
                            if (data.ModelString.length !== 0) {
                                $("#seedDiv").html(data.ModelString);
                            }
                            if (data.AgreementsCommaseparatedList) {
                                // Make sure to run all the calls for getting connected agreements so everything is cached, otherwise the performance will be insufficient
                                var stringArray = data.AgreementsCommaseparatedList.split(",");
                                var url = "/api/seedagreement/getconnectedseedagreements";
                                var currentPageId = $("#CurrentPageId").val();

                                for (var i = 0; i < stringArray.length; i++) {
                                    // Trim the excess whitespace.
                                    stringArray[i] = stringArray[i].replace(/^\s*/, "").replace(/\s*$/, "");

                                    var agreementNumber = stringArray[i];
                                    var acceptedQuantity = $("#AcceptedQuantity-" + agreementNumber).val();

                                    $.ajax({
                                        type: "POST",
                                        url: url,
                                        cache: false,
                                        data: { agreementNumber: agreementNumber, pageId: currentPageId, acceptedQuantity: acceptedQuantity },
                                        success: function (data) {
                                            // Only for caching purpose in the background
                                        },
                                        error: function (e) {
                                            console.log("Something went wrong with the AJAX request!");
                                            console.log(e.responseText);
                                        }
                                    });
                                }
                            }
                        }
                    },
                    error: function (e) {
                        console.log("Something went wrong with the AJAX request!");
                        console.log(e.responseText);
                    }
                });
            }

            if (tab !== "forage") {
                $.ajax({
                    type: "POST",
                    url: forageUrl,
                    cache: false,
                    data: { pageId: currentPageId },
                    success: function (data) {
                        if (data.length !== 0) {
                            if (data.ModelString.length !== 0) {
                                $("#foragediv").html(data.ModelString);
                            }
                        }
                    },
                    error: function (e) {
                        console.log("Something went wrong with the AJAX request!");
                        console.log(e.responseText);
                    }
                });
            }

            if (tab !== "feed") {
                $.ajax({
                    type: "POST",
                    url: feedUrl,
                    cache: false,
                    data: { pageId: currentPageId },
                    success: function (data) {
                        if (data.length !== 0) {
                            if (data.ModelString.length !== 0) {
                                $("#feedagreements").html(data.ModelString);
                            }
                        }
                    },
                    error: function (e) {
                        console.log("Something went wrong with the AJAX request!");
                        console.log(e.responseText);
                    }
                });
            }

            if (tab !== "merchandise") {
                $.ajax({
                    type: "POST",
                    url: merchandiseUrl,
                    cache: false,
                    data: { pageId: currentPageId },
                    success: function (data) {
                        if (data.length !== 0) {
                            if (data.ModelString.length !== 0) {
                                $("#tradingagreements").html(data.ModelString);
                            }
                        }
                    },
                    error: function (e) {
                        console.log("Something went wrong with the AJAX request!");
                        console.log(e.responseText);
                    }
                });
            }
        }

        $(document).on("click", ".showAnalyze", function () {
            var url = "/api/agreement/farmsample/" + $(this).attr("data-id").toString();
            $.ajax({
                dataType: "html",
                url: url,
                success: function (data) {
                    bindData(data);
                },
                error: function (e) {
                    console.log(e.responseText);
                    modal.fadeOut();
                }
            });

            modal.fadeIn();

            return false;
        });

        $(".showPriceHedging").on("click", function () {
            var url = "/api/agreement/price-hedging/" + $(this).attr("data-id").toString();
            $.ajax({
                dataType: "html",
                url: url,
                success: function (data) {
                    bindData(data);
                },
                error: function (e) {
                    console.log(e.responseText);
                    modal.fadeOut();
                }
            });

            modal.fadeIn();

            return false;
        });

        $(".showWeighInMoreInfo").on("click", function () {
            var url = "/api/weigh-in/more-info/" + $(this).attr("data-id").toString() + "/" + $("#isInternal").val();
            url += "?date=" + encodeURIComponent($(this).attr("data-date")) + "&sort=" + encodeURIComponent($(this).attr("data-sort"));
            $.ajax({
                dataType: "html",
                url: url,
                success: function (data) {
                    bindData(data);
                },
                error: function () {
                    modal.fadeOut();
                }
            });

            modal.fadeIn();

            return false;
        });

        $(".showWeighInAnalyze").on("click", function () {
            var url = "/api/weigh-in/analyze/" + $(this).attr("data-id").toString() + "/" + $("#isInternal").val();
            //url += "?date=" + encodeURIComponent($(this).attr("data-date")) + "&sort=" + encodeURIComponent($(this).attr("data-sort"));
            $.ajax({
                dataType: "html",
                url: url,
                success: function (data) {
                    if (data.indexOf("<html>") > 0)
                        window.location.href = "/";
                    else
                        bindData(data);
                },
                error: function () {
                    modal.fadeOut();
                }
            });
            modal.fadeIn();
            return false;
        });

        $(".js-load-weigh-in-analysis").on("click", function () {
            var control = $(this);
            var url = "/api/weigh-in/analyze/" + $(this).attr("data-id").toString() + "/" + $("#isInternal").val();

            $.ajax({
                dataType: "html",
                url: url,
                success: function (data) {
                    if (data.indexOf("<html>") > 0) {
                        window.location.href = "/";
                    } else {
                        var collapseTarget = control.next(".collapse__target");
                        var loadingIcon = collapseTarget.find(".loader-wrapper");
                        var collapseContent = collapseTarget.find(".collapse__target-content");

                        collapseContent.html(data);
                        loadingIcon.fadeOut();
                    }
                },
                error: function () {
                }
            });
        });

        $(document).on('change', '.js-show-harvest-year', function () {
            var currentPageId = $("#CurrentPageId").val();
            var agreementNumber = $("#ForageAgreementNumber").val();
            var selectedId = $("#SelectedHarvestYear").val();
            var url = "/api/forageagreement/getharvestyeardata";

            $.ajax({
                type: "GET",
                url: url,
                cache: false,
                data: { selectedvalue: selectedId, pageId: currentPageId, agreementNumber: agreementNumber },
                success: function (data) {
                    $("#harvestyear").html(data);
                },
                error: function (e) {
                    console.log("Something went wrong with the AJAX request!");
                    console.log(e.responseText);
                }
            });
        });

        $(document).on('change', '.seedagreements-dropdown', function () {
            var selectedValue = $("#SelectedHarvestYear").val();
            var currentPageId = $("#CurrentPageId").val();
            var url = "/api/seedagreement/getseedagreements";

            $.ajax({
                type: "POST",
                url: url,
                cache: false,
                data: { selectedvalue: selectedValue, pageId: currentPageId },
                success: function (data) {
                    if (data.length !== 0) {
                        if (data.ModelString.length !== 0) {
                            $("#seedagreements").html(data.ModelString);
                        }
                    }
                },
                error: function (e) {
                    console.log("Something went wrong with the AJAX request!");
                    console.log(e.responseText);
                }
            });
        });

        $('.my-agreements__provnr-link').bind('click', function () {
            var url = "/api/forageagreement/getanalysisresults";
            var id = ($(this).attr('id'));
            $('.my-agreements__sample-list-item a.is-active').removeClass('is-active');
            $(this).addClass("is-active");

            $.ajax({
                type: "POST",
                url: url,
                cache: false,
                data: { provnr: id },
                success: function (data) {
                    if (data.length !== 0) {
                        if (data.ModelString.length !== 0) {
                            $("#analysisresultsdiv").html(data.ModelString);
                        }
                        if (data.ProvNr.length !== 0) {
                            $("#certnrheading").html(data.ProvNr);
                        }
                    }
                },
                error: function (e) {
                    console.log("Something went wrong with the AJAX request!");
                    console.log(e.responseText);
                }
            });
        });

        $(document).on('click', '.seedagreeements', function () {
            var hasLoaded = $(this).hasClass("has-loaded");
            var button = this;

            if (!hasLoaded) {
                var url = "/api/seedagreement/getconnectedseedagreements";
                var agreementNumber = ($(this).attr('id'));
                var currentPageId = $("#CurrentPageId").val();
                var acceptedQuantity = $("#AcceptedQuantity-" + agreementNumber).val();
                var divId = "seed-child-agreements-" + agreementNumber;
                var totalQuantityDivId = "totalquantity-" + agreementNumber;

                $.ajax({
                    type: "POST",
                    url: url,
                    cache: false,
                    data: { agreementNumber: agreementNumber, pageId: currentPageId, acceptedQuantity: acceptedQuantity },
                    success: function (data) {
                        if (data.length !== 0) {
                            if (data.ModelString.length !== 0) {
                                $("#" + divId).html(data.ModelString);
                            }
                            //if (data.TotalQuantity.length !== 0) {
                            //    $("#" + totalQuantityDivId).html(data.TotalQuantity + "  ton");
                            //}
                            $("#" + totalQuantityDivId).html("-");
                            $(button).addClass("has-loaded");
                        }
                    },
                    error: function (e) {
                        console.log("Something went wrong with the AJAX request!");
                        console.log(e.responseText);
                    }
                });
            }
            else {
                $(button).removeClass("has-loaded");
            }
        });

        $(document).on('click', '.feedagreements', function () {
            var hasLoaded = $(this).hasClass("has-loaded");
            var button = this;

            if (!hasLoaded) {
                var url = "/api/feedagreement/getfeedagreementarticles";
                var agreementNumber = ($(this).attr('id'));
                var currentPageId = $("#CurrentPageId").val();
                var unit = $(button).find(".js-unit").val();
                var divId = "feedagreementarticles-" + agreementNumber;

                $.ajax({
                    type: "POST",
                    url: url,
                    cache: false,
                    data: { agreementNumber: agreementNumber, pageId: currentPageId, unit: unit },
                    success: function (data) {
                        if (data) {
                            if (data.length !== 0) {
                                if (data.ModelString.length !== 0) {
                                    $("#" + divId).html(data.ModelString);
                                    $(button).addClass("has-loaded");
                                }
                            }
                        }
                    },
                    error: function (e) {
                        console.log("Something went wrong with the AJAX request!");
                        console.log(e.responseText);
                    }
                });
            } else {
                $(button).removeClass("has-loaded");
            }
        });

        $(document).on('click', '.tradingagreements', function () {
            var hasLoaded = $(this).hasClass("has-loaded");
            var button = this;

            if (!hasLoaded) {
                var url = "/api/tradingagreement/gettradingagreementarticles";
                var agreementNumber = ($(this).attr('id'));
                var unit = $(button).find(".js-unit").val();
                var divId = "tradingagreementarticles-" + agreementNumber;
                var hiddenId = "agreementtype-" + agreementNumber;
                var agreementType = $("#" + hiddenId).val();

                $.ajax({
                    type: "POST",
                    url: url,
                    cache: false,
                    data: { agreementNumber: agreementNumber, agreementType: agreementType },
                    success: function (data) {
                        if (data) {
                            if (data.length !== 0) {
                                if (data.ModelString.length !== 0) {
                                    var dataWithUnit = data.ModelString.replace(/{{:unit}}/g, unit);
                                    $("#" + divId).html(dataWithUnit);
                                    $(button).addClass("has-loaded");
                                }
                            }
                        }
                    },
                    error: function (e) {
                        console.log("Something went wrong with the AJAX request!");
                        console.log(e.responseText);
                    }
                });
            } else {
                $(button).removeClass("has-loaded");
            }
        });

        $(document).on('change', '.feedagreements-dropdown', function () {
            var selectedValue = $("#agreementtype").val();
            var url = "/api/feedagreement/getfeedagreementscurrentorinactive";
            var currentPageId = $("#CurrentPageId").val();

            $.ajax({
                type: "POST",
                url: url,
                cache: false,
                data: { selectedvalue: selectedValue, pageId: currentPageId },
                success: function (data) {
                    if (data.length !== 0) {
                        if (data.ModelString.length !== 0) {
                            $("#feedagreements").html(data.ModelString);
                        }
                    }
                },
                error: function (e) {
                    console.log("Something went wrong with the AJAX request!");
                    console.log(e.responseText);
                }
            });
        });

        $(document).on('change', '.tradingagreements-dropdown', function () {
            var selectedValue = $("#tradingagreementtype").val();
            var url = "/api/tradingagreements/gettradingagreementscurrentorinactive";
            var currentPageId = $("#CurrentPageId").val();

            $.ajax({
                type: "POST",
                url: url,
                cache: false,
                data: { selectedvalue: selectedValue, pageId: currentPageId },
                success: function (data) {
                    if (data.length !== 0) {
                        if (data.ModelString.length !== 0) {
                            $("#tradingagreements").html(data.ModelString);
                        }
                    }
                },
                error: function (e) {
                    console.log("Something went wrong with the AJAX request!");
                    console.log(e.responseText);
                }
            });
        });
    });
});

(function () {
    $(document).ready(function () {
        var chartDiv = document.getElementById("lm__chart-dygraphs");
        var labelDiv = document.getElementById("lm__chart-status");
        if (window.Dygraph && chartDiv && labelDiv) {
            g2 = new Dygraph(
                document.getElementById("lm__chart-dygraphs"),
                chartDiv.dataset.rowdata,
                {
                    labelsDiv: document.getElementById("lm__chart-status"),
                    labelsKMB: false,
                    colors: [
                        "#006927",
                        "#F59C00",
                        "#76B843",
                        "#F54A00",
                        "#565656"],
                    width: "100%",
                    height: 540,
                    title: chartDiv.dataset.title,
                    axisLineColor: "white",
                    ylabel: "kr/ton"
                }
            );
        }

        //*** Chosed Selected Period in dropdown ***
        var selectMonthElement = document.getElementById("selectMonthPeriod");
        if (selectMonthElement) {
            $("#selectMonthPeriod > li > ul > li > a").click(function () {
                var dataValueType = $(this).parent().attr("data-value");
                var currentPageId = $("#CurrentPageId").val();
                var selected = [];
                $("input[name=type]:checked").each(function () {
                    selected.push($(this).attr("id"));
                });

                $.ajax({
                    type: "POST",
                    url: "/api/pricegraphpage/filterpricegraph",
                    cache: false,
                    data: { idArray: selected, pageId: currentPageId, selectedPeriod: dataValueType },
                    success: function (data) {
                        if (data.length !== 0) {
                            if (data.ModelString.length !== 0 && data.ColorCodes.length !== 0) {
                                $("#pricegraphdiv").html(data.ModelString);

                                var input = document.createElement("input");
                                input.setAttribute("type", "hidden");
                                input.setAttribute("name", "SelectedPeriod");
                                input.setAttribute("value", dataValueType);
                                input.setAttribute("id", "SelectedPeriod");

                                $("#selectedperioddiv").html(input);

                                var chartDiv = document.getElementById("lm__chart-dygraphs");
                                var labelDiv = document.getElementById("lm__chart-status");
                                if (window.Dygraph && chartDiv && labelDiv) {
                                    g2 = new Dygraph(
                                        document.getElementById("lm__chart-dygraphs"),
                                        chartDiv.dataset.rowdata,
                                        {
                                            labelsDiv: document.getElementById("lm__chart-status"),
                                            labelsKMB: false,
                                            colors: data.ColorCodes,
                                            width: "100%",
                                            height: 540,
                                            title: chartDiv.dataset.title,
                                            axisLineColor: "white",
                                            ylabel: "kr/ton"
                                        }
                                    );
                                }
                            }
                            else {
                                // Show empty graph
                                g2 = new Dygraph(
                                    document.getElementById("lm__chart-dygraphs"), "X\n",
                                    {
                                        labelsDiv: document.getElementById('lm__chart-status'),
                                        labelsKMB: false,
                                        width: "100%",
                                        height: 540,
                                        title: document.getElementById("lm__chart-dygraphs").dataset.title,
                                        axisLineColor: "white"
                                    }
                                );
                            }
                        }
                    },
                    error: function (e) {
                        console.log("Something went wrong with the AJAX request!");
                        console.log(e.responseText);
                    }
                });
            });
        }

        //*** Filtered from checkboxes ***
        $(document).on("change", ".pricegraph-checkbox input", function () {
            var selected = [];
            var currentPageId = $("#CurrentPageId").val();
            var selectedPeriod = $("#SelectedPeriod").val();

            $("input[name=type]:checked").each(function () {
                selected.push($(this).attr("id"));
            });

            $.ajax({
                type: "POST",
                url: "/api/pricegraphpage/filterpricegraph",
                cache: false,
                data: { idArray: selected, pageId: currentPageId, selectedPeriod: selectedPeriod },
                success: function (data) {
                    if (data.length !== 0) {
                        if (data.ModelString.length !== 0 && data.ColorCodes.length !== 0) {
                            $("#pricegraphdiv").html(data.ModelString);
                            var chartDiv = document.getElementById("lm__chart-dygraphs");
                            var labelDiv = document.getElementById("lm__chart-status");
                            if (window.Dygraph && chartDiv && labelDiv) {
                                g2 = new Dygraph(
                                    document.getElementById("lm__chart-dygraphs"),
                                    chartDiv.dataset.rowdata,
                                    {
                                        labelsDiv: document.getElementById("lm__chart-status"),
                                        labelsKMB: false,
                                        colors: data.ColorCodes,
                                        width: "100%",
                                        height: 540,
                                        title: chartDiv.dataset.title,
                                        axisLineColor: "white",
                                        ylabel: "kr/ton"
                                    }
                                );
                            }
                        }
                        else {
                            // Show empty graph
                            g2 = new Dygraph(
                                document.getElementById("lm__chart-dygraphs"), "X\n",
                                {
                                    labelsDiv: document.getElementById('lm__chart-status'),
                                    labelsKMB: false,
                                    width: "100%",
                                    height: 540,
                                    title: document.getElementById("lm__chart-dygraphs").dataset.title,
                                    axisLineColor: "white",
                                    ylabel: "kr/ton"
                                }
                            );
                        }
                    }
                },
                error: function (e) {
                    console.log("Something went wrong with the AJAX request!");
                    console.log(e.responseText);
                }
            });
        });
    });
})();

function setDropdown(obj, type) {
    obj.find(".showcase > a").unbind('click').click(function () {
        var sub = $(this).next();
        $(".dropdown").not(sub).hide();
        if (sub.css('display') == 'none') {
            sub.show();
        } else {
            sub.hide();
        }
        return false;
    });

    obj.find(".showcase .dropdown li a").click(function () {
        var data = $(this).parent().attr("data-value");
        var dataText = $(this).text();
        var dataElement = $(this).parents(".showcase").find(">input[type=hidden]");
        var previousData = dataElement.val();

        $(".dropdown li").removeClass("selected");
        $(this).parent().addClass("selected");
        $(this).parents(".showcase").find(">a").html((type === "type-2") ? data : dataText);
        $(this).parents(".showcase").find(">a").html(dataText);
        $(this).parents(".showcase").attr("data-value", data);
        dataElement.val(data);

        if (previousData !== data && obj.data("triggerChange")) {
            obj.trigger("change", { data: data, dataText : dataText });
        }

        $(this).parents(".dropdown").hide();
        if ($(this).parent().data('value') === 'Annan') {
            $(this).parents('.model-block').find('input[type="text"]').show();
            $(this).parents('ul.lm__form-dropdown.model-dropdown').hide();
        }

        return false;
    });
}

$(function () {
    function addDataPickerHandler() {
        if ($.fn.datepicker && $(".datepicker").length) {
            // Set default options for datepicker
            $.datepicker.setDefaults({
                monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "Maj", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dec"],
                monthNames: ['Januari', 'Februari', 'Mars', 'April', 'Maj', 'Juni', 'Juli', 'Augusti', 'September', 'Oktober', 'November', 'December'],
                dayNamesMin: ["Sö", "Må", "Ti", "On", "To", "Fr", "Lö"],
                firstDay: 0,
                showOtherMonths: true,
                selectOtherMonths: true,
                dateFormat: "yy-mm-dd"
            });

            $(".datepicker").datepicker({
                defaultDate: new Date(),
                onSelect: function (newText) {
                    // compare the new value to the previous one
                    if ($(this).data('previous') != newText) {
                        // do whatever has to be done, e.g. log it to console
                        //console.log('changed to: ' + newText);
                    }
                },
                monthNames: ["Januari", "Februari", "Mars", "April", "Maj", "Juni", "Juli", "Augusti", "September", "Oktober", "November", "December"],
                dayNamesMin: ["Sö", "Må", "Ti", "On", "To", "Fr", "Lö"],
                firstDay: 1
            }).datepicker("setDate", new Date())
            .on('change', function () {
                var $this = $(this);
                var validDate = !/Invalid|NaN/.test(new Date($this.val()).toString());
                var validDateRegex = /^\d\d\d\d-(0?[1-9]|1[0-2])-(0?[1-9]|[12][0-9]|3[01])$/ig.test($this.val());

                if (!validDateRegex || !validDate) {
                    //$this.addClass("error").next().show();
                    $this.next().show();
                } else {
                    //$this.removeClass("error").next().hide();
                    $this.next().hide();
                }
            });
        }
    }

    function addDropDownHandler() {
        var dropdown = $(".lm__form-dropdown");

        $(document).on('click touchstart', function (e) {
            var $this = $(e.target);
            if ($this.attr('class') == 'dropdown' || $($this).parents('.lm__form-dropdown').length > 0) {
                return;
            } else {
                $(".dropdown").hide();
            }
        });

        dropdown.each(function () {
            $(this).find(".showcase > a").click(function () {
                var sub = $(this).next();
                $(".dropdown").not(sub).hide();
                if (sub.css('display') == 'none') {
                    sub.show();
                } else {
                    sub.hide();
                }
                return false;
            });

            setDropdown($(this), 'type-2');
            setDropdown($(this), 'type-3');
        });
    }

    addDataPickerHandler();
    addDropDownHandler();
});

$(function () {
    if ($("#calculate_delivery_fee").length) {
        if (jQuery.validator) {
            $("#calculateForm").validate({
                ignore: [],
                errorElementClass: 'error',
                errorClass: 'error-item',
                errorElement: 'span',
                rules: {
                    LorryType: {
                        required: true
                    },
                    DeliveryAdress: {
                        required: true
                    },
                    Quantity: {
                        required: true,
                        number: true,
                        min: 1
                    },
                    DeliveryDate: {
                        required: true,
                        swedishDate: true
                    },
                    Artikel_Frakt: {
                        required: true
                    }
                },
                messages: {
                    LorryType: {
                        required: "Du måste välja leveranssätt"
                    },
                    DeliveryAdress: {
                        required: "Du måste välja en leveransadress"
                    },
                    Quantity: {
                        required: "Du måste ange en kvantitet större än 0",
                        number: "Ange ett numeriskt värde",
                        min: "Du måste ange en kvantitet större än 1"
                    },
                    DeliveryDate: {
                        required: "Du måste ange ett giltigt datum",
                        swedishDate: "Du måste ange ett giltigt datum"
                    },
                    Artikel_Frakt: {
                        required: "Du måste välja en artikel"
                    }
                },
                highlight: function (element, errorClass, validClass) {
                    $('ul.errors-list').show();
                    $('ul.errors-list').parent().show();
                    $('li#p_' + $(element).attr('id')).show();
                    element = this.settings._getIndicatorElement(element);
                    $(element).addClass(this.settings.errorElementClass).removeClass(errorClass);
                },
                unhighlight: function (element, errorClass, validClass) {
                    $('li#p_' + $(element).attr('id')).hide();
                    if ($('ul.errors-list').find('li[id^="p"]').is(":visible") === false) {
                        $('ul.errors-list').hide();
                        $('ul.errors-list').parent().hide();
                    }
                    element = this.settings._getIndicatorElement(element);
                    $(element).removeClass(this.settings.errorElementClass).removeClass(errorClass);
                },
                _getIndicatorElement: function (element) {
                    if ($(element).attr("type") == "hidden" && $(element).parents("ul.lm__form-dropdown"))
                        return $(element).parents("ul.lm__form-dropdown").find("li.showcase > a").get(0);
                    else
                        return element;
                }
            });
        }

        $("#calculate_delivery_fee").bind("click", function (e) {
            if (!$("#calculateForm").valid()) {
                return;
            }
            if ($('.calculate_result .calculate_fee')) {
                $('.calculate_result .calculate_fee').html('...');
            }
            $("#loaderCalculation").show();
            var url = "/api/deliveryfee/caluculate";
            var calculateObj = getCalculateObject();

            $.ajax({
                type: "post",
                data: calculateObj,
                dataType: "html",
                url: url,
                success: function (data) {
                    if (data.indexOf("<html>") > 0)
                        window.location.href = "/";
                    else
                        $(".calculate_result").html(data);
                },
                complete: function (jqXHR) {
                    $('#loaderCalculation').hide();
                },
                error: function () {
                    $(".calculate_result").html('');
                }
            });

        });

        $("#calculateForm").find(".showcase .dropdown li a").click(function () {
            var inputElement = $(this).parents(".showcase").find("input.form-element");
            var inputSelector = inputElement.attr('id');
            $("#calculateForm").validate().element('#' + inputSelector);
        });
    }

    function getCalculateObject() {
        return {
            supplier: $('.calculate_supplier').val(),
            lorryType: $('#LorryType').val(),
            deliveryAddressId: $('#DeliveryAdress').val(),
            quantity: $('.calculate_quantity').val(),
            deliveryDate: $('.calculate_deliveryDate').val(),
            itemId: $('#Artikel_Frakt').val(),
            isInternal: $('#isInternal').val()
        };
    }
});
$(function () {

    var deliveryNote = (function () {

        var $orderLink = $(".deliveryNote a.showPdf");

        var getPdf = function (orderNumber, fabricId, rowNumber) {
            GroCommon.blockUI();
            var url = "/api/delivery-note/get-deliverynote-pdf" + "?orderNumber=" + orderNumber + "&fabricId=" + fabricId + "&rowNumber=" + rowNumber;

            window.open(decodeURIComponent(url));
        };

        var init = function () {
            $orderLink.click(function () {

                var orderNumber = $(this).attr("cdata-orderNumber");
                var activePdf = $(this).attr("cdata-activePdf");
                var fabricId = $(this).attr("cdata-fabricID");
                var rowNumber = $(this).attr("cdata-rowNumber");
                var system = $(this).attr("cdata-system");

                if (activePdf === "True") {
                    getPdf(orderNumber, fabricId, rowNumber);
                } else {
                    switch (system) {
                        case "3":
                            {
                                break;
                            }
                        case "4":
                            {
                                break;
                            }
                        default:
                            {
                                break;
                            }
                    }
                }
            });
        };
        return {
            init: init
        };
    })();

    $(document).ready(function () {
        deliveryNote.init();
    });
});

// ------------------------------------------------------------------------- //
// #MESSAGES
// ------------------------------------------------------------------------- //


window.farmday = window.farmday || {};
farmday.modules = farmday.modules || {};


farmday.modules.messages = (function () {
    var priv = {};


    /**
     * Private initialization method
     */
    priv.init = function () {
        var isDebug;

        if ($(".js-page-identifier-messages-administer").length) {
            //$.getScript("https://cdnjs.cloudflare.com/ajax/libs/Trumbowyg/2.4.1/trumbowyg.min.js");
            //$.getScript("https://cdnjs.cloudflare.com/ajax/libs/Trumbowyg/2.4.1/langs/sv.min.js");

            //var svLang = jQuery.trumbowyg.langs.sv || {};
            //svLang.removeformat = "Ta bort formatering";
            //svLang.undo = "Ångra";

            isDebug = $(".js-page-identifier-messages-administer").data("debug");

            if (isDebug) {
                $.getScript("/Static/dist/scripts/administerMessage.js");
            } else {
                $.getScript("/Static/dist/scripts/administerMessage.production.js");
            }
        }

        if ($(".js-page-identifier-messages").length) {
            isDebug = $(".js-page-identifier-messages").data("debug");

            if (isDebug) {
                $.getScript("/Static/dist/scripts/userMessages.js");
            } else {
                $.getScript("/Static/dist/scripts/userMessages.production.js");
            }
        }

        if ($(".js-page-identifier-messages-settings").length) {
            isDebug = $(".js-page-identifier-messages-settings").data("debug");

            if (isDebug) {
                $.getScript("/Static/dist/scripts/userSettings.js");
            } else {
                $.getScript("/Static/dist/scripts/userSettings.production.js");
            }
        }
    };


    // Initialize module
    $(function () {
        priv.init();
    });

})();

$(function () {

    var SokGrobarhet = function () {

        var container = $(".lm__sok-grobarhet");
        var infoBtn = container.find(".lm__info");
        var modal = container.find(".lm__modal-alert");
        var messageClosable = $(".lm__message-closable .close-btn, .lm__modal-alert .button-confirm .success-confirm-inform");
        var informModal = $(".lm__information-modal__wrapper");

        var modalPopup = function () {
            infoBtn.click(function () {
                modal.fadeIn();
            });
        };

        var closeMessage = function () {
            messageClosable.click(function () {
                $(this).parents(".lm__modal-alert, .lm__message-closable").fadeOut();
            });
        };

        var informModalEvent = function () {
            $(".lm__information-modal__close-btn").click(function () {
                $(this).parents(".lm__information-modal__wrapper").addClass("hidden");
                $(this).parents(".lm__modal-alert").fadeOut();
                return false;
            });
        };

        return {
            init: function () {
                modalPopup();
                closeMessage();
                informModalEvent();
                return false;
            }
        };
    };

    var CommonModal = function () {
        var modal = $(".lm__modal__wrapper");
        var closeXBtn = modal.find(".lm__wide-modal__close-btn");
        var closeBtn = modal.find(".lm__btn-close");

        var closeModal = function (element) {
            element.click(function () {
                $(this).parents(".lm__modal__wrapper").addClass("hidden");
                $("#ui-datepicker-div").css({ zIndex: 9 });
                return false;
            });
        };

        var closeModalEvent = function () {
            closeModal(closeXBtn);
            closeModal(closeBtn);
        };

        return {
            init: function () {
                closeModalEvent();
                return false;
            }
        };
    };

    $(document).ready(function () {
        var sok = new SokGrobarhet();
        sok.init();

        var modal = new CommonModal();
        modal.init();
    });
});

$(function () {
    $("form").on("change", ".file-upload-field", function () {
        $(this).parent(".file-upload-wrapper").attr("data-text", $(this).val().replace(/.*(\/|\\)/, ''));
    });

    if ($('#attachments').length) {
        $('#attachments').filer({
            showThumbs: true,
            addMore: true,
            allowDuplicates: false
        });
    }
});

$(function () {

    var MittKonto = function () {
        var uploadBtn = $(".lm__user-inform__wrapper .lm__avatar__upload-btn");
        var removeAvatarBtn = $(".lm__user-inform__wrapper .popup-sub li .remove-avatar");
        var uploadBtns = $(".file-upload-input");

        var addUploadPopupEvent = function () {
            $(document).on("click", function () {
                $('.popup-sub').fadeOut();
            });
            $(".popup-sub").click(function () { return false; });
            uploadBtn.click(function () {
                var popupSub = $(this).parent();
                if (popupSub.has('.popup-sub')) {
                    popupSub.find('.popup-sub').fadeToggle();
                }
                return false;
            });

            //removeAvatarBtn.click(function () {
            //    var avatar = $(this).parents(".lm__avatar").find(".avatar-img");
            //    avatar.attr("src", $(this).attr("default-avatar"));
            //    return false;
            //});
        };

        var addUploadImageEvent = function () {
            uploadBtns.each(function (event) {
                $(this).change(function (event) {
                    var imgEle = $(this).parent().find(".avatar-img");
                    imgEle.attr('src', URL.createObjectURL(event.target.files[0]));
                });
            });
        };

        return {
            init: function () {
                addUploadPopupEvent();
                //addUploadImageEvent();
                return false;
            }
        };
    };

    $(document).ready(function () {
        //var mit = new MittKonto();
        //mit.init();
    });

});
$(function () {
    var MachineListing = function () {

        var toggleViewBtns = $("#toggle-view a");
        var toggleView = $(".machine-list");
        var machineItems = $('.machine-item');

        var ToggleViewEvent = function () {
            toggleViewBtns.each(function () {
                var $this = $(this);
                if ($this.hasClass('active')) {
                    $this.css({ backgroundColor: '#fff' });
                }
            });
            toggleViewBtns.on('click', function (e) {
                e.preventDefault();

                var $this = $(this);
                var tgr = $this.data('target');

                // Switch view
                toggleView.addClass((tgr == 'list') ? 'list-view' : '');
                toggleView.removeClass((tgr == 'grid') ? 'list-view' : '');

                // Change active class for selected btn
                toggleViewBtns.removeClass('active').removeAttr('style');
                $this.addClass('active').css({ backgroundColor: '#fff' });

                return false;
            });
        };

        return {
            init: function () {
                ToggleViewEvent();

                //$(window).on('resize orientationchange', function () {
                //    if (window.innerWidth < 768) {
                //        toggleView.removeClass('list-view');
                //        toggleViewBtns.removeClass('active').first().addClass('active');
                //    }
                //});
            }
        };
    };

    /** ======================= DEPREACATED ======================= */
    $('.lm__list-type a').on('click', function () {
        var dataLayout = $(this).attr("data-layout");

        // Change active layout button
        $('.lm__list-type a').removeClass('active');
        $(this).addClass('active');

        // Change layout
        $(".list-maskin").removeClass("list-type").removeClass("grid-type").addClass(dataLayout).show();

        //$(".list-maskin").hide();
        //$("."+dataLayout).show();
    });

    $('.lm__list-type a.active').click();

    $('#checkRegisterBtn').click(function () {
        $('.lm__modal-alert').show();
    });

    /** ======================= DEPREACATED ======================= */

    var machineListing = new MachineListing();
    machineListing.init();

});

if (jQuery.validator) {
    jQuery.validator.addMethod("subItemRequired", function (value, element, method) {
        return method;
    }, '');
    jQuery.validator.addMethod("regex", function (value, element, regexpr) {
        return this.optional(element) || regexpr.test(value);
    }, 'Please enter a valid value.');
}

jQuery(function () {
    MyAccountPage.init();
    HandinSignInInformationPage.init();
    CompanyInformation.init();
    BusinessProfile.init();
    DeliveryAddress.init();
});

var MyAccountPage = MyAccountPage || (function () {

    var addUploadPopupEvent = function () {
        $(document).on("click", function () {
            $('.popup-sub').fadeOut();
        });

        //$(".popup-sub").click(function () { return false; });
        $(".lm__avatar .lm__avatar__upload-btn").click(function () {
            var popupSub = $(this).parent();
            if (popupSub.has('.popup-sub')) {
                popupSub.find('.popup-sub').fadeToggle();
            }
            return false;
        });
    };

    var init = function () {
        addUploadPopupEvent();
        //Init for Profile picture
        var userParamsForUpload = getSettingsForUserUpload();
        var userUploadImageModule = new UploadImageModule(userParamsForUpload);
        userUploadImageModule.initUploadFile();
        userUploadImageModule.initDeleteFile();

        //Init for Customer picture
        var companyUploadSettings = getSettingsForCompanyUpload();
        var companyUploadImageModule = new UploadImageModule(companyUploadSettings);
        companyUploadImageModule.initUploadFile();
        companyUploadImageModule.initDeleteFile();
    };
    function getSettingsForUserUpload() {
        return {
            fileSelector: "#user-avatar__file",
            previewImgSelector: "#user-avatar",
            uploadBtnSelector: "#user-uploadBtn",
            cancelUploadBtnSelector: "#user-cancelUpload",
            linkSelector: "#user-link",
            handleUrl: "/api/profile/user-upload-avatar",
            isNeedToUpdateHeader: true,
            deleteLinkSelector: "#user-deleteBtn",
            handleDeleteUrl: "/api/profile/user-delete-avatar",
            messages: {
                confirmationDialogSelector: "#dialog-user-confirmation"
            }

        };
    }

    function getSettingsForCompanyUpload() {
        return {
            fileSelector: "#company-avatar__file",
            previewImgSelector: "#company-avatar",
            uploadBtnSelector: "#company-uploadBtn",
            cancelUploadBtnSelector: "#company-cancelUpload",
            linkSelector: "#company-link",
            handleUrl: "/api/profile/company-upload-avatar",
            deleteLinkSelector: "#company-deleteBtn",
            handleDeleteUrl: "/api/profile/company-delete-avatar",
            messages: {
                confirmationDialogSelector: "#dialog-company-confirmation"
            }

        };
    }
    return {
        init: init
    };

})();

var HandinSignInInformationPage = HandinSignInInformationPage || (function () {
    var unsaved = false;
    var formSubmitting = false;


    var init = function () {
        var x = $('#hiddenSocialNumber').val();
        if (x && x !== "") {
            $('#hiddenSocialNumber, #SocialSecurityNumber').val('************');
            $('.lm__block .lm__checkbox').show();
        }

        $('#SocialSecurityNumber').change(function () {
            unsaved = true;
        });

        window.onload = function () {
            window.addEventListener("beforeunload", function (e) {
                if (formSubmitting || !unsaved) {
                    return undefined;
                }

                var confirmationMessage = 'It looks like you have been editing something. ' +
                    'If you leave before saving, your changes will be lost.';

                (e || window.event).returnValue = confirmationMessage; //Gecko + IE
                return confirmationMessage; //Gecko + Webkit, Safari, Chrome etc.
            });
        };
    };

    var validateForm = function () {
        var x = $('#SocialSecurityNumber').removeClass('error').val();
        $('#error-message').hide();
        if (x == null || x === "") {
            $('#SocialSecurityNumber').addClass('error');
            $('#error-message').show().html("Personnummer måste fyllas i");
            $('.lm__block .lm__checkbox').hide();
            return false;
        }
        var rex = /^([0-9]{12})$|^([0-9]{10})$/;
        if (!rex.test(x)) {
            $('#SocialSecurityNumber').addClass('error');
            $('#error-message').show().html("Du måste ange 12 siffror (ÅÅÅÅMMDDNNNN)");
            $('.lm__block .lm__checkbox').hide();
            return false;
        }

        formSubmitting = true;
    };

    return {
        init: init,
        validateForm: validateForm
    };

})();

var CompanyInformation = CompanyInformation || (function () {
    var init = function () {
        $(document).ready(function () {
            if ($().validate) {
                $("#editCompanyInformationFrom").validate({
                    errorElementClass: 'error',
                    errorClass: 'error-item',
                    errorElement: 'span',
                    rules: {
                        CompanyName: "required",
                        Address: "required",
                        ZipCode: {
                            required: true,
                            zipCode: true
                        },
                        City: "required",
                        PhoneMobile: {
                            required: true,
                            mobileSE: true
                        },
                        PhoneWork: {
                            phoneSE: true
                        },
                        Email: {
                            required: true,
                            regex: /^\b[A-Z0-9._%-]+@[A-Z0-9.-]+\.[A-Z]{2,4}\b$/i
                        }
                    },
                    messages: {
                        CompanyName: "Du måste ange Företag/namn",
                        Address: "Du måste ange Gatuadress",
                        ZipCode: {
                            required: "Du måste ange Postnummer",
                            zipCode: window["validationMessage"].zipCode.valid
                        },
                        City: {
                            required: "Du måste ange Ort"
                        },
                        PhoneMobile: {
                            required: window["validationMessage"].mobileSE.required,
                            mobileSE: window["validationMessage"].mobileSE.valid
                        },
                        PhoneWork: {
                            phoneSE: window["validationMessage"].phoneSE.valid
                        },
                        Email: {
                            required: "Du måste ange E-post",
                            email: "Ange en giltig e-postadress"
                        }
                    },
                    highlight: function (element, errorClass, validClass) {
                        $('div.errors-list').hide();
                        $('ul.errors-list').show();
                        $('li#p_' + $(element).attr('id')).show();
                        $(element).addClass(this.settings.errorElementClass).removeClass(errorClass);
                    },
                    unhighlight: function (element, errorClass, validClass) {
                        $(element).removeClass(this.settings.errorElementClass).removeClass(errorClass);
                        $('li#p_' + $(element).attr('id')).hide();
                        if ($('ul.errors-list').find('li[id^="p"]').is(":visible") === false) {
                            $('ul.errors-list').hide();
                        }
                    }
                });
            }
        });
    };
    return {
        init: init
    };
})();

var BusinessProfile = BusinessProfile || (function () {
    var init = function () {
        $(document).ready(function () {
            if ($().validate) {
                $("#editBusinessProfileForm").validate({
                    errorElementClass: 'error',
                    errorClass: 'error-item',
                    errorElement: 'span',
                    rules: {
                        "BusinessProfile.Name": "required"
                    },
                    messages: {
                        "BusinessProfile.Name": "Du måste ange Typ av verksamhet"
                    },
                    highlight: function (element, errorClass, validClass) {
                        $('div.errors-list').hide();
                        $('ul.errors-list').show();
                        $('li#p_' + $(element).attr('id')).show();
                        $(element).addClass(this.settings.errorElementClass).removeClass(errorClass);
                    },
                    unhighlight: function (element, errorClass, validClass) {
                        $(element).removeClass(this.settings.errorElementClass).removeClass(errorClass);
                        $('li#p_' + $(element).attr('id')).hide();
                        if ($('ul.errors-list').find('li[id^="p"]').is(":visible") === false) {
                            $('ul.errors-list').hide();
                        }
                    }
                });
            }
        });
    };

    return {
        init: init
    };
})();

var DeliveryAddress = function () {

    var addDeleteAddressHandler = function () {
        var $delElement = $("#del-delivery-address");
        if ($delElement.length > 0) {
            $delElement.click(function (e) {
                e.preventDefault();
                var addressNumber = $("#addressNumber").val().toString();
                var handlePageId = $("#handler-delivery-page-id").val().toString();
                var apiUrl = "/api/handle-delivery-address/delete/" + addressNumber + "/" + handlePageId;
                $.ajax({
                    dataType: "html",
                    url: apiUrl,
                    cache: false,
                    success: function (data) {
                        if (!!data && data.toString().trim() !== "") {
                            window.location = data;
                        }
                    }
                });
            });
        }
    };

    function generateSiloRow(rowIdx) {
        var silosFirstValue = $("#SilosFirstValue").val().toString();
        var silosSecondValue = $("#SilosSecondValue").val().toString();
        var silosThirdValue = $("#SilosThirdValue").val().toString();
        var siloBox = "<div class='author-inform-form__column author-inform-form__column-full silos-box gray-background'> </div>";
        var delBtn = "<a href='#' class='silos-box__delete-btn'></a>";
        var silorDesc = " <span>Silo nr*</span> <input type='text' name='Silos[" + rowIdx + "].Number' class='silos silo-number' /><span>Framkomlighet* </span>";
        var siloAccessibility = " <ul class='lm__form-dropdown type-3'>" +
            "<li class='showcase' data-value='10M'>" +
            "<a href='#' id='selected-silor" + rowIdx + "'>" + ((silosFirstValue) ? silosFirstValue : "10 meter") + "</a>" +
            "<ul class='dropdown'>" +
            "<li data-value='10M' class='selected'><a href='#'>" + ((silosFirstValue) ? silosFirstValue : "10 meter") +"</a></li>" +
            "<li data-value='18M'><a href='#'>" + ((silosSecondValue) ? silosSecondValue : "18 meter") + "</a></li>" +
            "<li data-value='24M'><a href='#'>" + ((silosThirdValue) ? silosThirdValue : "24 meter") + "</a></li>" +
            "</ul>" +
            "<input type='hidden' class='form-element silo-accessibility' name='Silos[" + rowIdx + "].Accessibility' value='10M' />" +
            "</li>" +
            "</ul>";
        return $(siloBox).append(delBtn, silorDesc, siloAccessibility);
    }

    function setSelectedDropdown() {
        var selectedValue = $("#editDeliveryAddress .lm__form-dropdown .showcase").attr("data-value");
        if (!selectedValue) {
            return;
        }

        var liItems = $(".lm__form-dropdown .dropdown li");
        // reset selected state
        liItems.removeClass("selected");
        liItems.each(function () {
            var data = $(this).attr("data-value");

            if (data == selectedValue) {
                $(this).addClass("selected");
            }
        });
    }

    function addSilo() {
        $('#btn-add-silo').click(function (e) {
            var rowCount = $("div.silos-box").length;
            var silorContainer = $('.silo-container');
            var newRow = generateSiloRow(rowCount);
            silorContainer.append(newRow);
            setDropdown($(".lm__form-dropdown"), 'type-3');

            addRemoveSiloHandler();

            e.preventDefault();
        });
    }

    function addRemoveSiloHandler() {
        $(".silos-box__delete-btn").click(function (e) {
            e.preventDefault();
            $(this).closest('div.silos-box').remove();
            $('input.silo-number').each(function (idx, item) {
                $(this).attr('name', 'Silos[' + idx + '].Number');
            });
            $('input.silo-accessibility').each(function (idx, item) {
                $(this).attr('name', 'Silos[' + idx + '].Accessibility');
            });
        });
    }
    function showOrHideDialog(name) {
        var indicatorId = "#has-" + name + "-indicator";
        var $itemIndicator = $(indicatorId);
        if ($itemIndicator && $itemIndicator.length > 0) {
            var updateSuccess = $itemIndicator.val().toString().toLowerCase() === "true";
            if (updateSuccess) {
                //show success dialog
                var modalId = "#modal-" + name + ".lm__information-modal__wrapper";
                var modal = $(modalId);
                modal.removeClass("hidden");
            }
        }
    }
    function addNotificationReceiverHandler() {
        var $receiverCheckBox = $('input.notification-receiver-handler');
        if (!!$receiverCheckBox && $receiverCheckBox.length > 0) {
            $receiverCheckBox.click(function () {
                $(this).val($(this).is(":checked"));
            });
        }
    }

    function addProfileFormValidationHandler() {
        if ($(".js-page-identifier-profile-page").length) {
            $("#edit-profile-form").validate({
                errorElement: 'div',
                errorClass: "error",
                rules: {
                    FirstName: {
                        required: true
                    },
                    LastName: {
                        required: true
                    },
                    Mobilephone: {
                        required: true,
                        mobileSE: true
                    },
                    Telephone: {
                        phoneSE: true
                    },
                    Email: {
                        required: true,
                        regex: /^\b[A-Z0-9._%-]+@[A-Z0-9.-]+\.[A-Z]{2,4}\b$/i
                    },
                    Zip: {
                        zipCode: true,
                        regex: /^(\d\d\d \d\d|\d\d\d\d\d)$/i
                    }
                },

                messages: {
                    FirstName: window["validationMessage"].firstName.required,
                    LastName: window["validationMessage"].lastName.required,
                    Mobilephone: {
                        required: window["validationMessage"].mobileSE.required,
                        mobileSE: window["validationMessage"].mobileSE.valid
                    },
                    Telephone: {
                        phoneSE: window["validationMessage"].phoneSE.valid
                    },
                    Email: {
                        required: window["validationMessage"].email.required,
                        email: window["validationMessage"].email.valid
                    },
                    Zip: {
                        zipCode: window["validationMessage"].zipCode.valid,
                        regex: window["validationMessage"].zipCode.valid
                    }
                },
                highlight: function (element, errorClass) {
                    $(element).addClass(errorClass);
                }
            });
        }
    }

    function addUserAgreementHandler() {
        if ($(".js-page-identifier-user-agreement").length) {
            var url = $(".js-page-identifier-user-agreement").data("url");
            document.getElementById("logoutRedirect").value = location.origin + url;
        }
    }

    function init() {
        showOrHideDialog("added");
        showOrHideDialog("updated");
        showOrHideDialog("deleted");
        addProfileFormValidationHandler();

        if (!$("#editDeliveryAddress") || $("#editDeliveryAddress").length == 0) {
            return;
        }
        setSelectedDropdown();
        addSilo();
        addRemoveSiloHandler();
        addDeleteAddressHandler();
        addNotificationReceiverHandler();
        addUserAgreementHandler();
    }
    return {
        init: init
    };

}();


$(function () {
    MachineDetailPage.init();
    MachineAddPage.Init();
    MachineBookingService.Init();
});

(function ($) {
    $.fn.imgLoad = function (callback) {
        return this.each(function () {
            if (callback) {
                if (this.complete || /*for IE 10-*/ $(this).height() > 0) {
                    callback.apply(this);
                }
                else {
                    $(this).on('load', function () {
                        callback.apply(this);
                    });
                }
            }
        });
    };
})(jQuery);

var MachineDetailPage = MachineDetailPage || (function () {
    var updated = false;

    var addUploadPopupEvent = function () {
        $('.avatar-icon').on('click', function (e) {
            e.preventDefault();
            $(this).parents('.lm__block-metadata').find('.list-action-item').toggle();
        });
    };

    var fetchTotalHoursForMachine = function () {
        var inno = $('#inno').val();
        if (inno) {
            var url = 'https://api.trackunit.com/public/GetUnit';
            $.ajax({
                url: url,
                type: "GET",
                cache: false,
                data: { token: '11df2ae9bba646ceb8be959f23445b23', format: 'json', referenceNumber: inno },
                dataType: 'jsonp',
                success: function (result) {
                    if (result && result.list && result.list.length > 0) {
                        var trackUnitInfo = result.list[0];
                        var totalHours = ((parseFloat(trackUnitInfo.preRun1) + parseFloat(trackUnitInfo.run1)) / 3600).toFixed(0);
                        $('#total_hours').show().find('.total-text').html(totalHours + ' h');
                    } else {
                        $('#generic_banner').show();
                    }
                },
                error: function (e) {
                    console.log("Something went wrong with the AJAX request!");
                    console.log(e.responseText);
                }
            });
        } else {
            $('#generic_banner').show();
        }
    };

    var fetchHoursForMachineLogMaster = function () {
        var serialNumber = $('#serialNumber').val();
        if (serialNumber) {
            var url = $('#datavaxtApiUrl').val();
            $.ajax({
                url: url,
                type: "GET",
                cache: false,
                data: { vin: serialNumber },
                dataType: 'json',
                success: function (result) {
                    if (result && result.engineHours > 0) {
                        console.log(result);
                        var hours = result.engineHours.toFixed(0);
                        $('#total_hours').show().find('.total-text').html(hours + ' h');
                    } else {
                        $('#generic_banner').show();
                    }
                },
                error: function (e) {
                    console.log("Something went wrong with the AJAX request!");
                    console.log(e.responseText);
                }
            });
        } else {
            $('#generic_banner').show();
        }
    };

    var autoFitImages = function () {
        var images = $(".machine-item__thumbnail-wrapper img");

        images.each(function () {
            $(this).imgLoad(function () {
                var $this = $(this);
                var size = {
                    width: $(this).width(),
                    height: $(this).height()
                };
                if (size.height < size.width) {
                    //console.log(size.width / size.height + ', ' + $this.parent().width() / $this.parent().height());
                    if (size.width / size.height > $this.parent().width() / $this.parent().height()) {
                        $(this).removeClass('horizontal-img').addClass('vertical-img');
                    } else {
                        $(this).removeClass('vertical-img').addClass('horizontal-img');
                    }
                } else {
                    //console.log(size.height / size.width + '; ' + $this.parent().height() / $this.parent().width());
                    if (size.height / size.width > $this.parent().height() / $this.parent().width()) {
                        $(this).removeClass('vertical-img').addClass('horizontal-img');
                    } else {
                        $(this).removeClass('horizontal-img').addClass('vertical-img');
                    }
                }
            });
        });
    };

    var attachDeleteMachineEvent = function () {
        $('.remove-machine-button').click(function () {
            $('.delete-machine-alert').show();
        });
        $('#agree-remove-machine').click(function () {
            $('#form-remove-machine').submit();
        });
        $('#disagree-remove-machine').click(function () {
            $('.lm__modal-alert').hide();
        });

        var isFailed = $('#deleteFailed').val();
        if (isFailed === "True") {
            alert("Radera maskin misslyckades. Kontrollera igen!");
        }
    };

    var init = function () {
        addUploadPopupEvent();
        fetchTotalHoursForMachine();
        fetchHoursForMachineLogMaster();
        attachDeleteMachineEvent();
        autoFitImages();

        $(window).on('resize orientationchange', function () {
            if (!updated) {
                updated = true;
                setTimeout(function () {
                    autoFitImages();
                    updated = false;
                }, 100);
            }
        });

        $(window).trigger('resize');

        var machineUploadSettings = {
            fileSelector: "#machine-file",
            previewImgSelector: "#machine-picture",
            uploadBtnSelector: "#machine-uploadBtn",
            cancelUploadBtnSelector: "#machine-cancelUpload",
            linkSelector: "#machine-link",
            handleUrl: "/api/machine/machine-upload-avatar",
            isNeedToUpdateHeader: false,
            errorMessage: "Det uppstod ett fel när bilden skulle laddas upp. Var gör försök igen!",
            deleteLinkSelector: "#machine-deleteBtn",
            handleDeleteUrl: "/api/machine/machine-delete-avatar"
        };
        var userUploadImageModule = new UploadImageModule(machineUploadSettings);
        userUploadImageModule.initDataForRequest([{ 'key': 'machineId', 'value': $('#machineId').val() }]);
        userUploadImageModule.initUploadFile();
        userUploadImageModule.initDeleteFile();
    };

    return {
        init: init,
        autoFitImages: autoFitImages
    };

})();

var MachineAddPage = MachineAddPage || (function () {
    var brandDdContainerSelector = "#drop-machine-brand";
    var modelDdContainerSelector = "#drop-machine-model";

    function checkRegisterNumber() {
        var id = $('#registration').val().toUpperCase();
        if (!id || id.trim() === "") return;

        id = id.trim();
        showLoader();

        $.ajax({
            url: '/api/add-machine/check-register-number?registerNumber=' + id,
            type: "GET",
            dataType: "json",
            success: function (data) {
                hideLoader();
                if (data.id != null && data.id != '') {
                    //update serialnumber
                    $('#serial-number').val(data.serialNumber);

                    //update category
                    $('#drop-machine-category > .dropdown > li').each(function () {
                        if ($(this).attr('data-value') == data.category.Key) {
                            $('#drop-machine-category > .dropdown > li').removeClass('selected');
                            $(this).addClass('selected');
                            $(this).parents('.showcase').attr('data-value', data.category.Key);
                            $(this).parents('.showcase').find('>a').html(data.category.Name);
                            $(this).parents('.showcase').find('>input').val(data.category.Key);
                            return false;
                        }

                    });

                    //update brand and model
                    $('#drop-machine-brand > .dropdown > li').each(function () {
                        if ($(this).attr('data-value') == data.brand.Key) {
                            $('#drop-machine-brand > .dropdown > li').removeClass('selected');
                            $(this).addClass('selected');
                            $(this).parents('.showcase').attr('data-value', data.brand.Key);
                            $(this).parents('.showcase').find('>a').html(data.brand.Name);
                            $(this).parents('.showcase').find('>input').val(data.brand.Key);
                            //changeModelByBrand(data);
                            changeMachineModel(data.brand.Key, data.model.Name);
                            return false;
                        }
                    });
                }
                else {
                    $('.lm__modal-alert').show();
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                hideLoader();
                alert(errorThrown.toString());
            }
        });
    }

    function changeMachineModel(selectedBrandId, modelName) {
        var brandId = selectedBrandId == undefined ? $(brandDdContainerSelector).attr('data-value') : selectedBrandId;
        var apiUrl = '/api/add-machine/get-machine-models?brandId=' + brandId;
        if (modelName != undefined) {
            apiUrl += "&modelName=" + modelName;
        }
        $.ajax({
            url: apiUrl,
            type: "GET",
            dataType: "html",
            success: function (data) {
                if (data) {
                    $(".model-dd-container").html(data);
                }
                setDropdown($(modelDdContainerSelector).parent(), 'type-3');
            }
        });
    }

    function validateFormAddMachine() {
        var category = $('#drop-machine-category');
        var brand = $(brandDdContainerSelector);
        var model = $(modelDdContainerSelector);

        var brandDesc = brand.parent().parent().find('>input');
        var modelDesc = model.parent().parent().find('>input');

        var errorList = [];
        if (category.attr('data-value') == "" || category.attr('data-value') == undefined) {
            errorList.push("Typ");
            category.parent().parent().find('.error-item').show();
        }
        else {
            category.parent().parent().find('.error-item').hide();
        }
        if (brand.attr('data-value') == "" || brand.attr('data-value') == undefined) {
            errorList.push("Märke");
            brand.parent().parent().find('.error-item').show();
        }
        else if (brand.attr('data-value') == "Annan" && brandDesc.val() == "") {
            errorList.push("Märke");
            brand.parent().parent().find('.error-item').show();
        }
        else {
            brand.parent().parent().find('.error-item').hide();
        }
        if (model.attr('data-value') == "" || model.attr('data-value') == undefined) {
            errorList.push("Modell");
            model.parent().parent().find('.error-item').show();
        }
        else if (model.attr('data-value') == "Annan" && modelDesc.val() == "") {
            errorList.push("Modell");
            model.parent().parent().find('.error-item').show();
        }
        else {
            model.parent().parent().find('.error-item').hide();
        }
        var errorListBox = $('#machine-add-error-list');
        if (errorList.length > 0) {
            errorListBox.show();
            errorListBox.html('');
            errorListBox.append(
                $('<li></li>').addClass('errors-list__header').append('Du måste ange')
                );
            $.each(errorList, function (i, error) {
                errorListBox.append(
                    $('<li></li>').append(error)
                    );
            });
            return false;
        }
        else {
            errorListBox.hide();
            return true;
        }
    }

    function hideLoader() {
        $('.loader-wrapper').hide();
        $('.loader-wrapper').parent().removeClass('disabled');
    }

    function showLoader() {
        $('.loader-wrapper').show();
        $('.loader-wrapper').parent().addClass('disabled');
    }

    var addBrandHandler = function () {
        $("#drop-machine-brand .dropdown li a").each(function (idx, item) {
            var $item = $(item);
            $item.click(function () {
                if ($item.parent().data('value') === 'Annan') {
                    $item.parents('.branch-block').find('input[type="text"]').show();
                    $item.parents('ul.lm__form-dropdown.branch-dropdown').hide();

                    var $modelDdContainer = $(modelDdContainerSelector);
                    $modelDdContainer.parents('.model-block').find('input[type="text"]').show();
                    $modelDdContainer.attr('data-value', 'Annan');
                    $modelDdContainer.find('>input[type="hidden"]').val('Annan');
                    $modelDdContainer.parents('ul.lm__form-dropdown.model-dropdown').hide();
                }
                else {
                    var brandId = $item.attr('data-value');
                    changeMachineModel(brandId);
                }
            });
        });
    };

    var addCategoryHandler = function () {
        $("#drop-machine-category .dropdown li a").each(function (idx, item) {
            var $item = $(item);
            $item.click(function () {
                var selectedKey = $item.parents(".showcase").data('value');
                if (selectedKey === "Other") {
                    // incase choosing other category, show textbox to input value
                    $item.parents('.category-block').find('input[type="text"]').show();
                    $item.parents('ul.lm__form-dropdown').hide();
                    $item.parents('.showcase').find("input[name=machineCategory").val("");
                }
            });
        });
    };

    var searchByRegNoHandler = function () {
        $('#machine-registration-button').click(function () {
            checkRegisterNumber();
        });
    };

    var submitAddingFormHandler = function () {
        $('#form-adding-machine').submit(function () {
            return validateFormAddMachine();
        });
    };

    var init = function () {
        addBrandHandler();
        addCategoryHandler();
        searchByRegNoHandler();
        submitAddingFormHandler();
    };
    return {
        Init: init
    };
})();

var MachineBookingService = MachineBookingService || (function () {

    var dataMachines = null;

    function setDataMachines(data) {
        dataMachines = data;
    }

    function setOnclickMachineList(obj, data) {
        $(obj).find('p > a').click(function (e) {
            if (data != null && data.length > 0) {
                var machineId = $(this).parent().find('input[type="hidden"]').val();
                fillDetailMachine(data, machineId);
            }
            e.preventDefault();
        });
    }

    function getMachinesByCategory() {
        var key = $('#book-service-category').attr('data-value');
        $.ajax({
            url: '/api/book-service/get-machine-by-category?categoryKey=' + key,
            type: "GET",
            dataType: "json",
            success: function (data) {
                $('#book-service-loading').hide();
                $.each(data, function (i, machines) {
                    if (machines.length > 6) {
                        $('#book-machine-list-2').show();
                        $('#book-machine-list-1').hide();
                        var dropdown = $('#book-machine-list-2 > .address-sections > select');
                        dropdown.html('');
                        $.each(machines, function (j, machine) {
                            dropdown.append(
                                $('<option></option>').attr('value', machine.id).append(machine.modelName)
                            );
                        });
                        setDataMachines(machines);
                    }
                    else if (machines.length > 0 && machines.length <= 6) {
                        $('#book-machine-list-2').hide();
                        $('#book-machine-list-1').show();
                        var listSelectMachine = $('#book-machine-list-1 > .address-sections');
                        listSelectMachine.html('');
                        listSelectMachine.append($('<h3></h3>').addClass('lm__bold-title').append('Mina maskiner'));
                        $.each(machines, function (j, machine) {
                            listSelectMachine.append($('<p></p>').append(
                                $('<a></a>').addClass('lm__link').attr('href', '#').append(machine.modelName),
                                $('<input></input>').attr('type', 'hidden').val(machine.id)
                                ));
                        });
                        setOnclickMachineList(listSelectMachine, machines);
                    }
                    else {
                        $('#book-machine-list-2').hide();
                        $('#book-machine-list-1').hide();
                    }
                });
            },
        });
    }

    function getMachineById(listMachine, machineId) {
        var result = null;
        $.each(listMachine, function (i, machine) {
            if (machine.id.toString() == machineId.toString()) {
                result = machine;
            }
        });
        return result;
    }

    function fillDetailMachine(listMachine, machineId) {
        var machine = getMachineById(listMachine, machineId);
        var blockDetailMachine = $('#book-service-detail-machine').parent();
        if (machine != null) {
            blockDetailMachine.show();
            $('#book-service-detail-machine').html('');
            $('#book-service-detail-machine').append(
                $('<h2></h2>').addClass('heading-title-2').append('Vald maskin')
                );
            $('#book-service-detail-machine').append(
                $('<h3></h3>').addClass('lm__bold-title').append(machine.modelName)
                );

            $('#book-service-detail-machine').append(
                $('<p></p>').append(
                    $('<span></span>').addClass('lm__bold-title').append('Serienr'),
                    machine.serialNumber
                    )
                );
            $('#book-service-detail-machine').append(
                $('<p></p>').append(
                    $('<span></span>').addClass('lm__bold-title').append('Regnr'),
                    machine.registerNumber
                    )
                );
            blockDetailMachine.find("p > input[name=BrandAndModel]").val(machine.modelName);
            blockDetailMachine.find("p > input[name=SerialNumber]").val(machine.serialNumber);
            blockDetailMachine.find("p > input[name=RegisterNumber]").val(machine.registerNumber);
        }
        else {
            blockDetailMachine.hide();
            blockDetailMachine.find("p > input[name=BrandAndModel]").val('');
            blockDetailMachine.find("p > input[name=SerialNumber]").val('');
            blockDetailMachine.find("p > input[name=RegisterNumber]").val('');
        }
    }

    function bookingServiceSendFaild() {
        var result = $('#booking-service-send-faild').val();
        if (result != "" && result != undefined) {
            alert(result);
        }
    }

    var addMaskinTypeHandler = function () {
        // for choose Maskin Type in Book Service
        $(".maskin-type .showcase .dropdown li a").click(function () {
            $('#book-service-detail-machine').parent().hide();
            $('#book-machine-list-1').hide();
            $('#book-machine-list-2').hide();
            $('#book-service-loading').show();
            getMachinesByCategory();
        });
    };

    var addAddressHandler = function () {
        $("#book-machine-list-2 > .address-sections > select").change(function () {
            if (dataMachines != null && dataMachines.length > 0) {
                fillDetailMachine(dataMachines, $(this).val());
            }
        });
    };

    var addBookServiceFailedHandler = function () {
        //alert booking service send faild
        return bookingServiceSendFaild();
    };

    var init = function () {
        addMaskinTypeHandler();
        addAddressHandler();
        addBookServiceFailedHandler();
    };

    return {
        Init: init
    };
})();

$(function () {

    var MyCompany = function () {

        var accordionLinks = $(".lm__accordion-wrapper .lm__accordion-link");
        var accordionContents = $(".lm__accordion-wrapper .lm__accordion-content");

        var addAccordionEvent = function () {
            accordionLinks.each(function () {
                $(this).click(function () {
                    if (!$(this).hasClass('active')) {
                        accordionContents.slideUp('fast', function () {
                            $(this).prev().removeClass("active");
                        });

                        $(this).next().slideDown('fast', function () {
                            $(this).prev().addClass("active");
                        });
                    } else {
                        $(this).next().slideUp('fast', function () {
                            $(this).prev().removeClass("active");
                        });
                    }
                });
            });
        };

        return {
            init: function () {
                addAccordionEvent();
                return false;
            }
        };
    };

    $(document).ready(function () {
        var myCom = new MyCompany();
        myCom.init();
    });

});
$(function () {

    var MyAccount = function () {

        var userTypeRadios = $(".choose-user-type .lm__radio input[name='user-type']");
        var subUserTypeMenu = $(".user-type__sub-types");
        var subType = $(".sub-type .lm__checkbox input[type='checkbox']");

        var showSubOptions = function (ele) {
            if (ele.is(":checked")) {
                var subUserType = ele.attr("id");

                subUserTypeMenu.hide();
                subUserTypeMenu.each(function () {
                    if ($(this).attr("data-parent") == subUserType) {
                        $(this).show();
                    }
                });
            }
        };

        var membershipChoosen = function () {

        };

        return {
            init: function () {
                return false;
            }
        };
    };

    $(document).ready(function () {
        var myAcc = new MyAccount();
        myAcc.init();
    });

});
$(function () {

    var customerIdPage = function () {
        var parentCheckbox = $(".customer-id-block .lm__block-box .parent-checkbox .lm__checkbox input");
        var childCheckboxes = parentCheckbox.parents(".lm__block-box").find(".sub-checkbox .lm__checkbox input");
        var tooltipLink = $(".link-to-open-popup");
        var tooltipMask = $(".lm__information-modal__wrapper .mask");

        var addCheckboxEvent = function () {
            if (parentCheckbox) {
                parentCheckbox.change(function () {
                    var _that = $(this);
                    var childCheckboxesWrapper = _that.parents(".lm__block-box").find(".sub-checkbox");
                    var childCheckboxes = childCheckboxesWrapper.find(".lm__radio input");

                    if (childCheckboxesWrapper && childCheckboxes) {
                        if (_that.is(":checked")) {
                            childCheckboxes.parent().removeClass('sub-hidden');
                            $(childCheckboxes[0]).prop('checked', true);
                        } else {
                            childCheckboxes.parent().addClass('sub-hidden');
                            childCheckboxes.prop('checked', false);
                        }
                    }

                    return false;
                });
            }
        };

        var tooltipEvent = function () {
            if (tooltipLink && tooltipMask) {
                tooltipLink.click(function (e) {
                    e.preventDefault();
                    var tooltipPanel = $(this).parent().next();
                    if (tooltipPanel) tooltipPanel.removeClass("hidden");
                    return false;
                });

                tooltipMask.click(function () {
                    $(this).parent().addClass("hidden");
                });
            }
        };

        return {
            init: function () {
                addCheckboxEvent();
                tooltipEvent();
                return false;
            }
        };
    };

    $(document).ready(function () {
        var customerId = new customerIdPage();
        customerId.init();
    });

});
$(function () {
    var TermOfUse = function () {
        function registerHandler() {
            if ($("#term-of-use-no").length === 0 && $("#term-of-use-yes").length === 0) {
                return;
            }

            $("#term-of-use-no").click(function () {
                var firstRefectDialog = $(".lm__main-content").find("#dialog-first-reject");
                firstRefectDialog.fadeIn();

                $(".back-to-term", firstRefectDialog).click(function () {
                    firstRefectDialog.fadeOut();
                });

                $(".reject", firstRefectDialog).click(function () {
                    var secondRejectDialog = $(".lm__main-content").find("#dialog-reconfirm-reject");
                    secondRejectDialog.fadeIn();
                    firstRefectDialog.fadeOut();

                    $(".back-to-term", secondRejectDialog).click(function () {
                        secondRejectDialog.fadeOut();
                    });

                    $(".reject", secondRejectDialog).click(function () {
                        secondRejectDialog.fadeOut();
                        $("#rejectForm").submit();
                    });
                });
            });
        }

        return {
            init: function () {
                registerHandler();
            }
        };
    };

    var termOfUse = new TermOfUse();
    termOfUse.init();
});
if (jQuery.validator) {

    function isValidate(selector) {
        var isValid = $(selector).val() !== "True";
        if (!isValid) {
            $(selector).val('False');
        }
        return isValid;
    }

    jQuery.validator.addMethod("CustomerNumberNotMatch", function (value, element, selector) {
        return isValidate(selector);
    }, "Kundnumret du har angett finns inte registrerat hos Lantmännen för det organisationsnummer du har angett.");
    jQuery.validator.addMethod("CustomerNumberNotExist", function (value, element, selector) {
        return isValidate(selector);
    }, 'Kundnumret finns inte registrerat hos Lantmännen.');
    jQuery.validator.addMethod("CustomerNumberActivated", function (value, element, selector) {
        return isValidate(selector);
    }, 'Kundnumret och organisationsnumret  du har angett är redan aktiverat för ett konto i LM2.');
    jQuery.validator.addMethod("OrganisationNumberNotMatch", function (value, element, selector) {
        return isValidate(selector);
    }, 'Organisationsnumret du har angett stämmer inte överens med kundnumret du har angett.');
    jQuery.validator.addMethod("OrganisationNumberActivated", function (value, element, selector) {
        return isValidate(selector);
    }, 'Organisationsnumret och kundnumret du har angett är redan aktiverat för ett konto i LM2.');
}

jQuery(function () {
    ActiveFarmdayCustomer.init();
    ActiveFarmdayCustomer.initEvent();
    ActiveFarmdayCustomer.initValidateTermOfUseForm();
});

var ActiveFarmdayCustomer = ActiveFarmdayCustomer || (function () {
    var init = function () {
        if ($().validate) {
            $('#verifyCustomer').validate({
                errorElementClass: 'error',
                errorClass: 'error-item',
                errorElement: 'span',
                rules: {
                    CustomerNumber: {
                        required: true,
                        CustomerNumberNotMatch: '#CustomerNumberNotMatch',
                        CustomerNumberNotExist: '#CustomerNumberNotExist',
                        CustomerNumberActivated: '#CustomerNumberActivated'
                    },
                    OrganisationNumber: {
                        required: true,
                        regex: /^\d{6}[-]{0,1}\d{4}$/,
                        OrganisationNumberNotMatch: '#OrganisationNumberNotMatch',
                        OrganisationNumberActivated: '#OrganisationNumberActivated'
                    }
                },
                messages: {
                    CustomerNumber: {
                        required: "Du måste ange Kundnumret"
                    },
                    OrganisationNumber: {
                        required: "Du måste ange Organisationsnumret",
                        regex: "Organisationsnumret du har angett är av fel typ."
                    }
                },
                highlight: function (element, errorClass, validClass) {
                    $('div.errors-list').hide();
                    $('ul.errors-list').show();
                    $('li#p_' + $(element).attr('id')).show();
                    $(element).addClass(this.settings.errorElementClass).removeClass(errorClass);
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).removeClass(this.settings.errorElementClass).removeClass(errorClass);
                    $('li#p_' + $(element).attr('id')).hide();
                    if ($('ul.errors-list').find('li[id^="p"]').is(":visible") === false) {
                        $('ul.errors-list').hide();
                    }
                },
                submitHandler: function (form) {
                    $('#loader').show();
                    $('#loader').parent().addClass('disabled');
                    form.submit();
                }
            });
        }

        if ($().validate) {
            var isInvalid = $('#CustomerNumberNotMatch').val() === "True" ||
                $('#CustomerNumberNotExist').val() === "True" ||
                $('#CustomerNumberActivated').val() === "True" ||
                $('#OrganisationNumberNotMatch').val() === "True" ||
                $('#OrganisationNumberActivated').val() === "True";
            if (isInvalid) {
                $("#verifyCustomer").valid();
            }
        }
    };

    var initEvent = function () {
        $('#expandTermOfUse').click(function () {
            $(this).toggleClass('expanded').next().toggle();
        });

        $(document).on('change', '#acceptTerm', function () {
            if ($(this).is(':checked')) {
                $('.success-icon').show().parent().next().html('Du har godkänt <a href="javascript:void(0)" class="lm__link">användningsvillkoren</a> för LM<sup>2</sup>.');
                $('#submitBtn').removeClass('disabled-btn');
                $('#expandTermOfUse').toggleClass('expanded').next().toggle();
            } else {
                $('.success-icon').hide().parent().next().html('Du måste läsa och godkänna <a href="javascript:void(0)" class="lm__link">användningsvillkoren</a> för att registrera ett LM<sup>2</sup>-konto');
                $('#submitBtn').addClass('disabled-btn');
            }
        });

        var termsState;
        var submitted;

        if ($(".js-page-identifier-actication-non-private").length) {

            termsState = "closed";
            submitted = false;

            $("#activation-form").validate({
                errorElement: 'div',
                errorClass: "error",
                rules: {
                    FirstName: "required",
                    LastName: "required",
                    Email: {
                        required: true,
                        regex: /^\b[A-Z0-9._%-]+@[A-Z0-9.-]+\.[A-Z]{2,4}\b$/i
                    },
                    Telephone: {
                        phoneSE: true
                    },
                    Mobilephone: {
                        required: true,
                        mobileSE: true
                    }
                },

                messages: {
                    FirstName: window["validationMessage"].firstName.required,
                    LastName: window["validationMessage"].lastName.required,
                    Telephone: {
                        phoneSE: window["validationMessage"].phoneSE.valid
                    },
                    Mobilephone: {
                        required: window["validationMessage"].mobileSE.required,
                        mobileSE: window["validationMessage"].mobileSE.valid
                    },
                    Email: {
                        required: window["validationMessage"].email.required,
                        email: window["validationMessage"].email.valid
                    }
                },

                showErrors: function (errorMap, errorList) {
                    if (submitted) {
                        console.log(errorMap);
                        console.log(errorList);
                        submitted = false;

                        ////set top error alert box
                        var errorListElement = $("#errors-list");
                        if (errorList.length > 0) {
                            errorListElement.css("display", "block");
                            $("#errors-list .error-list-item").each(function (idx, eli) {
                                var display = errorMap[$(eli).data("for")] ? "block" : "none";
                                $(eli).css("display", display);
                            });
                        }
                    }

                    this.defaultShowErrors();
                },
                invalidHandler: function (form, validator) {
                    submitted = true;
                }
            });

            var emailerror = '@(ViewData["emailError"])';
            if (emailerror) {
                $("#errors-list").css("display", "block");
                $("#jsEmailError").css("display", "block");
            }

            $("#accordion-control").click(function () {
                if (termsState === "closed") {
                    //open it
                    $("#accordion-content").removeClass("hidden");
                    $("#accordion-control").addClass("expanded");
                    termsState = "open";
                } else if (termsState === "open") {
                    $("#accordion-content").addClass("hidden");
                    $("#accordion-control").removeClass("expanded");
                    termsState = "closed";
                }
            });

            $("#termsCheckbox").change(function () {
                $(".success-icon").removeClass("hidden");
                $(".meddelanden-accordion").addClass("hidden");
                termsState = "agreed";
                $("input[type=submit]").removeClass("disabled-btn");
                $("#term-header-accepted").css("display", "block");
                $("#term-header").css("display", "none");
            });

            $("#cancel-button").click(function () {
                var cancelDialog = $("#cancel-dialog");
                cancelDialog.css("display", "block");
            });

            $("#cancel-accept").click(function () {
                var url = $(".js-page-identifier-actication-non-private").data("cancel-url");
                window.location.href = url;
            });
        }

        if ($(".js-page-identifier-actication-private").length) {

            termsState = "closed";
            submitted = false;

            $("#activation-form").validate({
                errorElement: 'div',
                errorClass: "error",
                rules: {
                    FirstName: "required",
                    LastName: "required",
                    Telephone: {
                        phoneSE: true
                    },
                    Mobilephone: {
                        required: true,
                        mobileSE: true
                    },
                    Email: {
                        required: true,
                        regex: /^\b[A-Z0-9._%-]+@[A-Z0-9.-]+\.[A-Z]{2,4}\b$/i
                    }
                },

                messages: {
                    FirstName: window["validationMessage"].firstName.required,
                    LastName: window["validationMessage"].lastName.required,
                    Telephone: {
                        phoneSE: window["validationMessage"].phoneSE.valid
                    },
                    Mobilephone: {
                        required: window["validationMessage"].mobileSE.required,
                        mobileSE: window["validationMessage"].mobileSE.valid
                    },
                    Email: {
                        required: window["validationMessage"].email.required,
                        email: window["validationMessage"].email.valid
                    },
                },

                invalidHandler: function (form, validator) {
                    submitted = true;
                },

                highlight: function (element, errorClass) {
                    $(element).addClass(errorClass);
                },

                showErrors: function (errorMap, errorList) {
                    if (submitted) {
                        console.log(errorMap);
                        console.log(errorList);
                        submitted = false;

                        ////set top error alert box
                        var errorListElement = $("#errors-list");
                        if (errorList.length > 0) {
                            errorListElement.css("display", "block");
                            $("#errors-list .error-list-item").each(function (idx, eli) {
                                var display = errorMap[$(eli).data("for")] ? "block" : "none";
                                $(eli).css("display", display);
                            });
                        }
                    }

                    this.defaultShowErrors();
                }
            });
            var emailerror = '@(ViewData["emailError"])';
            if (emailerror) {
                $("#errors-list").css("display", "block");
                $("#jsEmailError").css("display", "block");
            }

            $("#accordion-control").click(function () {
                if (termsState === "closed") {
                    //open it
                    $("#accordion-content").removeClass("hidden");
                    $("#accordion-control").addClass("expanded");
                    termsState = "open";
                } else if (termsState === "open") {
                    $("#accordion-content").addClass("hidden");
                    $("#accordion-control").removeClass("expanded");
                    termsState = "closed";
                }
            });

            $("#termsCheckbox").change(function () {
                $(".success-icon").removeClass("hidden");
                $(".meddelanden-accordion").addClass("hidden");
                termsState = "agreed";
                $("input[type=submit]").removeClass("disabled-btn");
                $("#term-header-accepted").css("display", "block");
                $("#term-header").css("display", "none");
            });

            $("#cancel-button").click(function () {
                var cancelDialog = $("#cancel-dialog");
                cancelDialog.css("display", "block");
            });

            $("#cancel-accept").click(function () {
                var url = $(".js-page-identifier-actication-non-private").data("cancel-url");
                window.location.href = url;
            });
        }

        var isDebug;

        if ($(".js-page-identifier-registration-non-private").length) {
            isDebug = $(".js-page-identifier-registration-non-private").data("debug");

            if (isDebug) {
                $.getScript("/Static/dist/scripts/nonPrivateFirmRegistration.js");
            } else {
                $.getScript("/Static/dist/scripts/nonPrivateFirmRegistration.production.js");
            }
        }

        if ($(".js-page-identifier-registration-private").length) {
            isDebug = $(".js-page-identifier-registration-private").data("debug");

            if (isDebug) {
                $.getScript("/Static/dist/scripts/privateFirmRegistration.js");
            } else {
                $.getScript("/Static/dist/scripts/privateFirmRegistration.production.js");
            }
        }
    };


    var initValidateTermOfUseForm = function () {
        if ($().validate) {
            $('#registerCustomer').validate({
                errorElementClass: 'error',
                errorClass: 'error-item',
                errorElement: 'span',
                rules: {
                    ContractApplication: {
                        required: true
                    },
                    CopyOfIDDocuments: {
                        required: true
                    },
                    RegistrationCertificate: {
                        required: true
                    },
                    FirstName: {
                        required: true
                    },
                    SurName: {
                        required: true
                    },
                    Telephone: {
                        regex: /^\+?(\d[\d-. ]+)?(\([\d-. ]+\))?[\d-. ]+\d$/
                    },
                    Mobile: {
                        required: true,
                        regex: /^\+?(\d[\d-. ]+)?(\([\d-. ]+\))?[\d-. ]+\d$/
                    },
                    PersonNumber: {
                        required: true,
                        regex: /^[0-9]{12}$/
                    }
                },
                messages: {
                    ContractApplication: {
                        required: "Du måste bifoga ansökan om avtal för e-tjänster"
                    },
                    CopyOfIDDocuments: {
                        required: "Du måste bifoga Kopia på ID-handlingar"
                    },
                    RegistrationCertificate: {
                        required: "Du måste bifoga Registreringsbevis för ditt företag"
                    },
                    FirstName: {
                        required: "Förnamn är obligatorisk"
                    },
                    SurName: {
                        required: "Efternamn är obligatoriskt"
                    },
                    Telephone: {
                        regex: "Ange en giltig telefonnummer"
                    },
                    Mobile: {
                        required: "Mobilnr är obligatoriskt",
                        regex: "Ange ett giltigt mobilnummer"
                    },
                    PersonNumber: {
                        required: "Personnr är obligatoriskt",
                        regex: "Personnr måste bestå av 12 siffror"
                    }
                },
                highlight: function (element, errorClass, validClass) {
                    $('div.errors-list').hide();
                    $('ul.errors-list').show();
                    $('li#p_' + $(element).attr('id')).show();
                    var typeElement = $(element).attr('type');
                    if (typeElement === 'file') {
                        $(element).parent().addClass(this.settings.errorElementClass).removeClass(errorClass);
                    } else {
                        $(element).addClass(this.settings.errorElementClass).removeClass(errorClass);
                    }

                },
                unhighlight: function (element, errorClass, validClass) {
                    var typeElement = $(element).attr('type');
                    if (typeElement === 'file') {
                        $(element).parent().removeClass(this.settings.errorElementClass).removeClass(errorClass);
                    } else {
                        $(element).removeClass(this.settings.errorElementClass).removeClass(errorClass);
                    }

                    $('li#p_' + $(element).attr('id')).hide();
                    if ($('ul.errors-list').find('li[id^="p"]').is(":visible") === false) {
                        $('ul.errors-list').hide();
                    }
                },
                errorPlacement: function (error, element) {
                    var typeElement = element.attr('type');
                    if (typeElement === 'file') {
                        element.parent().after(error);
                    } else {
                        element.after(error);
                    }

                }
            });
        }
    };

    return {
        init: init,
        initEvent: initEvent,
        initValidateTermOfUseForm: initValidateTermOfUseForm
    };
})();

if (jQuery.validator) {
    if (jQuery.validator.regex == undefined) {
        jQuery.validator.addMethod("regex", function (value, element, regexpr) {
            return this.optional(element) || regexpr.test(value);
        }, 'Please enter a valid value.');
    }
}

var ContactForm = ContactForm || function () {
    var formValidator;

    function addValidation() {
        if ($('#ContactForm').length === 0) {
            return;
        }
        $(document).ready(function () {
            var rules = {
                subject: "required",
                message: "required"
            };

            var messages = {
                subject: "Du måste ange Ämne",
                message: "Du måste ange Meddelande"
            };
            if ($('#loginFlag').val().toString().toLowerCase !== "true") {
                rules.name = "required";
                rules.email = {
                    required: true,
                    email: true
                };
                rules.customerNumber = {
                    required: true,
                    regex: /^(\d+)/
                };

                messages.name = "Du måste ange Ditt namn";
                messages.email = {
                    required: "Du måste ange E-post",
                    email: "Ange en giltig e-postadress"
                };
                messages.customerNumber = {
                    required: "Du måste ange Kundnummer",
                    regex: "Ange en giltig Kundnummer"
                };
            }
            if ($().validate) {
                formValidator = $('#ContactForm').validate({
                    ignore: [],
                    errorElementClass: 'error',
                    errorClass: 'error-item',
                    errorElement: 'span',
                    rules: rules,
                    messages: messages,
                    highlight: function (element, errorClass, validClass) {
                        //console.log("jquery validation");
                        $('ul.errors-list').show();
                        $('li#li_' + $(element).attr('id')).show();
                        $(element).addClass(this.settings.errorElementClass).removeClass(errorClass);
                    },
                    unhighlight: function (element, errorClass, validClass) {
                        $(element).removeClass(this.settings.errorElementClass).removeClass(errorClass);
                        $('li#li_' + $(element).attr('id')).hide();
                        if ($('ul.errors-list').find('li[id^="li"]').is(":visible") === false) {
                            $('ul.errors-list').hide();
                        }
                    }
                });

                $("input[type=reset]").click(function () {
                    if (formValidator) {
                        formValidator.resetForm();

                        // hide all errors
                        $('ul.errors-list').hide();
                        $('.error').each(function () {
                            $(this).removeClass('error');
                        });
                    }
                });
            }
        });
    }


    function init() {
        addValidation();
    }
    return {
        init: init
    };

}();

$(function () {
    ContactForm.init();
});

$(function () {

    var UpcomingDelivery = function () {
        var carousel = $(".lm__carousel-block");
        //var carouselItem = carousel.find(".lm__carousel__content .lm__carousel__item .lm__blue-btn");
        var carouselItem = carousel.find(".lm__carousel__item a").not(".callendar");
        var $itemPopup = $("#upcoming-detail");
        var agreementSidebar = $(".lm__block.agreement");

        var showInformation = function () {
            carouselItem.on('click', function (e) {
                e.preventDefault();
                var $this = $(this);

                var deliveryObj = getDeliveryInfor($this);

                $.ajax({
                    type: "post",
                    data: deliveryObj,
                    dataType: "html",
                    url: "/api/upcomming-deliveries/get-detail",
                    success: function (data) {
                        $itemPopup.html(data);
                        $itemPopup = $("#upcoming-detail");
                        $itemPopup.fadeIn();
                    }
                });

                return false;
            });
        };

        function getDeliveryInfor($carouselItem) {
            //var $inforElement = $carouselItem.parent().parents();
            var $inforElement = $carouselItem.parent();
            var isDeliveryFromCustomer = $carouselItem.closest("section").attr("data-isFromCustomer");
            return {
                orderNo: $inforElement.attr("data-orderNo"),
                orderLine: $inforElement.attr("data-orderLine"),
                itemName: $inforElement.attr("data-itemName"),
                orderQuantity: $inforElement.attr("data-orderQuantity"),
                warehouse: $inforElement.attr("data-warehouse"),
                container: $inforElement.attr("data-container"),
                planedDeliveryDate: $inforElement.attr("data-planedDate"),
                isFromCustomer: isDeliveryFromCustomer
            };
        }

        // sidebars
        var toggleSidebar = function () {
            if (agreementSidebar.length) agreementSidebar.each(function () {
                var items = $(this).find(".lm__news-item");
                items.each(function () {
                    var $that = $(this);
                    var toggleLink = $that.find(">a");

                    if ($that.hasClass('open')) {
                        $that.find('.detail-information').slideDown('fast');
                    }


                    toggleLink.on('click', function () {
                        var $this = $(this);
                        var parentItem = $this.parent();
                        var isOpen = parentItem.hasClass('open');
                        var detailInformation = $this.next();

                        items.removeClass('open').find('.detail-information').slideUp('fast');
                        if (isOpen) {
                            parentItem.removeClass('open');
                            detailInformation.slideUp('fast');
                        } else {
                            parentItem.addClass('open');
                            detailInformation.slideDown('fast');
                        }
                        return false;
                    });
                });
            });
        };

        return {
            showInformation: function () {
                showInformation();
            },
            toggleSidebar: function () {
                toggleSidebar();
            }
        };
    };

    // stick carousel
    if ($.fn.slick) {
        $('.lm__carousel-block .lm__carousel__content').slick({
            dots: true,
            infinite: false,
            speed: 300,
            slidesToShow: 3,
            slidesToScroll: 3,
            responsive: [
            //{
            //    breakpoint: 1366,
            //    settings: {
            //        slidesToShow: 3,
            //        slidesToScroll: 3
            //    }
            //},
            {
                breakpoint: 1100,
                settings: {
                    slidesToShow: 1,
                    slidesToScroll: 1,
                    variableWidth: true,
                    centerMode: true,
                    centerPadding: '40px',
                    infinite: true
                }
            },
            {
                breakpoint: 640,
                settings: {
                    slidesToShow: 1,
                    slidesToScroll: 1,
                    dots: false,
                    arrows: false,
                    variableWidth: true,
                    centerMode: true,
                    centerPadding: '40px',
                    //infinite: true
                }
            }
            ]
        });
    }

    // init event for item in upcoming delivery
    var upcomingDelivery = new UpcomingDelivery();
    upcomingDelivery.showInformation();
    upcomingDelivery.toggleSidebar();
});
$(function () {
    if ($.fn.datepicker) {
        $(".datepicker-blank-default").datepicker({
            onSelect: function (newText) {
                if ($(this).is("#selectedDate")) {
                    if ($(this).data("previous") !== newText) {
                        var timeBooking = new TimeBookingPage();
                        timeBooking.searchItems("", $("#resourceDrp").attr("data-value"));
                        timeBooking.searchAvalibleSlotAction();
                    }

                }
                var error = $("#error-fromDate");
                if ($(this).is("#fromDateTxt")) {
                    var toDateValue = $("#toDateTxt").val();
                    if (validateDateValue(newText, toDateValue) === 1) {
                        error.show();
                    } else if (validateDateValue(newText, toDateValue) === -1) {
                        $("#toDateTxt").val(newText);
                        error.hide();
                    } else {
                        error.hide();
                    }
                }
                if ($(this).is("#toDateTxt")) {
                    var fromDateValue = $("#fromDateTxt").val();
                    if (validateDateValue(fromDateValue, newText) === 1) {
                        error.show();
                    } else {
                        error.hide();
                    }
                }
            },
            monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "Maj", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dec"],
            dayNamesMin: ["Sö", "Må", "Ti", "On", "To", "Fr", "Lö"],
            firstDay: 1,
            dateFormat: "yy-mm-dd",
            beforeShow: function () {
                setTimeout(function () {
                    $('.ui-datepicker').css('z-index', 5);
                }, 0);
                if ($(this).is("#toDateTxt")) {
                    var fromDateValue = $("#fromDateTxt").val();
                    var toDateValue = $("#toDateTxt").val();
                    $(this).datepicker('option', 'minDate', new Date(fromDateValue));
                    $("#toDateTxt").val(toDateValue);
                }
                if ($(this).is("#selectedDate")) {
                    $(this).datepicker('option', 'minDate', new Date());
                }
            }
        }).on("change", function () {
            var $this = $(this);
            var validDate = !/Invalid|NaN/.test(new Date($this.val()).toString());
            var validDateRegex = /^\d\d\d\d-(0?[1-9]|1[0-2])-(0?[1-9]|[12][0-9]|3[01])$/ig.test($this.val());

            if (!validDateRegex || !validDate) {
                //$this.addClass("error").next().show();
                $this.next().show();
            } else {
                //$this.removeClass("error").next().hide();
                $this.next().hide();
            }
        });

        $(".datepicker-blank-dialog").datepicker({
            onSelect: function (newText) {
                if ($(this).is("#selectedDate")) {
                    if ($(this).data("previous") !== newText) {
                        var timeBooking = new TimeBookingPage();
                        timeBooking.searchItems("", $("#resourceDrp").attr("data-value"));
                        timeBooking.searchAvalibleSlotAction();
                    }

                }
                var error = $("#error-fromDate");
                if ($(this).is("#fromDateTxt")) {
                    var toDateValue = $("#toDateTxt").val();
                    if (validateDateValue(newText, toDateValue) === 1) {
                        error.show();
                    } else if (validateDateValue(newText, toDateValue) === -1) {
                        $("#toDateTxt").val(newText);
                        error.hide();
                    } else {
                        error.hide();
                    }
                }
                if ($(this).is("#toDateTxt")) {
                    var fromDateValue = $("#fromDateTxt").val();
                    if (validateDateValue(fromDateValue, newText) === 1) {
                        error.show();
                    } else {
                        error.hide();
                    }
                }
            },
            monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "Maj", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dec"],
            dayNamesMin: ["Sö", "Må", "Ti", "On", "To", "Fr", "Lö"],
            firstDay: 1,
            dateFormat: "yy-mm-dd",
            beforeShow: function () {
                setTimeout(function () {
                    //$('.ui-datepicker').css('z-index', 9);
                }, 0);
                if ($(this).is("#toDateTxt")) {
                    var fromDateValue = $("#fromDateTxt").val();
                    var toDateValue = $("#toDateTxt").val();
                    $(this).datepicker('option', 'minDate', new Date(fromDateValue));
                    $("#toDateTxt").val(toDateValue);
                }
                if ($(this).is("#selectedDate")) {
                    $(this).datepicker('option', 'minDate', new Date());
                }
            }
        }).on("change", function () {
            var $this = $(this);
            var validDate = !/Invalid|NaN/.test(new Date($this.val()).toString());
            var validDateRegex = /^\d\d\d\d-(0?[1-9]|1[0-2])-(0?[1-9]|[12][0-9]|3[01])$/ig.test($this.val());

            if (!validDateRegex || !validDate) {
                //$this.addClass("error").next().show();
                $this.next().show();
            } else {
                //$this.removeClass("error").next().hide();
                $this.next().hide();
            }
        });
    }

    $(".expand-info").click(function () {
        var currentRow = $($(this).parent().parent());
        var hiddenRow = currentRow.next();
        hiddenRow.slideToggle(100);
        if ($(this).hasClass("expand-icon-plus")) {
            $(this).removeClass("expand-icon-plus");
            $(this).addClass("expand-icon-minus");
        }
        else {
            $(this).removeClass("expand-icon-minus");
            $(this).addClass("expand-icon-plus");
        }
    });

    TransportTypeChangeEvent();

    $(".showDialog").click(function (e) {
        getAnnoncements($(this));
        e.preventDefault();
    });

    $(".table-transport > tbody > tr > td > a").click(function (e) {
        submitForm($(this).html(), $(this).attr('data-value'));
        e.preventDefault();
    });

    $(".search-customerNr").click(function (e) {
        submitForm($(this).attr('data-customerNr'), $(this).attr('data-value'));
        e.preventDefault();
    });

    $(document).on("click", ".datepicker-container", function () {
        console.dir("parent clicked");
        $(this).find("input").focus();
    });
});

var validateDateValue = function (fromData, toDate) {
    var myFromDate = new Date(fromData);
    var myToDate = new Date(toDate);
    var timeOfSevenDay = (24 * 60 * 60 * 1000) * 7;
    if (myToDate.getTime() - myFromDate.getTime() > timeOfSevenDay) {
        return 1;
    }
    else if (myToDate.getTime() - myFromDate.getTime() < 0) {
        return -1;
    }
    return 0;
};

var setToDateByFromDate = function (fromDateValue, toDateValue) {
    var myFromDate = new Date(fromDateValue);
    var myToDate = new Date(toDateValue);
    if (myFromDate.getTime() > myToDate.getTime()) {
        return;
    }
};
function submitForm(search, category) {
    var searchVal = search;
    var catVal = category;
    $("input[name= 'SearchText']").val(searchVal);
    $("#search-transport-type > ul > li").each(function () {
        if ($(this).attr("data-value") === catVal) {
            $("input[name= 'Category']").val(catVal);
        }
    });
    $("#form-search-transport").submit();
}

function getAnnoncements(row) {
    var orderRowId = $(row).parents(".lm__collapse-row").prev().find("td > a").html();
    var annoncementTable = $(".tblAnnoncements tbody");
    var modal = $(".lm__information-modal__wrapper");

    $.ajax({
        type: "POST",
        url: "/api/search-transport/get-annoncements",
        contentType: "application/json; charset=utf-8",
        data: "{'orderRowId':'" + orderRowId + "'}",

        success: function (data) {
            annoncementTable.html("");
            if (data.trim()) {
                annoncementTable.html(data);
                $(".tblAnnoncements thead").show();
            } else {
                annoncementTable.html("<p>Aviseringsinformation saknas</p>");
                $(".tblAnnoncements thead").hide();
            }
            modal.removeClass("hidden");
        },
        error: function () {
            annoncementTable.html("");
            modal.removeClass("hidden");
        }
    });
}

var TransportTypeChangeEvent = function () {
    $("#search-transport-type > ul > li > a").click(function () {
        var dataValueType = $(this).parent().attr("data-value");
        var placeholderData = "Ange " + dataValueType.toLowerCase();
        $("input[name='Category']").val(dataValueType);
        $("input[name= 'SearchText']").attr('placeholder', placeholderData);
        var inputFromDate = $("input[name= 'FromDate']");
        var inputToDate = $("input[name= 'ToDate']");
        if (dataValueType === "Kundnummer" || dataValueType === "Lastbil") {
            inputFromDate.prop("disabled", false);
            inputToDate.prop("disabled", false);
            if (inputFromDate.parent().hasClass("disabled")) {
                inputFromDate.parent().removeClass("disabled");
            }
            if (inputToDate.parent().hasClass("disabled")) {
                inputToDate.parent().removeClass("disabled");
            }
        } else {
            inputFromDate.prop("disabled", true);
            inputToDate.prop("disabled", true);
            inputFromDate.val("");
            inputToDate.val("");
            inputFromDate.parent().addClass("disabled");
            inputToDate.parent().addClass("disabled");

        }
    });
};

window.validation = {
    phoneSE: function (phoneNumber) {
        phoneNumber = phoneNumber.replace(/\s+/g, "");
        return phoneNumber.match(/^(\+46)\d{6,}$/);
    },

    mobileSE: function (phoneNumber) {
        phoneNumber = phoneNumber.replace(/\s+/g, "");
        return phoneNumber.match(/^(\+46)\d{9}$/);
    },

    zipCode: function (zipCode) {
        zipCode = zipCode.replace(/\s+/g, "");
        return zipCode.match(/^(\d{5}$)/);
    },

    personNumber: function (personNumber) {
        personNumber = personNumber.replace(/\s+/g, "");
        return personNumber.match(/^\d{12}$/);
    },
    swedishDate: function (swedishDate) {
        var swedishDateRegex = /^(\d{4})(\/|-)(\d{1,2})(\/|-)(\d{1,2})$/;
        return swedishDate.match(swedishDateRegex) && ((new Date(swedishDate)) != "Invalid Date");
    }
};

window.validationMessage = {
    firstName: {
        required: "Du måste ange Förnamn"
    },
    lastName: {
        required: "Du måste ange Efternamn"
    },
    phoneSE: {
        valid: "Ange Telefonnr enligt formatet +46812345"
    },
    mobileSE: {
        required: "Du måste ange Mobilnr",
        valid: "Ange Mobilnr enligt formatet +46701234567"
    },
    zipCode: {
        required: "Postnumret ska bestå av 5 siffror",
        valid: "Postnumret ska bestå av 5 siffror"
    },
    email: {
        required: "Du måste ange E-post",
        valid: "Ange en giltig e-postadress"
    },
    personNumber: {
        valid: "Personnumret ska bestå av 12 siffror"
    },
    swedishDate: {
        required: "Du måste ange ett giltigt datum",
        valid: "Du måste ange ett giltigt datum"
    }
};

$(function () {
    if (!jQuery.validator) {
        return;
    }

    $.validator.addMethod("phoneSE",
        function (phoneNumber, element) {
            return this.optional(element) || window.validation.phoneSE(phoneNumber);
        },
        window.validationMessage.phoneSE.valid);

    $.validator.addMethod("mobileSE",
        function (phoneNumber, element) {
            return window.validation.mobileSE(phoneNumber);
        },
        window.validationMessage.mobileSE.valid);

    $.validator.addMethod("zipCode",
        function (zipCode, element) {
            return this.optional(element) || window.validation.zipCode(zipCode);
        },
        window.validationMessage.zipCode.valid);

    $.validator.addMethod("personNumber",
        function (pn, element) {
            return this.optional(element) || window.validation.personNumber(pn);
        },
        window.validationMessage.personNumber.valid);

    $.validator.addMethod("swedishDate",
       function (pn, element) {
           return window.validation.swedishDate(pn);
       },
       window.validationMessage.swedishDate.valid);
});

jQuery(function () {
    DeliveryAssuranceModule.init();
});

var DeliveryAssuranceModule = DeliveryAssuranceModule || (function () {
    var reqDate, startDate, endDate, harvestPeriodStart, harvestPeriodEnd, existDepaAvtal;
    var agreementTypeIsConfirmed = false;
    var isInternal = 0;
    var enabledWarehouse = 0;
    var popupType = GroCommon.modalInfoClass;
    var firstTimeOpen = true;

    var getCalculateObject = function () {
        return {
            supplier: $('#dialog_CustomerNumber').val(),
            lorryType: $('#dialog_LorryType').val(),
            deliveryAddressId: $('#dialog_DeliveryAddress').val(),
            quantity: $('#dialog_Quantity').val(),
            deliveryDate: $('#dialog_DeliveryDate').val(),
            itemId: $('#dialog_Article').val(),
            isInternal: $('#IsInternal').val()
        };
    };

    var setSelectedForCustomSelectBox = function (targeSelector, sourceSelector) {
        var selectedValue = $(sourceSelector).val();
        $(targeSelector).prev().find('li').each(function (index, item) {
            var matchValue = $(item).attr('data-value');
            if (matchValue === selectedValue) {
                $(item).find('a').trigger('click');
            }
        });
    };

    var fillCalculateForm = function () {
        $('#dialog_Quantity').val($('#Quantity').val());
        $('#dialog_DeliveryDate').val($('#DeliveryDate').val());
        setSelectedForCustomSelectBox('#dialog_LorryType', '#LorryType');
        setSelectedForCustomSelectBox('#dialog_DeliveryAddress', '#DeliveryAddress');
        setSelectedForCustomSelectBox('#dialog_Article', '#Article');
    };

    var confirmDialog = function (yesCallback, noCallback) {
        $('#confirmDelete').removeClass('hidden');
        $('#btnYes').unbind().click(function () {
            $('#confirmDelete').addClass('hidden');
            yesCallback();
        });
        $('#btnNo').unbind().click(function () {
            $('#confirmDelete').addClass('hidden');
            noCallback();
        });
    };

    var showInformationDialog = function (title, message, popupType) {
        var $dialog = $("#informationDialog");
        if (popupType) {
            $dialog.find('span.popup-type').addClass(GroCommon.getModalIconClass(popupType));
        }
        $dialog.find('#dialogTitle').html(title);
        $dialog.find('#dialogContent').html(message);
        $dialog.removeClass('hidden');
    };

    var showChangeNotAvailableDiglog = function () {
        $('#changeNotAvailable').removeClass('hidden');
    };

    var deleteDeliveryAssurance = function (self, totalSelector, ioNumber, lineNumber) {
        confirmDialog(function () {
            var loader = $(self).parents('.deliveryTableContainer').addClass('disabled').find('.loader-wrapper');
            loader.show();
            $.ajax({
                dataType: "json",
                type: 'post',
                url: '/api/delivery-assurance/delete',
                data: { ioNumber: ioNumber, lineNumber: lineNumber },
                cache: false,
                success: function (data) {
                    if (data.success) {
                        var total = parseInt($(totalSelector).val());
                        if (!isNaN(total) && total >= 1) {
                            total = total - 1;
                            $(totalSelector).val(total);
                        }
                        $(self).parents('tr').remove();
                    } else {
                        showInformationDialog('', data.message, popupType.error);
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    showInformationDialog('', errorThrown.toString(), popupType.error);
                },
                complete: function (jqXHR) {
                    loader.hide().parents('.deliveryTableContainer').removeClass('disabled');
                }
            });
        }, function () {

        });
    };

    var printMultiLines = function (cbxClassName) {
        var ioNumbers = "";
        var lineNumbers = "";
        var rowSelected = 0;

        $('.' + cbxClassName).each(function () {
            if ($(this).is(':checked')) {
                rowSelected++;
                // Get the value. Value contains of string with this format "IOnumber;lineNumber".
                var cbxValue = $(this).val();

                if (cbxValue) {
                    var valSplit = cbxValue.split(';');
                    if (valSplit != null) {

                        ioNumbers += valSplit[0] + "|";
                        lineNumbers += valSplit[1] + "|";
                    }
                }
            }
        });

        if (rowSelected === 0) {
            alert("Du måste först välja rader");
            return;
        }
        // Remove the last pipe line |
        if (ioNumbers !== "")
            ioNumbers = ioNumbers.slice(0, -1);

        if (lineNumbers !== "")
            lineNumbers = lineNumbers.slice(0, -1);

        // Create link to pdfHandler.
        var hrefLink = "/api/pdfhandler/generatemultipdf?a={ioNumber}&l={lineNumber}&resync=true";

        hrefLink = hrefLink.replace("{ioNumber}", ioNumbers); //ex: ioNumbers = "4022316|4023510"
        hrefLink = hrefLink.replace("{lineNumber}", lineNumbers); // ex: lineNumber =  "3|5"

        // Invoke now pdfHandler to create the pdf file.
        window.open(hrefLink, '_blank');
    };

    var getWarehouseList = function (deliveryDateSelector, article) {
        $.ajax({
            dataType: "json",
            type: 'post',
            url: '/api/delivery-assurance/get-warehouse',
            data: { action: $('#Action').val(), customerNumber: $('#dialog_CustomerNumber').val(), itemName: article, deliveryDateStr: $(deliveryDateSelector).val(), isInternal: isInternal },
            cache: false,
            success: function (data) {
                agreementTypeIsConfirmed = false;
                if (data.warehouses) {
                    $('.warehouseDropdown').html('');
                    $.each(data.warehouses, function (index, item) {
                        $('.warehouseDropdown')
                            .append('<li data-value="' + item.Key + '"><a href="javascript:void(0)">' + item.Value + '</a></li>');
                    });

                    setDropdown($('.warehouseDropdown').parents('ul.lm__form-dropdown'), 'type-3');

                    $('#warehouseList').find(".showcase .dropdown li a").click(function () {
                        var inputElement = $(this).parents(".showcase").find("input.form-element");
                        var inputSelector = inputElement.attr('id');
                        $("#deliveryAssuranceForm").validate().element('#' + inputSelector);
                    });
                }
                $('.depaAvtalsDropDown').html('');
                if (data.depaAvtals && data.depaAvtals.length > 1) {
                    $('input[name="DeliveryType"]:radio').each(function (index, item) {
                        var value = $(item).val();
                        if (value === "Depa") {
                            $(item).prop('disabled', false);
                        }
                    });
                    existDepaAvtal = 1;

                    $.each(data.depaAvtals, function (index, item) {
                        $('.depaAvtalsDropDown')
                            .append('<li data-value="' + item.Key + '"><a href="javascript:void(0)">' + item.Value + '</a></li>');
                    });

                    setDropdown($('.depaAvtalsDropDown').parents('ul.lm__form-dropdown'), 'type-3');

                    $('#depaAvtal').find(".showcase .dropdown li a").click(function () {
                        var inputElement = $(this).parents(".showcase").find("input.form-element");
                        var inputSelector = inputElement.attr('id');
                        $("#deliveryAssuranceForm").validate().element('#' + inputSelector);
                    });
                }
                else {
                    $('input[name="DeliveryType"]:radio').each(function (index, item) {
                        var value = $(item).val();
                        if (value === "Depa" && $("#Article").val() != "") {
                            $(item).prop('disabled', true);
                            $('#depaAvtal').addClass('hidden');
                        }
                    });
                    existDepaAvtal = 0;
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                if (errorThrown.message && errorThrown.message === "Unexpected token < in JSON at position 0") {
                    window.location.href = "/";
                }
                else {
                    showInformationDialog('', errorThrown.toString(), popupType.error);
                }
            },
            complete: function (jqXHR) {
            }
        });
    };

    var validateDeliveryAssurance = function () {
        if ($().validate && $("#deliveryAssuranceForm").length) {
            $("#deliveryAssuranceForm").validate({
                ignore: [],
                errorElementClass: 'error',
                errorClass: 'error-item',
                errorElement: 'span',
                rules: {
                    Quantity: {
                        required: true,
                        max: 39,
                        min: 1
                    },
                    Torkat: {
                        required: true
                    },
                    Red: {
                        required: true
                    },
                    Straforkortat: {
                        required: true
                    },
                    Glyfosat: {
                        required: true
                    },
                    Slam: {
                        required: true
                    },
                    HarvestYear: {
                        required: true
                    },
                    DeliveryType: {
                        required: true
                    },
                    DeliveryAddress: {
                        required: true
                    },
                    Transportation: {
                        required: true
                    },
                    DeliveryDate: {
                        required: true,
                        date: true
                    },
                    DepaAvtal: {
                        required: function (element) {
                            return $('input[name="DeliveryType"]:checked').val() === "Depa";
                        }
                    },
                    Article: {
                        required: true
                    },
                    Warehouse: {
                        required: function (element) {
                            return enabledWarehouse == "1" && !$('#warehouseList').hasClass('hidden') && !$('#Transportation_Farm').is(':checked');
                        }
                    },
                    LorryType: {
                        required: function (element) {
                            return $('#Transportation_Farm:checked').length === 1;
                        }
                    }
                },
                messages: {
                    Quantity: {
                        required: "Du måste ange Kvantitet (ton)",
                        max: "Vänligen ange ett värde mellan 1 och 39",
                        min: "Vänligen ange ett värde mellan 1 och 39"
                    },
                    Torkat: {
                        required: "Du måste ange Varmluftstorkat"
                    },
                    Red: {
                        required: "Du måste ange RED"
                    },
                    Straforkortat: {
                        required: "Du måste ange Stråförkortning"
                    },
                    Glyfosat: {
                        required: "Du måste ange Glyfosat"
                    },
                    Slam: {
                        required: "Du måste ange Slammat"
                    },
                    HarvestYear: {
                        required: "Du måste ange Skördeår"
                    },
                    DeliveryType: {
                        required: "Du måste ange Överleverans"
                    },
                    DeliveryAddress: {
                        required: "Du måste ange Leveransadress"
                    },
                    DeliveryDate: {
                        required: "Du måste ange Leveransdatum",
                        date: "Var vänlig ange ett giltigt datum"
                    },
                    DepaAvtal: {
                        required: "Inget depåavtal valt. Om vald leveranstyp är Depåavtal behöver ett depåavtal också väljas från listan."
                    },
                    Article: {
                        required: "Du måste ange Artikel"
                    },
                    Transportation: {
                        required: "Du måste ange Transportsätt"
                    },
                    Warehouse: {
                        required: "Du måste ange Mottagningsplats"
                    },
                    LorryType: {
                        required: "Du måste ange Leveranssätt"
                    }
                },
                highlight: function (element, errorClass, validClass) {
                    $('li#p_' + $(element).attr('name')).show();
                    var errors = $('ul.errors-list li').filter(function () { return $(this).css('display') === 'list-item'; }).length;
                    if (errors >= 3) {
                        $('ul.errors-list').show();
                    }
                    $(element).addClass(this.settings.errorElementClass).removeClass(errorClass);
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).removeClass(this.settings.errorElementClass).removeClass(errorClass);
                    $('li#p_' + $(element).attr('name')).hide();
                    var errors = $('ul.errors-list li').filter(function () { return $(this).css('display') === 'list-item'; }).length;
                    if ($('ul.errors-list').find('li[id^="p"]').is(":visible") === false || errors < 3) {
                        $('ul.errors-list').hide();
                    }
                },
                errorPlacement: function (error, element) {
                    var typeElement = $(element).attr('type');
                    if (typeElement === 'radio') {
                        element.parent('div.lm__radio').parent().before(error);
                    } else {
                        element.after(error);
                    }
                },
                submitHandler: function (form) {
                    $('#loader').show();
                    $('#loader').parent().addClass('disabled');

                    sponIsSelected = $('input[name="DeliveryType"][value="Spon"]:radio:checked').size() == 1 ? true : false;
                    var ignoreDepaAvtal = (existDepaAvtal === 1  && sponIsSelected);
                    var confirmationIsRequired = (ignoreDepaAvtal && !agreementTypeIsConfirmed);
                    if (confirmationIsRequired) {
                        $("#confirmDuplicateAgreementBtn").one("click", function (event) {
                            $("#confirmDuplicationModal").addClass("hidden");
                            agreementTypeIsConfirmed = true;
                        });
                        $("#confirmDuplicationModal").removeClass("hidden");
                    }
                    else {
                        form.submit();
                    }
                }
            });
        }

        if ($().validate && $("#deliveryAssuranceFormStep2").length) {
            $("#deliveryAssuranceFormStep2").validate({
                ignore: [],
                errorElementClass: 'error',
                errorClass: 'error-item',
                errorElement: 'span',
                rules: {
                    noOfNew: {
                        required: function (element) {
                            return $('input[name="createNew"]:checked').val() === "1";
                        },
                        digits: true
                    }
                },
                messages: {
                    noOfNew: {
                        required: "Du måste ange en siffra",
                        digits: "Ange endast siffror"
                    }
                },
                highlight: function (element, errorClass, validClass) {
                    $(element).addClass(this.settings.errorElementClass).removeClass(errorClass);
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).removeClass(this.settings.errorElementClass).removeClass(errorClass);
                }
            });
        }

        if ($().validate && $("#calculateFormDialog").length) {
            $("#calculateFormDialog").validate({
                ignore: [],
                errorElementClass: 'error',
                errorClass: 'error-item',
                errorElement: 'span',
                rules: {
                    dialog_LorryType: "required",
                    dialog_DeliveryAddress: {
                        required: true
                    },
                    dialog_Quantity: {
                        required: true,
                        number: true,
                        min: 1
                    },
                    dialog_DeliveryDate: {
                        required: true,
                        swedishDate: true
                    },
                    dialog_Article: {
                        required: true
                    }
                },
                messages: {
                    dialog_LorryType: {
                        required: "Du måste välja leveranssätt"
                    },
                    dialog_DeliveryAddress: {
                        required: "Du måste välja en leveransadress"
                    },
                    dialog_Quantity: {
                        required: "Du måste ange en kvantitet större än 0",
                        number: "Ange ett numeriskt värde",
                        min: "Du måste ange en kvantitet större än 1"
                    },
                    dialog_DeliveryDate: {
                        required: "Du måste ange ett giltigt datum",
                        swedishDate: "Du måste ange ett giltigt datum"
                    },
                    dialog_Article: {
                        required: "Du måste välja en artikel"
                    }
                },
                highlight: function (element, errorClass, validClass) {
                    $(element).addClass(this.settings.errorElementClass).removeClass(errorClass);
                    if ($(element.previousElementSibling).hasClass("dropdown") && !firstTimeOpen) {
                        $(element).siblings("a").addClass("error");
                    }
                    firstTimeOpen = false;
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).removeClass(this.settings.errorElementClass).removeClass(errorClass);
                    if ($(element.previousElementSibling).hasClass("dropdown")) {
                        $(element).siblings("a").removeClass("error");
                    }
                }
            });
        }
    };

    var initEvent = function () {
        $('#Transportation_Farm').change(function () {
            if ($(this).is(':checked')) {
                $('.js-transportation-terms-and-conditions:radio').prop('checked', false);
                $('#lorryType').removeClass('hidden');
                if (isInternal != "1") {
                    $('#warehouseList').addClass('hidden');
                }
                $("#deliveryAssuranceForm").validate().element("#Warehouse");
                $("#deliveryAssuranceForm").validate().element("#DeliveryDate");
            }
        });

        $('.js-transportation-terms-and-conditions:radio').change(function () {
            if ($(this).is(':checked')) {
                $('#Transportation_Farm').prop('checked', false);
                $('#a_LorryType').html('Välj transportsätt');
                $('#LorryType').val('');
                $('#lorryType').addClass('hidden');
                if (isInternal != "1") {
                    $('#warehouseList').removeClass('hidden');
                }
                $("#deliveryAssuranceForm").validate().element('#Transportation_Farm');
                $("#deliveryAssuranceForm").validate().element("#DeliveryDate");
                $("#deliveryAssuranceForm").validate().element("#Warehouse");
            }
        });

        $('input[name="DeliveryType"]:radio').change(function () {
            var value = $('input[name="DeliveryType"]:checked').val();
            if (value === "Depa") {
                $('#depaAvtal').removeClass('hidden');
            } else if (value === "Spon") {
                $('#depaAvtal').addClass('hidden');
            }
        });

        $('input[name="createNew"]:checkbox').change(function () {
            $('#noOfNew').val('');
            if ($(this).is(':checked')) {
                $('#noOfNew').parent().show();
            } else {
                $('#noOfNew').parent().hide();
                $('#createPdf').prop('disabled', false);
            }
        });

        $('#approveTerm').change(function () {
            if ($(this).is(':checked')) {
                $('#btnSubmitDelivery').addClass('reverse-state').removeClass('disabled');
            } else {
                $('#btnSubmitDelivery').addClass('disabled').removeClass('reverse-state');
            }
        });

        $('.cbxApproveDelAss').change(function () {
            if ($('.cbxApproveDelAss').is(':checked')) {
                $('#btnApprove').addClass('reverse-state').removeClass('disabled');
            } else {
                $('#btnApprove').addClass('disabled').removeClass('reverse-state');
            }
        });

        $('.cbxToPrintDeliveried').change(function () {
            if ($('.cbxToPrintDeliveried').is(':checked')) {
                $('#btnToPrintDeliveried').removeClass('disabled');
            } else {
                $('#btnToPrintDeliveried').addClass('disabled');
            }
        });

        $('.cbxToPrintConfirmed').change(function () {
            if ($('.cbxToPrintConfirmed').is(':checked')) {
                $('#btnToPrintConfirmed').removeClass('disabled');
            } else {
                $('#btnToPrintConfirmed').addClass('disabled');
            }
        });

        $('#noOfNew').blur(function () {
            var noOfNew = parseInt($(this).val());
            if (!isNaN(noOfNew) && noOfNew > 0) {
                var cb = $('#createPdf');
                cb.prop('checked', false);
                cb.prop('disabled', true);
            }
        });

        $('#openCalculateFee').click(function () {
            fillCalculateForm();
            $("#calculateFormDialog").validate().resetForm();
            $('#calculateFeeDialog').removeClass('hidden');
            $('#calculateFeeDialog input#dialog_Quantity').removeClass('error');
            $('#calculateResult').html('');
            // increase z-index for datetime-picker
            $("#ui-datepicker-div").css({ zIndex: 9999 });
        });

        $('#calculateFree').click(function () {
            if (!$("#calculateFormDialog").valid()) {
                return;
            }
            var calculateObject = getCalculateObject();
            $('#calculateFeeDialog').find('.loader-wrapper').show();
            $.ajax({
                url: '/api/deliveryfee/caluculate',
                type: 'POST',
                data: {
                    supplier: calculateObject.supplier,
                    lorryType: calculateObject.lorryType,
                    deliveryAddressId: calculateObject.deliveryAddressId,
                    quantity: calculateObject.quantity,
                    deliveryDate: calculateObject.deliveryDate,
                    itemId: calculateObject.itemId,
                    isInternal: (calculateObject.isInternal == "1" ? "true" : "false")
                },
                success: function (data) {
                    $('#calculateResult').html(data);
                },
                complete: function (jqXHR) {
                    $('#calculateFeeDialog').find('.loader-wrapper').hide();
                }
            });
        });

        $('#clearBtn').click(function () {
            //clear delivery address
            $('#a_deliveryAddress').html('Välj leveransadress');
            $('#DeliveryAddress').val('');
            //clear date
            $('#DeliveryDate').val('');
            //clear article
            $('#a_article').html('Välj artikel');
            $('#Article').val('');
            //clear quantity
            $("#Quantity").val('');
            //clear year
            $('#a_HarvestYear').html('');
            $('#HarvestYear').val('');
            //clear Mottagningsplats
            $('#a_Warehouse').html('Välj mottagningsplats');
            $('#Warehouse').val('');
            $('.warehouseDropdown').html('');
            //clear Leveranssätt
            $('#a_LorryType').html('Välj transportsätt');
            $('#LorryType').val('');

            //clear delivery type
            $('input[name="DeliveryType"]').prop('checked', false);
            //clear Varmluftstorkat
            $("input[name='Torkat']").prop('checked', false);
            //clear RED
            $("input[name='Red']").prop('checked', false);
            //clear Straforkortat
            $("input[name='Straforkortat']").prop('checked', false);
            //clear Glyfosat
            $("input[name='Glyfosat']").prop('checked', false);
            //clear Slam
            $("input[name='Slam']").prop('checked', false);

            $(".js-transportation-terms-and-conditions").prop('checked', false);
            $('#Transportation_Farm').prop('checked', false);

            $("textarea[name='OtherInfo']").val("");

            $("#deliveryAssuranceForm").validate().resetForm();
            //$('#btnSubmitDelivery').addClass('disabled').removeClass('reverse-state');
            $('#depaAvtal').addClass('hidden');
            $('#lorryType').addClass('hidden');
            if (isInternal != "1") {
                $('#warehouseList').addClass('hidden');
            }
        });

        $('#deliveryAssuranceForm').find(".showcase .dropdown li a").click(function () {
            var inputElement = $(this).parents(".showcase").find("input.form-element");
            var inputSelector = inputElement.attr('id');
            $("#deliveryAssuranceForm").validate().element('#' + inputSelector);
        });

        $('#calculateFormDialog').find(".showcase .dropdown li a").click(function () {
            var inputElement = $(this).parents(".showcase").find("input.form-element");
            var inputSelector = inputElement.attr('id');
            $("#calculateFormDialog").validate().element('#' + inputSelector);
        });
    };

    var initVar = function () {

        var preDaysDelivery = parseInt($('#preDaysDelivery').val());
        var postDaysDelivery = parseInt($('#postDaysDelivery').val());
        if (isNaN(preDaysDelivery) || isNaN(postDaysDelivery)) return;

        reqDate = GroCommon.dateFromISO($('#reqDate').val());
        startDate = GroCommon.dateFromISO($('#reqDate').val());
        startDate.setHours(0, 0, 0, 0);
        startDate.setDate(reqDate.getDate() + preDaysDelivery);

        endDate = GroCommon.dateFromISO($('#reqDate').val());
        endDate.setHours(23, 59, 59, 999);
        endDate.setDate(reqDate.getDate() + postDaysDelivery);

        harvestPeriodStart = GroCommon.dateFromISO($('#harvestPeriodStart').val());
        harvestPeriodEnd = GroCommon.dateFromISO($('#harvestPeriodEnd').val());

        isInternal = $('#IsInternal').val();
        enabledWarehouse = $('#EnabledWarehouse').val();

        var numberOfDepaAvtal = parseInt($('#numberOfDepaAvtal').val());
        if (!isNaN(preDaysDelivery)) {
            if (numberOfDepaAvtal > 1) {
                existDepaAvtal = 1;
                $('input[name="DeliveryType"]:radio').each(function (index, item) {
                    var value = $(item).val();
                    if (value === "Depa") {
                        $('#depaAvtal').removeClass('hidden');
                    }
                });
            } else {
                if ($("#Article").size() === 1 && $("#Article").val() != "") {
                    getWarehouseList("#DeliveryDate", $("#Article").val());
                }
                existDepaAvtal = 0;
            }
        }

        $('#deliveryAssuranceForm .dropdown li.selected, #calculateFeeDialog .dropdown li.selected').each(function (index, item) {
            var description = $(item).find('a').html();
            $(item).parent('ul').prev('a').html(description);
        });
    };

    var initDeliveryDate = function () {
        if ($.fn.datepicker && $(".delivery-datepicker").length) {
            $(".delivery-datepicker").datepicker({
                defaultDate: new Date(),
                dateFormat: "yy-mm-dd",
                onSelect: function (newText) {
                    // compare the new value to the previous one
                    if ($(this).data('previous') !== newText) {
                        if ($("#deliveryAssuranceForm").validate().element("#DeliveryDate")) {
                            getWarehouseList(this, $("#Article").val());
                        }
                    }
                },
                monthNames: ["Januari", "Februari", "Mars", "April", "Maj", "Juni", "Juli", "Augusti", "September", "Oktober", "November", "December"],
                dayNamesMin: ["Sö", "Må", "Ti", "On", "To", "Fr", "Lö"],
                firstDay: 1,
            })
            .on('change', function () {
                var $this = $(this);
                var validDate = !/Invalid|NaN/.test(new Date($this.val()).toString());
                var validDateRegex = /^\d\d\d\d-(0?[1-9]|1[0-2])-(0?[1-9]|[12][0-9]|3[01])$/ig.test($this.val());

                $("#deliveryAssuranceForm").validate().element("#DeliveryDate");

                if (!validDateRegex || !validDate) {
                    //$this.addClass("error").next().show();
                    //$this.next().show();
                } else {
                    //$this.removeClass("error").next().hide();
                    //$this.next().hide();
                    getWarehouseList(this, $("#Article").val());
                }

            });
        }
    };

    var addValidation = function () {
        if (jQuery.validator) {
            jQuery.validator.addMethod("dateHigherThanToday", function (value, element) {
                //If false, the validation fails and the message below is displayed
                var currentDate = new Date();

                var valGardshamtning = $('#Transportation_Farm:checked').val();
                if (valGardshamtning === '1') {
                    if (!element)
                        return false;

                    var selectedDate = GroCommon.dateFromISO(element.value);  // new Date(element.value); funkar bara med IE9+

                    selectedDate.setHours(0, 0, 0, 0);

                    var currentHours = currentDate.getHours();
                    currentDate.setHours(0, 0, 0, 0);

                    if (selectedDate < currentDate)
                        return false;

                    if ((selectedDate.getFullYear() === currentDate.getFullYear()) &&
                        (selectedDate.getMonth() === currentDate.getMonth()) &&
                        (selectedDate.getDate() === currentDate.getDate()) && (currentHours > 9))
                        return false;

                }
                return true;
            }, "Leveransdatum kan inte vara dagens datum eller tidigare.");

            if (startDate && reqDate) {
                jQuery.validator.addMethod('dateHarvest206', function (value, element) {
                    if (this.optional(element)) {
                        return true;
                    }
                    var enteredDate = GroCommon.dateFromISO(element.value); //new Date(element.value);
                    var tomorrow = new Date().setDate(new Date().getDate() + 1);

                    return ((tomorrow <= enteredDate) && (enteredDate <= reqDate));

                }, $.validator.format("Vänligen ange ett datum mellan {0} och {1}.", startDate ? startDate.toShortDateString() : "", reqDate ? reqDate.toShortDateString() : ""));
            }

            if (harvestPeriodStart && harvestPeriodEnd) {
                jQuery.validator.addMethod('dateHarvestRange', function (value, element) {
                    if (this.optional(element)) {
                        return true;
                    }

                    var enteredDate = GroCommon.dateFromISO(element.value); //new Date(element.value);

                    return ((enteredDate >= harvestPeriodStart) && (enteredDate <= harvestPeriodEnd));

                }, $.validator.format("Vänligen ange ett datum inom skördeperioden, dvs {0}/{1} - {2}/{3}.", harvestPeriodStart.getDate().toString(), (harvestPeriodStart.getMonth() + 1).toString(), harvestPeriodEnd.getDate().toString(), (harvestPeriodEnd.getMonth() + 1).toString()));
            }

            if (startDate && endDate) {
                jQuery.validator.addMethod('daterange', function (value, element) {
                    if (this.optional(element)) {
                        return true;
                    }
                    var enteredDate = GroCommon.dateFromISO(element.value); //new Date(element.value);

                    return ((startDate <= enteredDate) && (enteredDate <= endDate));

                }, $.validator.format("Vänligen ange ett datum mellan {0} och {1}.", startDate ? startDate.toShortDateString() : '', endDate ? endDate.toShortDateString() : ''));
            }
        }
    };

    var init = function () {
        initDeliveryDate();
        initVar();
        initEvent();
        addValidation();
        validateDeliveryAssurance();
    };

    return {
        init: init,
        deleteDeliveryAssurance: deleteDeliveryAssurance,
        showChangeNotAvailableDiglog: showChangeNotAvailableDiglog,
        printMultiLines: printMultiLines,
        getWarehouseList: getWarehouseList,
        confirmDialog: confirmDialog
    };
})();
var VerticalTable = VerticalTable || function () {
    var i, element;
    //create headers for the mobile view
    function createHeader(table) {
        var headers = table.querySelectorAll(".responsive-table th"),
        index = 1,
        columns = table.querySelectorAll(".responsive-table td"),
        headerCell,
        headerName,
        headerClass,
        responsiveHeader;

        if (columns.length > 0) {
            for (i = 0; i < columns.length; i += 1) {
                if (index > headers.length) {
                    index = 1;
                }

                //mobile headers are actually td
                element = columns[i];

                if (index === 1) {
                    var buttonDiv = document.createElement("div");
                    buttonDiv.className = "table-expand-info expand-icon-plus responsive-header";
                    element.parentNode.insertBefore(buttonDiv, element);
                }

                headerCell = table.querySelector('.responsive-table th:nth-of-type(' + index + ')');
                headerClass = headerCell.className;
                //console.log(headerClass);
                headerName = headerCell.textContent;
                if (headerClass.indexOf('action-control') >= 0 || headerClass.indexOf('header-desktop-only') >= 0) {
                    //console.log(headerCell.textContent);
                } else {
                    responsiveHeader = document.createElement("td");
                    responsiveHeader.className = "responsive-header " + headerClass;
                    responsiveHeader.innerHTML = headerName;
                    element.parentNode.insertBefore(responsiveHeader, element);
                }

                index += 1;
            }
        }

        var collapseRow = $('.responsive-table .collapsed-row');
        collapseRow.addClass('hidden');
    }

    var hasBeenSet = false;

    //addds mobile class for table when table is larger than screen
    function styleTable() {
        var windowWidth = window.innerWidth,
          responsiveTables = document.getElementsByClassName('responsive-table'),
          collapseRow = $('.responsive-table .collapsed-row');

        if (windowWidth <= 768) {
            if (!hasBeenSet) {
                for (i = 0; i < responsiveTables.length; i += 1) {
                    element = responsiveTables[i];
                    element.classList.add("mobile");
                    collapseRow.addClass('hidden');
                    $(".table-expand-info").removeClass('expand-icon-minus');
                    $(".table-expand-info").addClass('expand-icon-plus');
                }
                hasBeenSet = true;
            }
        } else {
            for (i = 0; i < responsiveTables.length; i += 1) {
                element = responsiveTables[i];
                element.classList.remove("mobile");
                collapseRow.removeClass('hidden');
                $(".table-expand-info").removeClass('expand-icon-plus');
                $(".table-expand-info").addClass('expand-icon-minus');
            }
            hasBeenSet = false;
        }
    }

    function init() {
        var verticalTables = document.querySelectorAll('table.responsive-table');
        if (verticalTables.length > 0) {
            for (var count = 0; count < verticalTables.length; count++) {
                createHeader(verticalTables[count]);
                //console.log(count);
            }
        }

        styleTable();
        $(window).on('resize', function () {
            styleTable();
        });
    }
    return {
        init: init
    };
}();

$(function () {
    VerticalTable.init();
});

$(document).ready(function (e) {
    $(".table-expand-info").click(function () {
        var currentRow = $($(this).parent());
        var collapseRow = currentRow.find('.collapsed-row');
        if ($(this).hasClass("expand-icon-plus")) {
            $(this).removeClass("expand-icon-plus");
            $(this).addClass("expand-icon-minus");
            collapseRow.removeClass('hidden');
        }
        else {
            $(this).removeClass("expand-icon-minus");
            $(this).addClass("expand-icon-plus");
            collapseRow.addClass('hidden');
        }
    });
    $(".table-expand-info").next().click(function () {
        var windowWidth = window.innerWidth;
        // currentRow mean the row of table
        var currentRow = $($(this).parent());
        var that = currentRow.find('.table-expand-info')[0];
        var collapseRow = currentRow.find('.collapsed-row');
        // only trigger the collapse and expose on tablet/mobile
        if (windowWidth <= 768) {
            if ($(that).hasClass("expand-icon-plus")) {
                $(that).removeClass("expand-icon-plus");
                $(that).addClass("expand-icon-minus");
                collapseRow.removeClass('hidden');
            }
            else {
                $(that).removeClass("expand-icon-minus");
                $(that).addClass("expand-icon-plus");
                collapseRow.addClass('hidden');
            }
        }
    });
});
$(function () {
    PurchaseAgreement.init();
    PriceAlertPage.init();
    DryingAgreement.init();
    GrainPricePage.init();
    PoolAndDepaAgreement.init();
});

var PurchaseAgreement = PurchaseAgreement || (function () {
    var agreementElements = [];
    var disabledClass = "disabled";
    var formSelector = "#agreementForm";

    var addValidation = function () {
        if ($.validator) {
            $.validator.addMethod("exact_date", function (value, element) {
                var result = true;
                var dates = value.split('-');

                if (dates.length == 3) {
                    //var d = new Date(dates[0] + "-" + dates[1] + "-" + dates[2] + " 00:00:00");
                    var d = new Date(value);
                    if (d.getFullYear() == dates[0] && d.getMonth() == (parseInt(dates[1]) - 1) && d.getDate() == dates[2]) {
                        result = true;
                    } else {
                        result = false;
                    }
                }

                return this.optional(element) || result;

            }, "Var vänlig ange ett giltigt datum");

            $.validator.addMethod("lowerPriceMustLessUpperPrice", function (value, element) {
                //If false, the validation fails and the message below is displayed
                var upperPrice = parseInt($('#UpperPrice').val());
                var lowerPrice = parseInt($('#LowerPrice').val());
                return this.optional(element) || (!isNaN(upperPrice) && !isNaN(lowerPrice) && upperPrice >= lowerPrice);

            }, "Undre pris måste vara lägre än Övre pris");

            $.validator.addMethod("atLeastOnePriceMustBeInput", function (value, element) {
                //If false, the validation fails and the message below is displayed
                var upperPrice = parseInt($('#UpperPrice').val());
                var lowerPrice = parseInt($('#LowerPrice').val());
                if (isNaN(lowerPrice)) lowerPrice = 0;
                return this.optional(element) || (!isNaN(upperPrice) && !isNaN(lowerPrice) && (upperPrice !== 0 || lowerPrice !== 0));

            }, "Något pris kanske ska anges?");

            $.validator.addMethod("optinalLowerPriceMustBeGreatMinValue", function (value, element) {
                //If false, the validation fails and the message below is displayed
                var minValue = parseInt($('#PriceLow').val());
                var lowerPrice = parseInt($('#LowerPrice').val());
                if ($('#AgreementType').val() === "PrissakringDepaavtal") {
                    return this.optional(element) || (!isNaN(minValue) && !isNaN(lowerPrice) && !(lowerPrice >= 0 && lowerPrice < minValue));
                }
                return this.optional(element) || (!isNaN(minValue) && !isNaN(lowerPrice) && !(lowerPrice > 0 && lowerPrice < minValue));

            }, "Undre pris understiger. Pris anges i kr/ton");

            $.validator.addMethod("agreementDateMin", function (value, element) {
                //If false, the validation fails and the message below is displayed
                var minDate = new Date();
                var enteredDate = GroCommon.dateFromISO(element.value); //new Date(element.value);
                enteredDate.setHours(enteredDate.getHours() + 23);

                return this.optional(element) || (enteredDate >= minDate);

            }, "Du kan inte ange datum som är lägre än dagens datum");

            $.validator.addMethod("agreementDateMax", function (value, element) {
                //If false, the validation fails and the message below is displayed
                var minDate = new Date();
                var maxDate = new Date();
                maxDate.setDate(new Date().getDate() + 60);
                var enteredDate = GroCommon.dateFromISO(element.value); //new Date(element.value);
                enteredDate.setHours(enteredDate.getHours() + 23);

                return this.optional(element) || (enteredDate <= maxDate);

            }, "Uppdraget får ej vara giltigt i mer än 60 dagar");
        }
    };

    var validatePriceHedge = function () {
        var lowPrice = GroCommon.parseInt($('#PriceLow').val());
        var minQuantity = GroCommon.parseInt($('#CommitQuantityMin').val());

        if ($().validate) $(formSelector).validate({
            ignore: [],
            errorElementClass: 'error',
            errorClass: 'error-item',
            errorElement: 'span',
            onkeyup: false,
            rules: {
                UpperPrice: {
                    required: function () {
                        return ($("#CanSecurePrice").val() != "1");
                    },
                    digits: true,
                    atLeastOnePriceMustBeInput: true,
                    min: lowPrice
                },
                LowerPrice: {
                    required: function (element) {
                        return $('#AgreementType').val() === "PrissakringDepaavtal";
                    },
                    digits: true,
                    lowerPriceMustLessUpperPrice: true,
                    optinalLowerPriceMustBeGreatMinValue: true
                },
                CommitQuantity: {
                    required: true,
                    digits: true,
                    min: minQuantity
                },
                DeliveryMode: {
                    required: true
                },
                PriceWatchEndDate: {
                    date: true,
                    exact_date: true,
                    agreementDateMin: true,
                    agreementDateMax: true,
                    //required:true
                },
                TargetAction: {
                    required: function () {
                        return ($("#CanSecurePrice").val() != "1");
                    }
                }
            },
            messages: {
                UpperPrice: {
                    required: "Du måste ange en siffra",
                    digits: "Ange endast siffror",
                    atLeastOnePriceMustBeInput: "Något pris kanske ska anges?",
                    min: "Övre pris understiger " + lowPrice + " kr. Pris anges i kr/ton"
                },
                LowerPrice: {
                    required: "Du måste ange en siffra",
                    digits: "Ange endast siffror",
                    lowerPriceMustLessUpperPrice: "Undre pris måste vara lägre än Övre pris",
                    optinalLowerPriceMustBeGreatMinValue: "Undre pris understiger " + lowPrice + " kr. Pris anges i kr/ton."
                },
                CommitQuantity: {
                    required: "Kvantitet ton måste anges",
                    digits: "Kvantitet ton anges numeriskt",
                    min: "Du kan inte ange kvantitet som är mindre än " + minQuantity
                },
                DeliveryMode: {
                    required: "Leveranssätt måste väljas"
                },
                PriceWatchEndDate: {
                    date: "Var vänlig ange ett giltigt datum"
                },
                TargetAction: {
                    required: "Du måste ange Resultat av prisbevakning"
                }
            },
            highlight: function (element, errorClass, validClass) {
                $('li#p_' + $(element).attr('name')).show();
                var errors = $('ul.errors-list li').filter(function () { return $(this).css('display') === 'list-item'; }).length;
                if (errors >= 3) {
                    $('ul.errors-list').show();
                }
                $(element).addClass(this.settings.errorElementClass).removeClass(errorClass);
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).removeClass(this.settings.errorElementClass).removeClass(errorClass);
                $('li#p_' + $(element).attr('name')).hide();
                var errors = $('ul.errors-list li').filter(function () { return $(this).css('display') === 'list-item'; }).length;
                if ($('ul.errors-list').find('li[id^="p"]').is(":visible") === false || errors < 3) {
                    $('ul.errors-list').hide();
                }
            },
            errorPlacement: function (error, element) {
                var typeElement = $(element).attr('type');
                if (typeElement === 'radio') {
                    element.parent('div.lm__radio').parent().before(error);
                } else {
                    element.after(error);
                }
            },
            submitHandler: function (form) {
                if ($('#approveAgreementTerm').is(':checked')) {
                    form.submit();
                }
            }
        });
    };

    var toggleDisableNextButton = function () {
        var commitQuantity = parseInt($('#CommitQuantity').val());
        var upperPrice = parseInt($('#UpperPrice').val());
        var lowerPrice = parseInt($('#LowerPrice').val());
        var price = parseInt($('#Price').val());
        var agreementType = $("#AgreementType").val();
        var canSecurePrice = $("#CanSecurePrice").val() == "1";

        var isValid;
        if (canSecurePrice && $("#SecurePrice").is(":checked")) {

            isValid = $('#AgreementAvtal').val() != '' &&
                ($('input[name="DeliveryMode"]:checked').length > 0 || $('input[name="DeliveryMode"]:radio').length === 0) &&
                ($('input[name="WatchType"]:checked').length > 0 || $('input[name="WatchType"]:radio').length === 0) &&
                $('#AgreementPeriod').val() != '' &&
                ((!isNaN(commitQuantity) && commitQuantity >= 12) || $('#CommitQuantity').length === 0) &&
                !isNaN(price);
        }
        else {
            isValid = $('#AgreementAvtal').val() != '' &&
                ($('input[name="DeliveryMode"]:checked').length > 0 || $('input[name="DeliveryMode"]:radio').length === 0) &&
                ($('input[name="TargetAction"]:checked').length > 0 || $('input[name="TargetAction"]:radio').length === 0) &&
                $('#AgreementPeriod').val() != '' &&
                $('#PriceWatchEndDate').val() != '' &&
                ((!isNaN(commitQuantity) && commitQuantity >= 12) || $('#CommitQuantity').length === 0) &&
                !isNaN(upperPrice) && upperPrice >= 500 &&
                !isNaN(lowerPrice) && lowerPrice <= upperPrice && lowerPrice >= 500;
        }

        if (agreementType == "PrissakringDepaavtal" && canSecurePrice) {
            isValid = $('#AgreementPeriod').val() != '' && !isNaN(price) && $("AgreementAvtal") != '';
        }

        if (isValid) {
            $('#move-to-step2').removeClass('disabled');
            $('#move-to-step2').parent().removeClass('disabled');
        }
        else
            $('#move-to-step2').addClass('disabled');
    };

    var validateForDropdown = function (self) {
        var inputElement = $(self).parents(".showcase").find("input.form-element");
        var inputSelector = inputElement.attr('id');
        $(formSelector).validate().element('#' + inputSelector);
        toggleDisableNextButton();
    };

    var initPriceWatchEndDate = function () {
        if ($.fn.datepicker) $("#PriceWatchEndDate").datepicker({
            defaultDate: new Date(),
            onSelect: function (newText) {
                // compare the new value to the previous one
                if ($(this).data('previous') !== newText) {
                    $(formSelector).validate().element("#PriceWatchEndDate");
                    toggleDisableNextButton();
                }
            },
            monthNames: ["Januari", "Februari", "Mars", "April", "Maj", "Juni", "Juli", "Augusti", "September", "Oktober", "November", "December"],
            dayNamesMin: ["Sö", "Må", "Ti", "On", "To", "Fr", "Lö"],
            firstDay: 1,
            showOtherMonths: true,
            selectOtherMonths: true,
            dateFormat: 'yy-mm-dd',
            beforeShow: function () {
                setTimeout(function () {
                    $('.ui-datepicker').css('z-index', 5);
                }, 0);
            }
        })
            .on('change', function () {
                $(formSelector).validate().element("#PriceWatchEndDate");
                toggleDisableNextButton();
            });
    };

    var getProtectAgreement = function (agreementId, productItemId, priceAreaId, grainType, productItemName, callback) {
        if (!agreementId) {
            return;
        }

        $('#agreement-loader').show();
        $("#AgreementId").val(agreementId);
        $("#product-item-name").html(productItemName);
        $("#grain-type").html(grainType);
        $("#GrainType").val(grainType);

        var isInternal = Number.parseInt($('#IsInternal').val()) == 1;

        $.ajax({
            dataType: "json",
            type: 'get',
            url: '/api/agreement/get-grain-price-periods/' + priceAreaId + '/' + productItemId + '/' + grainType + '/' + isInternal,
            cache: false,
            success: function (data) {
                $('#agreementForm #AgreementPeriod').val('');
                $('#agreementForm .periodDropdown .dropdown').html('');
                $('#agreementForm .periodDropdown > .showcase > a').html('Leveransperiod');

                if (data.length > 0) {
                    $.each(data, function (index, item) {
                        var attrPrice = isInternal ? "data-price=" + item.Price : "data-price=''";
                        var attrValue = "data-value=" + item.PriceTypeId + ";" + item.PricePeriod;
                        $('.periodDropdown .dropdown').append("<li " + attrPrice + " " + attrValue + "><a href='javascript:void(0)'>" + item.DisplayLabel + "</a></li>");
                    });
                    setDropdown($('.periodDropdown'), 'type-3');

                    $('#agreementForm .periodDropdown').find(".showcase .dropdown li a").click(function () {
                        validateForDropdown(this);
                        GroCommon.disableOrEnableElement('#agreementForm .agreement-element', $(this));
                        var deliveryPeriod = getDisplayValueInDropdown($('.periodDropdown .dropdown'), $(this).parent().attr('data-value'));
                        $('#period-detail').html(deliveryPeriod);

                        if (isInternal) {
                            $('#Price').val('');
                            var price = $('.periodDropdown .dropdown .selected').attr('data-price');
                            $('#Price').val(price);
                        }
                        toggleDisableNextButton();
                    });
                    $('#price-periods').find('.error-item').addClass('hidden');
                    $('#price-periods').removeClass('disabled');
                    toggleDisableNextButton();
                }
                else {
                    $('#price-periods').find('.error-item').removeClass('hidden');
                    $('#price-periods').addClass('disabled');
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {

            },
            complete: function (jqXHR) {
                $('#agreement-loader').hide();
            }
        });
    };

    var getDisplayValueInDropdown = function ($dropdown, selectedValue) {
        var result;
        $dropdown.find('li').each(function (index, item) {
            var matchValue = $(item).attr('data-value');
            if (matchValue === selectedValue) {
                result = $(item).find('a').html();
                return false;
            }
        });
        return result;
    };

    var getHarvestYear = function (periodInfo) {
        var startIndex = periodInfo.indexOf(';');
        var datePeriod = periodInfo.substring(startIndex + 1, startIndex + 9);
        var year = parseInt(datePeriod.substring(0, 4));
        var date = parseInt(datePeriod.substring(4));
        if (isNaN(year) || isNaN(date)) return "";

        return date < 701 ? year - 1 : year;
    };

    var getGrainTypesForSpotAgreement = function (priceAreaId, productItemId) {
        $('#agreement-loader').show();
        $('#product-item-name').html(getDisplayValueInDropdown($('.productDropdown .dropdown'), productItemId));
        $.ajax({
            dataType: "json",
            type: 'get',
            url: '/api/agreement/get-grain-type-spot-agreement',
            data: { priceAreaId: priceAreaId, productItemId: productItemId },
            cache: false,
            success: function (data) {
                $('#agreementForm .grainTypeDropdown .dropdown').html('');
                $('#agreementForm .grainTypeDropdown > .showcase > a').html('Välj sort');
                $('#agreementForm #GrainType').val('');
                $('#grain-type').html('');
                if (data.length > 0) {

                    $.each(data, function (index, item) {
                        $('.grainTypeDropdown .dropdown').append('<li data-value="' + item.GrainName + '"><a href="javascript:void(0)">' + item.GrainName + '</a></li>');
                    });
                    setDropdown($('.grainTypeDropdown'), 'type-3');

                    $('#agreementForm .grainTypeDropdown').find(".showcase .dropdown li a").click(function () {
                        validateForDropdown(this);
                        GroCommon.disableOrEnableElement('#agreementForm .agreement-element', $(this));
                        var grainType = getDisplayValueInDropdown($('.grainTypeDropdown .dropdown'), $(this).parent().attr('data-value'));
                        $('#grain-type').html(grainType);
                        getSpotAndForwarPriceListForGrainType(priceAreaId, productItemId, grainType);
                    });
                    $('#agreementForm .grainTypeDropdown').parent().parent().removeClass('disabled');
                }
                $('#agreementForm .periodDropdown').parent().parent().addClass('disabled');
                $('.agreement-detail').addClass('hidden');
                toggleDisableNextButton();
            },
            error: function (jqXHR, textStatus, errorThrown) {
            },
            complete: function (jqXHR) {
                $('#agreement-loader').hide();
            }
        });
    };

    var getSpotAndForwarPriceListForGrainType = function (priceAreaId, productItemId, grainType) {
        var priceAreaId = $("input[name='PriceArea']").val();
        var isInternal = Number.parseInt($('#IsInternal').val()) == 1;

        $.ajax({
            dataType: "json",
            type: 'get',
            url: '/api/agreement/get-grain-price-periods/' + priceAreaId + '/' + productItemId + '/' + grainType + '/' + isInternal,
            cache: false,
            success: function (data) {
                var isInternalPage = Number.parseInt($('#IsInternal').val()) == 1;
                $('#agreementForm #AgreementPeriod').val('');
                $('#agreementForm .periodDropdown .dropdown').html('');
                $('#agreementForm .periodDropdown > .showcase > a').html('Leveransperiod');
                if (isInternal) {
                    $('#price-detail').html('');
                }
                $('#period-detail').html('');

                if (data.length > 0) {

                    $.each(data, function (index, item) {
                        var attrPrice = isInternal ? "data-price=" + item.Price : "data-price=''";
                        var attrValue = "data-value=" + item.PriceTypeId + ";" + item.PricePeriod;
                        $('.periodDropdown .dropdown').append("<li " + attrPrice + " " + attrValue + "><a href='javascript:void(0)'>" + item.DisplayLabel + "</a></li>");
                    });
                    setDropdown($('.periodDropdown'), 'type-3');

                    $('#agreementForm .periodDropdown').find(".showcase .dropdown li a").click(function () {
                        validateForDropdown(this);
                        GroCommon.disableOrEnableElement('#agreementForm .agreement-element', $(this));
                        var deliveryPeriod = getDisplayValueInDropdown($('.periodDropdown .dropdown'), $(this).parent().attr('data-value'));
                        $('#period-detail').html(deliveryPeriod);

                        if (isInternal) {
                            var price = $('.periodDropdown .dropdown .selected').attr('data-price');
                            $('#price-detail').html(price);
                        }

                        if ($('#AgreementPeriod').val() != '') {
                            $('.agreement-detail').removeClass('hidden');
                        }
                    });
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {

            },
            complete: function (jqXHR) {
                $('#agreement-loader').hide();
            }
        });
    };

    var initEvent = function () {
        $('#UpperPrice').blur(function () {
            $(formSelector).validate().element("#LowerPrice");
            toggleDisableNextButton();
        });

        $('#approveAgreementTerm').change(function () {
            if ($(this).is(':checked')) {
                $('#agreementSaveBtn').addClass('reverse-state').removeClass('disabled');
            } else {
                $('#agreementSaveBtn').addClass('disabled').removeClass('reverse-state');
            }
        });

        $("#agreementForm .showcase .dropdown a.agreement-item").each(function (idx, item) {
            $(item).click(function () {
                var $item = $(item);
                var agreementId = $item.attr("data-agreementid");
                var productItemId = $item.attr("data-productItemId");
                var priceAreaId = $item.attr("data-priceAreaId");
                var grainType = $item.attr("data-grainType");
                var productItemName = $item.attr("data-productItemName");
                getProtectAgreement(agreementId, productItemId, priceAreaId, grainType, productItemName, function () {
                    GroCommon.disableOrEnableElement('#agreementForm .agreement-element', $(item));
                    toggleDisableNextButton();
                });
                showOverview();
            });
        });

        $('#agreementForm input[name="WatchType"]:radio').change(function () {

            var container = $("div[data-secure-price]");
            var status = $(this).attr("id") == "SecurePrice" ? "on" : "off";
            container.attr("data-secure-price", status);
            if (status == "on") {
                var currentPrice = $("#price-detail").html();
                $("#Price").val(currentPrice);
                $("#Price").parent('.agreement-element').removeClass('disabled');
            }
            else {
                $("#Price").val('');
                GroCommon.disableOrEnableElement('#agreementForm .agreement-element', $(this));
            }
            toggleDisableNextButton();
        });

        function showOverview() {
            $("#area-sort-overview").removeClass("hidden");
        }

        $("#agreementForm .agreement-element input").each(function (idx, item) {
            $(item).focusout(function () {
                if ($("#AgreementType").val() == "SportAndForwardAvtal" && $(this).attr("id") == "LowerPrice") {
                    $("#CommitQuantity").parents(".agreement-element").removeClass("disabled");
                }
                else {
                    GroCommon.disableOrEnableElement('#agreementForm .agreement-element', $(item));
                }
                toggleDisableNextButton();
            });
        });

        $('#agreementForm input[name="TargetAction"]:radio').change(function () {
            GroCommon.disableOrEnableElement('#agreementForm .agreement-element', $(this));
            toggleDisableNextButton();
        });

        $('#agreementForm input[name="DeliveryMode"]:radio').change(function () {
            GroCommon.disableOrEnableElement('#agreementForm .agreement-element', $(this));
            toggleDisableNextButton();
        });

        $("#agreementForm .agreement-element:last input[type=text]").keyup(function () {
            toggleDisableNextButton();
        });

        $('#move-to-step2').click(function () {
            if ($().validate) {
                var isValid = $(formSelector).valid();
                if (isValid) {
                    $('#span_Avtal').html(getDisplayValueInDropdown($('.avtalDropdown .dropdown'), $('#AgreementAvtal').val()));
                    $('#span_Groda').html($('#product-item-name').html());
                    $('#span_Sort').html($('#grain-type').html());
                    $('#span_Leveransperiod').html(getDisplayValueInDropdown($('.periodDropdown .dropdown'), $('#AgreementPeriod').val()) + " " + getHarvestYear($('#AgreementPeriod').val()));
                    $('#span_UpperPrice').html($('#UpperPrice').val());
                    $('#span_UnderPrice').html($('#LowerPrice').val());
                    $('#span_Price').html($('#Price').val());
                    $('#span_Quantity').html($('#CommitQuantity').val());
                    $('#span_TransportType').html($('input[name="DeliveryMode"]:checked').prop('id'));
                    $('#span_Prissakra').html($('input[name="TargetAction"]:checked').prop('id'));
                    $('#span_AgreementDate').html($('#PriceWatchEndDate').val());

                    $('#pStep1').addClass('hidden');
                    $('#pStep2').removeClass('hidden');
                }
            }
        });

        $('#move-to-step1').click(function () {
            $('#pStep2').addClass('hidden');
            $('#pStep1').removeClass('hidden');
        });

        $(formSelector).find(".showcase .dropdown li a").click(function () {
            validateForDropdown(this);
            //disableOrEnableElement($(this));
            GroCommon.disableOrEnableElement('#agreementForm .agreement-element', $(this));
        });

        $('#agreementForm .periodDropdown .dropdown a').click(function () {
            $('.agreement-detail').removeClass('hidden');
            $('#lable_Period').html(getDisplayValueInDropdown($('.periodDropdown .dropdown'), $(this).parent().attr('data-value')));
        });

        $("a#agrement-info").click(function () {
            $("#agreement-introduce").removeClass("hidden");
        });
    };

    var init = function () {
        // init total-favourite-items
        $('#CommitQuantity, #UpperPrice, #LowerPrice').val('');
        addValidation();
        validatePriceHedge();
        initEvent();
        initPriceWatchEndDate();
        agreementElements = $('.agreement-element');
    };

    return {
        init: init,
        getProtectAgreement: getProtectAgreement,
        getGrainTypesForSpotAgreement: getGrainTypesForSpotAgreement
    };
})();

var PriceAlertPage = PriceAlertPage || (function () {

    var deletePriceAlert = function (priceWatch, id) {
        var parameters = "{'id':'" + id + "'}";
        $.ajax({
            type: 'POST',
            url: '/api/price-alert/DeletePriceWatch',
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            data: parameters,
            success: function (response) {
                if (response.isRemoved) {
                    $(priceWatch).remove();
                }
                else {
                    alert("Error");
                }
            },
            error: function (response) { }
        });
    };

    var deletePriceAlertEvent = function () {
        $(".priceAlertDelete").on("click", function (e) {
            var $item = $(this);
            DeliveryAssuranceModule.confirmDialog(function () {
                var id = $item.attr("data-value");
                var itemPriceWatch = $item.parents("tr");
                deletePriceAlert(itemPriceWatch, id);
            },
                function () {

                });

            e.preventDefault();
        });
    };

    var initEvent = function () {
        deletePriceAlertEvent();
    };

    var init = function () {
        initEvent();
    };

    return {
        init: init
    };
})();

var GrainPricePage = GrainPricePage || (function () {

    var getPricePeriodbyArea = function (id) {
        var tableResult = $("#price-period-result");
        var parameters = "{'priceAreaId':'" + id + "'}";
        $("#loader").show();
        $.ajax({
            type: 'POST',
            url: '/api/price-grain/GetPricePeriodbyArea',
            contentType: "application/json; charset=utf-8",
            data: parameters,

            success: function (response) {
                if (response.resultPricePeriods == undefined) {
                    tableResult.html(response);
                }
                else {
                    tableResult.html("<div>Inga spannmålspriser finns för område</div>");
                }
                $("#loader").hide();
            },
            error: function () {
                tableResult.empty();
                alert("Error");
                $("#loader").hide();
            }
        });
    };

    var getPricePeriodbyAreaEvent = function () {
        var dropdownPriceAreas = $('#price-area-list .dropdown li a');
        dropdownPriceAreas.on("click", function (e) {
            var priceAreaId = $(this).parent().attr('data-value');
            getPricePeriodbyArea(priceAreaId);
            e.preventDefault();
        });
    };

    var initEvent = function () {
        getPricePeriodbyAreaEvent();
    };

    var init = function () {
        initEvent();
    };

    return {
        init: init
    };
})();

var DryingAgreement = DryingAgreement || (function () {

    var initEvent = function () {
        $('#approveDryingAgreementTerm').change(function () {
            if ($(this).is(':checked')) {
                $('#approveDryingAgreementTermInStep2').prop('checked', true);
                $('#dryingBtnMoveToStep2, #dryingBtnMoveToStep3').removeClass('disabled');
            } else {
                $('#approveDryingAgreementTermInStep2').prop('checked', false);
                $('#dryingBtnMoveToStep2, #dryingBtnMoveToStep3').addClass('disabled');
            }
        });

        $('#dryingBtnMoveToStep2').click(function () {
            $('#dryingStep1').addClass('hidden');
            $('#dryingStep2').removeClass('hidden');
        });

        $('#dryingBtnBackToStep1').click(function () {
            $('#dryingStep2').addClass('hidden');
            $('#dryingStep1').removeClass('hidden');
        });

        if ($('#generateDryingPdf').length > 0) {
            $('#generateDryingPdf')[0].click();
        }
    };

    var init = function () {
        initEvent();
    };

    return {
        init: init
    };
})();

var PoolAndDepaAgreement = PoolAndDepaAgreement || (function () {

    var validateForDropdown = function (self) {
        var inputElement = $(self).parents(".showcase").find("input.form-element");
        var inputSelector = inputElement.attr('id');
        $("#newPurchasingAgreementForm").validate().element('#' + inputSelector);
        toggleDisableNextButton();
    };

    var enableDeliveryMode = function () {
        $('.div-DeliveryMode').removeClass('disabled');
    };

    var getDisplayValueInDropdown = function ($dropdown, selectedValue) {
        var result;
        $dropdown.find('li').each(function (index, item) {
            var matchValue = $(item).attr('data-value');
            if (matchValue === selectedValue) {
                result = $(item).find('a').html();
                return false;
            }
        });

        return result;
    };

    var getHarvestYear = function (periodInfo) {
        var startIndex = periodInfo.indexOf(';');
        var datePeriod = periodInfo.substring(startIndex + 1, startIndex + 9);
        var year = parseInt(datePeriod.substring(0, 4));
        var date = parseInt(datePeriod.substring(4));
        if (isNaN(year) || isNaN(date)) return "";

        return date < 701 ? year - 1 : year;
    };

    var validateForm = function () {
        if ($().validate) $('#newPurchasingAgreementForm').validate({
            ignore: [],
            errorElementClass: 'error',
            errorClass: 'error-item',
            errorElement: 'span',
            onkeyup: false,
            rules: {
                CommitQuantity: {
                    required: true,
                    digits: true,
                    min: 12
                },
                DeliveryMode: {
                    required: true
                },
                ProductItemId: {
                    required: true
                },
                GrainType: {
                    required: true
                },
                AgreementPeriod: {
                    required: true
                }
            },
            messages: {
                CommitQuantity: {
                    required: "Kvantitet ton måste anges",
                    digits: "Kvantitet ton anges numeriskt",
                    min: "Angiven kvantitet måste vara 12 ton eller mer"
                },
                DeliveryMode: {
                    required: "Transportsätt måste väljas"
                },
                ProductItemId: {
                    required: "Gröda måste väljas"
                },
                GrainType: {
                    required: "Sort måste väljas"
                },
                AgreementPeriod: {
                    required: "Leveranssätt måste väljas"
                }
            },
            highlight: function (element, errorClass, validClass) {
                $(element).addClass(this.settings.errorElementClass).removeClass(errorClass);
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).removeClass(this.settings.errorElementClass).removeClass(errorClass);
            },
            errorPlacement: function (error, element) {
                var typeElement = $(element).attr('type');
                if (typeElement === 'radio') {
                    element.parent('div.lm__radio').parent().before(error);
                } else {
                    element.after(error);
                }
            },
            submitHandler: function (form) {
                if ($('#approvePoolAgreementTerm').is(':checked')) {
                    form.submit();
                }
            }

        });
    };

    var toggleDisableNextButton = function () {
        var commitQuantity = parseInt($('#CommitQuantity').val());
        var isValid = $('#ProductItemId').val() != '' &&
            $('#GrainType').val() != '' &&
            $('input[name="DeliveryMode"]:checked').length > 0 &&
            $('#AgreementPeriod').val() != '' &&
            !isNaN(commitQuantity) && commitQuantity >= 12;
        if (isValid)
            $('#btnMoveToStep2').removeClass('disabled');
        else
            $('#btnMoveToStep2').addClass('disabled');
    };

    var getGrainTypes = function (priceAreaId, productItemId, agreementType) {
        $('#agreement-loader').show();
        $.ajax({
            dataType: "json",
            type: 'get',
            url: '/api/agreement/get-grain-type',
            data: { priceAreaId: priceAreaId, productItemId: productItemId, agreementType: agreementType },
            cache: false,
            success: function (data) {
                $('.grainTypeDropdown .dropdown').html('');
                $('.grainTypeDropdown > .showcase > a').html('Välj sort');
                $('#GrainType').val('');
                if (data.length > 0) {
                    $.each(data, function (index, item) {
                        $('.grainTypeDropdown .dropdown').append('<li data-value="' + item.GrainName + '"><a href="javascript:void(0)" onclick="PoolAndDepaAgreement.enableDeliveryMode()">' + item.GrainName + '</a></li>');
                    });

                    setDropdown($('.grainTypeDropdown'), 'type-3');

                    $('.grainTypeDropdown').find(".showcase .dropdown li a").click(function () {
                        validateForDropdown(this);
                    });

                    $('.grainTypeDropdown').parent().parent().removeClass('disabled');
                }
                toggleDisableNextButton();
            },
            error: function (jqXHR, textStatus, errorThrown) {
            },
            complete: function (jqXHR) {
                $('#agreement-loader').hide();
            }
        });
    };

    var initEvent = function () {
        $('#newPurchasingAgreementForm input[name="DeliveryMode"]:radio').change(function () {
            GroCommon.disableOrEnableElement('#newPurchasingAgreementForm .agreement-element', $(this));
            toggleDisableNextButton();
        });

        $('#newPurchasingAgreementForm .periodDropdown .dropdown a').click(function () {
            GroCommon.disableOrEnableElement('#newPurchasingAgreementForm .agreement-element', $(this));
        });

        $("#newPurchasingAgreementForm .agreement-element:last input[type=text]").keyup(function () {
            toggleDisableNextButton();
        });

        $('#approvePoolAgreementTerm').change(function () {
            if ($(this).is(':checked')) {
                $('#agreementSaveBtn').addClass('reverse-state').removeClass('disabled');
            } else {
                $('#agreementSaveBtn').addClass('disabled').removeClass('reverse-state');
            }
        });

        $('#btnMoveToStep2').click(function () {
            if ($().validate) {
                var isValid = $("#newPurchasingAgreementForm").valid();
                if (isValid) {
                    $('#span_Groda').html(getDisplayValueInDropdown($('.productDropdown .dropdown'), $('#ProductItemId').val()));
                    $('#span_Sort').html(getDisplayValueInDropdown($('.grainTypeDropdown .dropdown'), $('#GrainType').val()));
                    $('#span_Period').html(getDisplayValueInDropdown($('.periodDropdown .dropdown'), $('#AgreementPeriod').val()) + " " + getHarvestYear($('#AgreementPeriod').val()));

                    $('#span_Quantity').html($('#CommitQuantity').val());
                    $('#span_TransportType').html($('input[name="DeliveryMode"]:checked').prop('id'));

                    $('#pStep1').addClass('hidden');
                    $('#pStep2').removeClass('hidden');
                }
            }
        });

        $('#btnBackToStep1').click(function () {
            $('#pStep2').addClass('hidden');
            $('#pStep1').removeClass('hidden');
        });

        $('#newPurchasingAgreementForm').find(".showcase .dropdown li a").click(function () {
            validateForDropdown(this);
        });

        $('#newPurchasingAgreementForm #CommitQuantity').blur(function () {
            toggleDisableNextButton();
        });
    };

    var init = function () {
        initEvent();
        validateForm();
    };

    return {
        init: init,
        getGrainTypes: getGrainTypes,
        enableDeliveryMode: enableDeliveryMode
    };
})();

$(document).ready(function () {
    var myTimeBooking = new TimeBookingPage();
    myTimeBooking.init();
    $(document).trigger("enhance.tablesaw");
});

var TimeBookingFunction = TimeBookingFunction || (function () {
    var blockUI = function () {
        $("#loader").show();
    };
    var unBlockUI = function () {
        $("#loader").hide();
    };
    var fillContentToModal = function (dialogId, header, content, openDialog, dialogType) {
        var $dialogArea = $(dialogId);
        var $iconElement = $dialogArea.find("span.popup-type");
        if (dialogType) {
            $iconElement.removeClass("hidden");
            $iconElement.addClass(GroCommon.getModalIconClass(dialogType));
        } else {
            $iconElement.addClass("hidden");
        }

        $dialogArea.find(".lm__wide-modal__title").html(header);
        $dialogArea.find("p").append(content);
        $dialogArea.find(".btn-ok").on("click", function () {
            $dialogArea.addClass("hidden");
        });
        if (openDialog) {
            $dialogArea.removeClass("hidden");
        }
    };
    var clearContentToModal = function (dialogId) {
        var dialogArea = $(dialogId);
        dialogArea.find(".lm__wide-modal__title").html("");
        dialogArea.find("p").html("");
        dialogArea.find(".btn-ok").unbind("click");
    };
    var fillContentToDeleteDialog = function (header, content) {
        var dialogArea = $("#deleteDialog");
        dialogArea.find(".modal-header-title").html(header);
        dialogArea.find("p").append(content);
        dialogArea.find(".btn-cancel").on("click",
            function () {
                dialogArea.hide();
            });
        dialogArea.find(".btn-ok").on("click",
            function () {
                dialogArea.hide();
            });
        dialogArea.show();
    };
    var clearContentToDeleteDialog = function () {
        var dialogArea = $("#deleteDialog");
        dialogArea.find(".lm__wide-modal__title").html("");
        dialogArea.find("p").html("");
        dialogArea.find(".btn-ok").unbind("click");
        dialogArea.find(".btn-cancel").unbind("click");
    };
    var copyValuesToEnableEdit = function (editObj, listTimebooking) {
        $("#dispalyMessageHeader").html('Ändra bokning genom att ändra uppgifter nedan och klicka Uppdatera bokning.');
        $('#myDisplayMessage').html(editObj.displayMessage);
        $('#IDLevnr').val(editObj.idLevnr);
        $('#IDReg').val(editObj.idReg);
        $('#IDOvrigt').val(editObj.idOvrigt);
        $('#IDEpost').val(editObj.idEpost);
        $('#IDMobil').val(editObj.idMobil);
        $('#saveAction').val('Update');
        $('#ReservationID').val(editObj.reservationId);
        $('#SpeditorNo_ForUpdate').val(editObj.speditorNo);
        $('#CustomerNo_ForUpdate').val(editObj.customerNo);
        $('#CustomerName_ForUpdate').val(editObj.customerName);
        $('#newCustomerNo').val(editObj.customerNo);
        $('#newCustomerName').val(editObj.customerName);

        var reminder = $("#IDReminder");
        if (editObj.idReminder === "0" || editObj.idReminder === "") {
            reminder.attr("data-value", "");
            reminder.find('input[name="IDReminder"]').val("");
            reminder.find(">a").html("Ingen påminnelse");
        } else {
            reminder.attr("data-value", editObj.idReminder);
            reminder.find('input[name="IDReminder"]').val(editObj.idReminder);
            var subReminder = reminder.find('ul > li[data-value="' + editObj.idReminder + '"]');
            var valueSubReminder = subReminder.find("a").html();
            subReminder.addClass("selected");
            reminder.find(">a").html(valueSubReminder);
        }
        $('#TransportOrderNo_ForUpdate').val(editObj.transportOrderNo);
        $('#ContractNo_ForUpdate').val(editObj.contractNo);
        $('#ReminderEmail_ForUpdate').val(editObj.reminderEmail);
        $('#ReminderSMS_ForUpdate').val(editObj.reminderSms);
        $('#Owner').val(editObj.owner);
        $('#SaveTable').show();
        if (listTimebooking == false) {
            $("#DateRegistered").val(editObj.dateRegistered);
            $('#saveBtn').hide();
            $('#newCustomerNo').removeAttr('disabled');
            $('input:checkbox').attr('checked', false);
            $('#updateBtn').show();
        } else {
            $("#DateRegisteredList").val(editObj.dateRegistered);
            if ($('#CustomerName_ForUpdate').val() != editObj.customerName) {
                alert('fel');
            }
            $('#updateListBtn').show();
            $('html, body').animate({
                scrollTop: $("#updateListBtn").offset().top
            }, 1000);
        }
    };
    var validateSaveTable = function (email, phone, regnr, levnr) {
        var reEmail =
            /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        var rePhone = /^\+?(\d[\d-. ]+)?(\([\d-. ]+\))?[\d-. ]+\d$/;
        var reRegnr = /^([a-zA-Z]{3}\d{3})+$/;
        var reLevnr = /^\d+$/;
        var result = true;
        TimeBookingFunction.clearValidateSaveTable();

        var reminder = $('#IDReminder').attr('data-value');

        if ((email !== "" && !reEmail.test(email))) {
            result = false;
            $("#IDEpost").addClass("error");
            $("#IDEpost-error").show();
        }

        if (phone !== "" && !rePhone.test(phone)) {
            result = false;
            $("#IDMobil").addClass("error");
            $("#IDMobil-error").show();
        }
        //if ($('#IDReg').hasClass('updateRequiered')) {
            if (!regnr) {
                result = false;
                $("#IDReg").addClass("error");
                $("#IDReg-error").show();
            }
        //}
        if (!reLevnr.test(levnr)) {
            result = false;
            $("#IDLevnr").addClass("error");
            $("#IDLevnr-error").show();
        }

        if (reminder && reminder !== "0" && phone === "" && email === "") {
            result = false;
            $('#IDEpost-IDMobil-error').show();
            $('#IDEpost').addClass("error");
            $('#IDMobil').addClass("error");
        }
        return result;
    };
    var clearValidateSaveTable = function () {
        $("#IDEpost-error").hide();
        $("#IDMobil-error").hide();
        $("#IDLevnr-error").hide();
        $("#IDReg-error").hide();
        $("#IDEpost").removeClass("error");
        $("#IDMobil").removeClass("error");
        $("#IDReg").removeClass("error");
        $("#IDLevnr").removeClass("error");
        $('#IDEpost-IDMobil-error').hide();
    };
    return {
        blockUI: blockUI,
        unBlockUI: unBlockUI,
        fillContentToModal: fillContentToModal,
        clearContentToModal: clearContentToModal,
        fillContentToDeleteDialog: fillContentToDeleteDialog,
        clearContentToDeleteDialog: clearContentToDeleteDialog,
        copyValuesToEnableEdit: copyValuesToEnableEdit,
        validateSaveTable: validateSaveTable,
        clearValidateSaveTable: clearValidateSaveTable
    };
})();

var TimeBookingPage = function () {
    var dialogType = GroCommon.modalInfoClass;
    var clearResultTable = function () {
        $("#resultTable").html('');
    };

    var extractForDropdown = function (elId, extractFrom) {
        var arr = [],
            extractFormLen = extractFrom.length;

        if (extractFormLen === 0) {
            var name = $('#' + elId).closest('div').siblings('span').text();
            name = name.replace('*', '');
            $('#' + elId + '> ul > li').remove();
            $('#' + elId).attr('data-value', '');
            $('#' + elId).closest('div').addClass('disabled');
            $('#' + elId + '> a').html(name + ' saknas');
        } else {
            $('#' + elId).closest('div').removeClass('disabled');
            for (var i = 0; i < extractFormLen; i++) {

                arr[arr.length] = '<li data-value="' + extractFrom[i].Value + '"><a href="javascript:void(0)">' + extractFrom[i].Display + '<\/a><\/li>';
                if (extractFrom[i].IsSelected == true) {
                    $('#' + elId + '> a').html(extractFrom[i].Display);
                    if (elId == 'resourceDrp') {
                        $('#' + elId).attr('regNoMandatory', extractFrom[i].RegNoMandatory);
                    }
                    $('#' + elId).attr('data-value', extractFrom[i].Value);
                }
            }
        }
        return arr.join('');
    };
    //Search customer
    var searchCustomer = function () {
        clearResultTable();
        $('#agrementDriedUnDried').hide();
        var searchString = $('#seachFieldTxt').val();
        var resourceValue = $('#resourceDrp').attr('data-value');
        if (jQuery.trim(searchString) != '') {
            var searchType = $('#search-option').attr('data-value');
            var loadOrUnlodValue = $("input[name='loadOrUnlodRad']:checked").val();
            var customerSearcType = $("input[name='companySelected']:checked").val();
            var isInternal = $("#IsInternal").val();
            TimeBookingFunction.blockUI();
            var parameters = "{'resourceGroupId':'" + resourceValue + "', 'searchString':'" + searchString + "', 'searchType':'" + searchType + "', 'loadOrUnlodValue':'" + loadOrUnlodValue + "', 'customerSearcType':'" + customerSearcType + "', 'isInternal':'" + isInternal + "'}";
            $.ajax({
                type: 'POST',
                url: '/api/time-booking/CustomerSearch',
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                data: parameters,

                success: function (response) {
                    TimeBookingFunction.unBlockUI();
                    searchCustomerSuccess(response.customerResult);
                },
                error: function (response) {
                    TimeBookingFunction.unBlockUI();
                }
            });
        }

        var searchCustomerSuccess = function (response) {
            var dialogHtml;
            if (response.Status == 500) {
                TimeBookingFunction.clearContentToModal("#dialogArea");
                dialogHtml = response.ErrorMessage + '<br/><br/>';
                TimeBookingFunction.fillContentToModal("#dialogArea", "Fel uppstod", dialogHtml, true, dialogType.error);
                return;
            }
            var customers = (typeof response.Customers) == 'string' ? eval('(' + response.Customers + ')') : response.Customers;
            setCustomerInfo(customers);
            if ($('#search-option').attr("data-value") === '9' && (response.Ios && response.Ios.length > 0)) {
                TimeBookingFunction.clearContentToModal("#dialogArea");
                dialogHtml = '<p>Inköpsordrar kopplade till kundnummer: ' + response.Customers[0].CustomerNo + '</p>';
                dialogHtml += '<p>Klicka på någon av nedanstående inköpsordrar för att gå direkt till den</p><br/>';
                dialogHtml += '<table style="display: block; overflow-y: scroll; height: 300px;">' +
                    '<thead><tr>' +
                    '<th>IONummer</th><th>Artikel</th><th>Kvantitet</th><th>Anläggning</th></tr></thead>' +
                    '<tbody>';
                $.each(response.Ios, function (i, d) {
                    dialogHtml += '<tr><td><a href="?ion=' +
                        d.IONumber +
                        '">' +
                        d.IONumber +
                        '</a></td><td>' +
                        d.ItemName +
                        '</td><td>' +
                        d.Quantity / 1000 +
                        '</td><td>' +
                        d.WarehouseName +
                        '</td></tr>';
                });
                dialogHtml += '</tbody>' + '</table>';
                TimeBookingFunction.fillContentToModal("#dialogArea", "Välj inköpsorder nedan", dialogHtml, true);
            }

            if (response.BookingOrder !== null) {
                if (response.BookingOrder.Quantity != undefined && response.BookingOrder.Quantity !== null) {
                    $('#quantityTxt').val(response.BookingOrder.Quantity / 1000);

                }

                if (response.BookingOrder.DeliveryDate !== null) {
                    $('#selectedDate').val(new Date(parseInt(response.BookingOrder.DeliveryDate.substr(6))).toShortDateString());
                    if ($('#selectedDate').val().length < 10) {
                        $('#selectedDate').val(new Date().toShortDateString());
                    }
                }
                if ($('#search-option').attr("data-value") === '5') {
                    if (response.BookingOrder.Status > 40) {
                        unblockUI();
                    } else if (response.BookingOrder.Status == 40) {
                        unblockUI();
                    }
                    else if (response.BookingOrder.DeliveryAssuranceConfirmed == false) {
                        TimeBookingFunction.clearContentToModal("#dialogArea");
                        TimeBookingFunction.fillContentToModal("#dialogArea", "Redan bokad", 'Obs! Bokning ej tillåten på denna inköpsorder! Leveransförsäkran saknas', true, dialogType.error);
                    }
                    getIOResource(response.BookingOrder.Warehouse);
                    searchItems('', $('#resourceDrp').attr('data-value'));
                }
                else if ($('#search-option').attr("data-value") === '7' || $('#search-option').attr("data-value") === '8' || $('#search-option').attr("data-value") === '6') {
                    getIOResource(response.BookingOrder.Warehouse);
                    searchItems('', $('#resourceDrp').attr('data-value'));
                }

                if (response.BookingOrder.ItemNumber !== null && response.BookingOrder.ItemNumber != '') {
                    var dried = 'torkad';
                    var $articlesDrp = $('#articlesDrp');
                    $("#agrementDriedUnDried").val(response.BookingOrder.Torkat ? 'Torkad' : 'Otorkad');
                    var driedUnDried = $("#agrementDriedUnDried").val();

                    if (!response.BookingOrder.Torkat) {
                        dried = 'otorkad';
                    }

                    var searchString = new String(response.BookingOrder.ItemNumber + '-' + dried + '-' + response.BookingOrder.Sort);

                    searchString = searchString.toLowerCase();
                    $('#articlesDrp > ul li').each(function () {
                        if ($(this).attr("data-value").toLowerCase().indexOf(searchString) != -1) {
                            $articlesDrp.attr("data-value", $(this).attr("data-value"));
                            $articlesDrp.find(">a").html($(this).find(">a").html());
                        }
                    });
                }

                $("div").data("Linenumber", response.BookingOrder.Linenumber);
                $("#Linenumber").val(response.BookingOrder.Linenumber);
            }
            if (response.RegNo !== null) {
                $('#IDReg').val(response.RegNo);
            }
            if (validateRequiredFieldsForSearch()) {
                $("#searchAvailbleSlotsBtn").parent().removeClass("disabled-btn");
                searchAvailableSlots();
                if ($('#search-option').attr('data-value') == 5) {
                    $('#IDLevnr_StartValue').val($('#seachFieldTxt').val());
                } else {
                    $('#IDLevnr_StartValue').val('');
                }
            }
            else {
                $('#searchAvailbleSlotsBtn').parent().addClass("disabled-btn");
            }
        };

        var getIOResource = function (warehouse) {
            var resourceListLoadSuccess = function (response, warehouseId) {
                var resource = $("#resourceDrp");
                var isInternal = $('#IsInternal');
                clearDropDown('resourceDrp', 'Välj anläggning');
                clearDropDown('articlesDrp', 'Välj artikel');
                var resources = (typeof response) == 'string' ? eval('(' + response + ')') : response;
                $(resource).find('> ul > li').append(extractForDropdown('resourceDrp', resources));
                setDropdown($('#resourceDrp').parent(), 'type3');
                for (var i = 0; i < resources.length; i++) {
                    if ((warehouseId !== undefined && response[i].M3Id === warehouseId) ||
                        (warehouseId !== undefined && response[i].Value === warehouseId)) {
                        $(resource).attr("data-value", resources[i].Value);
                        $(resource).find(">a").html(resources[i].Display);
                        break;
                    }
                }
                validateRequiredFieldsEvent();
                searchItemEvent();
            };
            $.ajax({
                type: 'POST',
                url: '/api/time-booking/LoadResourceGroupsOnIO',
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                data: "{'warehouseId':'" + warehouse + "', 'isInternal':'" + isInternal + "'}",
                async: false,
                success: function (response) {
                    resourceListLoadSuccess(response.Resource, warehouse);
                },
                error: function () {
                    clearDropDown('resourceDrp', 'Välj anläggning');
                    clearDropDown('articlesDrp', 'Välj artikel');
                    clearDropDown('veichleTypeDrp', 'Välj fordon');
                    alert('Error');
                }
            });


        };

        var setCustomerInfo = function (customers) {
            if (customers != null) {
                var noOfCustomers = customers.length;
                if (noOfCustomers == 1) {
                    $('#customerNo').val(customers[0].CustomerNo);
                    $('#customerName').val(customers[0].Name);
                    $('#IDEpost_StartValue').val(customers[0].Email);
                    $('#IDMobil_StartValue').val(customers[0].MobileNo);

                    $('#IDEpost').val(customers[0].Email);
                    $('#IDMobil').val(customers[0].MobileNo);
                    displayWarningAboutDemoCustomer(customers[0].Name);
                } else {
                    TimeBookingFunction.clearContentToModal("#dialogArea");
                    TimeBookingFunction.fillContentToModal("#dialogArea", "Information saknas", 'Hittade ingen kund, avtal, transportorder eller sändningsorder med nr ' + $('#seachFieldTxt').val() + '.', true, dialogType.info);
                }

            }
        };

        var displayWarningAboutDemoCustomer = function (customerName) {
            customerName = customerName.toLowerCase();
            if ((customerName.indexOf('testkund') >= 0) || (customerName.indexOf('demokund') >= 0)) {
                TimeBookingFunction.clearContentToModal("#dialogArea");
                TimeBookingFunction.fillContentToModal("#dialogArea", "Demokund", 'Obs! Du försöker boka på en test eller demokund vilket orsakar problem i vissa fall. Gör därför alltid bokningen i rätt kundnummer!', true, dialogType.error);
            }
        };
    };

    //Update reservation
    var clearForm = function () {
        var reminder = $("#IDReminder");
        reminder.attr("data-value", "0");
        reminder.find(">a").html("Ingen påminnelse");
        reminder.find('input[name="IDReminder"]').val("0");
        $("#IDOvrigt").val('');
        $("#IDLevnr").val($("#IDLevnr_StartValue").val());
        $("#IDReg").val('');
        $('#IDEpost').val($('#IDEpost_StartValue').val());
        $('#IDMobil').val($('#IDMobil_StartValue').val());
        $('#saveAction').val('New');
        $('#updateBtn').hide();
        $('#saveBtn').show();

        $('#myDisplayMessage').html('');
        $('#dispalyMessageHeader').html('&nbsp;');
        $('#newCustomerNo').attr('disabled', 'disabled');
    };
    var updateReservation = function () {
        var updateReservationSuccess = function (response) {
            var content = $("<p></p>");
            for (var i = 0; i < response.length; i++) {
                if (response[i].Status == 200) {
                    content.append(response[i].Message);
                } else {
                    content.append(response[i].ErrorMessage);
                }
                content.append('<br \/>');
            }
            TimeBookingFunction.clearContentToModal("#dialogArea");
            clearForm();
            TimeBookingFunction.fillContentToModal("#dialogArea", "Bokningen uppdaterad", content, true, dialogType.success);
            searchAvailableSlots();
        };

        var updateReservationError = function () {
            TimeBookingFunction.clearContentToModal("#dialogArea");
            TimeBookingFunction.fillContentToModal("#dialogArea", "Uppdateringsfel", "Fel uppstod när bokningen skulle uppdateras.", true, dialogType.error);
            searchAvailableSlots();
        };

        var errors = validateFieldsForReservation(true);

        if (errors.length > 0) {
            TimeBookingFunction.clearContentToModal("#dialogArea");
            var errorContent = $("<p></p>").append('<ul>' + errors.join('') + '</ul>');
            TimeBookingFunction.fillContentToModal("#dialogArea", "Uppgifter saknas", errorContent, true, dialogType.success);
        } else {
            var email = $('#IDEpost').val();
            var mobileNo = $('#IDMobil').val();
            var licensePlateNo = $('#IDReg').val();
            var leveransforsakransnummer = $('#IDLevnr').val();

            if (TimeBookingFunction.validateSaveTable(email, mobileNo, licensePlateNo, leveransforsakransnummer)) {
                var form = $("#form-time-booking");
                $.ajax({
                    type: "POST",
                    url: '/api/time-booking/UpdateReservation',
                    data: form.serialize(),
                    success: function (response) { updateReservationSuccess(response.updateReservations); },
                    error: function (response) { updateReservationError(response.updateReservations); }
                });
            }
        }
    };
    //Delete reservation
    var deleteReservation = function (reservationId, time, owner, customerNo, dateRegistered, isInternal) {
        var deletReservationSuccess = function (response) {
            var content = $("<p></p>");
            for (var i = 0; i < response.length; i++) {
                if (response[i].Status == 500) {
                    content.append('<span class="ui-icon ui-icon-alert" style="float:left; margin:0 7px 20px 0;"></span>');
                }
                content.append(response[i].Message + '<br \/>');
            }

            TimeBookingFunction.clearContentToModal("#dialogArea");
            TimeBookingFunction.fillContentToModal("#dialogArea", "Borttagning", content, true, dialogType.error);
            $("#dialogArea").find(".btn-ok").on("click", function () {
                searchAvailableSlots();
            });
        };

        var deletReservationError = function (response) {
            TimeBookingFunction.clearContentToModal("#dialogArea");
            TimeBookingFunction.fillContentToModal("#dialogArea", "Raderingsfel", "Fel uppstod när bokningen skulle raderas.", true, dialogType.error);
            searchAvailableSlots();
        };

        var deletReservationProcess = function (reservationId, owner, customerNo, dateRegistered, isInternal) {
            clearForm();
            var o = {};
            o.reservationId = reservationId;
            o.owner = owner;
            o.customerNo = customerNo;
            o.dateRegistered = dateRegistered;
            o.isInternal = isInternal;
            $.ajax({
                type: 'POST',
                url: '/api/time-booking/DeleteReservation',
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(o),

                success: function (response) { deletReservationSuccess(response.deleteReservations); },
                error: function (response) { deletReservationError(response.deleteReservations); }
            });
        };

        var content = $("<p></p>").append('Vill du verkligen radera bokningen<br \/> kl: ' + time + '?');
        TimeBookingFunction.clearContentToDeleteDialog();
        TimeBookingFunction.fillContentToDeleteDialog("Ta bort bokning?", content);
        $("#deleteDialog").find(".btn-ok").on("click", function () {
            deletReservationProcess(reservationId, owner, customerNo, dateRegistered, isInternal);
        });
    };
    //Search items
    var searchItems = function (currentArticleItem, resource) {
        var searchItemComplete = function (response) {
            var vechicles = (typeof response.Vehicles) == 'string' ? eval('(' + response.Vehicles + ')') : response.Vehicles;
            var reservationStops = (typeof response.ReservationStops) == 'string' ? eval('(' + response.ReservationStops + ')') : response.ReservationStops;
            var articles = (typeof response.Items) == 'string' ? eval('(' + response.Items + ')') : response.Items;
            clearDropDown('articlesDrp', 'Välj artikel');
            $('#articlesDrp > ul').append(extractForDropdown('articlesDrp', articles));
            $('#veichleTypeDrp > ul').append(extractForDropdown('veichleTypeDrp', vechicles));
            setDropdown($('#articlesDrp').parent(), 'type3');
            setDropdown($('#veichleTypeDrp').parent(), 'type3');
            if (vechicles.length > 0) {
                $("#veichleTypeDrp > a").html(vechicles[0].Display);
                $("#veichleTypeDrp").attr("data-value", vechicles[0].Value);
            }
            validateRequiredFieldsEvent();
            buildReservationStops(reservationStops);
        };

        var buildReservationStops = function (reservationStops) {
            var i = 0;
            var arr = [];
            for (i = 0; i < reservationStops.length; i++) {
                arr[arr.length] = '<li>' + reservationStops[i].ResourceName + '<\/li>';
                arr[arr.length] = '<li>' + reservationStops[i].FromDate + ' ' + reservationStops[i].FromTime + ' - ';
                if (reservationStops[i].ToDate.length > 0) {
                    arr[arr.length] = reservationStops[i].ToDate + ' ' + reservationStops[i].ToTime + '<\/li>';
                } else {
                    arr[arr.length] = ' tillsvidare<\/li>';
                }
                arr[arr.length] = '<li style="font-style: italic">' + reservationStops[i].Message + '<br \/><\/li>';
            }
            $("#showReservationStopps").find("> ul").html(arr.join(''));
            if (i > 0) {
                $('#showReservationStopps').show();
            } else {
                $('#showReservationStopps').hide();
            }
        };

        var resourceValue = resource;
        var selectedDateValue = $('#selectedDate').val();

        if (!currentArticleItem) {
            currentArticleItem = $('#articlesDrp').attr("data-value");
        }

        var showOnlyUnloadingItems = ($("input:radio[name='loadOrUnlodRad']:checked").val() == '2');
        clearDropDown('articlesDrp', 'Välj artikel');
        clearDropDown('veichleTypeDrp', 'Välj fordon');
        $('#showReservationStopps').hide();
        if (resourceValue != '0' && resourceValue != '' && selectedDateValue != '') {
            TimeBookingFunction.blockUI();
            var parameters = "{'resourceGroupId':'" + resourceValue + "', 'selectedDate':'" + selectedDateValue + "', 'currentArticleItem':'" + currentArticleItem + "', 'showOnlyUnloadingItems':'" + showOnlyUnloadingItems + "'}";
            $.ajax({
                type: 'POST',
                url: '/api/time-booking/loadItemsOnresourceGroup',
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                data: parameters,
                async: false,
                success: function (response) {
                    searchItemComplete(response);
                    TimeBookingFunction.unBlockUI();
                },
                error: function () {
                    TimeBookingFunction.unBlockUI();
                    alert('Error');
                }
            });
        }
    };
    var clearDropDown = function (elId, defaultText) {

        $('#' + elId + '> ul > li').remove();
        if ($.trim(defaultText) != '') {
            $('#' + elId).attr('data-value', '');
            $('#' + elId + '> a').html(defaultText);
        }

    };
    var validateRequiredFieldsForSearch = function () {
        var aRequiredFieldHasNoValue = false;
        $('.searchSlotRequired').each(function () {
            if ($(this).is('input')) {
                if ($.trim($(this).val()).length == 0) {
                    aRequiredFieldHasNoValue = true;
                    if ($(this).is('#quantityTxt')) {
                        $("#Quantity-error").hide();
                        $(this).removeClass("error");
                    }
                }
                else if ($(this).is('#quantityTxt')) {
                    if (!$.isNumeric($.trim($(this).val()))) {
                        aRequiredFieldHasNoValue = true;
                        $("#Quantity-error").show();
                        $(this).addClass("error");
                    } else {
                        $("#Quantity-error").hide();
                        $(this).removeClass("error");
                    }
                }
            }
            if ($(this).is('li')) {
                if ($(this).attr('data-value') == 0 || $(this).attr('data-value') == '') {
                    aRequiredFieldHasNoValue = true;
                }
            }
        });
        return !aRequiredFieldHasNoValue;
    };
    //Searchavailble slots
    var searchAvailableSlots = function () {
        var showHideTimebookingTable = function (isShow) {
            if (isShow) {
                $("#resultTable").show();
                $(".resultCaption").show();
                $("#resultTable-box").addClass("has-separator");
            } else {
                $("#resultTable").hide();
                $(".resultCaption").hide();
                $("#resultTable-box").removeClass("has-separator");
            }
            $("#SaveTable").hide();
            $("#saveBtn").hide();
        };
        var searchAvailableSlotsSuccess = function (response) {
            var hookupEventsForTimeCheckboxes = function () {
                $(".bookingRows").change(function () {
                    var anyChecked = false;
                    $(".bookingRows").each(function () {
                        if ($(this).prop("checked")) {
                            anyChecked = true;
                        }
                    });
                    if (anyChecked) {
                        $("#SaveTable").show();
                        $("#saveBtn").removeClass("disabled-btn");
                        clearForm();
                        TimeBookingFunction.clearValidateSaveTable();
                    } else {
                        $("#SaveTable").hide();
                        $("#saveBtn").hide();
                        $("#saveBtn").addClass("disabled-btn");
                    }
                });
            };

            clearResultTable();
            $("#resultTable").append(response);
            if (response !== "") {
                $(".tb-deleteBtn").unbind("click").bind("click", function (e) {
                    var row = $(this).parents(".tb-row");
                    var reservationId = row.find(".tb-reservationId").val();
                    var fromDateTime = row.find(".tb-fromDateTime").val();
                    var owner = row.find(".tb-owner").val();
                    var customerNo = row.find(".tb-customerNo").val();
                    var dateRegistered = row.find(".tb-dateRegistered").val();
                    var isInternal = $("#IsInternal").val();
                    deleteReservation(reservationId, fromDateTime, owner, customerNo, dateRegistered, isInternal);
                    e.preventDefault();
                });
                $(".tb-editBtn").unbind("click").bind("click", function (e) {
                    var row = $(this).parents(".tb-row");
                    var editObj = {};
                    editObj.idLevnr = row.find(".tb-idLevnr").val();
                    editObj.idReg = row.find(".tb-idReg").val();
                    editObj.idOvrigt = row.find(".tb-idOvrigt").val();
                    editObj.idReminder = row.find(".tb-idReminder").val();
                    editObj.idEpost = row.find(".tb-idEpost").val();
                    editObj.idMobil = row.find(".tb-idMobil").val();
                    editObj.reservationId = row.find(".tb-reservationId").val();
                    editObj.speditorNo = row.find(".tb-speditorNo").val();
                    editObj.customerNo = row.find(".tb-customerNo").val();
                    editObj.customerName = row.find(".tb-customerName").val();
                    editObj.transportOrderNo = row.find(".tb-transportOrderNo").val();
                    editObj.contractNo = row.find(".tb-contractNo").val();
                    editObj.reminderEmail = row.find(".tb-reminderEmail").val();
                    editObj.reminderSms = row.find(".tb-reminderSms").val();
                    editObj.fromDateTime = row.find(".tb-fromDateTime").val();
                    editObj.itemInfo = row.find(".tb-item").html();
                    editObj.quantity = row.find(".tb-quantity").html();
                    editObj.unit = row.find(".tb-unit").html();
                    editObj.owner = row.find(".tb-owner").val();
                    editObj.resourceName = row.find(".tb-resourceName").val();
                    editObj.dateRegistered = row.find(".tb-dateRegistered").val();
                    editObj.displayMessage = "Tid: " + editObj.fromDateTime + ", Kund: " + editObj.customerNo + ' ' + editObj.customerName + ', Bokningsnr: ' + editObj.reservationId +
                        ', Artikel: ' + editObj.itemInfo + ' ' + editObj.quantity + ' ' + editObj.unit + '<br \/>Resurs: ' + editObj.resourceName;
                    TimeBookingFunction.copyValuesToEnableEdit(editObj, false);
                    e.preventDefault();
                });
                $(document).trigger("enhance.tablesaw");
                showHideTimebookingTable(true);
            }
            else {
                $(".tb-deleteBtn").unbind("click");
                $(".tb-editBtn").unbind("click");
                showHideTimebookingTable(false);
            }
            hookupEventsForTimeCheckboxes();
        };
        clearResultTable();
        if (validateRequiredFieldsForSearch()) {
            TimeBookingFunction.blockUI();
            var resourceValue = $('#resourceDrp').attr('data-value');
            var selectedDateValue = $('#selectedDate').val();
            var agrementDriedUnDriedValue = $('#agrementDriedUnDried').val();
            var articlesValue = $('#articlesDrp').attr('data-value');
            var quantityTxtValue = $('#quantityTxt').val();
            var loadOrUnlodValue = $("input[name='loadOrUnlodRad']:checked").val();
            var veichleTypeValue = $('#veichleTypeDrp').attr('data-value');
            var searchTypeValue = $('#search-option').attr('data-value');
            var customerNo = $('#customerNo').val();
            var isInternal = $('#IsInternal').val();

            if (resourceValue != '' && selectedDateValue != '' && quantityTxtValue != '' && (articlesValue != '' || argementValue != '')) {
                var parameters = "{'resourceGroupId':'" + resourceValue + "', 'selectedDate':'" + selectedDateValue + "', 'article':'" + articlesValue + "', 'qty':'" + quantityTxtValue + "', 'loadunload':'" + loadOrUnlodValue + "', 'veichleType':'" + veichleTypeValue + "', 'driedUnDried':'" + agrementDriedUnDriedValue + "', 'customerNo':'" + customerNo + "','searchType':'" + searchTypeValue + "', 'isInternal':'" + isInternal + "'}";
                $.ajax({
                    type: 'POST',
                    url: '/api/time-booking/SearchAvailbleSlots',
                    contentType: "application/json; charset=utf-8",
                    data: parameters,
                    success: function (response) {
                        searchAvailableSlotsSuccess(response);
                        TimeBookingFunction.unBlockUI();
                    },
                    error: function () {
                        TimeBookingFunction.unBlockUI();
                        showHideTimebookingTable(false);
                        alert("Error");
                    }
                });
            }
        }
    };
    var validateFieldsForReservation = function (isUpdate) {
        var arr = [];

        if (jQuery.trim($('#quantityTxt').val()) == '') {
            arr[arr.length] = '<li>Kvantitet saknar värde.<\/li>';
        }

        var quantityValue = parseInt(jQuery.trim($('#quantityTxt').val()), 10);
        if (isNaN(quantityValue) || quantityValue <= 0) {
            arr[arr.length] = '<li>Kvantitet måste ha ett värde större än 0.<\/li>';
        }
        if (jQuery.trim($('#customerNo').val()) == '') {
            arr[arr.length] = '<li>Ingen gilltigt kund har valts.<\/li>';
        }
        if (jQuery.trim($('#veichleTypeDrp').attr('data-value')) == '') {
            arr[arr.length] = '<li>Fordonstyp saknas.<\/li>';
        }
        if (jQuery.trim($('#selectedDate').val()) == '') {
            arr[arr.length] = '<li>Datum saknas.<\/li>';
        }
        if (jQuery.trim($('#articlesDrp').attr('data-value')) == '') {
            arr[arr.length] = '<li>Artikel saknas.<\/li>';
        }
        if (jQuery.trim($('#resourceDrp').attr('data-value')) == '') {
            arr[arr.length] = '<li>Resurs saknas.<\/li>';
        }
        if (!isUpdate) {
            var resourceValue = $('#resourceDrp').attr('data-value');
            var selectedDateValue = $('#selectedDate').val();
            var agrementDriedUnDriedValue = $('#agrementDriedUnDried').val();
            var articlesValue = $('#articlesDrp').attr('data-value');
            var quantityTxtValue = $('#quantityTxt').val();
            var loadOrUnlodValue = $("input[name='loadOrUnlodRad']:checked").val();
            var veichleTypeValue = $('#veichleTypeDrp').attr('data-value');
            var searchTypeValue = $('#search-option').attr('data-value');
            var customerNo = $('#customerNo').val();
            var ioNumber = $('#seachFieldTxt').val();

            if (resourceValue != '' && selectedDateValue != '' && quantityTxtValue != '' && (articlesValue != '' || argementValue != '')) {
                var parameters = "{'resourceGroupId':'" + resourceValue + "', 'selectedDate':'" + selectedDateValue + "', 'article':'" + articlesValue + "', 'qty':'" + quantityTxtValue + "', 'loadunload':'" + loadOrUnlodValue + "', 'veichleType':'" + veichleTypeValue + "', 'driedUnDried':'" + agrementDriedUnDriedValue + "', 'customerNo':'" + customerNo + "','searchType':'" + searchTypeValue + "', 'iONumber':'" + ioNumber + "'}";
                $.ajax({
                    type: 'POST',
                    url: '/api/time-booking/ExistBooking',
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    data: parameters,
                    async: false,
                    success: function (response) {
                        if (response.IsExistBooking == true) {
                            arr[arr.length] = "<li>Det finns redan en bokning på inköpsordern. Radera befintlig bokning innan du kan skapa en ny!<\/li>";
                        }
                    },
                    error: function () {
                        alert('ExistBooking');
                    }
                });
            }
        }
        return arr;
    };

    //Make reservation
    var makeReservation = function () {
        var makereservationContinue = function () {
            var reservations = [];
            var i = 0;
            var innerDTO = {};
            innerDTO['Agrement'] = '';
            innerDTO['SearchValue'] = $('#seachFieldTxt').val();
            innerDTO['Qty'] = $("#quantityTxt").val();
            innerDTO['VehicleAssortmentID'] = $('#veichleTypeDrp').attr('data-value');
            innerDTO['ResourceId'] = $('#resourceDrp').attr('data-value');
            innerDTO['Note'] = $('#IDOvrigt').val();

            innerDTO['ReminderInMinutesBefore'] = $('#IDReminder').attr("data-value");
            innerDTO['EmailAddress'] = $('#IDEpost').val();

            innerDTO['CustomerName'] = $("#customerName").val();
            innerDTO['CustomerNo'] = $("#customerNo").val();
            innerDTO['Dried'] = $('#agrementDriedUnDried').val();
            innerDTO['SearchType'] = $('#search-option').attr('data-value');
            innerDTO['SelectedDate'] = $('#selectedDate').val();
            innerDTO['Item'] = $('#articlesDrp').attr('data-value');
            innerDTO['Leveransforsakransnummer'] = $('#IDLevnr').val();
            innerDTO['LicensePlateNo'] = $('#IDReg').val() != null ? $('#IDReg').val() : "";
            innerDTO['MobilePhone'] = $('#IDMobil').val();
            innerDTO['IsInternal'] = $('#IsInternal').val();
            var Linenumber = $("div").data("Linenumber");
            if (Linenumber == null) {
                Linenumber = 0;
            }
            innerDTO['LineNumber'] = Linenumber;
            var performUnload = ($("input:radio[name='loadOrUnlodRad']:checked").val() === "2");

            if (TimeBookingFunction.validateSaveTable(innerDTO['EmailAddress'], innerDTO['MobilePhone'], innerDTO['LicensePlateNo'], innerDTO['Leveransforsakransnummer'])) {
                $('.bookingRows').each(function () {
                    if ($(this).is(':checked')) {
                        i++;
                        var o = {};
                        o['FromTime'] = $(this).attr('fromtime');
                        o['ResourceId'] = $(this).attr('resursid');
                        if (performUnload == true) {
                            o['Loading'] = 'false';
                            o['Unloading'] = 'true';
                        } else {
                            o['Loading'] = 'true';
                            o['Unloading'] = 'false';
                        }
                        reservations.push(o);
                    }
                });

                if (reservations.length > 0) {
                    innerDTO['Reservations'] = reservations;
                    var containerDTO = {};
                    containerDTO.reservationToMake = innerDTO;

                    $.ajax({
                        type: 'POST',
                        url: '/api/time-booking/MakeReservation',
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify(containerDTO),

                        success: function (response) {
                            makeReservationSuccess(response.makeReservations);

                        },
                        error: function (response) { makeResrvationError(response); }
                    });
                } else {
                    TimeBookingFunction.clearContentToModal("#dialogArea");
                    var content = $("<p></p>").append("Inga tider valda");
                    TimeBookingFunction.fillContentToModal("#dialogArea", "Tider saknas", content, true);
                }
            }

        };
        var makeReservationSuccess = function (response) {
            var arr = [];
            var msgTitle = '';
            var successCnt = 0;
            var errorCnt = 0;
            arr[arr.length] = '<h4>Bokningar:<\/h4>';
            arr[arr.length] = '<p>';
            for (var i = 0; i < response.length; i++) {
                if (response[i].Status == 200) {
                    if (i > 0) {
                        arr[arr.length] = '<br \/><br \/>';
                    }
                    arr[arr.length] = response[i].StartDate;
                    arr[arr.length] = ' kl: ';
                    arr[arr.length] = response[i].StartTime;
                    arr[arr.length] = '<br \/>';
                    arr[arr.length] = response[i].CustomerNo;
                    arr[arr.length] = ' ';
                    arr[arr.length] = response[i].CustomerName;
                    successCnt++;
                } else {
                    errorCnt++;

                    arr[arr.length] = response[i].ErrorMessage;
                }
            }
            arr[arr.length] = "<br \/>";
            arr[arr.length] = "<\/p>";
            if (errorCnt > 0 && successCnt === 0) {
                msgTitle = "Fel uppstod vid bokningen";
            } else if (errorCnt > 0 && successCnt > 0) {
                msgTitle = "Alla bokningar gick inte igenom";
            } else if (errorCnt == 0 && successCnt > 0) {
                msgTitle = "Bokningar sparade";
            }

            TimeBookingFunction.clearContentToModal("#dialogArea");
            TimeBookingFunction.fillContentToModal("#dialogArea", msgTitle, arr.join(""), true, dialogType.success);
            $("#saveBtn").addClass("disabled-btn");
            clearForm();
            searchAvailableSlots();
        };

        var makeResrvationError = function (response) {
            TimeBookingFunction.clearContentToModal("#dialogArea");
            TimeBookingFunction.fillContentToModal("#dialogArea", "Bokningsfel", "Fel uppstod när boking skulle registreras.", true, dialogType.error);
        };

        var errors = validateFieldsForReservation(false);
        if (errors.length > 0) {
            TimeBookingFunction.clearContentToModal("#dialogArea");
            var content = $("<p></p>").append(
                $("<ul></ul>").append(errors.join('')));
            TimeBookingFunction.fillContentToModal("#dialogArea", "Uppgifter saknas", content, true, dialogType.error);
            return false;
        } else {
            makereservationContinue();
        }
    };

    var searchAvalibleSlotAction = function () {
        clearForm();
        $("#resultTable").hide();
        $(".resultCaption").hide();
        $("#resultTable-box").removeClass("has-separator");
        $("#SaveTable").hide();
        $("#saveBtn").hide();
        searchAvailableSlots();
    };
    //Event
    var validateButtonSearchEvent = function () {
        $("#seachFieldTxt").unbind('keyup').keyup(function () {
            if ($(this).val() !== "") {
                $("#searcFieldhBtn").removeClass("disabled-btn");
            } else {
                $("#searcFieldhBtn").addClass("disabled-btn");
            }
        });
        $("#seachFieldTxt").unbind('change').change(function () {
            if ($(this).val() !== "") {
                $("#searcFieldhBtn").removeClass("disabled-btn");
            } else {
                $("#searcFieldhBtn").addClass("disabled-btn");
            }
        });
    };

    var makeReservationEvent = function () {
        $("#saveBtn").click(function () { makeReservation(); });
    };

    var updateReservationEvent = function () {
        $("#updateBtn").click(function () { updateReservation(); });
    };

    var validateRequiredFieldsEvent = function () {
        $("#form-time-booking").unbind('change').change(function () {
            if (validateRequiredFieldsForSearch()) {
                $("#searchAvailbleSlotsBtn").parent().removeClass("disabled-btn");
            }
            else {
                $('#searchAvailbleSlotsBtn').parent().addClass("disabled-btn");
            }
        });
        $("#quantityTxt").unbind('keyup').keyup(function () {
            if (validateRequiredFieldsForSearch()) {
                $("#searchAvailbleSlotsBtn").parent().removeClass("disabled-btn");
            }
            else {
                $('#searchAvailbleSlotsBtn').parent().addClass("disabled-btn");
            }
        });
        setDropdown($('#resourceDrp').parent(), 'type3');
        $(".searchSlotRequired .dropdown li a").on('click', function () {
            if (validateRequiredFieldsForSearch()) {
                $('#searchAvailbleSlotsBtn').parent().removeClass("disabled-btn");
            }
            else {
                $('#searchAvailbleSlotsBtn').parent().addClass("disabled-btn");
            }
        });
        if (validateRequiredFieldsForSearch()) {
            $('#searchAvailbleSlotsBtn').parent().removeClass("disabled-btn");
        }
        else {
            $('#searchAvailbleSlotsBtn').parent().addClass("disabled-btn");
        }
    };

    var searchItemEvent = function () {
        var dropdownResource = $('#resourceDrp .dropdown li a');
        dropdownResource.on('click', function () {
            var resourceValue = $(this).parent().attr('data-value');
            searchItems('', resourceValue);
            var regNoMandatory = $(this).parent().attr('regNoMandatory');
            if (regNoMandatory != null) {
                if (regNoMandatory.toLowerCase() == 'true') {
                    $('#IDReg').addClass('updateRequiered');
                } else {
                    $('#IDReg').removeClass('updateRequiered');
                }
            } else {
                $('#IDReg').removeClass('updateRequiered');
            }
        });

        var dropdownArticle = $('#articlesDrp .dropdown li a');
        dropdownArticle.on('click', function () {
            var articleValue = $(this).parent().attr('data-value');
            if (articleValue != null && articleValue != "") {
                var articleArr = articleValue.split('-');
                if (articleArr.length == 3) {
                    var artNo = articleArr[0];
                    var driedUndried = articleArr[1];
                    if (driedUndried.length >= 2) {
                        driedUndried = driedUndried.substring(0, 1).toUpperCase() + driedUndried.substring(1);
                    }

                    $('#agrementDriedUnDried').val(driedUndried);

                }
            }
        });
        $("#loadRadio").unbind("change").change(function () {
            searchItems("", $("#resourceDrp").attr("data-value"));
        });

        $("#unloadradio").unbind("change").change(function () {
            searchItems("", $("#resourceDrp").attr("data-value"));
        });

        $("#selectedDate").change(function () {
            searchItems("", $("#resourceDrp").attr("data-value"));
        });
    };

    var searchAvailableSlotsEvent = function () {
        $('#searchAvailbleSlotsBtn').on('click', function () {
            searchAvalibleSlotAction();
        });
    };

    var searchCustomerEvent = function () {
        $('#searcFieldhBtn').click(function () { searchCustomer(); });
    };

    var bokaSearchTypeChangeEvent = function () {
        $("#search-option > ul > li > a").click(function () {
            var placeholderData = $(this).html();
            $("#seachFieldTxt").attr('placeholder', "Ange " + placeholderData.toLowerCase());
        });
    };

    var searchCustomerWhenLoadPageEvent = function () {
        if ($('#seachFieldTxt').val() != '') {
            $("#searcFieldhBtn").removeClass("disabled-btn");
            searchCustomer();
        } else {
            $("#searcFieldhBtn").addClass("disabled-btn");
        }
    };

    var init = function () {
        searchItemEvent();
        validateRequiredFieldsEvent();
        searchAvailableSlotsEvent();
        makeReservationEvent();
        updateReservationEvent();
        searchCustomerEvent();
        bokaSearchTypeChangeEvent();
        searchCustomerWhenLoadPageEvent();
        validateButtonSearchEvent();

        if ($('#IDLevnr') && !$('#IDLevnr').val()) {
            $('#IDLevnr').val($('#seachFieldTxt').val());
        }
        //$("#resultTable-box").hide();
    };
    return {
        init: init,
        searchItems: searchItems,
        searchAvalibleSlotAction: searchAvalibleSlotAction
    };
};

$(document).ready(function () {
    var myListingBooking = new ListingBookingPage();
    myListingBooking.init();
    $(document).trigger("enhance.tablesaw");
});

var ListingBookingPage = function () {
    var dialogType = GroCommon.modalInfoClass;
    var lastSearchQuery = {};
    //search
    var doSearch = function () {
        TimeBookingFunction.blockUI();
        $('#SaveTable').hide();
        $('#updateListBtn').hide();

        var obj = {};
        obj.ResourceGroupId = $('#bl-resourceDrp').attr("data-value");
        obj.FromDate = $('#fromDateTxt').val();
        obj.ToDate = $('#toDateTxt').val();
        obj.RegNo = $('#RegNo').val();
        obj.CustomerNo = $('#customerNo').val();
        obj.IsInternal = $('#isInternal').val();
        obj.ReferenceType = '';
        obj.ReferenceNumber = '';
        obj.PurchseOrderLine = '';
        var containerDto = {};
        containerDto.request = obj;
        lastSearchQuery = obj;

        $.ajax({
            type: 'POST',
            url: '/api/listing-booking/SearchBookings',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(containerDto),

            success: function (response) {
                searchComplete(response);
                TimeBookingFunction.unBlockUI();
            },
            error: function (response) {
                alert('Error: ' + response);
                $("#search-result-book-listing").hide();
                TimeBookingFunction.unBlockUI();
            }
        });

        var searchComplete = function (response) {
            $("#search-result-book-listing").html(response);
            if (response.resultSearchBookings == undefined) {
                $("#search-result-book-listing").show();
            } else {
                $("#search-result-book-listing").hide();
            }
            deleteBookingEvents();
            editBookingEvent();
            printPageEvents();
            $(document).trigger("enhance.tablesaw");
        };
    };
    //delete
    var deleteBooking = function (deleteButton) {
        var dataValues = $(deleteButton).parent().parent();

        var reservationId = dataValues.find("> #reservationId").html();
        var reservationDate = dataValues.find("#from-date").val();
        var time = dataValues.find("#from-time").val();
        var owner = dataValues.find("> #owner").html();
        var customerNo = dataValues.find("> #customer-number").html();

        var content = $("<p></p>");
        content.append('<span class="ui-icon ui-icon-alert" style="float:left; margin:0 7px 20px 0;"></span>');
        content.append('Vill du verkligen radera bokningen<br \/> kl: ' + time + '?');
        TimeBookingFunction.clearContentToDeleteDialog();
        TimeBookingFunction.fillContentToDeleteDialog("Ta bort bokning?", content);
        $("#deleteDialog").find(".btn-ok").on("click", function () {
            deletReservationProcessList(reservationId, owner, customerNo, reservationDate, time);
        });

        var deletReservationProcessList = function (reservationId, owner, customerNo, reservationDate, time) {
            clearFormList();
            var o = {};
            o.reservationId = reservationId;
            o.owner = owner;
            o.customerNo = customerNo;
            o.dateRegistered = reservationDate + " " + time;
            $.ajax({
                type: 'POST',
                url: '/api/time-booking/DeleteReservation',
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(o),

                success: function (response) { deletReservationSuccessList(response.deleteReservations); },
                error: function (response) { deletReservationErrorList(); }
            });

            var deletReservationSuccessList = function (response) {
                var content = $("<p></p>");
                for (var i = 0; i < response.length; i++) {
                    if (response[i].Status == 500) {
                        content.append('<span class="ui-icon ui-icon-alert" style="float:left; margin:0 7px 20px 0;"></span>');
                    }
                    content.append(response[i].Message + '<br \/>');
                }
                TimeBookingFunction.clearContentToModal("#dialogArea");
                TimeBookingFunction.fillContentToModal("#dialogArea", "Borttagning", content, dialogType.error);

                doSearch();
                $('#SaveTable').hide();
                $('#updateListBtn').hide();
            };

            var deletReservationErrorList = function () {
                $('#SaveTable').hide();
                $('#updateListBtn').hide();
                alert('Fel uppstod vid anropet till tjänsten.');
            };
        };
    };
    //edit button
    var editBooking = function (editButton) {
        var editObj = {};
        var dataValues = $(editButton).parent().parent();
        editObj.resourceName = dataValues.find("#resourceName").val();
        editObj.itemName = dataValues.find("#itemName").val();
        editObj.weight = dataValues.find(">#weight").html();
        editObj.fromTime = dataValues.find("#from-time").val();
        editObj.itemNo = dataValues.find(">#itemNo").html();
        editObj.idLevnr = dataValues.find(">#leveransforsakransnr").html();
        editObj.idReg = dataValues.find(">#licensePlateNo").html();
        editObj.idOvrigt = dataValues.find("#note").val();
        editObj.idReminder = dataValues.find("#reminderMinutesBefore").val();
        editObj.idEpost = dataValues.find("#emailAddress").val();
        editObj.idMobil = dataValues.find("#mobileNo").val();
        editObj.reservationId = dataValues.find(">#reservationId").html();
        editObj.speditorNo = dataValues.find("#speditorNo").val();
        editObj.customerNo = dataValues.find(">#customer-number").html();
        editObj.customerName = dataValues.find("#customer-name").val();
        editObj.transportOrderNo = dataValues.find("#transportOrderNo").val();
        editObj.contractNo = dataValues.find("#contractNo").val();
        editObj.reminderEmail = dataValues.find("#reminderEmail").val();
        editObj.reminderSms = dataValues.find("#reminderSms").val();
        editObj.owner = dataValues.find(">#owner").html();
        editObj.dateRegistered = dataValues.find("#dateRegistered").val();
        editObj.displayMessage = 'Tid: ' + editObj.fromTime + ', Kund: ' + editObj.customerNo + ' ' + editObj.customerName + ', Bokningsnr: ' + editObj.reservationId + ', Artikel: ' + editObj.itemNo + ' ' + editObj.itemName + editObj.weight + '<br \/>Resurs: ' + editObj.resourceName;
        TimeBookingFunction.copyValuesToEnableEdit(editObj, true);
    };
    //update
    var updateReservationList = function () {
        var email = $('#IDEpost').val();
        var mobileNo = $('#IDMobil').val();
        var licensePlateNo = $('#IDReg').val();
        var leveransforsakransnummer = $('#IDLevnr').val();
        if (TimeBookingFunction.validateSaveTable(email, mobileNo, licensePlateNo, leveransforsakransnummer)) {
            var form = $('#form-list-booking');
            $.ajax({
                type: "POST",
                url: '/api/time-booking/UpdateReservation',
                data: form.serialize(),
                success: function (response) {
                    updateReservationListSuccess(response.updateReservations);
                },
                error: function (response) { updateReservationListError(response.updateReservations); }
            });
        }
        var updateReservationListSuccess = function (response) {
            var content = $("<p></p>");
            for (var i = 0; i < response.length; i++) {
                if (response[i].Status == 200) {
                    content.append(response[i].Message);
                } else {
                    content.append(response[i].ErrorMessage);
                }
                content.append('<br \/>');
            }
            TimeBookingFunction.clearContentToModal("#dialogArea");
            TimeBookingFunction.fillContentToModal("#dialogArea", "Bokningen uppdaterad", content, dialogType.error);
            clearFormList();

            $('#SaveTable').hide();
            $('#updateListBtn').hide();
            doSearch();
        };
        var updateReservationListError = function () {
            $('#SaveTable').hide();
            alert('updateReservationError');
            doSearch();
        };
    };

    var clearFormList = function () {
        $('.fieldToClearWithClearForm').val('');
        $('#SaveTable').hide();
        $('#updateListBtn').hide();

        $('#IDEpost').val($('#IDEpost_StartValue').val());
        $('#IDMobil').val($('#IDMobil_StartValue').val());
        $('#saveAction').val('New');

        $('#saveAction').val('New');
        $('#myDisplayMessage').html('');
        $('#dispalyMessageHeader').html('&nbsp;');
    };
    var printPageEvents = function () {
        var printBtn = $('#printLink');
        $(printBtn).unbind("click");
        $(printBtn).click(function () {
            var queryString = "/api/pdfhandler/time-booking-list?FromDate=";
            queryString += lastSearchQuery.FromDate;
            queryString += "&ToDate=";
            queryString += lastSearchQuery.ToDate;
            queryString += "&CustomerNo=";
            queryString += lastSearchQuery.CustomerNo;
            queryString += "&ResourceGroupId=";
            queryString += lastSearchQuery.ResourceGroupId;
            queryString += "&listingUrl=";
            var relativePath = window.location.pathname;
            if (window.location.pathname.startsWith('/lm/')) {
                relativePath = window.location.pathname.substring(3);
            }
            queryString += relativePath;
            queryString += "&pdfUrlSegment=/bokalistingpdf";
            window.open(queryString);
        });
    };
    var searchBookingEvents = function () {
        $('#search-booking-button').click(function (e) {
            //var reRegnr = /^([a-zA-Z]{3}\d{3})+$/;
            var regnr = $("#RegNo").val();
            var result = true;

            //if (regnr && !reRegnr.test(regnr)) {
            //    result = false;
            //    $("#RegNo").addClass("error");
            //    $("#RegNo-error").show();
            //}

            if (result) {
                $("#RegNo").removeClass("error");
                $("#RegNo-error").hide();
                doSearch();
            }
            e.preventDefault();
        });
    };
    var deleteBookingEvents = function () {
        var deleteBtn = $(".boka-listing-deleteBtn");
        $(deleteBtn).unbind("click");
        $(deleteBtn).click(function (e) {
            deleteBooking($(this));
            e.preventDefault();
        });
    };
    var editBookingEvent = function () {
        var editBtn = $(".boka-listing-editBtn");
        $(editBtn).unbind("click");
        $(editBtn).click(function (e) {
            editBooking($(this));
            TimeBookingFunction.clearValidateSaveTable();
            e.preventDefault();
        });
    };
    var updateReservationListEvent = function () {
        $('#updateListBtn').unbind('click');
        $('#updateListBtn').click(function () {
            updateReservationList();
        });
    };
    var init = function () {
        searchBookingEvents();
        updateReservationListEvent();
    };

    return {
        init: init
    };
};

jQuery(function () {
    CustomerCard.init();
});

var CustomerCard = CustomerCard || (function () {
    var customerNumber = "";
    var organizationNumber = "";
    var errorMessages = {
        delError: "",
        updateError: ""
    };


    function showAddOwnerLoader() {
        $(".js-add-owner-loader").show();
    }

    function hideAddOwnerLoader() {
        $(".js-add-owner-loader").hide();
    }

    function addOwner(userName) {
        showAddOwnerLoader();
        $.ajax({
            url: "/api/customer-card/add-owner",
            type: "POST",
            data: { username: userName, customernumber: customerNumber, organizationnumber: organizationNumber },
            dataType: "json",
            success: function (data) {
                hideAddOwnerLoader();
                if (data) {
                    if (data.error) {
                        $(".js-add-owner-error").html(data.error);
                    }
                    else {
                        $(".js-add-owner").addClass("hidden");
                        $("#js-activated-confirmation").removeClass("hidden");
                        setTimeout(function () {
                            location.href = window.location;
                        }, 2000);
                    }
                } else {
                    $(".js-add-owner-error").html("Kunde inte lägga till ägare");
                }
            },
            error: function () {
                hideAddOwnerLoader();
                $(".js-add-owner-error").html("Ett fel inträffade");
            }
        });
    }

    function checkUser(userName) {
        showAddOwnerLoader();
        $.ajax({
            url: "/api/customer-card/check-owner",
            type: "POST",
            data: { username: userName, customernumber: customerNumber },
            dataType: "json",
            success: function (data) {
                hideAddOwnerLoader();
                if (data) {
                    if (data.error) {
                        $(".js-add-owner-error").html(data.error);
                        $(".js-add-owner-information").html("");
                        $(".js-add-owner-save").addClass("hidden");
                    }
                    else {
                        $(".js-add-owner-information").html(
                            "<div class=\"existing-user js-add-owner-information\"><h3 class=\"heading-title-3\"> Användaren finns i LM2</h3><p> <strong>Namn:</strong> " +
                            data.firstName + " " + data.lastName +
                            "</p><p> <strong>Telefon:</strong> " +
                            data.telephone + "</p><p> <strong>Mobil:</strong> " +
                            data.mobile + "</p><p> <strong>E-post:</strong> " +
                            data.email +
                            "</p></div>");
                        $(".js-add-owner-save").removeClass("hidden");
                        $(".js-add-owner-error").html();
                    }
                } else {
                    $(".js-add-owner-save").addClass("hidden");
                }
            },
            error: function () {
                hideAddOwnerLoader();
                $(".js-add-owner-error").html("Ett fel inträffade");
                $(".js-add-owner-information").html("");
                $(".js-add-owner-save").addClass("hidden");

            }
        });
    }

    function addOwnerEvents() {
        $("#js-add-owner-checkbox").change(function () {
            if ($(this).is(":checked")) {
                if (!$("#js-has-owner").val()) {
                    $(".js-add-owner").removeClass("hidden");
                } else {
                }
            } else {
                $(".js-add-owner").addClass("hidden");
                $(".js-add-owner-modal").show();
            }
        });

        $(".js-add-owner-check-user").click(function () {
            var email = $(".js-add-owner-epost").val();
            if (email) {
                checkUser(email);
            }
        });

        $(".js-add-owner-inactivate").click(function () {
            alert("Not implemented yet");
        });

        $(".js-add-owner-save").click(function () {
            var email = $(".js-add-owner-epost").val();
            if (email && customerNumber && organizationNumber) {
                addOwner(email);
            }
        });

        $(".js-add-owner-cancel, .js-add-owner-close").click(function () {
            $(".js-add-owner").addClass("hidden");
            var checkbox = $("#js-add-owner-checkbox");
            checkbox.prop("checked", false);
        });

        $(".js-add-owner-epost").keydown(function () {
            $(".js-add-owner-information").html("");
            $(".js-add-owner-save").addClass("hidden");
        });
    }

    function loadScripts() {
        if ($(".js-page-identifier-customer-card-user-list").length) {
            var isDebug = $(".js-page-identifier-customer-card-user-list").data("debug");

            if (isDebug) {
                $.getScript("/Static/dist/scripts/customerCardUserList.js");
            } else {
                $.getScript("/Static/dist/scripts/customerCardUserList.production.js");
            }
        }
    }

    function addProfileHandler() {
        var $userProfile = $("a.user-profile");
        $userProfile.each(function (idx, item) {
            $(item).click(function () {
                var selectedProfileId = $(item).closest("li.showcase").attr("data-value");
                var userName = $(item).attr("data-userName");
                var loader = $(item).closest("td").find(".loader-wrapper");
                var confirmPanel = $(item).closest("td").find(".confirm-panel .confirm-box");
                if (confirmPanel.length > 0) {
                    var $confirmPanel = $(confirmPanel);
                    $confirmPanel.show();
                    $("input[type=reset]", $confirmPanel).click(function () {
                        $confirmPanel.hide();
                    });
                    $("input[type=button]", $confirmPanel).click(function () {
                        showLoader(loader);
                        changeProfileForUser(userName, selectedProfileId, customerNumber,
                            function () { $confirmPanel.hide(); },
                            function () {
                                showErrorDialog(errorMessages.updateError);
                            },
                            function () {
                                hideLoader(loader);
                                $confirmPanel.hide();
                            });
                    });
                }
            });
        });

        $(".js-disconnect-user-from-customer").click(function () {
            var userName = $(this).attr("data-userName");
            var userId = $(this).attr("data-userId");
            var userElement = $(this).closest("tr");
            var loader = $(userElement).find(".loader-wrapper");
            var $confirmDialog = $("#dg-del-user-confirmation");
            if ($confirmDialog.length > 0) {
                $confirmDialog.fadeIn();
                // event for confirmation dialog
                $("button.yes").click(function () {
                    showLoader(loader);
                    removeUserFromCustomer(userName, userId, customerNumber,
                        function () {
                            $(userElement).remove();
                        },
                        function () { showErrorDialog(errorMessages.delError); },
                        function () {
                            hideLoader(loader);
                        });
                });
            }
        });
    }


    function removeUserFromCustomer(userName, userId, customerNumber, successCallBack, failCallBack, completeCallBack) {
        $.ajax({
            url: '/api/customer-card/remove-user?userName=' + userName + "&userId=" + userId + "&customerNo=" + customerNumber,
            type: "GET",
            dataType: "json",
            success: function (data) {
                if (data) {
                    successCallBack();
                } else {
                    failCallBack();
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                failCallBack();
            },
            complete: function () {
                completeCallBack();
            }
        });
    }
    function showLoader(loader) {
        if (loader != undefined) {
            $(loader).show();
        }
    }

    function hideLoader(loader) {
        if (loader != undefined) {
            $(loader).hide();
        }
    }

    function changeProfileForUser(userName, profileId, customerNo, successCallBack, failCallBack, completeCallBack) {
        $.ajax({
            url: '/api/customer-card/change-profile?userName=' + userName + "&profileId=" + profileId + "&customerNo=" + customerNo,
            type: "GET",
            dataType: "json",
            success: function (data) {
                if (data) {
                    successCallBack();
                } else {
                    failCallBack();
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                failCallBack();
            },
            complete: function () {
                completeCallBack();
            }
        });
    }

    function showErrorDialog(errorMess) {

    }

    var init = function () {
        customerNumber = $("input#customer-no") ? $("input#customer-no").val() : "";
        organizationNumber = $("input#org-no") ? $("input#org-no").val() : "";
        addProfileHandler();
        addOwnerEvents();
        loadScripts();
    };
    return {
        init: init
    };
})();

/*------------------------------------*\
    #INTERNAL-NAVIGATION
\*------------------------------------*/


window.gro = window.gro || {};
gro.modules = gro.modules || {};


gro.modules.internalNavigation = (function () {
    var priv = {};

    priv.toggleNavigation = function (parentNav, isToggleClicked) {
        var isToggleClicked = false || isToggleClicked;
        // check navigation expanded or not
        if (!parentNav.hasClass("expanded")) {
            parentNav.addClass("expanded");
        } else {
            if (!isToggleClicked) parentNav.removeClass("expanded");
        }
    };

    /**
     * Private initialization method
     */
    priv.init = function () {

        /**
         * Click on category link
         * Link should only expand child list, not be followed
         * Fallback (href on the <a> tag) should be the first page in the child list
         */
        $(".js-internal-navigation-category").on("click", function (e) {
            e.preventDefault();
            var control = this;
            var target = $(control).next(".internal-navigation__list--sub-level");
            var parentNav = $(control).parents(".internal-navigation");

            if ($(control).hasClass("is-expanded")) {
                $(target).slideUp("fast", function () {
                    $(control).removeClass("is-expanded");
                    $(target)
                        .removeClass("is-expanded")
                        .removeAttr("style");
                });
            } else {
                $(control)
                    .addClass("is-expanded");
                $(target).slideDown("fast", function () {
                    $(target)
                        .addClass("is-expanded")
                        .removeAttr("style");
                });
            }

            /*
             * Expand navigation if end users click any links which have sub-navigation inside
             */
            priv.toggleNavigation(parentNav, true);
        });

        /**
         * Click on toggle link
         * Link should toggle whole navigation
         */
        $(".internal-navigation__toggle-btn").on("click",
            function (e) {
                e.preventDefault();
                var control = this;
                var target = $(control).parent().find(".internal-navigation__list--sub-level");
                var parentNav = $(control).parents(".internal-navigation");

                /*
                 * Toggle navigation if end users click on toggle btn
                 */
                priv.toggleNavigation(parentNav);

                /*
                 * Collapse all opened sub-navigation when navigation collapsed
                 */
                $(target).slideUp(function () {
                    $(this).prev().removeClass("is-expanded");
                    $(this)
                        .removeClass("is-expanded")
                        .removeAttr("style");
                });
            });
    };

    // Initialize module
    $(function () {
        priv.init();
    });

})();

$(function () {

    var Acceptcookies = function () {

        function setCookie(cname, cvalue, exdays) {
            var d = new Date();
            d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));
            var expires = "expires=" + d.toUTCString();
            document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
        }

        function getCookie(cname) {
            var name = cname + "=";
            var ca = document.cookie.split(";");
            for (var i = 0; i < ca.length; i++) {
                var c = ca[i];
                while (c.charAt(0) === " ") {
                    c = c.substring(1);
                }
                if (c.indexOf(name) === 0) {
                    return c.substring(name.length, c.length);
                }
            }
            return "";
        }

        var showCookieDiv = function () {
            var usercookie = $(".cookie-information");
            if (!getCookie("_acceptCookies"))
                usercookie.removeClass("is-hidden");
        };

        $(".js-accept-cookies").on("click", function () {
            setCookie("_acceptCookies", "yes", 365);
            var usercookie = $(".cookie-information");
            usercookie.fadeOut("200", function () {
                $(this).addClass("is-hidden");
            });
        });

        return {
            init: function () {
                showCookieDiv();
                return false;
            }
        };
    };

    $(document).ready(function () {
        var acceptcookies = new Acceptcookies();
        acceptcookies.init();
    });

});
$(function () {

    var Grainbalance = function () {

        var totalPrice = 0;
        var totalTonage = 0;
        var productionCost = 0;
        var totalForecastTonage = 0;
        var priceTonage = 0;
        var noPriceTonage = 0;
        var leftToSellTonage = 0;
        var otherTonage = 0;
        var otherPrice = 0;
        var ownUsageTonage = 0;
        var allTotalTonage = 0;
        var cropPrice = 0;

        var setChartData = function () {
            allTotalTonage = totalTonage + otherTonage; //(Avtalad kvantitet) all weight for prissatt/ej/other
            var allTotalPrice = totalPrice + otherPrice; //all total price (weight*sek/ton) for prisatt/ej/other

            var forecastMinusUsage = totalForecastTonage - ownUsageTonage; //"Förväntat utfall(ton)" Area(ha)*forecast(t/ha) - own usage
            leftToSellTonage = forecastMinusUsage - (allTotalTonage); //"Kvar att sälja(ton)" forecast minus usage - all weight

            var agreementAndLeftTonage = leftToSellTonage > 0 ? allTotalTonage + leftToSellTonage : allTotalTonage; //Om man har kvar att sälja lägg på det

            var leftToSellValue = leftToSellTonage > 0 ? cropPrice * leftToSellTonage : 0; //värdet på det man har kvar att sälja
            allTotalPrice = leftToSellValue > 0 ? allTotalPrice + leftToSellValue : allTotalPrice; //lägg till värdet till totala priset

            var avgResult = agreementAndLeftTonage > 0 ? ((allTotalPrice / agreementAndLeftTonage) - productionCost) : 0; //"Resultat/ton(SEK/ton)" (total price/total tonage) - productioncost
            var totalResult = agreementAndLeftTonage * avgResult; //"Resultat(SEK)": all weight(ton) * result/ton(SEK)


            //Behöver få in kvar att sälja(ton)*dagspris till all totalprice
            //avresult dela inte på totaltonage utan istället på förväntat utfall (ton)

            $(".js-grain-balance-avg-result").text(Math.round(avgResult));
            $(".js-grain-balance-total-result").text(Math.round(totalResult));
            $(".js-grain-balance-total-tonage").text(Math.round(allTotalTonage) + " ton");
            $(".js-grain-balance-total-forecast-tonage").text(Math.round(forecastMinusUsage) + " ton");
            if (leftToSellTonage >= 0) {
                $(".js-grain-balance-label-left-to-sell").text("Kvar att sälja");
                $(".grain-balance__legend-icon--left-to-sell").css("background-color", "#008834");
            } else {
                $(".js-grain-balance-label-left-to-sell").text("Överskrider förväntat utfall");
                $(".grain-balance__legend-icon--left-to-sell").css("background-color", "#f59c00");
            }
            $(".js-grain-balance-left-to-sell").text(Math.round(leftToSellTonage) + " ton");
        };

        var setCropsData = function (cropsId, data) {
            if (data) {
                //if (data.length > 0) {
                $(".grain-balance__edit-data.areal  .grain-balance__label").html(data.Area.toFixed(2) + " ha");
                $(".grain-balance__edit-data.areal  .grain-balance__input").val(data.Area);

                $(".grain-balance__edit-data.production-cost  .grain-balance__label").html(Math.round(data.ProductionCost) + " SEK/ton");
                $(".grain-balance__edit-data.production-cost  .grain-balance__input").val(data.ProductionCost);

                $(".grain-balance__edit-data.expected-outcome  .grain-balance__label").html(data.HarvestForecast.toFixed(2) + " ton/ha");
                $(".grain-balance__edit-data.expected-outcome  .grain-balance__input").val(data.HarvestForecast);

                $(".grain-balance__edit-data.own-consumption  .grain-balance__label").html(Math.round(data.HarvestForPrivateUse) + " ton");
                $(".grain-balance__edit-data.own-consumption  .grain-balance__input").val(data.HarvestForPrivateUse);

                $(".grain-balance__input.id").val(data.Id);

                if (cropsId && cropsId != 0) { //For all crops, 0 as string
                    $(".grain-balance__edit-column").removeClass("hidden");
                    $("#js-grain-balance-result").removeClass("hidden");
                } else {
                    $(".grain-balance__edit-column").addClass("hidden");
                    $("#js-grain-balance-result").addClass("hidden");
                }
                //}

                productionCost = data.ProductionCost;
                totalForecastTonage = (data.Area * data.HarvestForecast);
                ownUsageTonage = data.HarvestForPrivateUse;

            }
            else {
                $(".grain-balance__edit-data.areal  .grain-balance__label").html("-");
                $(".grain-balance__edit-data.areal  .grain-balance__input").val("");

                $(".grain-balance__edit-data.production-cost  .grain-balance__label").html("-");
                $(".grain-balance__edit-data.production-cost  .grain-balance__input").val("");

                $(".grain-balance__edit-data.expected-outcome  .grain-balance__label").html("-");
                $(".grain-balance__edit-data.expected-outcome  .grain-balance__input").val("");

                $(".grain-balance__edit-data.own-consumption  .grain-balance__label").html("-");
                $(".grain-balance__edit-data.own-consumption  .grain-balance__input").val("");

                $(".grain-balance__edit-column").addClass("hidden");

                productionCost = 0;
                totalForecastTonage = 0;
                ownUsageTonage = 0;
            }

        };

        var loadIntroPage = function () {
            if ($(".js-grain-balance-intro").length) {
                $.ajax({
                    dataType: "json",
                    url: "/api/grainbalance/isfirstvisit",
                    type: "get",
                    data: {},
                    cache: false,
                    success: function (data) {
                        if (data) {
                            $(".js-grain-balance-intro").removeClass("hidden");
                            $(".js-grain-balance-wrapper").addClass("hidden");
                        }
                        else {
                            $(".js-grain-balance-wrapper").removeClass("hidden");
                            $(".js-grain-balance-intro").addClass("hidden");
                        }
                    },
                    error: function () {
                    }
                });
            }
        };
        var loadCropList = function (year, usercrops) {
            return $.ajax({
                dataType: "json",
                url: "/api/grainbalance/getcroplist",
                type: "get",
                data: {
                    year: year,
                    usersCrops: usercrops
                },
                cache: false
            });
        };
        var loadMyCropList = function (year, cropId) {
            $(".grain-balance__edit-crop").find(".loader-wrapper").removeClass("hidden");
            $("#js-my-crop-type").empty();
            if (year) {
                $(".js-harvest-year").val(year);
            }
            var myHarvestYearDrop = $(".js-harvest-year").val();
            $.when(loadCropList(myHarvestYearDrop, true)).done(function (mycrops) {
                $(".grain-balance__edit-crop").find(".loader-wrapper").addClass("hidden");
                if (mycrops.length > 0) {
                    $("#js-my-crop-type").append($("<option value=\"" + 0 + "\">Alla grödor</option>"));
                    $.each(mycrops, function (i, t) {
                        var selected = cropId && t.CropId === cropId ? "selected" : "";
                        if (t.CropId != 0) {
                            $("#js-my-crop-type").append($("<option value=\"" + t.CropId + "\" " + selected + ">" + t.CropName + "</option>"));
                        }
                    });
                }

            });

        };
        var loadAllCropList = function () {
            $(".grain-balance__edit-crop").find(".loader-wrapper").removeClass("hidden");
            $("#js-crop-type-add").empty();
            var harvestYearDrop = $("#crop-year").val();
            $.when(loadCropList(harvestYearDrop, true), loadCropList(harvestYearDrop, false)).done(function (mycrops, allcrops) {
                $(".grain-balance__edit-crop").find(".loader-wrapper").addClass("hidden");
                $.each(allcrops[0], function (i, t) {
                    if (t.CropName === "Alla grödor") {
                        return true;
                    }
                    var addCrop = true;
                    $.each(mycrops[0], function (i2, t2) {
                        if (t.CropId === t2.CropId) {
                            addCrop = false;
                        }
                    });
                    if (addCrop === true) {
                        $("#js-crop-type-add").append($("<option>",
                            {
                                value: t.CropId,
                                text: t.CropName
                            }
                        ));
                    }
                });
            });
        };

        var loadAgreementsAndData = function (cropId, expand) {
            var harvestYearDrop = $(".js-harvest-year").val();
            var cropIdDrop = $(".js-cropid").val();
            if (cropId) {
                cropIdDrop = cropId;
            }
            $(".grain-balance__edit-crop").find(".loader-wrapper").removeClass("hidden");
            $.when(loadAgreementsAjax(cropIdDrop, harvestYearDrop),
                loadOtherAgreementsAjax(cropIdDrop, harvestYearDrop),
                loadCropsDataAjax(cropIdDrop, harvestYearDrop),
                loadCropPriceAjax(cropIdDrop, harvestYearDrop)
            ).done(function (agreementsData, otherData, cropsData, cropPriceData) {
                cropPrice = cropPriceData[0];
                setAgreements(cropIdDrop, agreementsData[0]); //priceTonage, noPriceTonage, totalTonage, totalPrice
                setOtherAgreements(cropIdDrop, expand, otherData[0]); //otherTonage, otherPrice
                setCropsData(cropIdDrop, cropsData[0]); // productionCost, totalForecastTonage, ownUsageTonage
                setChartData();
                loadCharts(); //->                             priceTonage, noPriceTonage, otherTonage, ownUsageTonage, allTotalTonage, leftToSellTonage
                $(".grain-balance__edit-crop").find(".loader-wrapper").addClass("hidden");
            });
        };

        var setOtherAgreements = function (cropId, expand, data) {
            $(".js-grain-balance-agreements-other").html("");
            if (data && data.cropAgreements && data.cropAgreements.length > 0) {
                $(".js-grain-balance-other-no-agreements").addClass("hidden");
                otherTonage = data.totalQuantity;
                otherPrice = data.totalPrice;
                $.each(data.cropAgreements, function (i, v) {
                    v.index = i;
                });
                var template = $.templates("#grain-balance-agreements-other-template");
                if (cropId && cropId != 0) //For all crops
                {
                    $(".js-grain-balance-agreements-other").html(template.render(data));
                }
                if (expand) {
                    $("#js-order-other").trigger("click");
                }

            } else {
                otherTonage = 0;
                otherPrice = 0;
                $(".js-grain-balance-other-no-agreements").removeClass("hidden");
            }
        };

        var loadOtherAgreementsAjax = function (cropId, year) {
            return $.ajax({
                dataType: "json",
                url: "/api/grainbalance/getothergreements",
                type: "get",
                data: {
                    year: year,
                    cropId: cropId
                },
                cache: false,
                success: function (data) {
                },
                error: function () {
                }
            });
        };

        var loadAgreementsAjax = function (cropId, year) {
            return $.ajax({
                dataType: "json",
                url: "/api/grainbalance/getagreements",
                type: "get",
                data: {
                    year: year,
                    cropId: cropId
                },
                cache: false,
                success: function (data) {
                },
                error: function () {
                }
            });
        };

        var loadCropsDataAjax = function (cropId, year) {
            return $.ajax({
                dataType: "json",
                url: "/api/grainbalance/getcropdata",
                type: "get",
                data: {
                    year: year,
                    cropId: cropId
                },
                cache: false,
                success: function (data) {
                },
                error: function () {
                }
            });
        };

        var loadCropPriceAjax = function (cropId, year) {
            return $.ajax({
                dataType: "json",
                url: "/api/grainbalance/getcropprice",
                type: "get",
                data: {
                    year: year,
                    cropId: cropId
                },
                cache: false,
                success: function (data) {
                },
                error: function () {
                }
            });
        };


        var setAgreements = function (cropId, data) {
            $(".js-grain-balance-agreements-with-price").html("");
            $(".js-grain-balance-agreements-no-price").html("");
            var priceHeadingText = "Prissatta avtal";
            var noPriceHeadingText = "Ej prissatta avtal";
            if (data && data.length > 0) {
                var template = $.templates("#grain-balance-agreements-lantmannen-template");
                priceTonage = 0;
                noPriceTonage = 0;
                var priceAgreementPrice = 0;
                var noPriceAgreementPrice = 0;

                $.each(data, function (i, v) {
                    v.index = i;
                });

                var withPrice = $.grep(data, function (d) {
                    return d.Group === 1;
                });

                var noPrice = $.grep(data, function (d) {
                    return d.Group === 2;
                });


                $.each(withPrice, function (i, t) {
                    priceTonage = priceTonage + t.TotalQuantity;
                    priceAgreementPrice = priceAgreementPrice + t.TotalPrice;
                });

                if (withPrice.length > 0) {
                    $(".js-grain-balance-no-agreements-with-price").addClass("hidden");
                    var priceAvgPrice = priceTonage > 0 ? Math.round(priceAgreementPrice / priceTonage) : 0;
                    priceHeadingText = priceHeadingText + " (" + priceTonage + " ton, " + priceAvgPrice + " SEK/ton)";

                } else {
                    $(".js-grain-balance-no-agreements-with-price").removeClass("hidden");
                }

                $.each(noPrice, function (i, t) {
                    noPriceTonage = noPriceTonage + t.TotalQuantity;
                    noPriceAgreementPrice = noPriceAgreementPrice + t.TotalPrice;
                });

                if (noPrice.length > 0) {
                    $(".js-grain-balance-no-agreements-with-no-price").addClass("hidden");
                    var noPriceAvgPrice = noPriceTonage > 0 ? Math.round(noPriceAgreementPrice / noPriceTonage) : 0;
                    noPriceHeadingText = noPriceHeadingText + " (" + noPriceTonage + " ton, " + noPriceAvgPrice + " SEK/ton)";
                } else {
                    $(".js-grain-balance-no-agreements-with-no-price").removeClass("hidden");
                }

                totalPrice = priceAgreementPrice + noPriceAgreementPrice;
                totalTonage = priceTonage + noPriceTonage;

                if (cropId && cropId != 0) { //check if all crops
                    $(".js-grain-balance-agreements-with-price").html(template.render(withPrice));
                    $(".js-grain-balance-agreements-no-price").html(template.render(noPrice));
                }
            } else {
                $(".js-grain-balance-no-agreements-with-price").removeClass("hidden");
                $(".js-grain-balance-no-agreements-with-no-price").removeClass("hidden");
                totalPrice = 0;
                totalTonage = 0;
                priceTonage = 0;
                noPriceTonage = 0;
            }
            if (cropId && cropId != 0) { //check if all crops
                $("#js-grain-balance-wrapper-order").removeClass("hidden");
            } else {
                $("#js-grain-balance-wrapper-order").addClass("hidden");
            }
            $(".js-add-owner-price-heading").text(priceHeadingText);
            $(".js-add-owner-noprice-heading").text(noPriceHeadingText);
        };

        var submitGrain = function (grainform, add) {
            var harvestYear = "";
            grainform.forEach(function (e) {
                if (e.name === "HarvestYear") {
                    harvestYear = e.value;
                }
            });
            $.ajax({
                dataType: "json",
                url: "/api/grainbalance/savecropdata",
                type: "post",
                data: grainform,
                cache: false,
                success: function (data) {
                    $(".js-grain-balance-agreements-with-price").html("");
                    if (data) {
                        if (add) {
                            loadMyCropList(harvestYear, data);
                        }
                        //loadOtherAgreements(data, false);
                        //loadAgreements(data);
                        loadAgreementsAndData(data, false);
                    }
                },
                error: function () {
                }
            });
        };

        var submitAgreement = function (agreementForm) {
            var harvestYear = "";
            agreementForm.forEach(function (e) {
                if (e.name === "HarvestYear") {
                    harvestYear = e.value;
                }
            });
            return $.ajax({
                dataType: "json",
                url: "/api/grainbalance/saveotheragreement",
                type: "post",
                data: agreementForm,
                cache: false,
                success: function (data) {
                },
                error: function () {
                }
            });
        };

        var deleteOtherAgreement = function (id, cropid, harvestYear) {
            //var harvestYear = "";
            //agreementForm.forEach(function (e) {
            //    if (e.name === "HarvestYear") {
            //        harvestYear = e.value;
            //    }
            //});
            return $.ajax({
                dataType: "json",
                url: "/api/grainbalance/deleteotheragreement",
                type: "post",
                data: {
                    id: id,
                    cropid: cropid,
                    harvestYear: harvestYear
                },
                cache: false,
                success: function (data) {
                },
                error: function () {
                }
            });
        };

        var addCropValidation = function (form) {
            if ($().validate) {
                $(form).validate({
                    errorElementClass: "error",
                    errorClass: "error-item",
                    errorElement: "span",
                    //errorLabelContainer: ".js-validate-error",
                    //wrapper: "li",
                    rules: {
                        Area: {
                            required: true,
                            number: true
                        },
                        ProductionCost: {
                            required: true,
                            digits: true
                        },
                        HarvestForecast: {
                            required: true,
                            number: true
                        },
                        HarvestForPrivateUse: {
                            digits: true
                        }
                    },
                    messages: {
                        Area: {
                            required: "Du måste ange areal",
                            number: "Ange ett numerisk värde"
                        },
                        ProductionCost: {
                            required: "Du måste ange produktionskostnad ",
                            digits: "Ange ett numerisk heltal"
                        },
                        HarvestForecast: {
                            required: "Du måste ange förväntat utfall",
                            number: "Ange ett numerisk värde"
                        },
                        HarvestForPrivateUse: {
                            digits: "Ange ett numerisk heltal"
                        },
                        cropText: {
                            required: "Du måste ange namn på gröda"
                        }
                    }
                });
            }
        };

        var addOtherValidation = function (form) {
            if ($().validate) {
                $(form).validate({
                    errorElementClass: "error",
                    errorClass: "error-item",
                    errorElement: "span",
                    //errorLabelContainer: ".js-validate-error",
                    //wrapper: "li",
                    rules: {
                        Date: {
                            required: true,
                            date: true
                        },
                        Quantity: {
                            required: true,
                            digits: true
                        },
                        Price: {
                            required: true,
                            digits: true
                        }
                    },
                    messages: {
                        Date: {
                            required: "Du måste ange Datum",
                            date: "Ange ett datum"
                        },
                        Quantity: {
                            required: "Du måste ange Kvantitet ",
                            digits: "Ange ett numerisk heltal"
                        },
                        Price: {
                            required: "Du måste ange Pris",
                            digits: "Ange ett numerisk heltal"
                        }
                    }
                });
            }
        };

        var addFormValidation = function () {
            addCropValidation("#js-add-form");
            addCropValidation("#js-edit-form");
            addOtherValidation(".js-edit-other");
            addOtherValidation("#js-add-other");
        };

        $(document).on("click", ".js-grain-start", function () {
            $.ajax({
                dataType: "json",
                url: "/api/grainbalance/registerfirstvisit",
                type: "get",
                data: {},
                cache: false,
                success: function () {
                    $(".js-grain-balance-wrapper").removeClass("hidden");
                    $(".js-grain-balance-intro").addClass("hidden");
                },
                error: function () {
                }
            });
        });

        $(document).on("click", ".js-add-crop-submit", function () {
            var form = $(this).closest("form");
            if (form.valid()) {
                var formArray = form.serializeArray();
                var dropDownOption = $("#js-crop-type-add option:selected");
                formArray.push({
                    name: "ItemNr",
                    value: dropDownOption.val()
                });
                formArray.push({
                    name: "Crop",
                    value: dropDownOption.text()
                });
                submitGrain(formArray, true);
                $("#grain-balance-add-crop").removeClass("is-active");
                $("#grain-balance-edit-crop").addClass("is-active");
                $(form).trigger("reset");
            }
        });

        $(document).on("click", ".js-edit-crop-submit", function () {
            var form = $(this).closest("form");
            if (form.valid()) {
                var formArray = form.serializeArray();
                var cropTypeOption = $("#js-my-crop-type option:selected");
                formArray.push({
                    name: "ItemNr",
                    value: cropTypeOption.val()
                });
                formArray.push({
                    name: "Crop",
                    value: cropTypeOption.text()
                });
                var harvestYearOption = $(".js-harvest-year option:selected");
                formArray.push({
                    name: "HarvestYear",
                    value: harvestYearOption.val()
                });
                submitGrain(formArray, false);

                form.removeClass("edit");
                form.find(".grain-balance__crop-select").removeAttr("disabled");
            }

        });

        $(document).on("click", ".js-add-other-agreement", function () {
            var form = $(this).closest("form");
            if (form.valid()) {
                var formArray = form.serializeArray();
                var cropTypeOption = $("#js-my-crop-type option:selected");
                formArray.push({
                    name: "ItemNr",
                    value: cropTypeOption.val()
                });
                formArray.push({
                    name: "Crop",
                    value: cropTypeOption.text()
                });
                var harvestYearOption = $(".js-harvest-year option:selected");
                formArray.push({
                    name: "HarvestYear",
                    value: harvestYearOption.val()
                });
                $.when(submitAgreement(formArray)).done(function (data) {
                    closeAddAgreement();
                    $(form).trigger("reset");
                    //$(form).data("validator").resetForm();
                    //loadOtherAgreements(null, true);
                    //loadAgreements();
                    loadAgreementsAndData(null, true);
                });
            }
        });

        $(document).on("submit", ".js-edit-other", function (e) {
            e.preventDefault();
            var form = $(this).closest("form");
            if (form.valid()) {
                var formArray = form.serializeArray();
                var cropTypeOption = $("#js-my-crop-type option:selected");
                formArray.push({
                    name: "ItemNr",
                    value: cropTypeOption.val()
                });
                formArray.push({
                    name: "Crop",
                    value: cropTypeOption.text()
                });
                var harvestYearOption = $(".js-harvest-year option:selected");
                formArray.push({
                    name: "HarvestYear",
                    value: harvestYearOption.val()
                });
                $(this).removeClass("edit");
                $.when(submitAgreement(formArray)).done(function (data) {
                    //closeAddAgreement();
                    //$(form).trigger("reset");
                    //$(form).data("validator").resetForm();
                    //loadOtherAgreements(null, true);
                    //loadAgreements();
                    loadAgreementsAndData(null, true);
                });
            }
        });


        $(document).on("click", ".js-delete-agreement", function (e) {
            var cropTypeOption = $("#js-my-crop-type option:selected").val();
            var harvestYearOption = $(".js-harvest-year option:selected").val();
            var id = $(this).val();
            $(".grain-balance__edit-crop").find(".loader-wrapper").removeClass("hidden");
            $.when(deleteOtherAgreement(id, cropTypeOption, harvestYearOption)).done(function (data) {
                $(".grain-balance__edit-crop").find(".loader-wrapper").addClass("hidden");
                loadAgreementsAndData(null, true);
            });
        });

        $(document).on("change", ".js-crop-type", function () {
            if ($(".js-crop-type-lm").is(":checked")) {
                $("#js-crop-type-add").removeClass("hidden");
                $("#js-crop-type-text").addClass("hidden");
                $("#js-crop-type-text").rules("remove", "required");
            }

            if ($(".js-crop-type-other").is(":checked")) {
                $("#js-crop-type-add").addClass("hidden");
                $("#js-crop-type-text").removeClass("hidden");
                $("#js-crop-type-text").rules("add", "required");
            }
        });

        $(document).on("change", "#crop-year", function () {
            loadAllCropList();
        });

        var loadCharts = function () {
            if ($(".grain-balance__chart-area").length) {

                // Define a plugin to provide data labels
                Chart.plugins.register({
                    afterDatasetsDraw: function (chart, easing) {
                        // To only draw at the end of animation, check for easing === 1
                        var ctx = chart.ctx;

                        chart.data.datasets.forEach(function (dataset, i) {
                            var meta = chart.getDatasetMeta(i);
                            if (!meta.hidden) {
                                meta.data.forEach(function (element, index) {
                                    var fontSize = 14;
                                    var fontStyle = "bold";
                                    var fontFamily = "clarendon-urw, serif";
                                    ctx.font = Chart.helpers.fontString(fontSize, fontStyle, fontFamily);

                                    // Just naively convert to string for now
                                    var dataString = dataset.data[index].toString();

                                    // Make sure alignment settings are correct
                                    ctx.textAlign = "center";
                                    ctx.textBaseline = "middle";

                                    // Set color
                                    ctx.fillStyle = "#444";

                                    var padding = 10;
                                    var position = element.tooltipPosition();
                                    var barThickness = chart.config.options.scales.xAxes[0].barThickness;

                                    if (chart.config.options.direction === "horizontal" && chart.config.options.labels) {
                                        if (dataString < 0) {
                                            ctx.fillText(dataString, position.x - (fontSize / 2) - padding, position.y);
                                        } else if (dataString > 0) {
                                            ctx.fillText(dataString, position.x + (fontSize / 2) + padding, position.y);
                                        }
                                    } else if (chart.config.options.direction === "vertical") {
                                        if (dataString < 0) {
                                            ctx.fillText(dataString, position.x, position.y + dataString - (fontSize / 2) - padding);
                                        } else if (dataString >= 0) {
                                            ctx.fillText(dataString, position.x, position.y - (fontSize / 2) - padding);
                                        }
                                    }
                                });
                            }
                        });
                    }
                });


                // Default font settings
                Chart.defaults.global.defaultFontFamily = "akzidenz-grotesk-n4, akzidenz-grotesk, sans-serif";
                Chart.defaults.global.defaultFontColor = "#909090";
                Chart.defaults.global.defaultFontSize = "13";
                Chart.defaults.global.defaultFontStyle = "normal";


                // Expected outcome details
                var ctxExpectedOutcomeDetails = $(".js-grain-balance-chart-expected-outcome-details");
                var dataExpectedOutcomeDetails = {
                    labels: [
                        "Prissatta avtal",
                        "Ej prissatta avtal",
                        "Annan aktör",
                        "Egen förbrukning"
                    ],
                    datasets: [
                        {
                            label: "Terminsavtal",
                            backgroundColor: [
                                "#52a833",
                                "#adcd53",
                                "#006927",
                                "#76b843"
                            ],
                            borderWidth: 0,
                            data: [
                                priceTonage,
                                noPriceTonage,
                                otherTonage,
                                ownUsageTonage
                            ]
                        }]
                };

                var optionsExpectedOutcomeDetails = {
                    direction: "vertical",
                    labels: true,
                    responsive: true,
                    maintainAspectRatio: false,
                    tooltips: {
                        enabled: false
                    },
                    events: false,
                    hover: {
                        animationDuration: 0
                    },
                    legend:
                    {
                        display: false
                    },
                    layout: {
                        padding: {
                            left: 0,
                            right: 0,
                            top: 30,
                            bottom: 0
                        }
                    },
                    scales: {
                        xAxes: [{
                            barPercentage: 0.5,
                            gridLines: {
                                display: false
                            },
                            ticks: {
                                autoSkip: false
                            }
                        }],
                        yAxes: [{
                            barPercentage: 0.5,
                            ticks: {
                                beginAtZero: true,
                                autoSkip: false
                            },
                            gridLines: {
                                color: "#efefef",
                                zeroLineColor: "#efefef"
                            },
                            scaleLabel: {
                                display: true,
                                labelString: "Ton"
                            }
                        }]
                    }
                };

                var chartExpectedOutcomeDetails = new Chart(ctxExpectedOutcomeDetails, {
                    type: "bar",
                    data: dataExpectedOutcomeDetails,
                    options: optionsExpectedOutcomeDetails
                });


                // Expected outcome
                var ctxExpectedOutcome = $(".js-grain-balance-chart-expected-outcome");

                var dataExpectedOutcome = {
                    labels: [
                        "Förväntat utfall"
                    ],
                    datasets: [{
                        label: "Avtalad kvantitet",
                        backgroundColor: [
                            "#dbe283"
                        ],
                        borderWidth: 0,
                        data: [
                            allTotalTonage
                        ]
                    }, {
                        label: "Kvar att sälja",
                        backgroundColor: [
                            leftToSellTonage >= 0 ? "#008834" : "#f59c00"

                        ],
                        borderWidth: 0,
                        data: [
                            leftToSellTonage > 0 ? leftToSellTonage : 0

                        ]
                    }]
                };

                var optionsExpectedOutcome = {
                    direction: "horizontal",
                    labels: false,
                    responsive: true,
                    maintainAspectRatio: false,
                    tooltips: {
                        enabled: false
                    },
                    events: false,
                    hover: {
                        animationDuration: 0
                    },
                    legend:
                    {
                        display: false
                    },
                    layout: {
                        padding: {
                            left: 0,
                            right: 0,
                            top: 0,
                            bottom: 0
                        }
                    },
                    scales: {
                        xAxes: [{
                            barThickness: 30,
                            stacked: true,
                            gridLines: {
                                display: false,
                                color: "transparent"
                            },
                            scaleLabel: {
                                display: false
                            },
                            ticks: {
                                display: false
                            }
                        }],
                        yAxes: [{
                            barThickness: 30,
                            gridLines: {
                                display: false,
                                color: "transparent"
                            },
                            ticks: {
                                display: false,
                                beginAtZero: true
                            },
                            stacked: true
                        }]
                    }
                };

                var chartExpectedOutcome = new Chart(ctxExpectedOutcome, {
                    type: "horizontalBar",
                    data: dataExpectedOutcome,
                    options: optionsExpectedOutcome
                });


                // Expected outcome details
                //var ctxFinancialContracts = $(".js-grain-balance-chart-financial-contracts");

                //var dataFinancialContracts = {
                //    labels: [
                //        "Köpt",
                //        "Sålt"
                //    ],
                //    datasets: [{
                //        backgroundColor: [
                //            "#8bb662",
                //            "#f59c00"
                //        ],
                //        borderWidth: 0,
                //        data: [
                //            50,
                //            -30
                //        ]
                //    }]
                //};

                //var optionsFinancialContracts = {
                //    direction: "horizontal",
                //    labels: true,
                //    responsive: true,
                //    maintainAspectRatio: false,
                //    tooltips: {
                //        enabled: false
                //    },
                //    events: false,
                //    hover: {
                //        animationDuration: 0
                //    },
                //    legend:
                //    {
                //        display: false
                //    },
                //    layout: {
                //        padding: {
                //            left: 0,
                //            right: 30,
                //            top: 0,
                //            bottom: 0
                //        }
                //    },
                //    scales: {
                //        xAxes: [{
                //            barThickness: 30,
                //            gridLines: {
                //                color: "#efefef",
                //                zeroLineColor: "#d2d2d2"
                //            },
                //            scaleLabel: {
                //                display: true,
                //                labelString: "Ton"
                //            }
                //        }],
                //        yAxes: [{
                //            ticks: {
                //                beginAtZero: true,
                //                padding: 50
                //            },
                //            gridLines: {
                //                display: false
                //            },
                //            barThickness: 30
                //        }]
                //    }
                //}

                //var chartFinancialContracts = new Chart(ctxFinancialContracts, {
                //    type: "horizontalBar",
                //    data: dataFinancialContracts,
                //    options: optionsFinancialContracts
                //});

            }
        };

        $(document).on("change", ".js-harvest-year", function () {
            loadMyCropList();
            //loadAgreements();
            //loadOtherAgreements();
            loadAgreementsAndData();
        });

        $(document).on("change", ".js-cropid", function () {
            //loadAgreements();
            //loadOtherAgreements();
            loadAgreementsAndData();
        });

        $(document).on("click", ".js-add-crop", function () {
            loadAllCropList();
            $("#grain-balance-edit-crop").removeClass("is-active");
            $("#grain-balance-add-crop").addClass("is-active");
        });

        $(document).on("click", ".js-close-add-crop", function () {
            $("#js-add-form").data("validator").resetForm();
            $("#grain-balance-add-crop").removeClass("is-active");
            $("#grain-balance-edit-crop").addClass("is-active");
        });

        var closeAddAgreement = function () {
            $("#grain-balance-add-agreement")
                .slideUp(150, function () {
                    $(this)
                        .removeClass("is-active")
                        .removeAttr("style");
                });
        };

        $(document).on("click", ".js-add-agreement", function () {
            if ($("#grain-balance-add-agreement").hasClass("is-active")) {
                closeAddAgreement();
            } else {
                $("#grain-balance-add-agreement")
                    .slideDown(200, function () {
                        $(this)
                            .addClass("is-active")
                            .removeAttr("style");
                    });
            }
        });

        $(document).on("click", ".js-close-add-agreement", function () {
            $("#js-add-other").data("validator").resetForm();
            closeAddAgreement();

        });

        $(document).on("click", ".js-edit-crop", function () {
            var form = $(this).closest("form");
            form.addClass("edit");
            form.find(".grain-balance__crop-select").attr("disabled", "disabled");
        });

        $(document).on("click", ".js-edit-agreement", function () {
            $(this).closest("form").addClass("edit");
        });

        $(document).on("click", ".js-close-edit-crop", function () {
            var form = $(this).closest("form");
            form.removeClass("edit");
            form.data("validator").resetForm();
            form.find(".grain-balance__crop-select").removeAttr("disabled");
        });

        $(document).on("click", ".js-cancel-edit-agreement", function () {
            var form = $(this).closest("form");
            form.removeClass("edit");
        });

        $(document).on("submit", ".grain-balance__edit-crop-form", function (e) {
            e.preventDefault();
            $(this).removeClass("edit");
        });

        //$(document).on("submit", ".js-edit-other", function (e) {
        //    e.preventDefault();
        //    $(this).removeClass("edit");
        //});

        $(document).on("submit", ".grain-balance__add-crop-form", function (e) {
            e.preventDefault();
            $("#grain-balance-add-crop").removeClass("is-active");
            $("#grain-balance-edit-crop").addClass("is-active");
        });

        $(".js-modal-orders-with-price").on("click", function (e) {
            $("#modal-orders-with-price").fadeIn();
        });

        $(".js-modal-orders-without-price").on("click", function (e) {
            $("#modal-orders-without-price").fadeIn();
        });

        return {
            init: function () {
                if ($(".js-grain-balance-agreements-with-price").length) {
                    addFormValidation();
                    loadIntroPage();
                    loadMyCropList();
                    //loadAgreements();
                    //loadOtherAgreements();
                    loadAgreementsAndData();
                }
                return false;
            }
        };
    };

    $(document).ready(function () {
        var grainbalance = new Grainbalance();
        grainbalance.init();
    });

});
jQuery(function () {
    UserCard.init();
});

var UserCard = UserCard || function () {
    function addEventHanders() {
        $(".js-delete-user").click(function () {
            // show confirmation dialog
            var $confirmDialog = $("#delete-user-confirm");
            $confirmDialog.fadeIn();
            $(".cancel", $confirmDialog).click(function () {
                $confirmDialog.fadeOut();
            });

            $(".confirm", $confirmDialog).click(function () {
                $confirmDialog.fadeOut();
                $("#delete-user-form").submit();
            });
        });

        $(".js-disconnect-user").click(function () {
            // show confirmation dialog
            var form = $(this).closest("form");
            var $confirmDialog = $("#disconnect-user-confirm");
            $confirmDialog.fadeIn();
            $(".cancel", $confirmDialog).click(function () {
                $confirmDialog.fadeOut();
            });

            $(".confirm", $confirmDialog).click(function () {
                form.submit();
                $confirmDialog.fadeOut();
            });
        });

        $(document).on("change", ".js-row-checkbox", function () {
            var isChecked = $(this).is(":checked");
            var radioContainer = $(this).closest(".js-role-row").find(".js-radio-container");

            if (isChecked) {
                radioContainer.removeClass("hidden");
            } else {
                radioContainer.addClass("hidden");
            }
        });

        $(".js-custom-profile").submit(function (e) {
            e.preventDefault();
            var form = $(this).closest("form");
            var customerNo = $(this).data("customerno");
            var userName = $(this).data("username");
            var roles = [];
            var rows = $(form).find(".js-role-row");
            $.each(rows, function (i, row) {
                var checkbox = $(row).find(".js-row-checkbox:checked");
                if (checkbox && checkbox.length > 0) {
                    var radios = $(row).find(".js-row-radio");
                    //if theres radio inputs
                    if (radios && radios.length > 0) {
                        var checkedRadio = $(row).find(".js-row-radio:checked");
                        //if one radio is checked
                        if (checkedRadio && checkedRadio.length > 0) {
                            roles.push(checkedRadio.val());
                        }
                    }
                    else {
                        //if no radios push value from checkbox
                        roles.push(checkbox.val());
                    }
                }
            });

            var $confirmDialog = $("#js-change-custom-roles-confirm");
            $confirmDialog.fadeIn();
            $(".cancel", $confirmDialog).click(function () {
                $confirmDialog.fadeOut();
            });

            var confirmButton = $(".confirm", $confirmDialog);
            confirmButton.unbind("click");
            $(confirmButton).click(function () {
                $.ajax({
                    dataType: "json",
                    url: "/api/usercard/save-roles",
                    type: "post",
                    cache: false,
                    data: {
                        userName: userName,
                        customerNumber: customerNo,
                        roles: roles
                    },
                    success: function (data) {
                        if (data) {
                            $(form).closest(".js-user-company-row").find(".js-show-custom-roles").trigger("click");
                        }
                    }
                });
                //saveRoles(userName, customerNo, roles);
                //form.submit();
                $confirmDialog.fadeOut();
            });
        });

        $("#js-profile-dropdown").change(function (e) {
            var customerNo = $(this).data("customerno");
            var userName = $(this).data("username");
            var optionSelected = $("option:selected", this).val();
            var customRolesButtonContainer = $(this).closest(".usercard-account-details").find(".js-custom-roles-button-container");
            if (optionSelected == "Anpassad") {
                customRolesButtonContainer.removeClass("hidden");
            } else {
                customRolesButtonContainer.addClass("hidden");
                $.ajax({
                    dataType: "json",
                    url: "/api/usercard/save-profile",
                    type: "post",
                    cache: false,
                    data: {
                        userName: userName,
                        customerNumber: customerNo,
                        profileId: optionSelected
                    },
                    success: function (data) {
                    }
                });
            }
        });

        $(document).on("click", ".js-show-custom-roles", function (e) {
            e.preventDefault();
            var control = this;

            if (!$(control).closest(".setting-link").hasClass("is-active")) {
                $(control)
                    .closest(".setting-link")
                    .addClass("is-active");

                $(control)
                    .closest(".js-user-company-row")
                    .next(".lm__listing-block__item__options")
                    .slideDown("150", function () {
                        $(this)
                            .addClass("is-expanded")
                            .removeAttr("style");
                    });
            } else {
                $(control)
                    .closest(".js-user-company-row")
                    .next(".lm__listing-block__item__options")
                    .slideUp("150", function () {
                        $(control)
                            .closest(".setting-link")
                            .removeClass("is-active");

                        $(this)
                            .removeClass("is-expanded")
                            .removeAttr("style");
                    });
            }
        });

        $(document).on("click", ".js-close-custom-roles", function (e) {
            e.preventDefault();
            var control = this;

            $(control)
                .closest(".js-user-company-row")
                .find(".js-show-custom-roles")
                .trigger("click");
        });

        $(".js-update-usersettings").click(function () {
            var inputsettings = [];
            var inputs = $(this).closest(".message-settings-content").find(".js-setting-input");
            inputs.each(function () {
                inputsettings.push(
                    {
                        CustomerOrgId: $(this).data("customerorgid"),
                        MessageSettingsId: $(this).data("messagesettingid"),
                        ModeOfDeliveryId: $(this).data("modeofdeliveryid"),
                        MsgAreaId: $(this).data("areaid"),
                        MsgTypeId: $(this).data("msgtypeid"),
                        UserID: $(this).data("userid"),
                        Value: $(this).is(":checked") ? true : false
                    });
            });
            if (inputsettings.length > 0) {
                $.ajax({
                    dataType: "json",
                    url: '/api/usercard/save-message-settings',
                    type: 'post',
                    cache: false,
                    data: { settings: inputsettings },
                    success: function (data) {
                        if (data === true) {
                            $("#confirm-save-message-settings").fadeIn();
                        }
                    }
                });
            }
        });
    }

    var init = function () {
        addEventHanders();
    };
    return {
        init: init
    };
}();
/*------------------------------------*\
    #TAB-NAVIGATION
\*------------------------------------*/


window.gro = window.gro || {};
gro.modules = gro.modules || {};


gro.modules.tabNavigation = (function () {
    var priv = {};

    /**
     * Private initialization method
     */
    priv.init = function () {

        /**
         * Navigate to correct tab if provided in url (e.g. ?tab=name)
         */
        if ($(".js-tab").length) {
            var tab = gro.modules.url.getUrlParam("tab");

            if (tab) {
                // Switch to tab provided in querystring
                priv.switchTab(tab);
            } else {
                // Switch to first tab
                var firstTab = $(".js-tab").first().data("tab");
                priv.switchTab(firstTab);
            }
        }

        /**
         * Click on tab
         */
        $(document).on("click", ".js-tab", function (e) {
            e.preventDefault();
            var tabName = $(this).data("tab");
            var updateUrl = $(this).data("tab-url");

            if (updateUrl) {
                // Add tab to querystring
                gro.modules.url.addUrlParam(null, "tab", tabName);
            }

            // Switch tab
            priv.switchTab(tabName);
        });
    };

    /**
     * Switch to tab
     * @param {string} tab - The name of the tab that was clicked
     */
    priv.switchTab = function (tab) {
        var control = $("[data-tab='" + tab + "']");
        var target = $(control).data("tab");

        if (control.length) {
            if (!$(control).hasClass("is-active")) {
                $(control)
                    .addClass("is-active")
                    .siblings(".tab-navigation__tab")
                    .removeClass("is-active");

                $(control)
                    .closest(".tab-navigation__tab-container")
                    .next(".tab-navigation__tab-content-container")
                    .find(".tab-navigation__tab-content")
                    .removeClass("is-active")
                    .filter("[data-tab='" + target + "']")
                    .addClass("is-active");
            }
        }
    };

    // Initialize module
    $(function () {
        priv.init();
    });

})();

/*------------------------------------*\
    #INTERNAL-MESSAGE-SETTINGS
\*------------------------------------*/


window.gro = window.gro || {};
gro.modules = gro.modules || {};


gro.modules.internalMessageSettings = (function () {
    var priv = {};

    /**
     * Private initialization method
     */
    priv.init = function () {

        $(document).on("click", ".js-message-settings-tab", function (e) {
            e.preventDefault();
            var control = this;
            var target = $(control).data("tab");

            if (!$(control).hasClass("is-active")) {
                $(control)
                    .addClass("is-active")
                    .siblings(".message-settings-tab")
                    .removeClass("is-active");

                $(control)
                    .closest(".message-settings-tab-container")
                    .next(".message-settings-content-container")
                    .find(".message-settings-content")
                    .removeClass("is-active")
                    .filter("[data-tab='" + target + "']")
                    .addClass("is-active");
            }
        });

        $(document).on("click", ".js-open-message-settings", function (e) {
            e.preventDefault();
            var control = this;

            if (!$(control).closest(".setting-link").hasClass("is-active")) {
                $(control)
                    .closest(".setting-link")
                    .addClass("is-active");

                $(control)
                    .closest(".js-user-company-row")
                    .find(".js-user-card-message-settings")
                    .slideDown("150", function () {
                        $(this)
                            .addClass("is-expanded")
                            .removeAttr("style");
                    });
            } else {
                $(control)
                    .closest(".js-user-company-row")
                    .find(".js-user-card-message-settings")
                    .slideUp("150", function () {
                        $(control)
                            .closest(".setting-link")
                            .removeClass("is-active");

                        $(this)
                            .removeClass("is-expanded")
                            .removeAttr("style");
                    });
            }
        });

        $(document).on("click", ".js-close-message-settings", function (e) {
            e.preventDefault();
            var control = this;

            $(control)
                .closest(".js-user-company-row")
                .find(".js-open-message-settings")
                .trigger("click");
        });
    };

    // Initialize module
    $(function () {
        priv.init();
    });

})();

// ------------------------------------------------------------------------- //
// #TOGGLE
//
// To use the toggle module, add the class `.js-toggle` to an element and
// pass in the following data parameters:
//
// data-toggle-target   - Class or ID of the toggle target element
// data-toggle-effect   - Animation effect to use (fade or slide)
// data-toggle-duration - Animation duration for the toggle effect
// ------------------------------------------------------------------------- //


window.farmday = window.farmday || {};
farmday.modules = farmday.modules || {};


farmday.modules.toggle = (function () {
    var priv = {};
    var pub = {};


    /**
     * Toggle effects
     */
    priv.effect = {
        FADE: "fade",
        SLIDE: "slide"
    };


    /**
     * Toggle function
     */
    priv.function = {
        ACCORDION: "accordion"
    };


    /**
     * Private initialization method
     */
    priv.init = function () {

        /**
         * Expand correct toggle if provided in url (e.g. ?toggle=abc123)
         */
        if ($(".js-toggle").length) {
            var toggleId = gro.modules.url.getUrlParam("toggle");

            if (toggleId) {
                var toggle = $("[aria-controls='" + toggleId + "']");
                pub.show(toggle);
            }
        }

        /**
         * Toggle content
         */
        $(document).on("click", ".js-toggle", function (e) {
            var control = this;
            var target = $(this).data("toggle-target");
            var effect = $(this).data("toggle-effect");
            var duration = $(this).data("toggle-duration");
            var toggleFunction = $(this).data("toggle-function");

            var isVisible = priv.isVisible(target);

            e.preventDefault();
            e.stopPropagation();

            if (isVisible)
                priv.hide(control, target, effect, duration);
            else
                priv.show(control, target, effect, duration, toggleFunction);
        });


        /**
         * Trigger toggle from a different element than the toggle control itself
         */
        $(document).on("click", ".js-trigger-toggle", function () {
            var target = $(this).data("target");
            // Find all controls for toggle target (could be multiple)
            var controls = $(".js-toggle[data-target='" + target + "'");

            controls.each(function () {
                var isVisible = priv.isVisible(target);
                var effect = $(this).data("toggle-effect");
                var duration = $(this).data("toggle-duration");

                if (isVisible)
                    priv.hide(this, target, effect, duration);
                else
                    priv.show(this, target, effect, duration);
            });
        });
    };


    /**
     * Show content
     * @param {object} control - Toggle control
     * @param {object} target - Toggle target
     * @param {string} effect - Animation effect
     * @param {number} [duration=0] - Animation duration
     */
    priv.show = function (control, target, effect, duration, toggleFunction) {
        var value = $(control).attr("aria-controls");
        var updateUrl = $(control).data("toggle-url");

        // Set default duration if not provided
        if (duration === undefined)
            duration = 0;

        // If function is accordion, hide all siblings that is expanded
        if (toggleFunction === priv.function.ACCORDION) {
            $(control).siblings(".collapse__control.is-active").each(function () {
                var target = $(this).data("toggle-target");
                var effect = $(this).data("toggle-effect");
                var duration = $(this).data("toggle-duration");

                priv.hide(this, target, effect, duration);
            });
        }

        // Add classes to control before animating target to sync animations
        $(control)
            .addClass("is-active")
            .attr("aria-expanded", true);

        // Animation effects
        if (effect === priv.effect.FADE) {
            $(target).fadeIn(duration, function () {
                $(target)
                    .addClass("is-active")
                    .attr("aria-hidden", false)
                    .removeAttr("style");
            });
        } else if (effect === priv.effect.SLIDE) {
            $(target).slideDown(duration, function () {
                $(target)
                    .addClass("is-active")
                    .attr("aria-hidden", false)
                    .removeAttr("style");
            });
        }

        if (updateUrl) {
            // Add toggle id to querystring
            gro.modules.url.addUrlParam(document.location.search, "toggle", value);
        }
    };


    /**
     * Hide content
     * @param {object} control - Toggle control
     * @param {object} target - Toggle target
     * @param {string} effect - Animation effect
     * @param {number} [duration=0] - Animation duration
     */
    priv.hide = function (control, target, effect, duration) {
        // Set default duration if not provided
        if (duration === undefined)
            duration = 0;

        // Animation effect
        if (effect === priv.effect.FADE) {
            $(target).fadeOut(duration, function () {
                $(control)
                    .removeClass("is-active")
                    .attr("aria-expanded", false);

                $(target)
                    .removeClass("is-active")
                    .attr("aria-hidden", true)
                    .removeAttr("style");
            });
        } else if (effect === priv.effect.SLIDE) {
            $(target).slideUp(duration, function () {
                $(control)
                    .removeClass("is-active")
                    .attr("aria-expanded", false);

                $(target)
                    .removeClass("is-active")
                    .attr("aria-hidden", true)
                    .removeAttr("style");
            });
        }
    };


    /**
     * Check if an element is visible
     * @param {object} element - The element
     * @returns {boolean}
     */
    priv.isVisible = function (element) {
        return $(element).hasClass("is-active");
    };


    /**
     * Collapse all
     * @param {string} collapseContainer - The parent element of all accordion elements
     */
    pub.collapseAll = function (collapseContainer) {
        $(collapseContainer).find(".collapse__control").each(function () {
            var control = this;
            var target = $(control).data("toggle-target");

            priv.hide(control, target, "slide", 0);
        });
    };


    /**
     * Public show
     * @param {string} control - The collapse control element
     */
    pub.show = function (control) {
        var target = $(control).data("toggle-target");
        var effect = $(control).data("toggle-effect");
        var duration = $(control).data("toggle-duration");
        var toggleFunction = $(control).data("toggle-function");

        var isVisible = priv.isVisible(target);

        if (!isVisible)
            priv.show(control, target, effect, duration, toggleFunction);
    };


    /**
     * Public hide
     * @param {string} control - The collapse control element
     */
    pub.hide = function (control) {
        var target = $(control).data("toggle-target");
        var effect = $(control).data("toggle-effect");
        var duration = $(control).data("toggle-duration");

        var isVisible = priv.isVisible(target);

        if (isVisible)
            priv.hide(control, target, effect, duration);
    };


    // Initialize module
    $(function () {
        priv.init();
    });


    // Expose public methods
    return pub;

})();

$(function () {

    var MyOrders = function () {

        var orderPages = 0;
        var myOrdersPage = 0;


        function hideLoader() {
            $('.loader-wrapper').hide();
        }

        function showLoader() {
            $('.loader-wrapper').show();
        }

        var loadMyOrders = function (index) {
            showLoader();
            $.ajax({
                dataType: "json",
                url: "/api/myorders/getmyorders",
                type: "get",
                data: { index: index },
                cache: false,
                success: function (data) {
                    hideLoader();
                    if (data) {
                        if (data.length > 0) {
                            var template = $.templates("#my-orders-template");
                            var htmlOutput = template.render(data);
                            $(".js-my-orders").append(htmlOutput);
                            $(".js-my-orders-text").removeClass("hidden");

                            //index starts at 0
                            if (index < orderPages - 1) {
                                $(".js-show-more-orders").removeClass("hidden");

                            } else {
                                $(".js-show-more-orders").addClass("hidden");
                            }
                        }
                    }
                },
                error: function () {
                }
            });
        };

        var loadPagesCount = function () {
            showLoader();
            $.ajax({
                dataType: "json",
                url: "/api/myorders/getmyorderspages",
                type: "get",
                data: {},
                cache: false,
                success: function (data) {
                    hideLoader();
                    if (data) {
                        orderPages = data;
                        if (data > 0) {
                            loadMyOrders(0);
                        }
                    }
                },
                error: function () {
                }
            });
        };

        $(".js-show-more-orders").on("click", function () {
            myOrdersPage = myOrdersPage + 1;
            loadMyOrders(myOrdersPage);
        });

        return {
            init: function () {
                if ($(".js-my-orders").length) {
                    loadPagesCount();
                }
                return false;
            }
        };
    };

    $(document).ready(function () {
        var myorders = new MyOrders();
        myorders.init();
    });

});
// ------------------------------------------------------------------------- //
// #MACHINE
// ------------------------------------------------------------------------- //


window.farmday = window.farmday || {};
farmday.modules = farmday.modules || {};


farmday.modules.machine = (function () {
    var priv = {};


    /**
     * Private initialization method
     */
    priv.init = function () {
        if ($(".js-page-identifier-machine").length) {
            $(".modal-trigger").click(function (event) {
                var modalId = event.target.dataset.triggerModal;
                $("#" + modalId).removeClass("hidden");
            });

            $("#add-machine-cancel").click(function () {
                var url = $(".js-page-identifier-machine").data("url");

                if (url !== "" && url !== undefined) {
                    location.href = url;
                }
            });
        }
    };


    // Initialize module
    $(function () {
        priv.init();
    });

})();

// ------------------------------------------------------------------------- //
// #CONTACT
// ------------------------------------------------------------------------- //


window.farmday = window.farmday || {};
farmday.modules = farmday.modules || {};


farmday.modules.contact = (function () {
    var priv = {};


    /**
     * Private initialization method
     */
    priv.init = function () {

        if ($(".js-page-identifier-contact").length) {
            document.addEventListener("invalid", (function () {
                return function (e) {
                    //e.preventDefault();
                    document.getElementById("query").focus();
                };
            })(), true);

            var siteUserName = document.getElementById("siteUserId").value;
            if (!siteUserName || siteUserName.trim().length === 0) {
                return;
            }

            $(".workshop-star").click(function (event) {
                if (!siteUserName || !siteUserName.trim()) {
                    return;
                }

                $("section.lm__contents").addClass("inactive-view");
                $.ajax({
                    type: "POST",
                    url: "/api/workshop/setstar",
                    data: {
                        city: event.target.dataset.city,
                        newStarValue: event.target.dataset.star === "True" ? "False" : "True"
                    },
                    dataType: "json",
                    cache: false,
                    success: function () {
                        $(".marked").toggleClass("marked");
                        $(event.target).toggleClass("marked");
                    }
                }).fail(function () {
                    location.reload();
                }).always(function () {
                    $("section.lm__contents").removeClass("inactive-view");
                });
            });
        }
    };


    // Initialize module
    $(function () {
        priv.init();
    });

})();

// ------------------------------------------------------------------------- //
// #STARTPAGE
// ------------------------------------------------------------------------- //


window.farmday = window.farmday || {};
farmday.modules = farmday.modules || {};


farmday.modules.startpage = (function () {
    var priv = {};


    /**
     * Private initialization method
     */
    priv.init = function () {
        if ($(".js-page-identifier-startpage").length) {
            $(".customer-number").on("input", function (evt) {
                if (evt.which < 48 || evt.which > 57) {
                    evt.preventDefault();
                }

                var orgnr = $(this).closest("tr").data("orgnumber");
                var updateButton = $(".update-button[data-form-id='org_" + orgnr + "']");

                if ($(this).val()) {
                    updateButton.removeClass("invisible");
                } else {
                    updateButton.addClass("invisible");
                }
            });

            var table = $("#customer-table");
            var deleteTableRowWithAnimation = function (cellButton) {
                var row = $(cellButton).closest("tr").addClass("deleted").children("td");
                setTimeout(function () {
                    $(row)
                        .animate({ paddingTop: 0, paddingBottom: 0 }, 500)
                        .wrapInner("<div />")
                        .children()
                        .slideUp(500, function () { $(this).closest("tr").remove(); });
                },
                    1000);
            };

            $(".update-button").on("click", function (ev) {
                var button = ev.target;
                var formId = $(ev.target).data("formId");
                var form = $("#" + formId);
                var orgNumber = form.data("orgnumber");
                var isActive = form.find(".active-customer").is(":checked");
                var customerNumber = form.find(".customer-number")[0].value;
                if ((!customerNumber || customerNumber.trim().length === 0) && isActive==true) {
                    return;
                }

                table.css("pointer-events", "none");
                table.css("opacity", 0.6);

                var tr = $("#org_" + orgNumber);
                $.ajax({
                    type: "POST",
                    url: "/api/customer-support/update",
                    data: {
                        organizationNumber: orgNumber,
                        customerNumber: customerNumber,
                        isActive: isActive
                    },
                    success: function (xhr) {
                        table.css("pointer-events", "auto");
                        table.css("opacity", 1);

                        console.log(xhr);
                        if (xhr.error) {
                            tr.css("outline", "thin solid orange");
                            tr.find(".input-err").html(xhr.error);
                            return;
                        }

                        tr.find(".input-err").html("");
                        tr.css("outline", "none");
                        deleteTableRowWithAnimation(button);
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        table.css("pointer-events", "auto");
                        table.css("opacity", 1);
                        tr.find(".input-err").html("");
                        $("#error-message").css("display", "block");
                    },
                    dataType: "json"
                });
            });

            $(".active-customer").on("change", function (ev) {
                var active = $(ev.target).is(":checked");
                var orgNumber = $(ev.target).data("orgnumber");
                var updateButton = $(".update-button[data-form-id='org_" + orgNumber + "']");
                var customerNumber = $("#active_" + orgNumber).find(".customer-number").val();

                if (active) {
                    $("#inactive_" + orgNumber).css("display", "none");
                    $("#active_" + orgNumber).css("display", "block");

                    if (!customerNumber) {
                        updateButton.addClass("invisible");
                    }
                } else {
                    $("#inactive_" + orgNumber).css("display", "block");
                    $("#active_" + orgNumber).css("display", "none");
                    updateButton.removeClass("invisible");
                }
            });
        }
    };


    // Initialize module
    $(function () {
        priv.init();
    });

})();

// ------------------------------------------------------------------------- //
// #LOGIN
// ------------------------------------------------------------------------- //

window.farmday = window.farmday || {};
farmday.modules = farmday.modules || {};


farmday.modules.login = (function () {
    var priv = {};

    /**
     * Private initialization method
     */
    priv.init = function () {
        priv.start();
        priv.validate();
    };

    priv.start = function () {
        if ($(".js-page-identifier-login").length) {
            var htmlEl = document.getElementsByTagName("html");

            if (htmlEl.length > 0) {
                htmlEl[0].className += " iam-html";
            }

            $("#email").on("invalid",
                function (event) {
                    event.preventDefault();
                    console.log(event);
                    $("#error-message-label").removeClass("hidden");
                });
        }
    };

    priv.validate = function () {
        
        $("#changePasswordSubmit").click(function (e) {            

            var validator = $("#changePasswordForm").validate({
                rules: {
                    newPassword: {
                        required: true,
                        regex: /^[A-Za-z0-9\d=!\-@.!#$%&()+={}[\:;'<>?,\]_\/*]*$/
                    },
                    retypeNewPassword: {
                        equalTo: "#newPassword"
                    }
                },
                messages: {
                    newPassword: {
                        required: "Du måste fylla i alla fälten för att kunna byta lösenord.",
                        regex: "Lösenordet är inte av rätt typ. Se krav för nytt lösenord."
                    },
                    retypeNewPassword: "Lösenorden stämmer inte överens med varandra. Vänligen försök igen."
                },
                errorLabelContainer: ".js-validate-error",
                wrapper: "li"
            });
            if (validator.form()) {
                $("#changePasswordSubmit").submit();
            } else {
                console.log("Failed");
            }
        });

        $("#resetPasswordSubmit").click(function (e) {
            e.preventDefault(e);

            var validator = $("#loginform").validate({
                rules: {
                    password: {
                        required: true,
                        regex: /^[A-Za-z0-9\d=!\-@.!#$%&()+={}[\:;'<>?,\]_\/*]*$/                        
                    },
                    confirmpassword: {
                        equalTo: "#password"
                    }
                },
                messages: {
                    password: {
                        required: "Du måste fylla i alla fälten för att kunna byta lösenord.",
                        regex: "Lösenordet är inte av rätt typ. Se krav för nytt lösenord."
                    },                    
                    confirmpassword: "Lösenorden stämmer inte överens med varandra. Vänligen försök igen."
                },
                errorLabelContainer: ".js-validate-error",
                wrapper: "li"
            });
            if (validator.form()) {
                $("#loginform").submit();
            } else {
                console.log("Failed");
            }
        });
    };    

    // Initialize module
    $(function () {
        priv.init();
    });

})();

// ------------------------------------------------------------------------- //
// #ORGANIZATION
// ------------------------------------------------------------------------- //


window.farmday = window.farmday || {};
farmday.modules = farmday.modules || {};


farmday.modules.organization = (function () {
    var priv = {};


    /**
     * Private initialization method
     */
    priv.init = function () {
        var isDebug;

        if ($(".js-page-identifier-organization-add-user").length) {
            isDebug = $(".js-page-identifier-organization-add-user").data("debug");

            if (isDebug) {
                $.getScript("/Static/dist/scripts/addUserToOrganization.js");
            } else {
                $.getScript("/Static/dist/scripts/addUserToOrganization.production.js");
            }
        }

        if ($(".js-page-identifier-organization-handle-user").length) {
            isDebug = $(".js-page-identifier-organization-handle-user").data("debug");

            if (isDebug) {
                $.getScript("/Static/dist/scripts/handleOrganizationUser.js");
            } else {
                $.getScript("/Static/dist/scripts/handleOrganizationUser.production.js");
            }
        }

        if ($(".js-page-identifier-organization-delivery-address").length) {
            function validateSilos() {
                var isValid = true;
                $("input.silo-number").each(function (idx, item) {
                    var $item = $(item);
                    var numberValue = $item.val();
                    var valid = !!numberValue && numberValue.toString() !== "";
                    if (!valid) {
                        isValid = false;
                        $item.addClass("error");
                    } else if ($item.hasClass("error")) {
                        $item.removeClass("error");
                    }
                });
                return isValid;
            }

            $("ul.errors-list li").each(function (idx, item) {
                $(item).hide();
            });

            if (jQuery.validator) {
                $('#editDeliveryAddress').validate({
                    ignore: [],
                    errorElementClass: 'error',
                    errorClass: 'error-item',
                    errorElement: 'span',
                    rules: {
                        AdressStreet: "required",
                        ZipCode: {
                            required: true,
                            zipCode: true
                        },
                        Place: {
                            required: true
                        },
                        SilosName: {
                            "subItemRequired": validateSilos
                        },
                        MobileNumber: {
                            required: true,
                            mobileSE: true
                        }
                    },
                    messages: {
                        AdressStreet: "Du måste ange Gatuadress",
                        ZipCode: {
                            required: window["validationMessage"].zipCode.required,
                            zipCode: window["validationMessage"].zipCode.valid
                        },
                        Place: {
                            required: "Du måste ange Ort"
                        },
                        SilosList: {
                        },
                        MobileNumber: {
                            required: window["validationMessage"].mobileSE.required,
                            mobileSE: window["validationMessage"].mobileSE.valid
                        }
                    },
                    highlight: function (element, errorClass, validClass) {
                        console.log("jquery validation");
                        $('ul.errors-list').show();
                        $('li#li_' + $(element).attr('id')).show();
                        $(element).addClass(this.settings.errorElementClass).removeClass(errorClass);
                    },
                    unhighlight: function (element, errorClass, validClass) {
                        if ($(element).hasClass("silo-number")) {
                            return;
                        }
                        $(element).removeClass(this.settings.errorElementClass).removeClass(errorClass);
                        $('li#li_' + $(element).attr('id')).hide();
                        if ($('ul.errors-list').find('li[id^="li"]').is(":visible") === false) {
                            $('ul.errors-list').hide();
                        }
                    }
                });
            }
        }
    };


    // Initialize module
    $(function () {
        priv.init();
    });

})();

/*------------------------------------*\
    #MY-AGREEMENTS
\*------------------------------------*/


window.gro = window.gro || {};
gro.modules = gro.modules || {};


gro.modules.myAgreements = (function () {
    var priv = {};

    /**
     * Private initialization method
     */
    priv.init = function () {
        // agreement-data is used for agreements.
        //$(document).on("change", ".js-show-agreement-type", function () {
        //    var value = $(this).val();
        //    console.log(value);
        //});

        //$(document).on("change", ".js-show-harvest-year", function () {
        //    var value = $(this).val();
        //    console.log(value);
        //});

    };

    // Initialize module
    $(function () {
        priv.init();
    });

})();

/*------------------------------------*\
    #MANAGE-ELECTED
\*------------------------------------*/


window.gro = window.gro || {};
gro.modules = gro.modules || {};


gro.modules.manageElected = (function () {
    var priv = {};

    /**
     * Private initialization method
     */
    priv.init = function () {
        if ($(".js-add-elected").length) {
            priv.addEmailValidation();
            priv.addCreateUserValidation();
            priv.bindEvents();
            priv.loadAllDistricts();
            priv.loadElectedForDistrict(400);
            priv.loadDistrictsForElected(0);
        }
    };

    /**
     * Bind events
     */
    priv.bindEvents = function () {

        /**
         * Check user
         */
        $(document).on("submit", "#js-me-check-user", function (e) {
            e.preventDefault();
            var form = $(this).closest("form");
            if (form.valid()) {
                var formArray = form.serializeArray();
                $(".js-allready-elected").addClass("hidden");
                $(".js-existing-user-information").hide();
                $(".js-create-user").hide();
                $.ajax({
                    dataType: "json",
                    url: "/api/manage-elected/find-existing",
                    type: "post",
                    data: formArray,
                    cache: false,
                    success: function(data) {
                        if (data && !$.isEmptyObject(data)) {
                            if (data.isElected) {
                                $(".js-allready-elected").removeClass("hidden");
                            } else {
                                $(".js-existing-user-information").slideDown("fast");
                                $(".js-user-name").text(data.firstName + " " + data.lastName);
                                $(".js-user-telephone").text(data.telephone);
                                $(".js-user-mobile").text(data.mobile);
                                $(".js-user-email").text(data.email);
                                //$(".js-user-ssn").text(data.ssn);
                                $(".js-user-email").prop("href", "mailto:" + data.email);
                            }
                        } else {
                            $(".js-create-user").slideDown("fast");
                        }
                    },
                    error: function() {
                    }
                });
            }
        });

        /**
         * Create new user
         */
        $(document).on("submit", ".js-create-user", function (e) {
            e.preventDefault();
            var form = $(this).closest("form");
            if (form.valid()) {
                var formArray = form.serializeArray();
                var email = $("#js-me-check-user .js-add-owner-epost");
                formArray.push({
                    name: "email",
                    value: email.val()
                });
                $.ajax({
                    dataType: "json",
                    url: "/api/manage-elected/add-new-user",
                    type: "post",
                    data: formArray,
                    cache: false,
                    success: function (data) {
                        if (data && !$.isEmptyObject(data)) {
                            $(".js-user-name").text(data.firstName + " " + data.lastName);
                            $(".js-user-telephone").text(data.telephone);
                            $(".js-user-mobile").text(data.mobile);
                            $(".js-user-email").text(data.email);
                            $(".js-user-email").prop("href", "mailto:" + data.email);
                            $(".js-check-user").hide();
                            $(".js-create-user").hide();
                            $(".js-add-district").show();
                            $(email).val("");
                            $(form).trigger("reset");
                        }
                    },
                    error: function () {
                    }
                });

            }
        });

        /**
         * Filter user list
         */
        $(".js-filter-user-list").on("input change", function () {
            var list = $(this).data("list");
            var noHits = $(this).data("no-hits");
            var query = $(this).val();
            var anyMatch = false;
            var anyFiltered = false;

            $(".js-search-query").text(query);

            // Collapse all accordion elements before filtering
            farmday.modules.toggle.collapseAll(list);

            // Loop through every table row and search for query
            $(list).find("button:not(" + noHits + ")").each(function () {
                var control = $(this);
                var controlData = control.text().toLowerCase();
                var queryFound = controlData.indexOf(query.toLowerCase()) !== -1;

                if (queryFound) {
                    anyMatch = true;
                    control.show();
                } else {
                    control.hide();
                    anyFiltered = true;
                }
            });

            // Show or hide no hits message
            anyMatch ? $(noHits).hide() : $(noHits).show();

            // Show or hide show list button
            anyFiltered ? $(".js-user-list-show-all-btn").css("display", "inline-block") : $(".js-user-list-show-all-btn").hide();
        });

        /**
         * Show entire user list
         */
        $(".js-user-list-show-all-btn").on("click", function (e) {
            e.preventDefault();
            var queryElement = $(this).data("query-element");

            $(queryElement).val("").trigger("change");
        });

        /**
         * Show add elected form
         */
        $(".js-show-add-elected-form").on("click", function () {
            $(".js-add-elected").slideToggle("fast");
        });

        /**
         * Close add elected form
         */
        $(".js-cancel-add-elected").on("click", function () {
            $(".js-add-elected").slideUp("fast", function () {
                $(".js-existing-user-information").hide();
                $(".js-add-district").hide();
                $(".js-create-user").hide();
                $(".js-check-user").show();
                $(".js-add-owner-epost").val("");
            });
        });

        /**
         * Cancel add existing user as elected
         */
        $(".js-cancel-add-elected-existing-user").on("click", function () {
            $(".js-existing-user-information").slideUp("fast");
            $(".js-add-owner-epost").val("");
        });

        /**
         * Add elected
         */
        $(".js-add-as-elected").on("click", function () {
            $(".js-check-user").hide();
            $(".js-add-district").show();
        });

        /**
         * Save elected
         */
        $(".js-save-as-elected").on("click", function () {
            var email = $("#js-user-add-email");
            var form = $(this).closest("form");
            var districts = form.serializeArray();
            $.ajax({
                dataType: "json",
                url: "/api/manage-elected/add-existing-user",
                type: "post",
                data: {
                    userName: email.text(),
                    districts: districts
                },
                cache: false,
                success: function (data) {
                    if (data) {
                        $(".js-add-elected").slideUp("fast", function () {
                            $(".js-existing-user-information").hide();
                            $(".js-add-district").hide();
                            var district = $("#js-all-districts").val();
                            priv.loadElectedForDistrict(parseInt(district));
                            $(".js-add-owner-epost").val("");
                            $(".js-check-user").show();
                        });
                    }
                },
                error: function () {
                }
            });
        });

        $(document).on("click", ".js-save-edit-elected", function () {
            var form = $(this).closest("form");
            var email = $(form).find(".js-user-add-email").text();
            var districts = form.serializeArray();
            $.ajax({
                dataType: "json",
                url: "/api/manage-elected/add-existing-user",
                type: "post",
                data: {
                    userName: email,
                    districts: districts
                },
                cache: false,
                success: function (data) {
                    if (data) {
                        var district = $("#js-all-districts").val();
                        priv.loadElectedForDistrict(parseInt(district));
                    }
                },
                error: function () {
                }
            });
        });

        $(document).on("click", ".js-cancel-edit-elected", function () {
            farmday.modules.toggle.collapseAll(".js-user-list");
        });

        $(document).on("click", ".js-delete-elected", function () {
            var user = $(this).data("user");
            $.ajax({
                dataType: "json",
                url: "/api/manage-elected/delete-elected",
                type: "post",
                data: {
                    userName: user
                },
                cache: false,
                success: function (data) {
                    if (data) {
                        var district = $("#js-all-districts").val();
                        priv.loadElectedForDistrict(parseInt(district));
                    }
                },
                error: function () {
                }
            });
        });

        /**
         * Go back from add district to select user
         */
        $(".js-back-from-add-district-to-select-user").on("click", function () {
            $(".js-add-district").hide();
            $(".js-check-user").show();
        });

        /**
         * Add district to user
         */
        $(document).on("click", ".js-add-district-to-elected", function () {
            var districtContainer = $(this).closest(".js-district-container");
            var districtSelect = districtContainer.find(".js-district-dropdown");
            var districtTarget = districtContainer.find(".js-district-list");
            var selected = districtSelect.find(":selected");
            var emptyMessage = districtContainer.find(".js-no-district-chosen");
            if (selected.val()) {
                var data = { Name: selected.val(), ReadRoleId: selected.data("read"), WriteRoleId: selected.data("write"), WriteRights: false };
                var template = $.templates("#elected-district-template");
                $(selected).remove();
                $(districtTarget).append(template.render(data));
                emptyMessage.addClass("is-hidden");
            }
        });

        /**
         * Delete district from user
         */
        $(document).on("click", ".js-delete-district", function () {
            var del = $(this);
            var data = { Name: del.data("name"), ReadRoleId: del.data("read"), WriteRoleId: del.data("write") };
            var template = $.templates("#elected-add-district-dropdown-template");
            var districtContainer = $(this).closest(".js-district-container");
            var districtSelect = districtContainer.find(".js-district-dropdown");
            var list = districtContainer.find(".js-district-list");

            districtSelect.append(template.render(data));

            $(this).closest("li").remove();

            var districtCount = list.children().length;

            if (districtCount === 0) {
                var emptyMessage = districtContainer.find(".js-no-district-chosen");
                emptyMessage.removeClass("is-hidden");
            }
        });

        /**
         * Show all districts
         */
        $(document).on("change", "#js-all-districts", function () {
            var id = $(this).val();
            priv.loadElectedForDistrict(parseInt(id));
        });

        /**
         * Expand elected in list
         */
        $(document).on("click", ".js-expand-elected", function (e) {
            e.preventDefault();
            var row = $(this).closest(".js-elected");
            var details = row.find(".js-elected-details");
            var showDetails = row.find(".show-details");
            var hideDetails = row.find(".js-hide-details");
            var isExpanded = details.hasClass("is-expanded");

            if (isExpanded) {
                details.removeClass("is-expanded").slideUp("fast", function () {
                    showDetails.attr("colspan", "1");
                    row.removeClass("is-expanded");
                    hideDetails.show();
                });
            } else {
                row.addClass("is-expanded");
                hideDetails.hide();
                showDetails.attr("colspan", "2");
                details.addClass("is-expanded").slideDown("fast");
            }

        });
      
    };
    /**
       * Fill dropdown and list with data when pressing toggle
       */
        $(document).on("click", ".js-elected-toggle", function (e) {
            e.preventDefault();
            if ($(this).hasClass("is-active")) { 
            } else {
                var userId = $(this).data("user");
                $.when(priv.loadDistrictsForElectedAjax(userId), priv.loadDistrictsForElectedAjax(0)).done(function (user, all) {
                    var districtContainer = $("#elected-container-" +userId);
                    var dropDown = districtContainer.find(".js-district-dropdown");
                    $(dropDown).empty();
                    var list = districtContainer.find(".js-district-list");
                    $(list).empty();
                    var filteredDistricts = $.grep(all[0], function (el, i) {
                        var save = true;
                        $.each(user[0], function(ui, d) {
                            if (el.Name == d.Name)
                                save = false;
                        });
                        return save;
                                });
                    var dropdownTemplate = $.templates("#elected-add-district-dropdown-template");
                    $.each(filteredDistricts, function (i, t) {
                        $(dropDown).append(dropdownTemplate.render(t));
});

                    var listTemplate = $.templates("#elected-district-template");
                    $.each(user[0], function (i, t) {
                        $(list).append(listTemplate.render(t));
                    });

                    var districtCount = user[0].length;
                    var emptyMessage = districtContainer.find(".js-no-district-chosen");
                    if (districtCount === 0) {
                        emptyMessage.removeClass("is-hidden");
                    } else {
                        emptyMessage.addClass("is-hidden");
                    }
                    });
            }
            });
    /**
 * Load all districts and fill filter dropdown
 */

    priv.loadAllDistricts = function () {
        $("#js-add-districts").empty();
        $.ajax({
            dataType: "json",
            url: "/api/manage-elected/district-groups",
            type: "get",
            cache: false,
            success: function (data) {
                if (data) {
                    var template = $.templates("#elected-all-district-dropdown-template");
                    $.each(data, function (i, t) {
                        $("#js-all-districts").append(template.render(t));
                    });
                }
            },
            error: function () {
            }
        });
    };

    /**
     * Load districts for elected and fill add dropdown
     * @param {string} id
     */
    priv.loadDistrictsForElected = function (id) {
        $("#js-add-district-dropdown").empty();
        $.when(priv.loadDistrictsForElectedAjax(id)).done(function (data) {
            if (data) {
                var template = $.templates("#elected-add-district-dropdown-template");
                $.each(data, function (i, t) {
                    $("#js-add-district-dropdown").append(template.render(t));
                });
            }
        });
    };

    /**
     * Load elected for district and fill the list
     * @param {string} id
     */
    priv.loadElectedForDistrict = function (id) {
        $(".js-user-list").empty();
        $.when(priv.loadElectedForDistrictAjax(id)).done(function (data) {
            if (data) {
                var template = $.templates("#elected-user-list-template");
                $.each(data, function (index, user) {
                    user.Index = index;
                    $(".js-user-list").append(template.render(user));
                });
            }
        });
    };

    priv.loadDistrictsForElectedAjax = function (id) {
        return $.ajax({
            dataType: "json",
            url: "/api/manage-elected/districts-for-elected",
            type: "post",
            data: { id: id },
            cache: false,
            success: function (data) {
            },
            error: function () {
            }
        });
    };

    priv.loadElectedForDistrictAjax = function (id) {
        return $.ajax({
            dataType: "json",
            url: "/api/manage-elected/elected-district",
            type: "post",
            data: { id: id },
            cache: false,
            success: function (data) {
            },
            error: function () {
            }
        });
    };

    priv.addCreateUserValidation = function () {
        if ($().validate) {
            $(".js-create-user").validate({
                errorElementClass: "error",
                errorClass: "error-item",
                errorElement: "span",
                //errorLabelContainer: ".js-validate-error",
                //wrapper: "li",
                rules: {
                    firstName: {
                        required: true
                    },
                    lastName: {
                        required: true
                    },
                    mobile: {
                        required: true,
                        mobileSE: true
                    },
                    telephone: {
                        phoneSE: true
        }
                },
                messages: {  
                    firstName: {
                        required:  "Du måste ange förnamn"
                    },
                    lastName: {
                        required: "Du måste ange efternamn"
                    },
                    mobile: {
                        required: window["validationMessage"].mobileSE.required,
                        mobileSE: window["validationMessage"].mobileSE.valid
                    },
                    telephone: {
                        phoneSE: window["validationMessage"].phoneSE.valid
                    }
                }
            });
        }
    };

     priv.addEmailValidation = function () {
        if ($().validate) {
            $("#js-me-check-user").validate({
                errorElementClass: "error",
                errorClass: "error-item",
                errorElement: "span",
                rules: {
                    email: {
                        required: true,
                        email: true
                    }
                },
                messages: {
                    email: {
                        required: "Du måste ange en E-postadress",
                        email: "Ange en korrekt epost"

                    }
                }
            });
        }
    };

    // Initialize module
    $(function () {
        priv.init();
    });
})();

// ------------------------------------------------------------------------- //
// #DOCUMENT-MANAGEMENT
// ------------------------------------------------------------------------- //


window.farmday = window.farmday || {};
farmday.modules = farmday.modules || {};


farmday.modules.documentManagement = (function () {
    var priv = {};


    /**
     * Private initialization method
     */
    priv.init = function () {

        /**
         * Add file
         */
        $(document).on("change", ".js-new-file-upload", function () {
            var template = $.templates("#new-file-created-template");
            var target = $(this).data("target");
            var fileName = $(this).val();
            var itemContainer = $(target).prev(".document-management__item-container");
            var collapseControl = $(this).closest("li").find(".js-toggle").first();

            var data = {
                url: "/",
                name: fileName,
                className: "icon--document"
            };

            itemContainer.removeClass("is-empty");
            $(target).prepend(template.render(data));
            farmday.modules.toggle.show(collapseControl);
        });

        /**
         * Add folder
         */
        $(document).on("click", ".js-add-folder", function () {
            var template = $.templates("#create-new-folder-template");
            var target = $(this).data("target");
            var itemContainer = $(target).prev(".document-management__item-container");
            var collapseControl = $(this).closest("li").find(".js-toggle").first();

            itemContainer.removeClass("is-empty");
            $(target).prepend(template.render());
            farmday.modules.toggle.show(collapseControl);
        });

        /**
         * Save folder
         */
        $(document).on("submit", ".js-new-folder-form", function (e) {
            var form = this;
            var template = $.templates("#new-folder-created-template");
            var folderInputRow = $(this).closest("li");
            var target = $(this).closest("ul");
            var folderName = $(this).find(".new-folder-input").val();

            var data = {
                id: new Date().getUTCMilliseconds(),
                name: folderName
            };

            e.preventDefault();

            $(form).validate();

            if ($(form).valid()) {
                folderInputRow.remove();
                $(target).prepend(template.render(data));
            }
        });

        /**
         * Delete file
         */
        $(document).on("click", ".js-delete-file", function () {
            $(this).closest("li").remove();
        });

    };


    // Initialize module
    $(function () {
        priv.init();
    });
})();

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpxdWVyeS5maWxlci5taW4uanMiLCJ0YWJsZXNhdy5qcyIsImpxdWVyeS52YWxpZGF0ZS5jb21tYS5qcyIsImNvbW1vbi5qcyIsInVybC5qcyIsInRhYmxlc2F3LWluaXQuanMiLCJoZWFkZXIuanMiLCJoZWFkZXItaW50ZXJuYWwuanMiLCJjaXJjbGUtcHJvZ3Jlc3MuanMiLCJhZ3JlZW1lbnQtZGF0YS5qcyIsImNoYXJ0LmpzIiwiZm9ybS1jb250cm9scy5qcyIsImNhbGN1bGF0ZS1kZWxpdmVyeS1mZWUuanMiLCJkZWxpdmVyeS1ub3RlLmpzIiwibWVzc2FnZXMuanMiLCJncm9iYXJoZXQtcGEtdXRzYWRlLmpzIiwibWVzc2FnZS1mb3Jtcy5qcyIsIm1pdHQta29udG8uanMiLCJ1cGxvYWQtYXZhdGFyLmpzIiwibXktcHJvZmlsZS5qcyIsIm15LW1hY2hpbmUuanMiLCJteS1jb21wYW55LmpzIiwibXktYWNjb3VudC5qcyIsImN1c3RvbWVyLWlkLmpzIiwidGVybS1vZi11c2UuanMiLCJyZWdpc3RyYXRpb24uanMiLCJjb250YWN0LWZvcm0uanMiLCJ1cGNvbWluZy1kZWxpdmVyeS1jYXJvdXNlbC5qcyIsInNlYXJjaC10cmFuc3BvcnQuanMiLCJ2YWxpZGF0aW9uLmpzIiwiZGVsaXZlcnktYXNzdXJhbmNlLmpzIiwidmVydGljYWwtdGFibGUuanMiLCJwdXJjaGFzZS1hZ3JlZW1lbnQuanMiLCJ0aW1lLWJvb2tpbmcuanMiLCJsaXN0LXRpbWUtYm9va2luZy5qcyIsImN1c3RvbWVyLWNhcmQuanMiLCJpbnRlcm5hbC1uYXZpZ2F0aW9uLmpzIiwiYWNjZXB0Y29va2llcy5qcyIsImdyYWluYmFsYW5jZS5qcyIsInVzZXItY2FyZC5qcyIsInRhYi1uYXZpZ2F0aW9uLmpzIiwibWVzc2FnZS1zZXR0aW5ncy10YWJzLmpzIiwidG9nZ2xlLmpzIiwibXktb3JkZXJzLmpzIiwibWFjaGluZS5qcyIsImNvbnRhY3QuanMiLCJzdGFydHBhZ2UuanMiLCJsb2dpbi5qcyIsIm9yZ2FuaXphdGlvbi5qcyIsIm15LWFncmVlbWVudHMuanMiLCJtYW5hZ2UtZWxlY3RlZC5qcyIsImRvY3VtZW50LW1hbmFnZW1lbnQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ1BBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQzF2Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ1BBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQzNiQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUM3RUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ2xDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUN2Y0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNqQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ2pQQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDemxCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNqS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNsSEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUMzSEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNuREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ2hFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUMxRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ2JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ2xEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDekVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDbGNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDemhCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDeENBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNyQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDM0RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ3pDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUN2Y0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ2pHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDM0lBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDL1BBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQzVGQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ256QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDeklBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQzc2QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUMzbUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNyUkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQy9RQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUMvRkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDckRBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ2huQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDak5BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ25GQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDeEZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ3BRQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQzFGQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDeENBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDbEVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDM0hBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ3hHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDL0hBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ25DQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUM3aUJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6InNjcmlwdHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcclxuICogalF1ZXJ5LmZpbGVyIG1pbmlmaWVkXHJcbiAqIENvcHlyaWdodCAoYykgMjAxNiBDcmVhdGl2ZURyZWFtXHJcbiAqIFdlYnNpdGU6IGh0dHBzOi8vZ2l0aHViLmNvbS9DcmVhdGl2ZURyZWFtL2pxdWVyeS5maWxlclxyXG4gKiBWZXJzaW9uOiAxLjMgKDE0LVNlcC0yMDE2KVxyXG4gKiBSZXF1aXJlczogalF1ZXJ5IHYxLjcuMSBvciBsYXRlclxyXG4gKi9cclxuIWZ1bmN0aW9uKGEpe1widXNlIHN0cmljdFwiO2EuZm4uZmlsZXI9ZnVuY3Rpb24oYil7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihjLGQpe3ZhciBlPWEoZCksZj1cIi5qRmlsZXJcIixnPWEoKSxoPWEoKSxpPWEoKSxqPVtdLGs9YS5pc0Z1bmN0aW9uKGIpP2IoZSxhLmZuLmZpbGVyLmRlZmF1bHRzKTpiLGw9ayYmYS5pc1BsYWluT2JqZWN0KGspP2EuZXh0ZW5kKCEwLHt9LGEuZm4uZmlsZXIuZGVmYXVsdHMsayk6YS5mbi5maWxlci5kZWZhdWx0cyxtPXtpbml0OmZ1bmN0aW9uKCl7ZS53cmFwKCc8ZGl2IGNsYXNzPVwiakZpbGVyXCI+PC9kaXY+JyksbS5fc2V0KFwicHJvcHNcIiksZS5wcm9wKFwiakZpbGVyXCIpLmJveEVsPWc9ZS5jbG9zZXN0KGYpLG0uX2NoYW5nZUlucHV0KCl9LF9iaW5kSW5wdXQ6ZnVuY3Rpb24oKXtsLmNoYW5nZUlucHV0JiZoLmxlbmd0aD4wJiZoLm9uKFwiY2xpY2tcIixtLl9jbGlja0hhbmRsZXIpLGUub24oe2ZvY3VzOmZ1bmN0aW9uKCl7aC5hZGRDbGFzcyhcImZvY3VzZWRcIil9LGJsdXI6ZnVuY3Rpb24oKXtoLnJlbW92ZUNsYXNzKFwiZm9jdXNlZFwiKX0sY2hhbmdlOm0uX29uQ2hhbmdlfSksbC5kcmFnRHJvcCYmKGwuZHJhZ0Ryb3AuZHJhZ0NvbnRhaW5lci5vbihcImRyYWcgZHJhZ3N0YXJ0IGRyYWdlbmQgZHJhZ292ZXIgZHJhZ2VudGVyIGRyYWdsZWF2ZSBkcm9wXCIsZnVuY3Rpb24oYSl7YS5wcmV2ZW50RGVmYXVsdCgpLGEuc3RvcFByb3BhZ2F0aW9uKCl9KSxsLmRyYWdEcm9wLmRyYWdDb250YWluZXIub24oXCJkcm9wXCIsbS5fZHJhZ0Ryb3AuZHJvcCksbC5kcmFnRHJvcC5kcmFnQ29udGFpbmVyLm9uKFwiZHJhZ292ZXJcIixtLl9kcmFnRHJvcC5kcmFnRW50ZXIpLGwuZHJhZ0Ryb3AuZHJhZ0NvbnRhaW5lci5vbihcImRyYWdsZWF2ZVwiLG0uX2RyYWdEcm9wLmRyYWdMZWF2ZSkpLGwudXBsb2FkRmlsZSYmbC5jbGlwQm9hcmRQYXN0ZSYmYSh3aW5kb3cpLm9uKFwicGFzdGVcIixtLl9jbGlwYm9hcmRQYXN0ZSl9LF91bmJpbmRJbnB1dDpmdW5jdGlvbihiKXtsLmNoYW5nZUlucHV0JiZoLmxlbmd0aD4wJiZoLm9mZihcImNsaWNrXCIsbS5fY2xpY2tIYW5kbGVyKSxiJiYoZS5vZmYoXCJjaGFuZ2VcIixtLl9vbkNoYW5nZSksbC5kcmFnRHJvcCYmKGwuZHJhZ0Ryb3AuZHJhZ0NvbnRhaW5lci5vZmYoXCJkcm9wXCIsbS5fZHJhZ0Ryb3AuZHJvcCksbC5kcmFnRHJvcC5kcmFnQ29udGFpbmVyLm9mZihcImRyYWdvdmVyXCIsbS5fZHJhZ0Ryb3AuZHJhZ0VudGVyKSxsLmRyYWdEcm9wLmRyYWdDb250YWluZXIub2ZmKFwiZHJhZ2xlYXZlXCIsbS5fZHJhZ0Ryb3AuZHJhZ0xlYXZlKSksbC51cGxvYWRGaWxlJiZsLmNsaXBCb2FyZFBhc3RlJiZhKHdpbmRvdykub2ZmKFwicGFzdGVcIixtLl9jbGlwYm9hcmRQYXN0ZSkpfSxfY2xpY2tIYW5kbGVyOmZ1bmN0aW9uKCl7aWYoIWwudXBsb2FkRmlsZSYmbC5hZGRNb3JlJiYwIT1lLnZhbCgpLmxlbmd0aCl7bS5fdW5iaW5kSW5wdXQoITApO3ZhciBiPWEoJzxpbnB1dCB0eXBlPVwiZmlsZVwiIC8+JyksYz1lLnByb3AoXCJhdHRyaWJ1dGVzXCIpO2EuZWFjaChjLGZ1bmN0aW9uKCl7XCJyZXF1aXJlZFwiIT10aGlzLm5hbWUmJmIuYXR0cih0aGlzLm5hbWUsdGhpcy52YWx1ZSl9KSxlLmFmdGVyKGIpLGoucHVzaChiKSxlPWIsbS5fYmluZElucHV0KCksbS5fc2V0KFwicHJvcHNcIil9ZS5jbGljaygpfSxfYXBwbHlBdHRyU2V0dGluZ3M6ZnVuY3Rpb24oKXt2YXIgYT1bXCJuYW1lXCIsXCJsaW1pdFwiLFwibWF4U2l6ZVwiLFwiZmlsZU1heFNpemVcIixcImV4dGVuc2lvbnNcIixcImNoYW5nZUlucHV0XCIsXCJzaG93VGh1bWJzXCIsXCJhcHBlbmRUb1wiLFwidGhlbWVcIixcImFkZE1vcmVcIixcImV4Y2x1ZGVOYW1lXCIsXCJmaWxlc1wiLFwidXBsb2FkVXJsXCIsXCJ1cGxvYWREYXRhXCIsXCJvcHRpb25zXCJdO2Zvcih2YXIgYiBpbiBhKXt2YXIgYz1cImRhdGEtamZpbGVyLVwiK2FbYl07aWYobS5fYXNzZXRzLmhhc0F0dHIoYykpe3N3aXRjaChhW2JdKXtjYXNlXCJjaGFuZ2VJbnB1dFwiOmNhc2VcInNob3dUaHVtYnNcIjpjYXNlXCJhZGRNb3JlXCI6bFthW2JdXT1bXCJ0cnVlXCIsXCJmYWxzZVwiXS5pbmRleE9mKGUuYXR0cihjKSk+LTE/XCJ0cnVlXCI9PWUuYXR0cihjKTplLmF0dHIoYyk7YnJlYWs7Y2FzZVwiZXh0ZW5zaW9uc1wiOmxbYVtiXV09ZS5hdHRyKGMpLnJlcGxhY2UoLyAvZyxcIlwiKS5zcGxpdChcIixcIik7YnJlYWs7Y2FzZVwidXBsb2FkVXJsXCI6bC51cGxvYWRGaWxlJiYobC51cGxvYWRGaWxlLnVybD1lLmF0dHIoYykpO2JyZWFrO2Nhc2VcInVwbG9hZERhdGFcIjpsLnVwbG9hZEZpbGUmJihsLnVwbG9hZEZpbGUuZGF0YT1KU09OLnBhcnNlKGUuYXR0cihjKSkpO2JyZWFrO2Nhc2VcImZpbGVzXCI6Y2FzZVwib3B0aW9uc1wiOmxbYVtiXV09SlNPTi5wYXJzZShlLmF0dHIoYykpO2JyZWFrO2RlZmF1bHQ6bFthW2JdXT1lLmF0dHIoYyl9ZS5yZW1vdmVBdHRyKGMpfX19LF9jaGFuZ2VJbnB1dDpmdW5jdGlvbigpe2lmKG0uX2FwcGx5QXR0clNldHRpbmdzKCksbnVsbCE9bC5iZWZvcmVSZW5kZXImJlwiZnVuY3Rpb25cIj09dHlwZW9mIGwuYmVmb3JlUmVuZGVyP2wuYmVmb3JlUmVuZGVyKGcsZSk6bnVsbCxsLnRoZW1lJiZnLmFkZENsYXNzKFwiakZpbGVyLXRoZW1lLVwiK2wudGhlbWUpLFwiaW5wdXRcIiE9ZS5nZXQoMCkudGFnTmFtZS50b0xvd2VyQ2FzZSgpJiZcImZpbGVcIiE9ZS5nZXQoMCkudHlwZSloPWUsZT1hKCc8aW5wdXQgdHlwZT1cImZpbGVcIiBuYW1lPVwiJytsLm5hbWUrJ1wiIC8+JyksZS5jc3Moe3Bvc2l0aW9uOlwiYWJzb2x1dGVcIixsZWZ0OlwiLTk5OTlweFwiLHRvcDpcIi05OTk5cHhcIixcInotaW5kZXhcIjpcIi05OTk5XCJ9KSxnLnByZXBlbmQoZSksbS5faXNHbj1lO2Vsc2UgaWYobC5jaGFuZ2VJbnB1dCl7c3dpdGNoKHR5cGVvZiBsLmNoYW5nZUlucHV0KXtjYXNlXCJib29sZWFuXCI6aD1hKCc8ZGl2IGNsYXNzPVwiakZpbGVyLWlucHV0XCI+PGRpdiBjbGFzcz1cImpGaWxlci1pbnB1dC1jYXB0aW9uXCI+PHNwYW4+JytsLmNhcHRpb25zLmZlZWRiYWNrKyc8L3NwYW4+PC9kaXY+PGRpdiBjbGFzcz1cImpGaWxlci1pbnB1dC1idXR0b25cIj4nK2wuY2FwdGlvbnMuYnV0dG9uKyc8L2Rpdj48L2Rpdj5cIicpO2JyZWFrO2Nhc2VcInN0cmluZ1wiOmNhc2VcIm9iamVjdFwiOmg9YShsLmNoYW5nZUlucHV0KTticmVhaztjYXNlXCJmdW5jdGlvblwiOmg9YShsLmNoYW5nZUlucHV0KGcsZSxsKSl9ZS5hZnRlcihoKSxlLmNzcyh7cG9zaXRpb246XCJhYnNvbHV0ZVwiLGxlZnQ6XCItOTk5OXB4XCIsdG9wOlwiLTk5OTlweFwiLFwiei1pbmRleFwiOlwiLTk5OTlcIn0pfWUucHJvcChcImpGaWxlclwiKS5uZXdJbnB1dEVsPWgsbC5kcmFnRHJvcCYmKGwuZHJhZ0Ryb3AuZHJhZ0NvbnRhaW5lcj1sLmRyYWdEcm9wLmRyYWdDb250YWluZXI/YShsLmRyYWdEcm9wLmRyYWdDb250YWluZXIpOmgpLCghbC5saW1pdHx8bC5saW1pdCYmbC5saW1pdD49MikmJihlLmF0dHIoXCJtdWx0aXBsZVwiLFwibXVsdGlwbGVcIiksXCJbXVwiIT1lLmF0dHIoXCJuYW1lXCIpLnNsaWNlKC0yKT9lLmF0dHIoXCJuYW1lXCIsZS5hdHRyKFwibmFtZVwiKStcIltdXCIpOm51bGwpLGUuYXR0cihcImRpc2FibGVkXCIpfHxsLmRpc2FibGVkPyhsLmRpc2FibGVkPSEwLG0uX3VuYmluZElucHV0KCEwKSxnLmFkZENsYXNzKFwiakZpbGVyLWRpc2FibGVkXCIpKToobC5kaXNhYmxlZD0hMSxtLl9iaW5kSW5wdXQoKSxnLnJlbW92ZUNsYXNzKFwiakZpbGVyLWRpc2FibGVkXCIpKSxsLmZpbGVzJiZtLl9hcHBlbmQoITEse2ZpbGVzOmwuZmlsZXN9KSxudWxsIT1sLmFmdGVyUmVuZGVyJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBsLmFmdGVyUmVuZGVyP2wuYWZ0ZXJSZW5kZXIoaSxnLGgsZSk6bnVsbH0sX2NsZWFyOmZ1bmN0aW9uKCl7bS5maWxlcz1udWxsLGUucHJvcChcImpGaWxlclwiKS5maWxlcz1udWxsLGwudXBsb2FkRmlsZXx8bC5hZGRNb3JlfHxtLl9yZXNldCgpLG0uX3NldChcImZlZWRiYWNrXCIsbS5faXRGbCYmbS5faXRGbC5sZW5ndGg+MD9tLl9pdEZsLmxlbmd0aCtcIiBcIitsLmNhcHRpb25zLmZlZWRiYWNrMjpsLmNhcHRpb25zLmZlZWRiYWNrKSxudWxsIT1sLm9uRW1wdHkmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGwub25FbXB0eT9sLm9uRW1wdHkoZyxoLGUpOm51bGx9LF9yZXNldDpmdW5jdGlvbihiKXtpZighYil7aWYoIWwudXBsb2FkRmlsZSYmbC5hZGRNb3JlKXtmb3IodmFyIGM9MDtjPGoubGVuZ3RoO2MrKylqW2NdLnJlbW92ZSgpO2o9W10sbS5fdW5iaW5kSW5wdXQoITApLGU9bS5faXNHbj9tLl9pc0duOmEoZCksbS5fYmluZElucHV0KCl9bS5fc2V0KFwiaW5wdXRcIixcIlwiKX1tLl9pdEZsPVtdLG0uX2l0RmM9bnVsbCxtLl9hakZjPTAsbS5fc2V0KFwicHJvcHNcIiksZS5wcm9wKFwiakZpbGVyXCIpLmZpbGVzX2xpc3Q9bS5faXRGbCxlLnByb3AoXCJqRmlsZXJcIikuY3VycmVudF9maWxlPW0uX2l0RmMsbS5faXRGcj1bXSxnLmZpbmQoXCJpbnB1dFtuYW1lXj0namZpbGVyLWl0ZW1zLWV4Y2x1ZGUtJ106aGlkZGVuXCIpLnJlbW92ZSgpLGkuZmFkZU91dChcImZhc3RcIixmdW5jdGlvbigpe2EodGhpcykucmVtb3ZlKCl9KSxlLnByb3AoXCJqRmlsZXJcIikubGlzdEVsPWk9YSgpfSxfc2V0OmZ1bmN0aW9uKGEsYil7c3dpdGNoKGEpe2Nhc2VcImlucHV0XCI6ZS52YWwoYik7YnJlYWs7Y2FzZVwiZmVlZGJhY2tcIjpoLmxlbmd0aD4wJiZoLmZpbmQoXCIuakZpbGVyLWlucHV0LWNhcHRpb24gc3BhblwiKS5odG1sKGIpO2JyZWFrO2Nhc2VcInByb3BzXCI6ZS5wcm9wKFwiakZpbGVyXCIpfHxlLnByb3AoXCJqRmlsZXJcIix7b3B0aW9uczpsLGxpc3RFbDppLGJveEVsOmcsbmV3SW5wdXRFbDpoLGlucHV0RWw6ZSxmaWxlczptLmZpbGVzLGZpbGVzX2xpc3Q6bS5faXRGbCxjdXJyZW50X2ZpbGU6bS5faXRGYyxhcHBlbmQ6ZnVuY3Rpb24oYSl7cmV0dXJuIG0uX2FwcGVuZCghMSx7ZmlsZXM6W2FdfSl9LGVuYWJsZTpmdW5jdGlvbigpe2wuZGlzYWJsZWQmJihsLmRpc2FibGVkPSExLGUucmVtb3ZlQXR0cihcImRpc2FibGVkXCIpLGcucmVtb3ZlQ2xhc3MoXCJqRmlsZXItZGlzYWJsZWRcIiksbS5fYmluZElucHV0KCkpfSxkaXNhYmxlOmZ1bmN0aW9uKCl7bC5kaXNhYmxlZHx8KGwuZGlzYWJsZWQ9ITAsZy5hZGRDbGFzcyhcImpGaWxlci1kaXNhYmxlZFwiKSxtLl91bmJpbmRJbnB1dCghMCkpfSxyZW1vdmU6ZnVuY3Rpb24oYSl7cmV0dXJuIG0uX3JlbW92ZShudWxsLHtiaW5kZWQ6ITAsZGF0YTp7aWQ6YX19KSwhMH0scmVzZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbS5fcmVzZXQoKSxtLl9jbGVhcigpLCEwfSxyZXRyeTpmdW5jdGlvbihhKXtyZXR1cm4gbS5fcmV0cnlVcGxvYWQoYSl9fSl9fSxfZmlsZXNDaGVjazpmdW5jdGlvbigpe3ZhciBiPTA7aWYobC5saW1pdCYmbS5maWxlcy5sZW5ndGgrbS5faXRGbC5sZW5ndGg+bC5saW1pdClyZXR1cm4gbC5kaWFsb2dzLmFsZXJ0KG0uX2Fzc2V0cy50ZXh0UGFyc2UobC5jYXB0aW9ucy5lcnJvcnMuZmlsZXNMaW1pdCkpLCExO2Zvcih2YXIgYz0wO2M8bS5maWxlcy5sZW5ndGg7YysrKXt2YXIgZD1tLmZpbGVzW2NdLGU9ZC5uYW1lLnNwbGl0KFwiLlwiKS5wb3AoKS50b0xvd2VyQ2FzZSgpLGY9e25hbWU6ZC5uYW1lLHNpemU6ZC5zaXplLHNpemUyOm0uX2Fzc2V0cy5ieXRlc1RvU2l6ZShkLnNpemUpLHR5cGU6ZC50eXBlLGV4dDplfTtpZihudWxsIT1sLmV4dGVuc2lvbnMmJmEuaW5BcnJheShlLGwuZXh0ZW5zaW9ucyk9PS0xJiZhLmluQXJyYXkoZi50eXBlLGwuZXh0ZW5zaW9ucyk9PS0xKXJldHVybiBsLmRpYWxvZ3MuYWxlcnQobS5fYXNzZXRzLnRleHRQYXJzZShsLmNhcHRpb25zLmVycm9ycy5maWxlc1R5cGUsZikpLCExO2lmKG51bGwhPWwubWF4U2l6ZSYmbS5maWxlc1tjXS5zaXplPjEwNDg1NzYqbC5tYXhTaXplfHxudWxsIT1sLmZpbGVNYXhTaXplJiZtLmZpbGVzW2NdLnNpemU+MTA0ODU3NipsLmZpbGVNYXhTaXplKXJldHVybiBsLmRpYWxvZ3MuYWxlcnQobS5fYXNzZXRzLnRleHRQYXJzZShsLmNhcHRpb25zLmVycm9ycy5maWxlc1NpemUsZikpLCExO2lmKDQwOTY9PWQuc2l6ZSYmMD09ZC50eXBlLmxlbmd0aClyZXR1cm4gbC5kaWFsb2dzLmFsZXJ0KG0uX2Fzc2V0cy50ZXh0UGFyc2UobC5jYXB0aW9ucy5lcnJvcnMuZm9sZGVyVXBsb2FkLGYpKSwhMTtpZihudWxsIT1sLm9uRmlsZUNoZWNrJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBsLm9uRmlsZUNoZWNrP2wub25GaWxlQ2hlY2soZixsLG0uX2Fzc2V0cy50ZXh0UGFyc2UpPT09ITE6bnVsbClyZXR1cm4hMTtpZigobC51cGxvYWRGaWxlfHxsLmFkZE1vcmUpJiYhbC5hbGxvd0R1cGxpY2F0ZXMpe3ZhciBmPW0uX2l0RmwuZmlsdGVyKGZ1bmN0aW9uKGEsYil7aWYoYS5maWxlLm5hbWU9PWQubmFtZSYmYS5maWxlLnNpemU9PWQuc2l6ZSYmYS5maWxlLnR5cGU9PWQudHlwZSYmKCFkLmxhc3RNb2RpZmllZHx8YS5maWxlLmxhc3RNb2RpZmllZD09ZC5sYXN0TW9kaWZpZWQpKXJldHVybiEwfSk7aWYoZi5sZW5ndGg+MCl7aWYoMT09bS5maWxlcy5sZW5ndGgpcmV0dXJuITE7ZC5fcGVuZFJlbW92ZT0hMH19Yis9bS5maWxlc1tjXS5zaXplfXJldHVybiEobnVsbCE9bC5tYXhTaXplJiZiPj1NYXRoLnJvdW5kKDEwNDg1NzYqbC5tYXhTaXplKSl8fChsLmRpYWxvZ3MuYWxlcnQobS5fYXNzZXRzLnRleHRQYXJzZShsLmNhcHRpb25zLmVycm9ycy5maWxlc1NpemVBbGwpKSwhMSl9LF90aHVtYkNyZWF0b3I6e2NyZWF0ZTpmdW5jdGlvbihiKXt2YXIgYz1tLmZpbGVzW2JdLGQ9bS5faXRGYz9tLl9pdEZjLmlkOmIsZT1jLm5hbWUsZj1jLnNpemUsZz1jLmZpbGUsaD1jLnR5cGU/Yy50eXBlLnNwbGl0KFwiL1wiLDEpOlwiXCIudG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpLGo9ZS5pbmRleE9mKFwiLlwiKSE9LTE/ZS5zcGxpdChcIi5cIikucG9wKCkudG9Mb3dlckNhc2UoKTpcIlwiLGs9bC51cGxvYWRGaWxlPyc8ZGl2IGNsYXNzPVwiakZpbGVyLWpQcm9ncmVzc0JhclwiPicrbC50ZW1wbGF0ZXMucHJvZ3Jlc3NCYXIrXCI8L2Rpdj5cIjpcIlwiLG49e2lkOmQsbmFtZTplLHNpemU6ZixzaXplMjptLl9hc3NldHMuYnl0ZXNUb1NpemUoZiksdXJsOmcsdHlwZTpoLGV4dGVuc2lvbjpqLGljb246bS5fYXNzZXRzLmdldEljb24oaixoKSxpY29uMjptLl90aHVtYkNyZWF0b3IuZ2VuZXJhdGVJY29uKHt0eXBlOmgsZXh0ZW5zaW9uOmp9KSxpbWFnZTonPGRpdiBjbGFzcz1cImpGaWxlci1pdGVtLXRodW1iLWltYWdlIGZpLWxvYWRpbmdcIj48L2Rpdj4nLHByb2dyZXNzQmFyOmssX2FwcGVuZGVkOmMuX2FwcGVuZGVkfSxvPVwiXCI7cmV0dXJuIGMub3B0cyYmKG49YS5leHRlbmQoe30sYy5vcHRzLG4pKSxvPWEobS5fdGh1bWJDcmVhdG9yLnJlbmRlckNvbnRlbnQobikpLmF0dHIoXCJkYXRhLWpmaWxlci1pbmRleFwiLGQpLG8uZ2V0KDApLmpmaWxlcl9pZD1kLG0uX3RodW1iQ3JlYXRvci5yZW5kZXJGaWxlKGMsbyxuKSxjLmZvckxpc3Q/bzoobS5faXRGYy5odG1sPW8sby5oaWRlKClbbC50ZW1wbGF0ZXMuaXRlbUFwcGVuZFRvRW5kP1wiYXBwZW5kVG9cIjpcInByZXBlbmRUb1wiXShpLmZpbmQobC50ZW1wbGF0ZXMuX3NlbGVjdG9ycy5saXN0KSkuc2hvdygpLHZvaWQoYy5fYXBwZW5kZWR8fG0uX29uU2VsZWN0KGIpKSl9LHJlbmRlckNvbnRlbnQ6ZnVuY3Rpb24oYSl7cmV0dXJuIG0uX2Fzc2V0cy50ZXh0UGFyc2UoYS5fYXBwZW5kZWQ/bC50ZW1wbGF0ZXMuaXRlbUFwcGVuZDpsLnRlbXBsYXRlcy5pdGVtLGEpfSxyZW5kZXJGaWxlOmZ1bmN0aW9uKGIsYyxkKXtpZigwPT1jLmZpbmQoXCIuakZpbGVyLWl0ZW0tdGh1bWItaW1hZ2VcIikubGVuZ3RoKXJldHVybiExO2lmKGIuZmlsZSYmXCJpbWFnZVwiPT1kLnR5cGUpe3ZhciBlPSc8aW1nIHNyYz1cIicrYi5maWxlKydcIiBkcmFnZ2FibGU9XCJmYWxzZVwiIC8+JyxmPWMuZmluZChcIi5qRmlsZXItaXRlbS10aHVtYi1pbWFnZS5maS1sb2FkaW5nXCIpO3JldHVybiBhKGUpLmVycm9yKGZ1bmN0aW9uKCl7ZT1tLl90aHVtYkNyZWF0b3IuZ2VuZXJhdGVJY29uKGQpLGMuYWRkQ2xhc3MoXCJqRmlsZXItbm8tdGh1bWJuYWlsXCIpLGYucmVtb3ZlQ2xhc3MoXCJmaS1sb2FkaW5nXCIpLmh0bWwoZSl9KS5sb2FkKGZ1bmN0aW9uKCl7Zi5yZW1vdmVDbGFzcyhcImZpLWxvYWRpbmdcIikuaHRtbChlKX0pLCEwfWlmKHdpbmRvdy5GaWxlJiZ3aW5kb3cuRmlsZUxpc3QmJndpbmRvdy5GaWxlUmVhZGVyJiZcImltYWdlXCI9PWQudHlwZSYmZC5zaXplPDFlNyl7dmFyIGc9bmV3IEZpbGVSZWFkZXI7Zy5vbmxvYWQ9ZnVuY3Rpb24oYSl7dmFyIGI9Yy5maW5kKFwiLmpGaWxlci1pdGVtLXRodW1iLWltYWdlLmZpLWxvYWRpbmdcIik7aWYobC50ZW1wbGF0ZXMuY2FudmFzSW1hZ2Upe3ZhciBlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIiksZj1lLmdldENvbnRleHQoXCIyZFwiKSxnPW5ldyBJbWFnZTtnLm9ubG9hZD1mdW5jdGlvbigpe3ZhciBhPWIuaGVpZ2h0KCksYz1iLndpZHRoKCksZD1nLmhlaWdodC9hLGg9Zy53aWR0aC9jLGk9ZDxoP2Q6aCxqPWcuaGVpZ2h0L2ksaz1nLndpZHRoL2ksbD1NYXRoLmNlaWwoTWF0aC5sb2coZy53aWR0aC9rKS9NYXRoLmxvZygyKSk7aWYoZS5oZWlnaHQ9YSxlLndpZHRoPWMsZy53aWR0aDxlLndpZHRofHxnLmhlaWdodDxlLmhlaWdodHx8bDw9MSl7dmFyIG09Zy53aWR0aDxlLndpZHRoP2Uud2lkdGgvMi1nLndpZHRoLzI6Zy53aWR0aD5lLndpZHRoPy0oZy53aWR0aC1lLndpZHRoKS8yOjAsbj1nLmhlaWdodDxlLmhlaWdodD9lLmhlaWdodC8yLWcuaGVpZ2h0LzI6MDtmLmRyYXdJbWFnZShnLG0sbixnLndpZHRoLGcuaGVpZ2h0KX1lbHNle3ZhciBvPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIikscD1vLmdldENvbnRleHQoXCIyZFwiKTtvLndpZHRoPS41Kmcud2lkdGgsby5oZWlnaHQ9LjUqZy5oZWlnaHQscC5maWxsU3R5bGU9XCIjZmZmXCIscC5maWxsUmVjdCgwLDAsby53aWR0aCxvLmhlaWdodCkscC5kcmF3SW1hZ2UoZywwLDAsby53aWR0aCxvLmhlaWdodCkscC5kcmF3SW1hZ2UobywwLDAsLjUqby53aWR0aCwuNSpvLmhlaWdodCksZi5kcmF3SW1hZ2UobyxrPmUud2lkdGg/ay1lLndpZHRoOjAsMCwuNSpvLndpZHRoLC41Km8uaGVpZ2h0LDAsMCxrLGopfWIucmVtb3ZlQ2xhc3MoXCJmaS1sb2FkaW5nXCIpLmh0bWwoJzxpbWcgc3JjPVwiJytlLnRvRGF0YVVSTChcImltYWdlL3BuZ1wiKSsnXCIgZHJhZ2dhYmxlPVwiZmFsc2VcIiAvPicpfSxnLm9uZXJyb3I9ZnVuY3Rpb24oKXtjLmFkZENsYXNzKFwiakZpbGVyLW5vLXRodW1ibmFpbFwiKSxiLnJlbW92ZUNsYXNzKFwiZmktbG9hZGluZ1wiKS5odG1sKG0uX3RodW1iQ3JlYXRvci5nZW5lcmF0ZUljb24oZCkpfSxnLnNyYz1hLnRhcmdldC5yZXN1bHR9ZWxzZSBiLnJlbW92ZUNsYXNzKFwiZmktbG9hZGluZ1wiKS5odG1sKCc8aW1nIHNyYz1cIicrYS50YXJnZXQucmVzdWx0KydcIiBkcmFnZ2FibGU9XCJmYWxzZVwiIC8+Jyl9LGcucmVhZEFzRGF0YVVSTChiKX1lbHNle3ZhciBlPW0uX3RodW1iQ3JlYXRvci5nZW5lcmF0ZUljb24oZCksZj1jLmZpbmQoXCIuakZpbGVyLWl0ZW0tdGh1bWItaW1hZ2UuZmktbG9hZGluZ1wiKTtjLmFkZENsYXNzKFwiakZpbGVyLW5vLXRodW1ibmFpbFwiKSxmLnJlbW92ZUNsYXNzKFwiZmktbG9hZGluZ1wiKS5odG1sKGUpfX0sZ2VuZXJhdGVJY29uOmZ1bmN0aW9uKGIpe3ZhciBjPW5ldyBBcnJheSgzKTtpZihiJiZiLnR5cGUmJmIudHlwZVswXSYmYi5leHRlbnNpb24pc3dpdGNoKGIudHlwZVswXSl7Y2FzZVwiaW1hZ2VcIjpjWzBdPVwiZi1pbWFnZVwiLGNbMV09JzxpIGNsYXNzPVwiaWNvbi1qZmktZmlsZS1pbWFnZVwiPjwvaT4nO2JyZWFrO2Nhc2VcInZpZGVvXCI6Y1swXT1cImYtdmlkZW9cIixjWzFdPSc8aSBjbGFzcz1cImljb24tamZpLWZpbGUtdmlkZW9cIj48L2k+JzticmVhaztjYXNlXCJhdWRpb1wiOmNbMF09XCJmLWF1ZGlvXCIsY1sxXT0nPGkgY2xhc3M9XCJpY29uLWpmaS1maWxlLWF1ZGlvXCI+PC9pPic7YnJlYWs7ZGVmYXVsdDpjWzBdPVwiZi1maWxlIGYtZmlsZS1leHQtXCIrYi5leHRlbnNpb24sY1sxXT1iLmV4dGVuc2lvbi5sZW5ndGg+MD9cIi5cIitiLmV4dGVuc2lvbjpcIlwiLGNbMl09MX1lbHNlIGNbMF09XCJmLWZpbGVcIixjWzFdPWIuZXh0ZW5zaW9uJiZiLmV4dGVuc2lvbi5sZW5ndGg+MD9cIi5cIitiLmV4dGVuc2lvbjpcIlwiLGNbMl09MTt2YXIgZD0nPHNwYW4gY2xhc3M9XCJqRmlsZXItaWNvbi1maWxlICcrY1swXSsnXCI+JytjWzFdK1wiPC9zcGFuPlwiO2lmKDE9PWNbMl0pe3ZhciBlPW0uX2Fzc2V0cy50ZXh0MkNvbG9yKGIuZXh0ZW5zaW9uKTtpZihlKXt2YXIgZj1hKGQpLmFwcGVuZFRvKFwiYm9keVwiKTtmLmNzcyhcImJhY2tncm91bmQtY29sb3JcIixtLl9hc3NldHMudGV4dDJDb2xvcihiLmV4dGVuc2lvbikpLGQ9Zi5wcm9wKFwib3V0ZXJIVE1MXCIpLGYucmVtb3ZlKCl9fXJldHVybiBkfSxfYm94OmZ1bmN0aW9uKGIpe2lmKG51bGwhPWwuYmVmb3JlU2hvdyYmXCJmdW5jdGlvblwiPT10eXBlb2YgbC5iZWZvcmVTaG93JiYhbC5iZWZvcmVTaG93KG0uZmlsZXMsaSxnLGgsZSkpcmV0dXJuITE7aWYoaS5sZW5ndGg8MSl7aWYobC5hcHBlbmRUbyl2YXIgYz1hKGwuYXBwZW5kVG8pO2Vsc2UgdmFyIGM9ZztjLmZpbmQoXCIuakZpbGVyLWl0ZW1zXCIpLnJlbW92ZSgpLGk9YSgnPGRpdiBjbGFzcz1cImpGaWxlci1pdGVtcyBqRmlsZXItcm93XCI+PC9kaXY+JyksZS5wcm9wKFwiakZpbGVyXCIpLmxpc3RFbD1pLGkuYXBwZW5kKG0uX2Fzc2V0cy50ZXh0UGFyc2UobC50ZW1wbGF0ZXMuYm94KSkuYXBwZW5kVG8oYyksaS5vbihcImNsaWNrXCIsbC50ZW1wbGF0ZXMuX3NlbGVjdG9ycy5yZW1vdmUsZnVuY3Rpb24oYyl7Yy5wcmV2ZW50RGVmYXVsdCgpO3ZhciBkPVtiP2IucmVtb3ZlLmV2ZW50OmMsYj9iLnJlbW92ZS5lbDphKHRoaXMpLmNsb3Nlc3QobC50ZW1wbGF0ZXMuX3NlbGVjdG9ycy5pdGVtKV0sZT1mdW5jdGlvbihhKXttLl9yZW1vdmUoZFswXSxkWzFdKX07bC50ZW1wbGF0ZXMucmVtb3ZlQ29uZmlybWF0aW9uP2wuZGlhbG9ncy5jb25maXJtKGwuY2FwdGlvbnMucmVtb3ZlQ29uZmlybWF0aW9uLGUpOmUoKX0pfWZvcih2YXIgZD0wO2Q8bS5maWxlcy5sZW5ndGg7ZCsrKW0uZmlsZXNbZF0uX2FwcGVuZGVkfHwobS5maWxlc1tkXS5fY2hvb3NlZD0hMCksbS5fYWRkVG9NZW1vcnkoZCksbS5fdGh1bWJDcmVhdG9yLmNyZWF0ZShkKX19LF91cGxvYWQ6ZnVuY3Rpb24oYil7dmFyIGM9bS5faXRGbFtiXSxkPWMuaHRtbCxmPW5ldyBGb3JtRGF0YTtpZihmLmFwcGVuZChlLmF0dHIoXCJuYW1lXCIpLGMuZmlsZSwhIWMuZmlsZS5uYW1lJiZjLmZpbGUubmFtZSksbnVsbCE9bC51cGxvYWRGaWxlLmRhdGEmJmEuaXNQbGFpbk9iamVjdChcImZ1bmN0aW9uXCI9PXR5cGVvZiBsLnVwbG9hZEZpbGUuZGF0YT9sLnVwbG9hZEZpbGUuZGF0YShjLmZpbGUpOmwudXBsb2FkRmlsZS5kYXRhKSlmb3IodmFyIGcgaW4gbC51cGxvYWRGaWxlLmRhdGEpZi5hcHBlbmQoZyxsLnVwbG9hZEZpbGUuZGF0YVtnXSk7bS5fYWpheC5zZW5kKGQsZixjKX0sX2FqYXg6e3NlbmQ6ZnVuY3Rpb24oYixjLGQpe3JldHVybiBkLmFqYXg9YS5hamF4KHt1cmw6bC51cGxvYWRGaWxlLnVybCxkYXRhOmMsdHlwZTpsLnVwbG9hZEZpbGUudHlwZSxlbmN0eXBlOmwudXBsb2FkRmlsZS5lbmN0eXBlLHhocjpmdW5jdGlvbigpe3ZhciBjPWEuYWpheFNldHRpbmdzLnhocigpO3JldHVybiBjLnVwbG9hZCYmYy51cGxvYWQuYWRkRXZlbnRMaXN0ZW5lcihcInByb2dyZXNzXCIsZnVuY3Rpb24oYSl7bS5fYWpheC5wcm9ncmVzc0hhbmRsaW5nKGEsYil9LCExKSxjfSxjb21wbGV0ZTpmdW5jdGlvbihhLGIpe2QuYWpheD0hMSxtLl9hakZjKyssbC51cGxvYWRGaWxlLnN5bmNocm9uJiZkLmlkKzE8bS5faXRGbC5sZW5ndGgmJm0uX3VwbG9hZChkLmlkKzEpLG0uX2FqRmM+PW0uZmlsZXMubGVuZ3RoJiYobS5fYWpGYz0wLGUuZ2V0KDApLnZhbHVlPVwiXCIsbnVsbCE9bC51cGxvYWRGaWxlLm9uQ29tcGxldGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGwudXBsb2FkRmlsZS5vbkNvbXBsZXRlP2wudXBsb2FkRmlsZS5vbkNvbXBsZXRlKGksZyxoLGUsYSxiKTpudWxsKX0sYmVmb3JlU2VuZDpmdW5jdGlvbihhLGMpe3JldHVybiBudWxsPT1sLnVwbG9hZEZpbGUuYmVmb3JlU2VuZHx8XCJmdW5jdGlvblwiIT10eXBlb2YgbC51cGxvYWRGaWxlLmJlZm9yZVNlbmR8fGwudXBsb2FkRmlsZS5iZWZvcmVTZW5kKGIsaSxnLGgsZSxkLmlkLGEsYyl9LHN1Y2Nlc3M6ZnVuY3Rpb24oYSxjLGYpe2QudXBsb2FkZWQ9ITAsbnVsbCE9bC51cGxvYWRGaWxlLnN1Y2Nlc3MmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGwudXBsb2FkRmlsZS5zdWNjZXNzP2wudXBsb2FkRmlsZS5zdWNjZXNzKGEsYixpLGcsaCxlLGQuaWQsYyxmKTpudWxsfSxlcnJvcjpmdW5jdGlvbihhLGMsZil7ZC51cGxvYWRlZD0hMSxudWxsIT1sLnVwbG9hZEZpbGUuZXJyb3ImJlwiZnVuY3Rpb25cIj09dHlwZW9mIGwudXBsb2FkRmlsZS5lcnJvcj9sLnVwbG9hZEZpbGUuZXJyb3IoYixpLGcsaCxlLGQuaWQsYSxjLGYpOm51bGx9LHN0YXR1c0NvZGU6bC51cGxvYWRGaWxlLnN0YXR1c0NvZGUsY2FjaGU6ITEsY29udGVudFR5cGU6ITEscHJvY2Vzc0RhdGE6ITF9KSxkLmFqYXh9LHByb2dyZXNzSGFuZGxpbmc6ZnVuY3Rpb24oYSxiKXtpZihhLmxlbmd0aENvbXB1dGFibGUpe3ZhciBjPU1hdGgucm91bmQoMTAwKmEubG9hZGVkL2EudG90YWwpLnRvU3RyaW5nKCk7bnVsbCE9bC51cGxvYWRGaWxlLm9uUHJvZ3Jlc3MmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGwudXBsb2FkRmlsZS5vblByb2dyZXNzP2wudXBsb2FkRmlsZS5vblByb2dyZXNzKGMsYixpLGcsaCxlKTpudWxsLGIuZmluZChcIi5qRmlsZXItalByb2dyZXNzQmFyXCIpLmZpbmQobC50ZW1wbGF0ZXMuX3NlbGVjdG9ycy5wcm9ncmVzc0JhcikuY3NzKFwid2lkdGhcIixjK1wiJVwiKX19fSxfZHJhZ0Ryb3A6e2RyYWdFbnRlcjpmdW5jdGlvbihhKXtjbGVhclRpbWVvdXQobS5fZHJhZ0Ryb3AuX2RydCksbC5kcmFnRHJvcC5kcmFnQ29udGFpbmVyLmFkZENsYXNzKFwiZHJhZ2dlZFwiKSxtLl9zZXQoXCJmZWVkYmFja1wiLGwuY2FwdGlvbnMuZHJvcCksbnVsbCE9bC5kcmFnRHJvcC5kcmFnRW50ZXImJlwiZnVuY3Rpb25cIj09dHlwZW9mIGwuZHJhZ0Ryb3AuZHJhZ0VudGVyP2wuZHJhZ0Ryb3AuZHJhZ0VudGVyKGEsaCxlLGcpOm51bGx9LGRyYWdMZWF2ZTpmdW5jdGlvbihhKXtjbGVhclRpbWVvdXQobS5fZHJhZ0Ryb3AuX2RydCksbS5fZHJhZ0Ryb3AuX2RydD1zZXRUaW1lb3V0KGZ1bmN0aW9uKGEpe3JldHVybiBtLl9kcmFnRHJvcC5fZHJhZ0xlYXZlQ2hlY2soYSk/KGwuZHJhZ0Ryb3AuZHJhZ0NvbnRhaW5lci5yZW1vdmVDbGFzcyhcImRyYWdnZWRcIiksbS5fc2V0KFwiZmVlZGJhY2tcIixsLmNhcHRpb25zLmZlZWRiYWNrKSx2b2lkKG51bGwhPWwuZHJhZ0Ryb3AuZHJhZ0xlYXZlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBsLmRyYWdEcm9wLmRyYWdMZWF2ZT9sLmRyYWdEcm9wLmRyYWdMZWF2ZShhLGgsZSxnKTpudWxsKSk6KG0uX2RyYWdEcm9wLmRyYWdMZWF2ZShhKSwhMSl9LDEwMCxhKX0sZHJvcDpmdW5jdGlvbihhKXtjbGVhclRpbWVvdXQobS5fZHJhZ0Ryb3AuX2RydCksbC5kcmFnRHJvcC5kcmFnQ29udGFpbmVyLnJlbW92ZUNsYXNzKFwiZHJhZ2dlZFwiKSxtLl9zZXQoXCJmZWVkYmFja1wiLGwuY2FwdGlvbnMuZmVlZGJhY2spLGEmJmEub3JpZ2luYWxFdmVudCYmYS5vcmlnaW5hbEV2ZW50LmRhdGFUcmFuc2ZlciYmYS5vcmlnaW5hbEV2ZW50LmRhdGFUcmFuc2Zlci5maWxlcyYmYS5vcmlnaW5hbEV2ZW50LmRhdGFUcmFuc2Zlci5maWxlcy5sZW5ndGg+MCYmbS5fb25DaGFuZ2UoYSxhLm9yaWdpbmFsRXZlbnQuZGF0YVRyYW5zZmVyLmZpbGVzKSxudWxsIT1sLmRyYWdEcm9wLmRyb3AmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGwuZHJhZ0Ryb3AuZHJvcD9sLmRyYWdEcm9wLmRyb3AoYS5vcmlnaW5hbEV2ZW50LmRhdGFUcmFuc2Zlci5maWxlcyxhLGgsZSxnKTpudWxsfSxfZHJhZ0xlYXZlQ2hlY2s6ZnVuY3Rpb24oYil7dmFyIGM9YShiLmN1cnJlbnRUYXJnZXQpLGQ9MDtyZXR1cm4hKCFjLmlzKGgpJiYoZD1oLmZpbmQoYykubGVuZ3RoLGQ+MCkpfX0sX2NsaXBib2FyZFBhc3RlOmZ1bmN0aW9uKGEsYil7aWYoKGJ8fGEub3JpZ2luYWxFdmVudC5jbGlwYm9hcmREYXRhfHxhLm9yaWdpbmFsRXZlbnQuY2xpcGJvYXJkRGF0YS5pdGVtcykmJighYnx8YS5vcmlnaW5hbEV2ZW50LmRhdGFUcmFuc2Zlcnx8YS5vcmlnaW5hbEV2ZW50LmRhdGFUcmFuc2Zlci5pdGVtcykmJiFtLl9jbFBzZVByZSl7dmFyIGM9Yj9hLm9yaWdpbmFsRXZlbnQuZGF0YVRyYW5zZmVyLml0ZW1zOmEub3JpZ2luYWxFdmVudC5jbGlwYm9hcmREYXRhLml0ZW1zLGQ9ZnVuY3Rpb24oYSxiLGMpe2I9Ynx8XCJcIixjPWN8fDUxMjtmb3IodmFyIGQ9YXRvYihhKSxlPVtdLGY9MDtmPGQubGVuZ3RoO2YrPWMpe2Zvcih2YXIgZz1kLnNsaWNlKGYsZitjKSxoPW5ldyBBcnJheShnLmxlbmd0aCksaT0wO2k8Zy5sZW5ndGg7aSsrKWhbaV09Zy5jaGFyQ29kZUF0KGkpO3ZhciBqPW5ldyBVaW50OEFycmF5KGgpO2UucHVzaChqKX12YXIgaz1uZXcgQmxvYihlLHt0eXBlOmJ9KTtyZXR1cm4ga307aWYoYylmb3IodmFyIGU9MDtlPGMubGVuZ3RoO2UrKylpZihjW2VdLnR5cGUuaW5kZXhPZihcImltYWdlXCIpIT09LTF8fGNbZV0udHlwZS5pbmRleE9mKFwidGV4dC91cmktbGlzdFwiKSE9PS0xKXtpZihiKXRyeXt3aW5kb3cuYXRvYihhLm9yaWdpbmFsRXZlbnQuZGF0YVRyYW5zZmVyLmdldERhdGEoXCJ0ZXh0L3VyaS1saXN0XCIpLnRvU3RyaW5nKCkuc3BsaXQoXCIsXCIpWzFdKX1jYXRjaChhKXtyZXR1cm59dmFyIGY9Yj9kKGEub3JpZ2luYWxFdmVudC5kYXRhVHJhbnNmZXIuZ2V0RGF0YShcInRleHQvdXJpLWxpc3RcIikudG9TdHJpbmcoKS5zcGxpdChcIixcIilbMV0sXCJpbWFnZS9wbmdcIik6Y1tlXS5nZXRBc0ZpbGUoKTtmLm5hbWU9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyaW5nKDUpLGYubmFtZSs9Zi50eXBlLmluZGV4T2YoXCIvXCIpIT0tMT9cIi5cIitmLnR5cGUuc3BsaXQoXCIvXCIpWzFdLnRvU3RyaW5nKCkudG9Mb3dlckNhc2UoKTpcIi5wbmdcIixtLl9vbkNoYW5nZShhLFtmXSksbS5fY2xQc2VQcmU9c2V0VGltZW91dChmdW5jdGlvbigpe2RlbGV0ZSBtLl9jbFBzZVByZX0sMWUzKX19fSxfb25TZWxlY3Q6ZnVuY3Rpb24oYil7bC51cGxvYWRGaWxlJiYhYS5pc0VtcHR5T2JqZWN0KGwudXBsb2FkRmlsZSkmJighbC51cGxvYWRGaWxlLnN5bmNocm9ufHxsLnVwbG9hZEZpbGUuc3luY2hyb24mJjA9PWEuZ3JlcChtLl9pdEZsLGZ1bmN0aW9uKGEpe3JldHVybiBhLmFqYXh9KS5sZW5ndGgpJiZtLl91cGxvYWQobS5faXRGYy5pZCksbS5maWxlc1tiXS5fcGVuZFJlbW92ZSYmKG0uX2l0RmMuaHRtbC5oaWRlKCksbS5fcmVtb3ZlKG51bGwse2JpbmRlZDohMCxkYXRhOntpZDptLl9pdEZjLmlkfX0pKSxudWxsIT1sLm9uU2VsZWN0JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBsLm9uU2VsZWN0P2wub25TZWxlY3QobS5maWxlc1tiXSxtLl9pdEZjLmh0bWwsaSxnLGgsZSk6bnVsbCxiKzE+PW0uZmlsZXMubGVuZ3RoJiYobnVsbCE9bC5hZnRlclNob3cmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGwuYWZ0ZXJTaG93P2wuYWZ0ZXJTaG93KGksZyxoLGUpOm51bGwpfSxfb25DaGFuZ2U6ZnVuY3Rpb24oYixjKXtpZihjKXtpZighY3x8MD09Yy5sZW5ndGgpcmV0dXJuIG0uX3NldChcImlucHV0XCIsXCJcIiksbS5fY2xlYXIoKSwhMTttLmZpbGVzPWN9ZWxzZXtpZighZS5nZXQoMCkuZmlsZXN8fFwidW5kZWZpbmVkXCI9PXR5cGVvZiBlLmdldCgwKS5maWxlc3x8MD09ZS5nZXQoMCkuZmlsZXMubGVuZ3RoKXJldHVybiBsLnVwbG9hZEZpbGV8fGwuYWRkTW9yZXx8KG0uX3NldChcImlucHV0XCIsXCJcIiksbS5fY2xlYXIoKSksITE7bS5maWxlcz1lLmdldCgwKS5maWxlc31pZihsLnVwbG9hZEZpbGV8fGwuYWRkTW9yZXx8bS5fcmVzZXQoITApLGUucHJvcChcImpGaWxlclwiKS5maWxlcz1tLmZpbGVzLCFtLl9maWxlc0NoZWNrKCl8fG51bGwhPWwuYmVmb3JlU2VsZWN0JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBsLmJlZm9yZVNlbGVjdCYmIWwuYmVmb3JlU2VsZWN0KG0uZmlsZXMsaSxnLGgsZSkpcmV0dXJuIG0uX3NldChcImlucHV0XCIsXCJcIiksbS5fY2xlYXIoKSxsLmFkZE1vcmUmJmoubGVuZ3RoPjAmJihtLl91bmJpbmRJbnB1dCghMCksaltqLmxlbmd0aC0xXS5yZW1vdmUoKSxqLnNwbGljZShqLmxlbmd0aC0xLDEpLGU9ai5sZW5ndGg+MD9qW2oubGVuZ3RoLTFdOmEoZCksbS5fYmluZElucHV0KCkpLCExO2lmKG0uX3NldChcImZlZWRiYWNrXCIsbS5maWxlcy5sZW5ndGgrbS5faXRGbC5sZW5ndGgrXCIgXCIrbC5jYXB0aW9ucy5mZWVkYmFjazIpLGwuc2hvd1RodW1icyltLl90aHVtYkNyZWF0b3IuX2JveCgpO2Vsc2UgZm9yKHZhciBmPTA7ZjxtLmZpbGVzLmxlbmd0aDtmKyspbS5maWxlc1tmXS5fY2hvb3NlZD0hMCxtLl9hZGRUb01lbW9yeShmKSxtLl9vblNlbGVjdChmKX0sX2FwcGVuZDpmdW5jdGlvbihhLGIpe3ZhciBjPSEhYiYmYi5maWxlcztpZihjJiYhKGMubGVuZ3RoPD0wKSYmKG0uZmlsZXM9YyxlLnByb3AoXCJqRmlsZXJcIikuZmlsZXM9bS5maWxlcyxsLnNob3dUaHVtYnMpKXtmb3IodmFyIGQ9MDtkPG0uZmlsZXMubGVuZ3RoO2QrKyltLmZpbGVzW2RdLl9hcHBlbmRlZD0hMDttLl90aHVtYkNyZWF0b3IuX2JveCgpfX0sX2dldExpc3Q6ZnVuY3Rpb24oYSxiKXt2YXIgYz0hIWImJmIuZmlsZXM7aWYoYyYmIShjLmxlbmd0aDw9MCkmJihtLmZpbGVzPWMsZS5wcm9wKFwiakZpbGVyXCIpLmZpbGVzPW0uZmlsZXMsbC5zaG93VGh1bWJzKSl7Zm9yKHZhciBkPVtdLGY9MDtmPG0uZmlsZXMubGVuZ3RoO2YrKyltLmZpbGVzW2ZdLmZvckxpc3Q9ITAsZC5wdXNoKG0uX3RodW1iQ3JlYXRvci5jcmVhdGUoZikpO2IuY2FsbGJhY2smJmIuY2FsbGJhY2soZCxpLGcsaCxlKX19LF9yZXRyeVVwbG9hZDpmdW5jdGlvbihiLGMpe3ZhciBkPXBhcnNlSW50KFwib2JqZWN0XCI9PXR5cGVvZiBjP2MuYXR0cihcImRhdGEtamZpbGVyLWluZGV4XCIpOmMpLGY9bS5faXRGbC5maWx0ZXIoZnVuY3Rpb24oYSxiKXtyZXR1cm4gYS5pZD09ZH0pO3JldHVybiBmLmxlbmd0aD4wJiYoIWwudXBsb2FkRmlsZXx8YS5pc0VtcHR5T2JqZWN0KGwudXBsb2FkRmlsZSl8fGZbMF0udXBsb2FkZWQ/dm9pZCAwOihtLl9pdEZjPWZbMF0sZS5wcm9wKFwiakZpbGVyXCIpLmN1cnJlbnRfZmlsZT1tLl9pdEZjLG0uX3VwbG9hZChkKSwhMCkpfSxfcmVtb3ZlOmZ1bmN0aW9uKGIsZCl7aWYoZC5iaW5kZWQpe2lmKFwidW5kZWZpbmVkXCIhPXR5cGVvZiBkLmRhdGEuaWQmJihkPWkuZmluZChsLnRlbXBsYXRlcy5fc2VsZWN0b3JzLml0ZW0rXCJbZGF0YS1qZmlsZXItaW5kZXg9J1wiK2QuZGF0YS5pZCtcIiddXCIpLDA9PWQubGVuZ3RoKSlyZXR1cm4hMTtkLmRhdGEuZWwmJihkPWQuZGF0YS5lbCl9dmFyIGY9ZnVuY3Rpb24oYil7dmFyIGQ9Zy5maW5kKFwiaW5wdXRbbmFtZV49J2pmaWxlci1pdGVtcy1leGNsdWRlLSddOmhpZGRlblwiKS5maXJzdCgpOzA9PWQubGVuZ3RoJiYoZD1hKCc8aW5wdXQgdHlwZT1cImhpZGRlblwiIG5hbWU9XCJqZmlsZXItaXRlbXMtZXhjbHVkZS0nKyhsLmV4Y2x1ZGVOYW1lP2wuZXhjbHVkZU5hbWU6KFwiW11cIiE9ZS5hdHRyKFwibmFtZVwiKS5zbGljZSgtMik/ZS5hdHRyKFwibmFtZVwiKTplLmF0dHIoXCJuYW1lXCIpLnN1YnN0cmluZygwLGUuYXR0cihcIm5hbWVcIikubGVuZ3RoLTIpKStcIi1cIitjKSsnXCI+JyksZC5hcHBlbmRUbyhnKSksYiYmYS5pc0FycmF5KGIpJiYoYj1KU09OLnN0cmluZ2lmeShiKSxkLnZhbChiKSl9LGo9ZnVuY3Rpb24oYixjKXt2YXIgZD1tLl9pdEZsW2NdLGU9W107aWYoZC5maWxlLl9jaG9vc2VkfHxkLmZpbGUuX2FwcGVuZGVkfHxkLnVwbG9hZGVkKXttLl9pdEZyLnB1c2goZCk7Zm9yKHZhciBnPW0uX2l0RmwuZmlsdGVyKGZ1bmN0aW9uKGEpe3JldHVybiBhLmZpbGUubmFtZT09ZC5maWxlLm5hbWV9KSxoPTA7aDxtLl9pdEZyLmxlbmd0aDtoKyspbC5hZGRNb3JlJiZtLl9pdEZyW2hdPT1kJiZnLmxlbmd0aD4wJiYobS5faXRGcltoXS5yZW1vdmVfbmFtZT1nLmluZGV4T2YoZCkrXCI6Ly9cIittLl9pdEZyW2hdLmZpbGUubmFtZSksZS5wdXNoKG0uX2l0RnJbaF0ucmVtb3ZlX25hbWU/bS5faXRGcltoXS5yZW1vdmVfbmFtZTptLl9pdEZyW2hdLmZpbGUubmFtZSl9ZihlKSxtLl9pdEZsLnNwbGljZShjLDEpLG0uX2l0RmwubGVuZ3RoPDE/KG0uX3Jlc2V0KCksbS5fY2xlYXIoKSk6bS5fc2V0KFwiZmVlZGJhY2tcIixtLl9pdEZsLmxlbmd0aCtcIiBcIitsLmNhcHRpb25zLmZlZWRiYWNrMiksYi5mYWRlT3V0KFwiZmFzdFwiLGZ1bmN0aW9uKCl7YSh0aGlzKS5yZW1vdmUoKX0pfSxrPWQuZ2V0KDApLmpmaWxlcl9pZHx8ZC5hdHRyKFwiZGF0YS1qZmlsZXItaW5kZXhcIiksbj1udWxsO2Zvcih2YXIgbyBpbiBtLl9pdEZsKVwibGVuZ3RoXCIhPT1vJiZtLl9pdEZsLmhhc093blByb3BlcnR5KG8pJiZtLl9pdEZsW29dLmlkPT1rJiYobj1vKTtyZXR1cm4hIW0uX2l0RmwuaGFzT3duUHJvcGVydHkobikmJihtLl9pdEZsW25dLmFqYXg/KG0uX2l0Rmxbbl0uYWpheC5hYm9ydCgpLHZvaWQgaihkLG4pKTp2b2lkKG51bGwhPWwub25SZW1vdmUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGwub25SZW1vdmUmJmwub25SZW1vdmUoZCxtLl9pdEZsW25dLmZpbGUsbixpLGcsaCxlKT09PSExfHxqKGQsbikpKX0sX2FkZFRvTWVtb3J5OmZ1bmN0aW9uKGIpe20uX2l0RmwucHVzaCh7aWQ6bS5faXRGbC5sZW5ndGgsZmlsZTptLmZpbGVzW2JdLGh0bWw6YSgpLGFqYXg6ITEsdXBsb2FkZWQ6ITF9KSwobC5hZGRNb3JlfHxtLmZpbGVzW2JdLl9hcHBlbmRlZCkmJihtLl9pdEZsW20uX2l0RmwubGVuZ3RoLTFdLmlucHV0PWUpLG0uX2l0RmM9bS5faXRGbFttLl9pdEZsLmxlbmd0aC0xXSxlLnByb3AoXCJqRmlsZXJcIikuZmlsZXNfbGlzdD1tLl9pdEZsLGUucHJvcChcImpGaWxlclwiKS5jdXJyZW50X2ZpbGU9bS5faXRGY30sX2Fzc2V0czp7Ynl0ZXNUb1NpemU6ZnVuY3Rpb24oYSl7aWYoMD09YSlyZXR1cm5cIjAgQnl0ZVwiO3ZhciBiPTFlMyxjPVtcIkJ5dGVzXCIsXCJLQlwiLFwiTUJcIixcIkdCXCIsXCJUQlwiLFwiUEJcIixcIkVCXCIsXCJaQlwiLFwiWUJcIl0sZD1NYXRoLmZsb29yKE1hdGgubG9nKGEpL01hdGgubG9nKGIpKTtyZXR1cm4oYS9NYXRoLnBvdyhiLGQpKS50b1ByZWNpc2lvbigzKStcIiBcIitjW2RdfSxoYXNBdHRyOmZ1bmN0aW9uKGEsYil7dmFyIGI9Yj9iOmUsYz1iLmF0dHIoYSk7cmV0dXJuISghY3x8XCJ1bmRlZmluZWRcIj09dHlwZW9mIGMpfSxnZXRJY29uOmZ1bmN0aW9uKGIsYyl7dmFyIGQ9W1wiYXVkaW9cIixcImltYWdlXCIsXCJ0ZXh0XCIsXCJ2aWRlb1wiXTtyZXR1cm4gYS5pbkFycmF5KGMsZCk+LTE/JzxpIGNsYXNzPVwiaWNvbi1qZmktZmlsZS0nK2MrXCIgamZpLWZpbGUtZXh0LVwiK2IrJ1wiPjwvaT4nOic8aSBjbGFzcz1cImljb24tamZpLWZpbGUtbyBqZmktZmlsZS10eXBlLScrYytcIiBqZmktZmlsZS1leHQtXCIrYisnXCI+PC9pPid9LHRleHRQYXJzZTpmdW5jdGlvbihiLGMpe3N3aXRjaChjPWEuZXh0ZW5kKHt9LHtsaW1pdDpsLmxpbWl0LG1heFNpemU6bC5tYXhTaXplLGZpbGVNYXhTaXplOmwuZmlsZU1heFNpemUsZXh0ZW5zaW9uczpsLmV4dGVuc2lvbnM/bC5leHRlbnNpb25zLmpvaW4oXCIsXCIpOm51bGx9LGMmJmEuaXNQbGFpbk9iamVjdChjKT9jOnt9LGwub3B0aW9ucyksdHlwZW9mIGIpe2Nhc2VcInN0cmluZ1wiOnJldHVybiBiLnJlcGxhY2UoL1xce1xce2ZpLSguKj8pXFx9XFx9L2csZnVuY3Rpb24oYSxiKXtyZXR1cm4gYj1iLnJlcGxhY2UoLyAvZyxcIlwiKSxiLm1hdGNoKC8oLio/KVxcfGxpbWl0VG9cXDooXFxkKykvKT9iLnJlcGxhY2UoLyguKj8pXFx8bGltaXRUb1xcOihcXGQrKS8sZnVuY3Rpb24oYSxiLGQpe3ZhciBiPWNbYl0/Y1tiXTpcIlwiLGU9Yi5zdWJzdHJpbmcoMCxkKTtyZXR1cm4gZT1iLmxlbmd0aD5lLmxlbmd0aD9lLnN1YnN0cmluZygwLGUubGVuZ3RoLTMpK1wiLi4uXCI6ZX0pOmNbYl0/Y1tiXTpcIlwifSk7Y2FzZVwiZnVuY3Rpb25cIjpyZXR1cm4gYihjKTtkZWZhdWx0OnJldHVybiBifX0sdGV4dDJDb2xvcjpmdW5jdGlvbihhKXtpZighYXx8MD09YS5sZW5ndGgpcmV0dXJuITE7Zm9yKHZhciBiPTAsYz0wO2I8YS5sZW5ndGg7Yz1hLmNoYXJDb2RlQXQoYisrKSsoKGM8PDUpLWMpKTtmb3IodmFyIGI9MCxkPVwiI1wiO2I8MztkKz0oXCIwMFwiKyhjPj4yKmIrKyYyNTUpLnRvU3RyaW5nKDE2KSkuc2xpY2UoLTIpKTtyZXR1cm4gZH19LGZpbGVzOm51bGwsX2l0Rmw6W10sX2l0RmM6bnVsbCxfaXRGcjpbXSxfaXRQbDpbXSxfYWpGYzowfTtyZXR1cm4gZS5vbihcImZpbGVyLmFwcGVuZFwiLGZ1bmN0aW9uKGEsYil7bS5fYXBwZW5kKGEsYil9KS5vbihcImZpbGVyLnJlbW92ZVwiLGZ1bmN0aW9uKGEsYil7Yi5iaW5kZWQ9ITAsbS5fcmVtb3ZlKGEsYil9KS5vbihcImZpbGVyLnJlc2V0XCIsZnVuY3Rpb24oYSl7cmV0dXJuIG0uX3Jlc2V0KCksbS5fY2xlYXIoKSwhMH0pLm9uKFwiZmlsZXIuZ2VuZXJhdGVMaXN0XCIsZnVuY3Rpb24oYSxiKXtyZXR1cm4gbS5fZ2V0TGlzdChhLGIpfSkub24oXCJmaWxlci5yZXRyeVwiLGZ1bmN0aW9uKGEsYil7cmV0dXJuIG0uX3JldHJ5VXBsb2FkKGEsYil9KSxtLmluaXQoKSx0aGlzfSl9LGEuZm4uZmlsZXIuZGVmYXVsdHM9e2xpbWl0Om51bGwsbWF4U2l6ZTpudWxsLGZpbGVNYXhTaXplOm51bGwsZXh0ZW5zaW9uczpudWxsLGNoYW5nZUlucHV0OiEwLHNob3dUaHVtYnM6ITEsYXBwZW5kVG86bnVsbCx0aGVtZTpcImRlZmF1bHRcIix0ZW1wbGF0ZXM6e2JveDonPHVsIGNsYXNzPVwiakZpbGVyLWl0ZW1zLWxpc3QgakZpbGVyLWl0ZW1zLWRlZmF1bHRcIj48L3VsPicsaXRlbTonPGxpIGNsYXNzPVwiakZpbGVyLWl0ZW1cIj48ZGl2IGNsYXNzPVwiakZpbGVyLWl0ZW0tY29udGFpbmVyXCI+PGRpdiBjbGFzcz1cImpGaWxlci1pdGVtLWlubmVyXCI+PGRpdiBjbGFzcz1cImpGaWxlci1pdGVtLWljb24gcHVsbC1sZWZ0XCI+e3tmaS1pY29ufX08L2Rpdj48ZGl2IGNsYXNzPVwiakZpbGVyLWl0ZW0taW5mbyBwdWxsLWxlZnRcIj48ZGl2IGNsYXNzPVwiakZpbGVyLWl0ZW0tdGl0bGVcIiB0aXRsZT1cInt7ZmktbmFtZX19XCI+e3tmaS1uYW1lIHwgbGltaXRUbzozMH19PC9kaXY+PGRpdiBjbGFzcz1cImpGaWxlci1pdGVtLW90aGVyc1wiPjxzcGFuPnNpemU6IHt7Zmktc2l6ZTJ9fTwvc3Bhbj48c3Bhbj50eXBlOiB7e2ZpLWV4dGVuc2lvbn19PC9zcGFuPjxzcGFuIGNsYXNzPVwiakZpbGVyLWl0ZW0tc3RhdHVzXCI+e3tmaS1wcm9ncmVzc0Jhcn19PC9zcGFuPjwvZGl2PjxkaXYgY2xhc3M9XCJqRmlsZXItaXRlbS1hc3NldHNcIj48dWwgY2xhc3M9XCJsaXN0LWlubGluZVwiPjxsaT48YSBjbGFzcz1cImljb24tamZpLXRyYXNoIGpGaWxlci1pdGVtLXRyYXNoLWFjdGlvblwiPjwvYT48L2xpPjwvdWw+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9saT4nLGl0ZW1BcHBlbmQ6JzxsaSBjbGFzcz1cImpGaWxlci1pdGVtXCI+PGRpdiBjbGFzcz1cImpGaWxlci1pdGVtLWNvbnRhaW5lclwiPjxkaXYgY2xhc3M9XCJqRmlsZXItaXRlbS1pbm5lclwiPjxkaXYgY2xhc3M9XCJqRmlsZXItaXRlbS1pY29uIHB1bGwtbGVmdFwiPnt7ZmktaWNvbn19PC9kaXY+PGRpdiBjbGFzcz1cImpGaWxlci1pdGVtLWluZm8gcHVsbC1sZWZ0XCI+PGRpdiBjbGFzcz1cImpGaWxlci1pdGVtLXRpdGxlXCI+e3tmaS1uYW1lIHwgbGltaXRUbzozNX19PC9kaXY+PGRpdiBjbGFzcz1cImpGaWxlci1pdGVtLW90aGVyc1wiPjxzcGFuPnNpemU6IHt7Zmktc2l6ZTJ9fTwvc3Bhbj48c3Bhbj50eXBlOiB7e2ZpLWV4dGVuc2lvbn19PC9zcGFuPjxzcGFuIGNsYXNzPVwiakZpbGVyLWl0ZW0tc3RhdHVzXCI+PC9zcGFuPjwvZGl2PjxkaXYgY2xhc3M9XCJqRmlsZXItaXRlbS1hc3NldHNcIj48dWwgY2xhc3M9XCJsaXN0LWlubGluZVwiPjxsaT48YSBjbGFzcz1cImljb24tamZpLXRyYXNoIGpGaWxlci1pdGVtLXRyYXNoLWFjdGlvblwiPjwvYT48L2xpPjwvdWw+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9saT4nLHByb2dyZXNzQmFyOic8ZGl2IGNsYXNzPVwiYmFyXCI+PC9kaXY+JyxpdGVtQXBwZW5kVG9FbmQ6ITEscmVtb3ZlQ29uZmlybWF0aW9uOiEwLGNhbnZhc0ltYWdlOiEwLF9zZWxlY3RvcnM6e2xpc3Q6XCIuakZpbGVyLWl0ZW1zLWxpc3RcIixpdGVtOlwiLmpGaWxlci1pdGVtXCIscHJvZ3Jlc3NCYXI6XCIuYmFyXCIscmVtb3ZlOlwiLmpGaWxlci1pdGVtLXRyYXNoLWFjdGlvblwifX0sZmlsZXM6bnVsbCx1cGxvYWRGaWxlOm51bGwsZHJhZ0Ryb3A6bnVsbCxhZGRNb3JlOiExLGFsbG93RHVwbGljYXRlczohMSxjbGlwQm9hcmRQYXN0ZTohMCxleGNsdWRlTmFtZTpudWxsLGJlZm9yZVJlbmRlcjpudWxsLGFmdGVyUmVuZGVyOm51bGwsYmVmb3JlU2hvdzpudWxsLGJlZm9yZVNlbGVjdDpudWxsLG9uU2VsZWN0Om51bGwsb25GaWxlQ2hlY2s6bnVsbCxhZnRlclNob3c6bnVsbCxvblJlbW92ZTpudWxsLG9uRW1wdHk6bnVsbCxvcHRpb25zOm51bGwsZGlhbG9nczp7YWxlcnQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGFsZXJ0KGEpfSxjb25maXJtOmZ1bmN0aW9uKGEsYil7Y29uZmlybShhKT9iKCk6bnVsbH19LGNhcHRpb25zOntidXR0b246XCJDaG9vc2UgRmlsZXNcIixmZWVkYmFjazpcIkNob29zZSBmaWxlcyBUbyBVcGxvYWRcIixmZWVkYmFjazI6XCJmaWxlcyB3ZXJlIGNob3NlblwiLGRyb3A6XCJEcm9wIGZpbGUgaGVyZSB0byBVcGxvYWRcIixyZW1vdmVDb25maXJtYXRpb246XCJBcmUgeW91IHN1cmUgeW91IHdhbnQgdG8gcmVtb3ZlIHRoaXMgZmlsZT9cIixlcnJvcnM6e2ZpbGVzTGltaXQ6XCJPbmx5IHt7ZmktbGltaXR9fSBmaWxlcyBhcmUgYWxsb3dlZCB0byBiZSB1cGxvYWRlZC5cIixmaWxlc1R5cGU6XCJPbmx5IEltYWdlcyBhcmUgYWxsb3dlZCB0byBiZSB1cGxvYWRlZC5cIixmaWxlc1NpemU6XCJ7e2ZpLW5hbWV9fSBpcyB0b28gbGFyZ2UhIFBsZWFzZSB1cGxvYWQgZmlsZSB1cCB0byB7e2ZpLWZpbGVNYXhTaXplfX0gTUIuXCIsZmlsZXNTaXplQWxsOlwiRmlsZXMgeW91J3ZlIGNob29zZWQgYXJlIHRvbyBsYXJnZSEgUGxlYXNlIHVwbG9hZCBmaWxlcyB1cCB0byB7e2ZpLW1heFNpemV9fSBNQi5cIixmb2xkZXJVcGxvYWQ6XCJZb3UgYXJlIG5vdCBhbGxvd2VkIHRvIHVwbG9hZCBmb2xkZXJzLlwifX19fShqUXVlcnkpOyIsIi8qISBUYWJsZXNhdyAtIHYyLjAuMyAtIDIwMTYtMDYtMDNcclxuKiBodHRwczovL2dpdGh1Yi5jb20vZmlsYW1lbnRncm91cC90YWJsZXNhd1xyXG4qIENvcHlyaWdodCAoYykgMjAxNiBGaWxhbWVudCBHcm91cDsgTGljZW5zZWQgTUlUICovXHJcbi8qXHJcbiogdGFibGVzYXc6IEEgc2V0IG9mIHBsdWdpbnMgZm9yIHJlc3BvbnNpdmUgdGFibGVzXHJcbiogU3RhY2sgYW5kIENvbHVtbiBUb2dnbGUgdGFibGVzXHJcbiogQ29weXJpZ2h0IChjKSAyMDEzIEZpbGFtZW50IEdyb3VwLCBJbmMuXHJcbiogTUlUIExpY2Vuc2VcclxuKi9cclxuXHJcbmlmKCB0eXBlb2YgVGFibGVzYXcgPT09IFwidW5kZWZpbmVkXCIgKSB7XHJcblx0VGFibGVzYXcgPSB7XHJcblx0XHRpMThuOiB7XHJcblx0XHRcdG1vZGVzOiBbICdTdGFjaycsICdTd2lwZScsICdUb2dnbGUnIF0sXHJcblx0XHRcdGNvbHVtbnM6ICdDb2w8c3BhbiBjbGFzcz1cXFwiYTExeS1zbVxcXCI+dW1uPC9zcGFuPnMnLFxyXG5cdFx0XHRjb2x1bW5CdG5UZXh0OiAnQ29sdW1ucycsXHJcblx0XHRcdGNvbHVtbnNEaWFsb2dFcnJvcjogJ05vIGVsaWdpYmxlIGNvbHVtbnMuJyxcclxuXHRcdFx0c29ydDogJ1NvcnQnXHJcblx0XHR9LFxyXG5cdFx0Ly8gY3V0IHRoZSBtdXN0YXJkXHJcblx0XHRtdXN0YXJkOiAncXVlcnlTZWxlY3RvcicgaW4gZG9jdW1lbnQgJiZcclxuXHRcdFx0KCAhd2luZG93LmJsYWNrYmVycnkgfHwgd2luZG93LldlYktpdFBvaW50ICkgJiZcclxuXHRcdFx0IXdpbmRvdy5vcGVyYW1pbmlcclxuXHR9O1xyXG59XHJcbmlmKCAhVGFibGVzYXcuY29uZmlnICkge1xyXG5cdFRhYmxlc2F3LmNvbmZpZyA9IHt9O1xyXG59XHJcbmlmKCBUYWJsZXNhdy5tdXN0YXJkICkge1xyXG5cdGpRdWVyeSggZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50ICkuYWRkQ2xhc3MoICd0YWJsZXNhdy1lbmhhbmNlZCcgKTtcclxufVxyXG5cclxuOyhmdW5jdGlvbiggJCApIHtcclxuXHR2YXIgcGx1Z2luTmFtZSA9IFwidGFibGVcIixcclxuXHRcdGNsYXNzZXMgPSB7XHJcblx0XHRcdHRvb2xiYXI6IFwidGFibGVzYXctYmFyXCJcclxuXHRcdH0sXHJcblx0XHRldmVudHMgPSB7XHJcblx0XHRcdGNyZWF0ZTogXCJ0YWJsZXNhd2NyZWF0ZVwiLFxyXG5cdFx0XHRkZXN0cm95OiBcInRhYmxlc2F3ZGVzdHJveVwiLFxyXG5cdFx0XHRyZWZyZXNoOiBcInRhYmxlc2F3cmVmcmVzaFwiXHJcblx0XHR9LFxyXG5cdFx0ZGVmYXVsdE1vZGUgPSBcInN0YWNrXCIsXHJcblx0XHRpbml0U2VsZWN0b3IgPSBcInRhYmxlW2RhdGEtdGFibGVzYXctbW9kZV0sdGFibGVbZGF0YS10YWJsZXNhdy1zb3J0YWJsZV1cIjtcclxuXHJcblx0dmFyIFRhYmxlID0gZnVuY3Rpb24oIGVsZW1lbnQgKSB7XHJcblx0XHRpZiggIWVsZW1lbnQgKSB7XHJcblx0XHRcdHRocm93IG5ldyBFcnJvciggXCJUYWJsZXNhdyByZXF1aXJlcyBhbiBlbGVtZW50LlwiICk7XHJcblx0XHR9XHJcblxyXG5cdFx0dGhpcy50YWJsZSA9IGVsZW1lbnQ7XHJcblx0XHR0aGlzLiR0YWJsZSA9ICQoIGVsZW1lbnQgKTtcclxuXHJcblx0XHR0aGlzLm1vZGUgPSB0aGlzLiR0YWJsZS5hdHRyKCBcImRhdGEtdGFibGVzYXctbW9kZVwiICkgfHwgZGVmYXVsdE1vZGU7XHJcblxyXG5cdFx0dGhpcy5pbml0KCk7XHJcblx0fTtcclxuXHJcblx0VGFibGUucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbigpIHtcclxuXHRcdC8vIGFzc2lnbiBhbiBpZCBpZiB0aGVyZSBpcyBub25lXHJcblx0XHRpZiAoICF0aGlzLiR0YWJsZS5hdHRyKCBcImlkXCIgKSApIHtcclxuXHRcdFx0dGhpcy4kdGFibGUuYXR0ciggXCJpZFwiLCBwbHVnaW5OYW1lICsgXCItXCIgKyBNYXRoLnJvdW5kKCBNYXRoLnJhbmRvbSgpICogMTAwMDAgKSApO1xyXG5cdFx0fVxyXG5cclxuXHRcdHRoaXMuY3JlYXRlVG9vbGJhcigpO1xyXG5cclxuXHRcdHZhciBjb2xzdGFydCA9IHRoaXMuX2luaXRDZWxscygpO1xyXG5cclxuXHRcdHRoaXMuJHRhYmxlLnRyaWdnZXIoIGV2ZW50cy5jcmVhdGUsIFsgdGhpcywgY29sc3RhcnQgXSApO1xyXG5cdH07XHJcblxyXG5cdFRhYmxlLnByb3RvdHlwZS5faW5pdENlbGxzID0gZnVuY3Rpb24oKSB7XHJcblx0XHR2YXIgY29sc3RhcnQsXHJcblx0XHRcdHRocnMgPSB0aGlzLnRhYmxlLnF1ZXJ5U2VsZWN0b3JBbGwoIFwidGhlYWQgdHJcIiApLFxyXG5cdFx0XHRzZWxmID0gdGhpcztcclxuXHJcblx0XHQkKCB0aHJzICkuZWFjaCggZnVuY3Rpb24oKXtcclxuXHRcdFx0dmFyIGNvbHRhbGx5ID0gMDtcclxuXHJcblx0XHRcdCQoIHRoaXMgKS5jaGlsZHJlbigpLmVhY2goIGZ1bmN0aW9uKCl7XHJcblx0XHRcdFx0dmFyIHNwYW4gPSBwYXJzZUludCggdGhpcy5nZXRBdHRyaWJ1dGUoIFwiY29sc3BhblwiICksIDEwICksXHJcblx0XHRcdFx0XHRzZWwgPSBcIjpudGgtY2hpbGQoXCIgKyAoIGNvbHRhbGx5ICsgMSApICsgXCIpXCI7XHJcblxyXG5cdFx0XHRcdGNvbHN0YXJ0ID0gY29sdGFsbHkgKyAxO1xyXG5cclxuXHRcdFx0XHRpZiggc3BhbiApe1xyXG5cdFx0XHRcdFx0Zm9yKCB2YXIgayA9IDA7IGsgPCBzcGFuIC0gMTsgaysrICl7XHJcblx0XHRcdFx0XHRcdGNvbHRhbGx5Kys7XHJcblx0XHRcdFx0XHRcdHNlbCArPSBcIiwgOm50aC1jaGlsZChcIiArICggY29sdGFsbHkgKyAxICkgKyBcIilcIjtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdC8vIFN0b3JlIFwiY2VsbHNcIiBkYXRhIG9uIGhlYWRlciBhcyBhIHJlZmVyZW5jZSB0byBhbGwgY2VsbHMgaW4gdGhlIHNhbWUgY29sdW1uIGFzIHRoaXMgVEhcclxuXHRcdFx0XHR0aGlzLmNlbGxzID0gc2VsZi4kdGFibGUuZmluZChcInRyXCIpLm5vdCggdGhyc1swXSApLm5vdCggdGhpcyApLmNoaWxkcmVuKCkuZmlsdGVyKCBzZWwgKTtcclxuXHRcdFx0XHRjb2x0YWxseSsrO1xyXG5cdFx0XHR9KTtcclxuXHRcdH0pO1xyXG5cclxuXHRcdHJldHVybiBjb2xzdGFydDtcclxuXHR9O1xyXG5cclxuXHRUYWJsZS5wcm90b3R5cGUucmVmcmVzaCA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0dGhpcy5faW5pdENlbGxzKCk7XHJcblxyXG5cdFx0dGhpcy4kdGFibGUudHJpZ2dlciggZXZlbnRzLnJlZnJlc2ggKTtcclxuXHR9O1xyXG5cclxuXHRUYWJsZS5wcm90b3R5cGUuY3JlYXRlVG9vbGJhciA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0Ly8gSW5zZXJ0IHRoZSB0b29sYmFyXHJcblx0XHQvLyBUT0RPIG1vdmUgdGhpcyBpbnRvIGEgc2VwYXJhdGUgY29tcG9uZW50XHJcblx0XHR2YXIgJHRvb2xiYXIgPSB0aGlzLiR0YWJsZS5wcmV2KCkuZmlsdGVyKCAnLicgKyBjbGFzc2VzLnRvb2xiYXIgKTtcclxuXHRcdGlmKCAhJHRvb2xiYXIubGVuZ3RoICkge1xyXG5cdFx0XHQkdG9vbGJhciA9ICQoICc8ZGl2PicgKVxyXG5cdFx0XHRcdC5hZGRDbGFzcyggY2xhc3Nlcy50b29sYmFyIClcclxuXHRcdFx0XHQuaW5zZXJ0QmVmb3JlKCB0aGlzLiR0YWJsZSApO1xyXG5cdFx0fVxyXG5cdFx0dGhpcy4kdG9vbGJhciA9ICR0b29sYmFyO1xyXG5cclxuXHRcdGlmKCB0aGlzLm1vZGUgKSB7XHJcblx0XHRcdHRoaXMuJHRvb2xiYXIuYWRkQ2xhc3MoICdtb2RlLScgKyB0aGlzLm1vZGUgKTtcclxuXHRcdH1cclxuXHR9O1xyXG5cclxuXHRUYWJsZS5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0Ly8gRG9u4oCZdCByZW1vdmUgdGhlIHRvb2xiYXIuIFNvbWUgb2YgdGhlIHRhYmxlIGZlYXR1cmVzIGFyZSBub3QgeWV0IGRlc3Ryb3ktZnJpZW5kbHkuXHJcblx0XHR0aGlzLiR0YWJsZS5wcmV2KCkuZmlsdGVyKCAnLicgKyBjbGFzc2VzLnRvb2xiYXIgKS5lYWNoKGZ1bmN0aW9uKCkge1xyXG5cdFx0XHR0aGlzLmNsYXNzTmFtZSA9IHRoaXMuY2xhc3NOYW1lLnJlcGxhY2UoIC9cXGJtb2RlXFwtXFx3KlxcYi9naSwgJycgKTtcclxuXHRcdH0pO1xyXG5cclxuXHRcdHZhciB0YWJsZUlkID0gdGhpcy4kdGFibGUuYXR0ciggJ2lkJyApO1xyXG5cdFx0JCggZG9jdW1lbnQgKS51bmJpbmQoIFwiLlwiICsgdGFibGVJZCApO1xyXG5cdFx0JCggd2luZG93ICkudW5iaW5kKCBcIi5cIiArIHRhYmxlSWQgKTtcclxuXHJcblx0XHQvLyBvdGhlciBwbHVnaW5zXHJcblx0XHR0aGlzLiR0YWJsZS50cmlnZ2VyKCBldmVudHMuZGVzdHJveSwgWyB0aGlzIF0gKTtcclxuXHJcblx0XHR0aGlzLiR0YWJsZS5yZW1vdmVEYXRhKCBwbHVnaW5OYW1lICk7XHJcblx0fTtcclxuXHJcblx0Ly8gQ29sbGVjdGlvbiBtZXRob2QuXHJcblx0JC5mblsgcGx1Z2luTmFtZSBdID0gZnVuY3Rpb24oKSB7XHJcblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcclxuXHRcdFx0dmFyICR0ID0gJCggdGhpcyApO1xyXG5cclxuXHRcdFx0aWYoICR0LmRhdGEoIHBsdWdpbk5hbWUgKSApe1xyXG5cdFx0XHRcdHJldHVybjtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0dmFyIHRhYmxlID0gbmV3IFRhYmxlKCB0aGlzICk7XHJcblx0XHRcdCR0LmRhdGEoIHBsdWdpbk5hbWUsIHRhYmxlICk7XHJcblx0XHR9KTtcclxuXHR9O1xyXG5cclxuXHQkKCBkb2N1bWVudCApLm9uKCBcImVuaGFuY2UudGFibGVzYXdcIiwgZnVuY3Rpb24oIGUgKSB7XHJcblx0XHQvLyBDdXQgdGhlIG11c3RhcmRcclxuXHRcdGlmKCBUYWJsZXNhdy5tdXN0YXJkICkge1xyXG5cdFx0XHQkKCBlLnRhcmdldCApLmZpbmQoIGluaXRTZWxlY3RvciApWyBwbHVnaW5OYW1lIF0oKTtcclxuXHRcdH1cclxuXHR9KTtcclxuXHJcbn0oIGpRdWVyeSApKTtcclxuXHJcbjsoZnVuY3Rpb24oIHdpbiwgJCwgdW5kZWZpbmVkICl7XHJcblxyXG5cdHZhciBjbGFzc2VzID0ge1xyXG5cdFx0c3RhY2tUYWJsZTogJ3RhYmxlc2F3LXN0YWNrJyxcclxuXHRcdGNlbGxMYWJlbHM6ICd0YWJsZXNhdy1jZWxsLWxhYmVsJyxcclxuXHRcdGNlbGxDb250ZW50TGFiZWxzOiAndGFibGVzYXctY2VsbC1jb250ZW50J1xyXG5cdH07XHJcblxyXG5cdHZhciBkYXRhID0ge1xyXG5cdFx0b2JqOiAndGFibGVzYXctc3RhY2snXHJcblx0fTtcclxuXHJcblx0dmFyIGF0dHJzID0ge1xyXG5cdFx0bGFiZWxsZXNzOiAnZGF0YS10YWJsZXNhdy1uby1sYWJlbHMnLFxyXG5cdFx0aGlkZWVtcHR5OiAnZGF0YS10YWJsZXNhdy1oaWRlLWVtcHR5J1xyXG5cdH07XHJcblxyXG5cdHZhciBTdGFjayA9IGZ1bmN0aW9uKCBlbGVtZW50ICkge1xyXG5cclxuXHRcdHRoaXMuJHRhYmxlID0gJCggZWxlbWVudCApO1xyXG5cclxuXHRcdHRoaXMubGFiZWxsZXNzID0gdGhpcy4kdGFibGUuaXMoICdbJyArIGF0dHJzLmxhYmVsbGVzcyArICddJyApO1xyXG5cdFx0dGhpcy5oaWRlZW1wdHkgPSB0aGlzLiR0YWJsZS5pcyggJ1snICsgYXR0cnMuaGlkZWVtcHR5ICsgJ10nICk7XHJcblxyXG5cdFx0aWYoICF0aGlzLmxhYmVsbGVzcyApIHtcclxuXHRcdFx0Ly8gYWxsSGVhZGVycyByZWZlcmVuY2VzIGhlYWRlcnMsIHBsdXMgYWxsIFRIcyBpbiB0aGUgdGhlYWQsIHdoaWNoIG1heSBpbmNsdWRlIHNldmVyYWwgcm93cywgb3Igbm90XHJcblx0XHRcdHRoaXMuYWxsSGVhZGVycyA9IHRoaXMuJHRhYmxlLmZpbmQoIFwidGhcIiApO1xyXG5cdFx0fVxyXG5cclxuXHRcdHRoaXMuJHRhYmxlLmRhdGEoIGRhdGEub2JqLCB0aGlzICk7XHJcblx0fTtcclxuXHJcblx0U3RhY2sucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiggY29sc3RhcnQgKSB7XHJcblx0XHR0aGlzLiR0YWJsZS5hZGRDbGFzcyggY2xhc3Nlcy5zdGFja1RhYmxlICk7XHJcblxyXG5cdFx0aWYoIHRoaXMubGFiZWxsZXNzICkge1xyXG5cdFx0XHRyZXR1cm47XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gZ2V0IGhlYWRlcnMgaW4gcmV2ZXJzZSBvcmRlciBzbyB0aGF0IHRvcC1sZXZlbCBoZWFkZXJzIGFyZSBhcHBlbmRlZCBsYXN0XHJcblx0XHR2YXIgcmV2ZXJzZUhlYWRlcnMgPSAkKCB0aGlzLmFsbEhlYWRlcnMgKTtcclxuXHRcdHZhciBoaWRlZW1wdHkgPSB0aGlzLmhpZGVlbXB0eTtcclxuXHRcdFxyXG5cdFx0Ly8gY3JlYXRlIHRoZSBoaWRlL3Nob3cgdG9nZ2xlc1xyXG5cdFx0cmV2ZXJzZUhlYWRlcnMuZWFjaChmdW5jdGlvbigpe1xyXG5cdFx0XHR2YXIgJHQgPSAkKCB0aGlzICksXHJcblx0XHRcdFx0JGNlbGxzID0gJCggdGhpcy5jZWxscyApLmZpbHRlcihmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdHJldHVybiAhJCggdGhpcyApLnBhcmVudCgpLmlzKCBcIltcIiArIGF0dHJzLmxhYmVsbGVzcyArIFwiXVwiICkgJiYgKCAhaGlkZWVtcHR5IHx8ICEkKCB0aGlzICkuaXMoIFwiOmVtcHR5XCIgKSApO1xyXG5cdFx0XHRcdH0pLFxyXG5cdFx0XHRcdGhpZXJhcmNoeUNsYXNzID0gJGNlbGxzLm5vdCggdGhpcyApLmZpbHRlciggXCJ0aGVhZCB0aFwiICkubGVuZ3RoICYmIFwiIHRhYmxlc2F3LWNlbGwtbGFiZWwtdG9wXCIsXHJcblx0XHRcdFx0Ly8gVE9ETyByZWR1Y2UgY291cGxpbmcgd2l0aCBzb3J0YWJsZVxyXG5cdFx0XHRcdCRzb3J0YWJsZUJ1dHRvbiA9ICR0LmZpbmQoIFwiLnRhYmxlc2F3LXNvcnRhYmxlLWJ0blwiICksXHJcblx0XHRcdFx0aHRtbCA9ICRzb3J0YWJsZUJ1dHRvbi5sZW5ndGggPyAkc29ydGFibGVCdXR0b24uaHRtbCgpIDogJHQuaHRtbCgpO1xyXG5cclxuXHRcdFx0aWYoIGh0bWwgIT09IFwiXCIgKXtcclxuXHRcdFx0XHRpZiggaGllcmFyY2h5Q2xhc3MgKXtcclxuXHRcdFx0XHRcdHZhciBpdGVyYXRpb24gPSBwYXJzZUludCggJCggdGhpcyApLmF0dHIoIFwiY29sc3BhblwiICksIDEwICksXHJcblx0XHRcdFx0XHRcdGZpbHRlciA9IFwiXCI7XHJcblxyXG5cdFx0XHRcdFx0aWYoIGl0ZXJhdGlvbiApe1xyXG5cdFx0XHRcdFx0XHRmaWx0ZXIgPSBcInRkOm50aC1jaGlsZChcIisgaXRlcmF0aW9uICtcIm4gKyBcIiArICggY29sc3RhcnQgKSArXCIpXCI7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHQkY2VsbHMuZmlsdGVyKCBmaWx0ZXIgKS5wcmVwZW5kKCBcIjxiIGNsYXNzPSdcIiArIGNsYXNzZXMuY2VsbExhYmVscyArIGhpZXJhcmNoeUNsYXNzICsgXCInPlwiICsgaHRtbCArIFwiPC9iPlwiICApO1xyXG5cdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHQkY2VsbHMud3JhcElubmVyKCBcIjxzcGFuIGNsYXNzPSdcIiArIGNsYXNzZXMuY2VsbENvbnRlbnRMYWJlbHMgKyBcIic+PC9zcGFuPlwiICk7XHJcblx0XHRcdFx0XHQkY2VsbHMucHJlcGVuZCggXCI8YiBjbGFzcz0nXCIgKyBjbGFzc2VzLmNlbGxMYWJlbHMgKyBcIic+XCIgKyBodG1sICsgXCI8L2I+XCIgICk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9KTtcclxuXHR9O1xyXG5cclxuXHRTdGFjay5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0dGhpcy4kdGFibGUucmVtb3ZlQ2xhc3MoIGNsYXNzZXMuc3RhY2tUYWJsZSApO1xyXG5cdFx0dGhpcy4kdGFibGUuZmluZCggJy4nICsgY2xhc3Nlcy5jZWxsTGFiZWxzICkucmVtb3ZlKCk7XHJcblx0XHR0aGlzLiR0YWJsZS5maW5kKCAnLicgKyBjbGFzc2VzLmNlbGxDb250ZW50TGFiZWxzICkuZWFjaChmdW5jdGlvbigpIHtcclxuXHRcdFx0JCggdGhpcyApLnJlcGxhY2VXaXRoKCB0aGlzLmNoaWxkTm9kZXMgKTtcclxuXHRcdH0pO1xyXG5cdH07XHJcblxyXG5cdC8vIG9uIHRhYmxlY3JlYXRlLCBpbml0XHJcblx0JCggZG9jdW1lbnQgKS5vbiggXCJ0YWJsZXNhd2NyZWF0ZVwiLCBmdW5jdGlvbiggZSwgVGFibGVzYXcsIGNvbHN0YXJ0ICl7XHJcblx0XHRpZiggVGFibGVzYXcubW9kZSA9PT0gJ3N0YWNrJyApe1xyXG5cdFx0XHR2YXIgdGFibGUgPSBuZXcgU3RhY2soIFRhYmxlc2F3LnRhYmxlICk7XHJcblx0XHRcdHRhYmxlLmluaXQoIGNvbHN0YXJ0ICk7XHJcblx0XHR9XHJcblxyXG5cdH0gKTtcclxuXHJcblx0JCggZG9jdW1lbnQgKS5vbiggXCJ0YWJsZXNhd2Rlc3Ryb3lcIiwgZnVuY3Rpb24oIGUsIFRhYmxlc2F3ICl7XHJcblxyXG5cdFx0aWYoIFRhYmxlc2F3Lm1vZGUgPT09ICdzdGFjaycgKXtcclxuXHRcdFx0JCggVGFibGVzYXcudGFibGUgKS5kYXRhKCBkYXRhLm9iaiApLmRlc3Ryb3koKTtcclxuXHRcdH1cclxuXHJcblx0fSApO1xyXG5cclxufSggdGhpcywgalF1ZXJ5ICkpO1xyXG47KGZ1bmN0aW9uKCAkICkge1xyXG5cdHZhciBwbHVnaW5OYW1lID0gXCJ0YWJsZXNhd2J0blwiLFxyXG5cdFx0bWV0aG9kcyA9IHtcclxuXHRcdFx0X2NyZWF0ZTogZnVuY3Rpb24oKXtcclxuXHRcdFx0XHRyZXR1cm4gJCggdGhpcyApLmVhY2goZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0XHQkKCB0aGlzIClcclxuXHRcdFx0XHRcdFx0LnRyaWdnZXIoIFwiYmVmb3JlY3JlYXRlLlwiICsgcGx1Z2luTmFtZSApXHJcblx0XHRcdFx0XHRcdFsgcGx1Z2luTmFtZSBdKCBcIl9pbml0XCIgKVxyXG5cdFx0XHRcdFx0XHQudHJpZ2dlciggXCJjcmVhdGUuXCIgKyBwbHVnaW5OYW1lICk7XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH0sXHJcblx0XHRcdF9pbml0OiBmdW5jdGlvbigpe1xyXG5cdFx0XHRcdHZhciBvRWwgPSAkKCB0aGlzICksXHJcblx0XHRcdFx0XHRzZWwgPSB0aGlzLmdldEVsZW1lbnRzQnlUYWdOYW1lKCBcInNlbGVjdFwiIClbIDAgXTtcclxuXHJcblx0XHRcdFx0aWYoIHNlbCApIHtcclxuXHRcdFx0XHRcdCQoIHRoaXMgKVxyXG5cdFx0XHRcdFx0XHQuYWRkQ2xhc3MoIFwiYnRuLXNlbGVjdFwiIClcclxuXHRcdFx0XHRcdFx0WyBwbHVnaW5OYW1lIF0oIFwiX3NlbGVjdFwiLCBzZWwgKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0cmV0dXJuIG9FbDtcclxuXHRcdFx0fSxcclxuXHRcdFx0X3NlbGVjdDogZnVuY3Rpb24oIHNlbCApIHtcclxuXHRcdFx0XHR2YXIgdXBkYXRlID0gZnVuY3Rpb24oIG9FbCwgc2VsICkge1xyXG5cdFx0XHRcdFx0dmFyIG9wdHMgPSAkKCBzZWwgKS5maW5kKCBcIm9wdGlvblwiICksXHJcblx0XHRcdFx0XHRcdGxhYmVsLCBlbCwgY2hpbGRyZW47XHJcblxyXG5cdFx0XHRcdFx0b3B0cy5lYWNoKGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdFx0XHR2YXIgb3B0ID0gdGhpcztcclxuXHRcdFx0XHRcdFx0aWYoIG9wdC5zZWxlY3RlZCApIHtcclxuXHRcdFx0XHRcdFx0XHRsYWJlbCA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCBvcHQudGV4dCApO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9KTtcclxuXHJcblx0XHRcdFx0XHRjaGlsZHJlbiA9IG9FbC5jaGlsZE5vZGVzO1xyXG5cdFx0XHRcdFx0aWYoIG9wdHMubGVuZ3RoID4gMCApe1xyXG5cdFx0XHRcdFx0XHRmb3IoIHZhciBpID0gMCwgbCA9IGNoaWxkcmVuLmxlbmd0aDsgaSA8IGw7IGkrKyApIHtcclxuXHRcdFx0XHRcdFx0XHRlbCA9IGNoaWxkcmVuWyBpIF07XHJcblxyXG5cdFx0XHRcdFx0XHRcdGlmKCBlbCAmJiBlbC5ub2RlVHlwZSA9PT0gMyApIHtcclxuXHRcdFx0XHRcdFx0XHRcdG9FbC5yZXBsYWNlQ2hpbGQoIGxhYmVsLCBlbCApO1xyXG5cdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH07XHJcblxyXG5cdFx0XHRcdHVwZGF0ZSggdGhpcywgc2VsICk7XHJcblx0XHRcdFx0JCggdGhpcyApLmJpbmQoIFwiY2hhbmdlIHJlZnJlc2hcIiwgZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0XHR1cGRhdGUoIHRoaXMsIHNlbCApO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cclxuXHQvLyBDb2xsZWN0aW9uIG1ldGhvZC5cclxuXHQkLmZuWyBwbHVnaW5OYW1lIF0gPSBmdW5jdGlvbiggYXJyZywgYSwgYiwgYyApIHtcclxuXHRcdHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKSB7XHJcblxyXG5cdFx0Ly8gaWYgaXQncyBhIG1ldGhvZFxyXG5cdFx0aWYoIGFycmcgJiYgdHlwZW9mKCBhcnJnICkgPT09IFwic3RyaW5nXCIgKXtcclxuXHRcdFx0cmV0dXJuICQuZm5bIHBsdWdpbk5hbWUgXS5wcm90b3R5cGVbIGFycmcgXS5jYWxsKCB0aGlzLCBhLCBiLCBjICk7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gZG9uJ3QgcmUtaW5pdFxyXG5cdFx0aWYoICQoIHRoaXMgKS5kYXRhKCBwbHVnaW5OYW1lICsgXCJhY3RpdmVcIiApICl7XHJcblx0XHRcdHJldHVybiAkKCB0aGlzICk7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gb3RoZXJ3aXNlLCBpbml0XHJcblxyXG5cdFx0JCggdGhpcyApLmRhdGEoIHBsdWdpbk5hbWUgKyBcImFjdGl2ZVwiLCB0cnVlICk7XHJcblx0XHRcdCQuZm5bIHBsdWdpbk5hbWUgXS5wcm90b3R5cGUuX2NyZWF0ZS5jYWxsKCB0aGlzICk7XHJcblx0XHR9KTtcclxuXHR9O1xyXG5cclxuXHQvLyBhZGQgbWV0aG9kc1xyXG5cdCQuZXh0ZW5kKCAkLmZuWyBwbHVnaW5OYW1lIF0ucHJvdG90eXBlLCBtZXRob2RzICk7XHJcblxyXG59KCBqUXVlcnkgKSk7XHJcbjsoZnVuY3Rpb24oIHdpbiwgJCwgdW5kZWZpbmVkICl7XHJcblxyXG5cdHZhciBDb2x1bW5Ub2dnbGUgPSBmdW5jdGlvbiggZWxlbWVudCApIHtcclxuXHJcblx0XHR0aGlzLiR0YWJsZSA9ICQoIGVsZW1lbnQgKTtcclxuXHJcblx0XHR0aGlzLmNsYXNzZXMgPSB7XHJcblx0XHRcdGNvbHVtblRvZ2dsZVRhYmxlOiAndGFibGVzYXctY29sdW1udG9nZ2xlJyxcclxuXHRcdFx0Y29sdW1uQnRuQ29udGFpbjogJ3RhYmxlc2F3LWNvbHVtbnRvZ2dsZS1idG53cmFwIHRhYmxlc2F3LWFkdmFuY2UnLFxyXG5cdFx0XHRjb2x1bW5CdG46ICd0YWJsZXNhdy1jb2x1bW50b2dnbGUtYnRuIHRhYmxlc2F3LW5hdi1idG4gZG93bicsXHJcblx0XHRcdHBvcHVwOiAndGFibGVzYXctY29sdW1udG9nZ2xlLXBvcHVwJyxcclxuXHRcdFx0cHJpb3JpdHlQcmVmaXg6ICd0YWJsZXNhdy1wcmlvcml0eS0nLFxyXG5cdFx0XHQvLyBUT0RPIGR1cGxpY2F0ZSBjbGFzcywgYWxzbyBpbiB0YWJsZXMuanNcclxuXHRcdFx0dG9vbGJhcjogJ3RhYmxlc2F3LWJhcidcclxuXHRcdH07XHJcblxyXG5cdFx0Ly8gRXhwb3NlIGhlYWRlcnMgYW5kIGFsbEhlYWRlcnMgcHJvcGVydGllcyBvbiB0aGUgd2lkZ2V0XHJcblx0XHQvLyBoZWFkZXJzIHJlZmVyZW5jZXMgdGhlIFRIcyB3aXRoaW4gdGhlIGZpcnN0IFRSIGluIHRoZSB0YWJsZVxyXG5cdFx0dGhpcy5oZWFkZXJzID0gdGhpcy4kdGFibGUuZmluZCggJ3RyOmZpcnN0ID4gdGgnICk7XHJcblxyXG5cdFx0dGhpcy4kdGFibGUuZGF0YSggJ3RhYmxlc2F3LWNvbHRvZ2dsZScsIHRoaXMgKTtcclxuXHR9O1xyXG5cclxuXHRDb2x1bW5Ub2dnbGUucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbigpIHtcclxuXHJcblx0XHR2YXIgdGFibGVJZCxcclxuXHRcdFx0aWQsXHJcblx0XHRcdCRtZW51QnV0dG9uLFxyXG5cdFx0XHQkcG9wdXAsXHJcblx0XHRcdCRtZW51LFxyXG5cdFx0XHQkYnRuQ29udGFpbixcclxuXHRcdFx0c2VsZiA9IHRoaXM7XHJcblxyXG5cdFx0dGhpcy4kdGFibGUuYWRkQ2xhc3MoIHRoaXMuY2xhc3Nlcy5jb2x1bW5Ub2dnbGVUYWJsZSApO1xyXG5cclxuXHRcdHRhYmxlSWQgPSB0aGlzLiR0YWJsZS5hdHRyKCBcImlkXCIgKTtcclxuXHRcdGlkID0gdGFibGVJZCArIFwiLXBvcHVwXCI7XHJcblx0XHQkYnRuQ29udGFpbiA9ICQoIFwiPGRpdiBjbGFzcz0nXCIgKyB0aGlzLmNsYXNzZXMuY29sdW1uQnRuQ29udGFpbiArIFwiJz48L2Rpdj5cIiApO1xyXG5cdFx0JG1lbnVCdXR0b24gPSAkKCBcIjxhIGhyZWY9JyNcIiArIGlkICsgXCInIGNsYXNzPSdidG4gYnRuLW1pY3JvIFwiICsgdGhpcy5jbGFzc2VzLmNvbHVtbkJ0biArXCInIGRhdGEtcG9wdXAtbGluaz5cIiArXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XCI8c3Bhbj5cIiArIFRhYmxlc2F3LmkxOG4uY29sdW1uQnRuVGV4dCArIFwiPC9zcGFuPjwvYT5cIiApO1xyXG5cdFx0JHBvcHVwID0gJCggXCI8ZGl2IGNsYXNzPSdkaWFsb2ctdGFibGUtY29sdG9nZ2xlIFwiICsgdGhpcy5jbGFzc2VzLnBvcHVwICsgXCInIGlkPSdcIiArIGlkICsgXCInPjwvZGl2PlwiICk7XHJcblx0XHQkbWVudSA9ICQoIFwiPGRpdiBjbGFzcz0nYnRuLWdyb3VwJz48L2Rpdj5cIiApO1xyXG5cclxuXHRcdHZhciBoYXNOb25QZXJzaXN0ZW50SGVhZGVycyA9IGZhbHNlO1xyXG5cdFx0JCggdGhpcy5oZWFkZXJzICkubm90KCBcInRkXCIgKS5lYWNoKCBmdW5jdGlvbigpIHtcclxuXHRcdFx0dmFyICR0aGlzID0gJCggdGhpcyApLFxyXG5cdFx0XHRcdHByaW9yaXR5ID0gJHRoaXMuYXR0cihcImRhdGEtdGFibGVzYXctcHJpb3JpdHlcIiksXHJcblx0XHRcdFx0JGNlbGxzID0gc2VsZi4kZ2V0Q2VsbHMoIHRoaXMgKTtcclxuXHJcblx0XHRcdGlmKCBwcmlvcml0eSAmJiBwcmlvcml0eSAhPT0gXCJwZXJzaXN0XCIgKSB7XHJcblx0XHRcdFx0JGNlbGxzLmFkZENsYXNzKCBzZWxmLmNsYXNzZXMucHJpb3JpdHlQcmVmaXggKyBwcmlvcml0eSApO1xyXG5cclxuXHRcdFx0XHQkKFwiPGxhYmVsPjxpbnB1dCB0eXBlPSdjaGVja2JveCcgY2hlY2tlZD5cIiArICR0aGlzLnRleHQoKSArIFwiPC9sYWJlbD5cIiApXHJcblx0XHRcdFx0XHQuYXBwZW5kVG8oICRtZW51IClcclxuXHRcdFx0XHRcdC5jaGlsZHJlbiggMCApXHJcblx0XHRcdFx0XHQuZGF0YSggXCJ0YWJsZXNhdy1oZWFkZXJcIiwgdGhpcyApO1xyXG5cclxuXHRcdFx0XHRoYXNOb25QZXJzaXN0ZW50SGVhZGVycyA9IHRydWU7XHJcblx0XHRcdH1cclxuXHRcdH0pO1xyXG5cclxuXHRcdGlmKCAhaGFzTm9uUGVyc2lzdGVudEhlYWRlcnMgKSB7XHJcblx0XHRcdCRtZW51LmFwcGVuZCggJzxsYWJlbD4nICsgVGFibGVzYXcuaTE4bi5jb2x1bW5zRGlhbG9nRXJyb3IgKyAnPC9sYWJlbD4nICk7XHJcblx0XHR9XHJcblxyXG5cdFx0JG1lbnUuYXBwZW5kVG8oICRwb3B1cCApO1xyXG5cclxuXHRcdC8vIGJpbmQgY2hhbmdlIGV2ZW50IGxpc3RlbmVycyB0byBpbnB1dHMgLSBUT0RPOiBtb3ZlIHRvIGEgcHJpdmF0ZSBtZXRob2Q/XHJcblx0XHQkbWVudS5maW5kKCAnaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdJyApLm9uKCBcImNoYW5nZVwiLCBmdW5jdGlvbihlKSB7XHJcblx0XHRcdHZhciBjaGVja2VkID0gZS50YXJnZXQuY2hlY2tlZDtcclxuXHJcblx0XHRcdHNlbGYuJGdldENlbGxzRnJvbUNoZWNrYm94KCBlLnRhcmdldCApXHJcblx0XHRcdFx0LnRvZ2dsZUNsYXNzKCBcInRhYmxlc2F3LWNlbGwtaGlkZGVuXCIsICFjaGVja2VkIClcclxuXHRcdFx0XHQudG9nZ2xlQ2xhc3MoIFwidGFibGVzYXctY2VsbC12aXNpYmxlXCIsIGNoZWNrZWQgKTtcclxuXHJcblx0XHRcdHNlbGYuJHRhYmxlLnRyaWdnZXIoICd0YWJsZXNhd2NvbHVtbnMnICk7XHJcblx0XHR9KTtcclxuXHJcblx0XHQkbWVudUJ1dHRvbi5hcHBlbmRUbyggJGJ0bkNvbnRhaW4gKTtcclxuXHRcdCRidG5Db250YWluLmFwcGVuZFRvKCB0aGlzLiR0YWJsZS5wcmV2KCkuZmlsdGVyKCAnLicgKyB0aGlzLmNsYXNzZXMudG9vbGJhciApICk7XHJcblxyXG5cclxuXHRcdGZ1bmN0aW9uIGNsb3NlUG9wdXAoIGV2ZW50ICkge1xyXG5cdFx0XHQvLyBDbGljayBjYW1lIGZyb20gaW5zaWRlIHRoZSBwb3B1cCwgaWdub3JlLlxyXG5cdFx0XHRpZiggZXZlbnQgJiYgJCggZXZlbnQudGFyZ2V0ICkuY2xvc2VzdCggXCIuXCIgKyBzZWxmLmNsYXNzZXMucG9wdXAgKS5sZW5ndGggKSB7XHJcblx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQkKCBkb2N1bWVudCApLnVuYmluZCggJ2NsaWNrLicgKyB0YWJsZUlkICk7XHJcblx0XHRcdCRtZW51QnV0dG9uLnJlbW92ZUNsYXNzKCAndXAnICkuYWRkQ2xhc3MoICdkb3duJyApO1xyXG5cdFx0XHQkYnRuQ29udGFpbi5yZW1vdmVDbGFzcyggJ3Zpc2libGUnICk7XHJcblx0XHR9XHJcblxyXG5cdFx0dmFyIGNsb3NlVGltZW91dDtcclxuXHRcdGZ1bmN0aW9uIG9wZW5Qb3B1cCgpIHtcclxuXHRcdFx0JGJ0bkNvbnRhaW4uYWRkQ2xhc3MoICd2aXNpYmxlJyApO1xyXG5cdFx0XHQkbWVudUJ1dHRvbi5yZW1vdmVDbGFzcyggJ2Rvd24nICkuYWRkQ2xhc3MoICd1cCcgKTtcclxuXHJcblx0XHRcdCQoIGRvY3VtZW50ICkudW5iaW5kKCAnY2xpY2suJyArIHRhYmxlSWQsIGNsb3NlUG9wdXAgKTtcclxuXHJcblx0XHRcdHdpbmRvdy5jbGVhclRpbWVvdXQoIGNsb3NlVGltZW91dCApO1xyXG5cdFx0XHRjbG9zZVRpbWVvdXQgPSB3aW5kb3cuc2V0VGltZW91dChmdW5jdGlvbigpIHtcclxuXHRcdFx0XHQkKCBkb2N1bWVudCApLm9uZSggJ2NsaWNrLicgKyB0YWJsZUlkLCBjbG9zZVBvcHVwICk7XHJcblx0XHRcdH0sIDE1ICk7XHJcblx0XHR9XHJcblxyXG5cdFx0JG1lbnVCdXR0b24ub24oIFwiY2xpY2sudGFibGVzYXdcIiwgZnVuY3Rpb24oIGV2ZW50ICkge1xyXG5cdFx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuXHRcdFx0aWYoICEkYnRuQ29udGFpbi5pcyggXCIudmlzaWJsZVwiICkgKSB7XHJcblx0XHRcdFx0b3BlblBvcHVwKCk7XHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0Y2xvc2VQb3B1cCgpO1xyXG5cdFx0XHR9XHJcblx0XHR9KTtcclxuXHJcblx0XHQkcG9wdXAuYXBwZW5kVG8oICRidG5Db250YWluICk7XHJcblxyXG5cdFx0dGhpcy4kbWVudSA9ICRtZW51O1xyXG5cclxuXHRcdCQod2luZG93KS5vbiggXCJyZXNpemUuXCIgKyB0YWJsZUlkLCBmdW5jdGlvbigpe1xyXG5cdFx0XHRzZWxmLnJlZnJlc2hUb2dnbGUoKTtcclxuXHRcdH0pO1xyXG5cclxuXHRcdHRoaXMucmVmcmVzaFRvZ2dsZSgpO1xyXG5cdH07XHJcblxyXG5cdENvbHVtblRvZ2dsZS5wcm90b3R5cGUuJGdldENlbGxzID0gZnVuY3Rpb24oIHRoICkge1xyXG5cdFx0cmV0dXJuICQoIHRoICkuYWRkKCB0aC5jZWxscyApO1xyXG5cdH07XHJcblxyXG5cdENvbHVtblRvZ2dsZS5wcm90b3R5cGUuJGdldENlbGxzRnJvbUNoZWNrYm94ID0gZnVuY3Rpb24oIGNoZWNrYm94ICkge1xyXG5cdFx0dmFyIHRoID0gJCggY2hlY2tib3ggKS5kYXRhKCBcInRhYmxlc2F3LWhlYWRlclwiICk7XHJcblx0XHRyZXR1cm4gdGhpcy4kZ2V0Q2VsbHMoIHRoICk7XHJcblx0fTtcclxuXHJcblx0Q29sdW1uVG9nZ2xlLnByb3RvdHlwZS5yZWZyZXNoVG9nZ2xlID0gZnVuY3Rpb24oKSB7XHJcblx0XHR2YXIgc2VsZiA9IHRoaXM7XHJcblx0XHR0aGlzLiRtZW51LmZpbmQoIFwiaW5wdXRcIiApLmVhY2goIGZ1bmN0aW9uKCkge1xyXG5cdFx0XHR0aGlzLmNoZWNrZWQgPSBzZWxmLiRnZXRDZWxsc0Zyb21DaGVja2JveCggdGhpcyApLmVxKCAwICkuY3NzKCBcImRpc3BsYXlcIiApID09PSBcInRhYmxlLWNlbGxcIjtcclxuXHRcdH0pO1xyXG5cdH07XHJcblxyXG5cdENvbHVtblRvZ2dsZS5wcm90b3R5cGUucmVmcmVzaFByaW9yaXR5ID0gZnVuY3Rpb24oKXtcclxuXHRcdHZhciBzZWxmID0gdGhpcztcclxuXHRcdCQodGhpcy5oZWFkZXJzKS5ub3QoIFwidGRcIiApLmVhY2goIGZ1bmN0aW9uKCkge1xyXG5cdFx0XHR2YXIgJHRoaXMgPSAkKCB0aGlzICksXHJcblx0XHRcdFx0cHJpb3JpdHkgPSAkdGhpcy5hdHRyKFwiZGF0YS10YWJsZXNhdy1wcmlvcml0eVwiKSxcclxuXHRcdFx0XHQkY2VsbHMgPSAkdGhpcy5hZGQoIHRoaXMuY2VsbHMgKTtcclxuXHJcblx0XHRcdGlmKCBwcmlvcml0eSAmJiBwcmlvcml0eSAhPT0gXCJwZXJzaXN0XCIgKSB7XHJcblx0XHRcdFx0JGNlbGxzLmFkZENsYXNzKCBzZWxmLmNsYXNzZXMucHJpb3JpdHlQcmVmaXggKyBwcmlvcml0eSApO1xyXG5cdFx0XHR9XHJcblx0XHR9KTtcclxuXHR9O1xyXG5cclxuXHRDb2x1bW5Ub2dnbGUucHJvdG90eXBlLmRlc3Ryb3kgPSBmdW5jdGlvbigpIHtcclxuXHRcdC8vIHRhYmxlIHRvb2xiYXJzLCBkb2N1bWVudCBhbmQgd2luZG93IC50YWJsZUlkIGV2ZW50c1xyXG5cdFx0Ly8gcmVtb3ZlZCBpbiBwYXJlbnQgdGFibGVzLmpzIGRlc3Ryb3kgbWV0aG9kXHJcblxyXG5cdFx0dGhpcy4kdGFibGUucmVtb3ZlQ2xhc3MoIHRoaXMuY2xhc3Nlcy5jb2x1bW5Ub2dnbGVUYWJsZSApO1xyXG5cdFx0dGhpcy4kdGFibGUuZmluZCggJ3RoLCB0ZCcgKS5lYWNoKGZ1bmN0aW9uKCkge1xyXG5cdFx0XHR2YXIgJGNlbGwgPSAkKCB0aGlzICk7XHJcblx0XHRcdCRjZWxsLnJlbW92ZUNsYXNzKCAndGFibGVzYXctY2VsbC1oaWRkZW4nIClcclxuXHRcdFx0XHQucmVtb3ZlQ2xhc3MoICd0YWJsZXNhdy1jZWxsLXZpc2libGUnICk7XHJcblxyXG5cdFx0XHR0aGlzLmNsYXNzTmFtZSA9IHRoaXMuY2xhc3NOYW1lLnJlcGxhY2UoIC9cXGJ1aVxcLXRhYmxlXFwtcHJpb3JpdHlcXC1cXGRcXGIvZywgJycgKTtcclxuXHRcdH0pO1xyXG5cdH07XHJcblxyXG5cdC8vIG9uIHRhYmxlY3JlYXRlLCBpbml0XHJcblx0JCggZG9jdW1lbnQgKS5vbiggXCJ0YWJsZXNhd2NyZWF0ZVwiLCBmdW5jdGlvbiggZSwgVGFibGVzYXcgKXtcclxuXHJcblx0XHRpZiggVGFibGVzYXcubW9kZSA9PT0gJ2NvbHVtbnRvZ2dsZScgKXtcclxuXHRcdFx0dmFyIHRhYmxlID0gbmV3IENvbHVtblRvZ2dsZSggVGFibGVzYXcudGFibGUgKTtcclxuXHRcdFx0dGFibGUuaW5pdCgpO1xyXG5cdFx0fVxyXG5cclxuXHR9ICk7XHJcblxyXG5cdCQoIGRvY3VtZW50ICkub24oIFwidGFibGVzYXdkZXN0cm95XCIsIGZ1bmN0aW9uKCBlLCBUYWJsZXNhdyApe1xyXG5cdFx0aWYoIFRhYmxlc2F3Lm1vZGUgPT09ICdjb2x1bW50b2dnbGUnICl7XHJcblx0XHRcdCQoIFRhYmxlc2F3LnRhYmxlICkuZGF0YSggJ3RhYmxlc2F3LWNvbHRvZ2dsZScgKS5kZXN0cm95KCk7XHJcblx0XHR9XHJcblx0fSApO1xyXG5cclxufSggdGhpcywgalF1ZXJ5ICkpO1xyXG47KGZ1bmN0aW9uKCB3aW4sICQsIHVuZGVmaW5lZCApe1xyXG5cclxuXHQkLmV4dGVuZCggVGFibGVzYXcuY29uZmlnLCB7XHJcblx0XHRzd2lwZToge1xyXG5cdFx0XHRob3Jpem9udGFsVGhyZXNob2xkOiAxNSxcclxuXHRcdFx0dmVydGljYWxUaHJlc2hvbGQ6IDMwXHJcblx0XHR9XHJcblx0fSk7XHJcblxyXG5cdGZ1bmN0aW9uIGlzSUU4KCkge1xyXG5cdFx0dmFyIGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpLFxyXG5cdFx0XHRhbGwgPSBkaXYuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2knKTtcclxuXHJcblx0XHRkaXYuaW5uZXJIVE1MID0gJzwhLS1baWYgbHRlIElFIDhdPjxpPjwvaT48IVtlbmRpZl0tLT4nO1xyXG5cclxuXHRcdHJldHVybiAhIWFsbC5sZW5ndGg7XHJcblx0fVxyXG5cclxuXHR2YXIgY2xhc3NlcyA9IHtcclxuXHRcdC8vIFRPRE8gZHVwbGljYXRlIGNsYXNzLCBhbHNvIGluIHRhYmxlcy5qc1xyXG5cdFx0dG9vbGJhcjogXCJ0YWJsZXNhdy1iYXJcIixcclxuXHRcdGhpZGVCdG46IFwiZGlzYWJsZWRcIixcclxuXHRcdHBlcnNpc3RXaWR0aHM6IFwidGFibGVzYXctZml4LXBlcnNpc3RcIixcclxuXHRcdGFsbENvbHVtbnNWaXNpYmxlOiAndGFibGVzYXctYWxsLWNvbHMtdmlzaWJsZSdcclxuXHR9O1xyXG5cclxuXHRmdW5jdGlvbiBjcmVhdGVTd2lwZVRhYmxlKCAkdGFibGUgKXtcclxuXHJcblx0XHR2YXIgJGJ0bnMgPSAkKCBcIjxkaXYgY2xhc3M9J3RhYmxlc2F3LWFkdmFuY2UnPjwvZGl2PlwiICksXHJcblx0XHRcdCRwcmV2QnRuID0gJCggXCI8YSBocmVmPScjJyBjbGFzcz0ndGFibGVzYXctbmF2LWJ0biBidG4gYnRuLW1pY3JvIGxlZnQnIHRpdGxlPSdQcmV2aW91cyBDb2x1bW4nPjwvYT5cIiApLmFwcGVuZFRvKCAkYnRucyApLFxyXG5cdFx0XHQkbmV4dEJ0biA9ICQoIFwiPGEgaHJlZj0nIycgY2xhc3M9J3RhYmxlc2F3LW5hdi1idG4gYnRuIGJ0bi1taWNybyByaWdodCcgdGl0bGU9J05leHQgQ29sdW1uJz48L2E+XCIgKS5hcHBlbmRUbyggJGJ0bnMgKSxcclxuXHRcdFx0JGhlYWRlckNlbGxzID0gJHRhYmxlLmZpbmQoIFwidGhlYWQgdGhcIiApLFxyXG5cdFx0XHQkaGVhZGVyQ2VsbHNOb1BlcnNpc3QgPSAkaGVhZGVyQ2VsbHMubm90KCAnW2RhdGEtdGFibGVzYXctcHJpb3JpdHk9XCJwZXJzaXN0XCJdJyApLFxyXG5cdFx0XHRoZWFkZXJXaWR0aHMgPSBbXSxcclxuXHRcdFx0JGhlYWQgPSAkKCBkb2N1bWVudC5oZWFkIHx8ICdoZWFkJyApLFxyXG5cdFx0XHR0YWJsZUlkID0gJHRhYmxlLmF0dHIoICdpZCcgKSxcclxuXHRcdFx0Ly8gVE9ETyBzd2l0Y2ggdGhpcyB0byBhbiBudGgtY2hpbGQgZmVhdHVyZSB0ZXN0XHJcblx0XHRcdHN1cHBvcnRzTnRoQ2hpbGQgPSAhaXNJRTgoKTtcclxuXHJcblx0XHRpZiggISRoZWFkZXJDZWxscy5sZW5ndGggKSB7XHJcblx0XHRcdHRocm93IG5ldyBFcnJvciggXCJ0YWJsZXNhdyBzd2lwZTogbm8gaGVhZGVyIGNlbGxzIGZvdW5kLiBBcmUgeW91IHVzaW5nIDx0aD4gaW5zaWRlIG9mIDx0aGVhZD4/XCIgKTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBDYWxjdWxhdGUgaW5pdGlhbCB3aWR0aHNcclxuXHRcdCR0YWJsZS5jc3MoJ3dpZHRoJywgJ2F1dG8nKTtcclxuXHRcdCRoZWFkZXJDZWxscy5lYWNoKGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRoZWFkZXJXaWR0aHMucHVzaCggJCggdGhpcyApLm91dGVyV2lkdGgoKSApO1xyXG5cdFx0fSk7XHJcblx0XHQkdGFibGUuY3NzKCAnd2lkdGgnLCAnJyApO1xyXG5cclxuXHRcdCRidG5zLmFwcGVuZFRvKCAkdGFibGUucHJldigpLmZpbHRlciggJy50YWJsZXNhdy1iYXInICkgKTtcclxuXHJcblx0XHQkdGFibGUuYWRkQ2xhc3MoIFwidGFibGVzYXctc3dpcGVcIiApO1xyXG5cclxuXHRcdGlmKCAhdGFibGVJZCApIHtcclxuXHRcdFx0dGFibGVJZCA9ICd0YWJsZXN3aXBlLScgKyBNYXRoLnJvdW5kKCBNYXRoLnJhbmRvbSgpICogMTAwMDAgKTtcclxuXHRcdFx0JHRhYmxlLmF0dHIoICdpZCcsIHRhYmxlSWQgKTtcclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiAkZ2V0Q2VsbHMoIGhlYWRlckNlbGwgKSB7XHJcblx0XHRcdHJldHVybiAkKCBoZWFkZXJDZWxsLmNlbGxzICkuYWRkKCBoZWFkZXJDZWxsICk7XHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gc2hvd0NvbHVtbiggaGVhZGVyQ2VsbCApIHtcclxuXHRcdFx0JGdldENlbGxzKCBoZWFkZXJDZWxsICkucmVtb3ZlQ2xhc3MoICd0YWJsZXNhdy1jZWxsLWhpZGRlbicgKTtcclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBoaWRlQ29sdW1uKCBoZWFkZXJDZWxsICkge1xyXG5cdFx0XHQkZ2V0Q2VsbHMoIGhlYWRlckNlbGwgKS5hZGRDbGFzcyggJ3RhYmxlc2F3LWNlbGwtaGlkZGVuJyApO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIHBlcnNpc3RDb2x1bW4oIGhlYWRlckNlbGwgKSB7XHJcblx0XHRcdCRnZXRDZWxscyggaGVhZGVyQ2VsbCApLmFkZENsYXNzKCAndGFibGVzYXctY2VsbC1wZXJzaXN0JyApO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGlzUGVyc2lzdGVudCggaGVhZGVyQ2VsbCApIHtcclxuXHRcdFx0cmV0dXJuICQoIGhlYWRlckNlbGwgKS5pcyggJ1tkYXRhLXRhYmxlc2F3LXByaW9yaXR5PVwicGVyc2lzdFwiXScgKTtcclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiB1bm1haW50YWluV2lkdGhzKCkge1xyXG5cdFx0XHQkdGFibGUucmVtb3ZlQ2xhc3MoIGNsYXNzZXMucGVyc2lzdFdpZHRocyApO1xyXG5cdFx0XHQkKCAnIycgKyB0YWJsZUlkICsgJy1wZXJzaXN0JyApLnJlbW92ZSgpO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIG1haW50YWluV2lkdGhzKCkge1xyXG5cdFx0XHR2YXIgcHJlZml4ID0gJyMnICsgdGFibGVJZCArICcudGFibGVzYXctc3dpcGUgJyxcclxuXHRcdFx0XHRzdHlsZXMgPSBbXSxcclxuXHRcdFx0XHR0YWJsZVdpZHRoID0gJHRhYmxlLndpZHRoKCksXHJcblx0XHRcdFx0aGFzaCA9IFtdLFxyXG5cdFx0XHRcdG5ld0hhc2g7XHJcblxyXG5cdFx0XHQkaGVhZGVyQ2VsbHMuZWFjaChmdW5jdGlvbiggaW5kZXggKSB7XHJcblx0XHRcdFx0dmFyIHdpZHRoO1xyXG5cdFx0XHRcdGlmKCBpc1BlcnNpc3RlbnQoIHRoaXMgKSApIHtcclxuXHRcdFx0XHRcdHdpZHRoID0gJCggdGhpcyApLm91dGVyV2lkdGgoKTtcclxuXHJcblx0XHRcdFx0XHQvLyBPbmx5IHNhdmUgd2lkdGggb24gbm9uLWdyZWVkeSBjb2x1bW5zICh0YWtlIHVwIGxlc3MgdGhhbiA3NSUgb2YgdGFibGUgd2lkdGgpXHJcblx0XHRcdFx0XHRpZiggd2lkdGggPCB0YWJsZVdpZHRoICogMC43NSApIHtcclxuXHRcdFx0XHRcdFx0aGFzaC5wdXNoKCBpbmRleCArICctJyArIHdpZHRoICk7XHJcblx0XHRcdFx0XHRcdHN0eWxlcy5wdXNoKCBwcmVmaXggKyAnIC50YWJsZXNhdy1jZWxsLXBlcnNpc3Q6bnRoLWNoaWxkKCcgKyAoIGluZGV4ICsgMSApICsgJykgeyB3aWR0aDogJyArIHdpZHRoICsgJ3B4OyB9JyApO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSk7XHJcblx0XHRcdG5ld0hhc2ggPSBoYXNoLmpvaW4oICdfJyApO1xyXG5cclxuXHRcdFx0JHRhYmxlLmFkZENsYXNzKCBjbGFzc2VzLnBlcnNpc3RXaWR0aHMgKTtcclxuXHJcblx0XHRcdHZhciAkc3R5bGUgPSAkKCAnIycgKyB0YWJsZUlkICsgJy1wZXJzaXN0JyApO1xyXG5cdFx0XHQvLyBJZiBzdHlsZSBlbGVtZW50IG5vdCB5ZXQgYWRkZWQgT1IgaWYgdGhlIHdpZHRocyBoYXZlIGNoYW5nZWRcclxuXHRcdFx0aWYoICEkc3R5bGUubGVuZ3RoIHx8ICRzdHlsZS5kYXRhKCAnaGFzaCcgKSAhPT0gbmV3SGFzaCApIHtcclxuXHRcdFx0XHQvLyBSZW1vdmUgZXhpc3RpbmdcclxuXHRcdFx0XHQkc3R5bGUucmVtb3ZlKCk7XHJcblxyXG5cdFx0XHRcdGlmKCBzdHlsZXMubGVuZ3RoICkge1xyXG5cdFx0XHRcdFx0JCggJzxzdHlsZT4nICsgc3R5bGVzLmpvaW4oIFwiXFxuXCIgKSArICc8L3N0eWxlPicgKVxyXG5cdFx0XHRcdFx0XHQuYXR0ciggJ2lkJywgdGFibGVJZCArICctcGVyc2lzdCcgKVxyXG5cdFx0XHRcdFx0XHQuZGF0YSggJ2hhc2gnLCBuZXdIYXNoIClcclxuXHRcdFx0XHRcdFx0LmFwcGVuZFRvKCAkaGVhZCApO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGdldE5leHQoKXtcclxuXHRcdFx0dmFyIG5leHQgPSBbXSxcclxuXHRcdFx0XHRjaGVja0ZvdW5kO1xyXG5cclxuXHRcdFx0JGhlYWRlckNlbGxzTm9QZXJzaXN0LmVhY2goZnVuY3Rpb24oIGkgKSB7XHJcblx0XHRcdFx0dmFyICR0ID0gJCggdGhpcyApLFxyXG5cdFx0XHRcdFx0aXNIaWRkZW4gPSAkdC5jc3MoIFwiZGlzcGxheVwiICkgPT09IFwibm9uZVwiIHx8ICR0LmlzKCBcIi50YWJsZXNhdy1jZWxsLWhpZGRlblwiICk7XHJcblxyXG5cdFx0XHRcdGlmKCAhaXNIaWRkZW4gJiYgIWNoZWNrRm91bmQgKSB7XHJcblx0XHRcdFx0XHRjaGVja0ZvdW5kID0gdHJ1ZTtcclxuXHRcdFx0XHRcdG5leHRbIDAgXSA9IGk7XHJcblx0XHRcdFx0fSBlbHNlIGlmKCBpc0hpZGRlbiAmJiBjaGVja0ZvdW5kICkge1xyXG5cdFx0XHRcdFx0bmV4dFsgMSBdID0gaTtcclxuXHJcblx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9KTtcclxuXHJcblx0XHRcdHJldHVybiBuZXh0O1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGdldFByZXYoKXtcclxuXHRcdFx0dmFyIG5leHQgPSBnZXROZXh0KCk7XHJcblx0XHRcdHJldHVybiBbIG5leHRbIDEgXSAtIDEgLCBuZXh0WyAwIF0gLSAxIF07XHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gbmV4dHBhaXIoIGZ3ZCApe1xyXG5cdFx0XHRyZXR1cm4gZndkID8gZ2V0TmV4dCgpIDogZ2V0UHJldigpO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGNhbkFkdmFuY2UoIHBhaXIgKXtcclxuXHRcdFx0cmV0dXJuIHBhaXJbIDEgXSA+IC0xICYmIHBhaXJbIDEgXSA8ICRoZWFkZXJDZWxsc05vUGVyc2lzdC5sZW5ndGg7XHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gbWF0Y2hlc01lZGlhKCkge1xyXG5cdFx0XHR2YXIgbWF0Y2hNZWRpYSA9ICR0YWJsZS5hdHRyKCBcImRhdGEtdGFibGVzYXctc3dpcGUtbWVkaWFcIiApO1xyXG5cdFx0XHRyZXR1cm4gIW1hdGNoTWVkaWEgfHwgKCBcIm1hdGNoTWVkaWFcIiBpbiB3aW4gKSAmJiB3aW4ubWF0Y2hNZWRpYSggbWF0Y2hNZWRpYSApLm1hdGNoZXM7XHJcblx0XHR9XHJcblxyXG5cdFx0ZnVuY3Rpb24gZmFrZUJyZWFrcG9pbnRzKCkge1xyXG5cdFx0XHRpZiggIW1hdGNoZXNNZWRpYSgpICkge1xyXG5cdFx0XHRcdHJldHVybjtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0dmFyIGV4dHJhUGFkZGluZ1BpeGVscyA9IDIwLFxyXG5cdFx0XHRcdGNvbnRhaW5lcldpZHRoID0gJHRhYmxlLnBhcmVudCgpLndpZHRoKCksXHJcblx0XHRcdFx0cGVyc2lzdCA9IFtdLFxyXG5cdFx0XHRcdHN1bSA9IDAsXHJcblx0XHRcdFx0c3VtcyA9IFtdLFxyXG5cdFx0XHRcdHZpc2libGVOb25QZXJzaXN0YW50Q291bnQgPSAkaGVhZGVyQ2VsbHMubGVuZ3RoO1xyXG5cclxuXHRcdFx0JGhlYWRlckNlbGxzLmVhY2goZnVuY3Rpb24oIGluZGV4ICkge1xyXG5cdFx0XHRcdHZhciAkdCA9ICQoIHRoaXMgKSxcclxuXHRcdFx0XHRcdGlzUGVyc2lzdCA9ICR0LmlzKCAnW2RhdGEtdGFibGVzYXctcHJpb3JpdHk9XCJwZXJzaXN0XCJdJyApO1xyXG5cclxuXHRcdFx0XHRwZXJzaXN0LnB1c2goIGlzUGVyc2lzdCApO1xyXG5cclxuXHRcdFx0XHRzdW0gKz0gaGVhZGVyV2lkdGhzWyBpbmRleCBdICsgKCBpc1BlcnNpc3QgPyAwIDogZXh0cmFQYWRkaW5nUGl4ZWxzICk7XHJcblx0XHRcdFx0c3Vtcy5wdXNoKCBzdW0gKTtcclxuXHJcblx0XHRcdFx0Ly8gaXMgcGVyc2lzdGVudCBvciBpcyBoaWRkZW5cclxuXHRcdFx0XHRpZiggaXNQZXJzaXN0IHx8IHN1bSA+IGNvbnRhaW5lcldpZHRoICkge1xyXG5cdFx0XHRcdFx0dmlzaWJsZU5vblBlcnNpc3RhbnRDb3VudC0tO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSk7XHJcblxyXG5cdFx0XHR2YXIgbmVlZHNOb25QZXJzaXN0ZW50Q29sdW1uID0gdmlzaWJsZU5vblBlcnNpc3RhbnRDb3VudCA9PT0gMDtcclxuXHJcblx0XHRcdCRoZWFkZXJDZWxscy5lYWNoKGZ1bmN0aW9uKCBpbmRleCApIHtcclxuXHRcdFx0XHRpZiggcGVyc2lzdFsgaW5kZXggXSApIHtcclxuXHJcblx0XHRcdFx0XHQvLyBmb3IgdmlzdWFsIGJveC1zaGFkb3dcclxuXHRcdFx0XHRcdHBlcnNpc3RDb2x1bW4oIHRoaXMgKTtcclxuXHRcdFx0XHRcdHJldHVybjtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdGlmKCBzdW1zWyBpbmRleCBdIDw9IGNvbnRhaW5lcldpZHRoIHx8IG5lZWRzTm9uUGVyc2lzdGVudENvbHVtbiApIHtcclxuXHRcdFx0XHRcdG5lZWRzTm9uUGVyc2lzdGVudENvbHVtbiA9IGZhbHNlO1xyXG5cdFx0XHRcdFx0c2hvd0NvbHVtbiggdGhpcyApO1xyXG5cdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRoaWRlQ29sdW1uKCB0aGlzICk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9KTtcclxuXHJcblx0XHRcdGlmKCBzdXBwb3J0c050aENoaWxkICkge1xyXG5cdFx0XHRcdHVubWFpbnRhaW5XaWR0aHMoKTtcclxuXHRcdFx0fVxyXG5cdFx0XHQkdGFibGUudHJpZ2dlciggJ3RhYmxlc2F3Y29sdW1ucycgKTtcclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBhZHZhbmNlKCBmd2QgKXtcclxuXHRcdFx0dmFyIHBhaXIgPSBuZXh0cGFpciggZndkICk7XHJcblx0XHRcdGlmKCBjYW5BZHZhbmNlKCBwYWlyICkgKXtcclxuXHRcdFx0XHRpZiggaXNOYU4oIHBhaXJbIDAgXSApICl7XHJcblx0XHRcdFx0XHRpZiggZndkICl7XHJcblx0XHRcdFx0XHRcdHBhaXJbMF0gPSAwO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0ZWxzZSB7XHJcblx0XHRcdFx0XHRcdHBhaXJbMF0gPSAkaGVhZGVyQ2VsbHNOb1BlcnNpc3QubGVuZ3RoIC0gMTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdGlmKCBzdXBwb3J0c050aENoaWxkICkge1xyXG5cdFx0XHRcdFx0bWFpbnRhaW5XaWR0aHMoKTtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdGhpZGVDb2x1bW4oICRoZWFkZXJDZWxsc05vUGVyc2lzdC5nZXQoIHBhaXJbIDAgXSApICk7XHJcblx0XHRcdFx0c2hvd0NvbHVtbiggJGhlYWRlckNlbGxzTm9QZXJzaXN0LmdldCggcGFpclsgMSBdICkgKTtcclxuXHJcblx0XHRcdFx0JHRhYmxlLnRyaWdnZXIoICd0YWJsZXNhd2NvbHVtbnMnICk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHQkcHJldkJ0bi5hZGQoICRuZXh0QnRuICkuY2xpY2soZnVuY3Rpb24oIGUgKXtcclxuXHRcdFx0YWR2YW5jZSggISEkKCBlLnRhcmdldCApLmNsb3Nlc3QoICRuZXh0QnRuICkubGVuZ3RoICk7XHJcblx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcclxuXHRcdH0pO1xyXG5cclxuXHRcdGZ1bmN0aW9uIGdldENvb3JkKCBldmVudCwga2V5ICkge1xyXG5cdFx0XHRyZXR1cm4gKCBldmVudC50b3VjaGVzIHx8IGV2ZW50Lm9yaWdpbmFsRXZlbnQudG91Y2hlcyApWyAwIF1bIGtleSBdO1xyXG5cdFx0fVxyXG5cclxuXHRcdCR0YWJsZVxyXG5cdFx0XHQuYmluZCggXCJ0b3VjaHN0YXJ0LnN3aXBldG9nZ2xlXCIsIGZ1bmN0aW9uKCBlICl7XHJcblx0XHRcdFx0dmFyIG9yaWdpblggPSBnZXRDb29yZCggZSwgJ3BhZ2VYJyApLFxyXG5cdFx0XHRcdFx0b3JpZ2luWSA9IGdldENvb3JkKCBlLCAncGFnZVknICksXHJcblx0XHRcdFx0XHR4LFxyXG5cdFx0XHRcdFx0eTtcclxuXHJcblx0XHRcdFx0JCggd2luICkub2ZmKCBcInJlc2l6ZVwiLCBmYWtlQnJlYWtwb2ludHMgKTtcclxuXHJcblx0XHRcdFx0JCggdGhpcyApXHJcblx0XHRcdFx0XHQuYmluZCggXCJ0b3VjaG1vdmVcIiwgZnVuY3Rpb24oIGUgKXtcclxuXHRcdFx0XHRcdFx0eCA9IGdldENvb3JkKCBlLCAncGFnZVgnICk7XHJcblx0XHRcdFx0XHRcdHkgPSBnZXRDb29yZCggZSwgJ3BhZ2VZJyApO1xyXG5cdFx0XHRcdFx0XHR2YXIgY2ZnID0gVGFibGVzYXcuY29uZmlnLnN3aXBlO1xyXG5cdFx0XHRcdFx0XHRpZiggTWF0aC5hYnMoIHggLSBvcmlnaW5YICkgPiBjZmcuaG9yaXpvbnRhbFRocmVzaG9sZCAmJiBNYXRoLmFicyggeSAtIG9yaWdpblkgKSA8IGNmZy52ZXJ0aWNhbFRocmVzaG9sZCApIHtcclxuXHRcdFx0XHRcdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0XHQuYmluZCggXCJ0b3VjaGVuZC5zd2lwZXRvZ2dsZVwiLCBmdW5jdGlvbigpe1xyXG5cdFx0XHRcdFx0XHR2YXIgY2ZnID0gVGFibGVzYXcuY29uZmlnLnN3aXBlO1xyXG5cdFx0XHRcdFx0XHRpZiggTWF0aC5hYnMoIHkgLSBvcmlnaW5ZICkgPCBjZmcudmVydGljYWxUaHJlc2hvbGQgKSB7XHJcblx0XHRcdFx0XHRcdFx0aWYoIHggLSBvcmlnaW5YIDwgLTEgKiBjZmcuaG9yaXpvbnRhbFRocmVzaG9sZCApe1xyXG5cdFx0XHRcdFx0XHRcdFx0YWR2YW5jZSggdHJ1ZSApO1xyXG5cdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHRpZiggeCAtIG9yaWdpblggPiBjZmcuaG9yaXpvbnRhbFRocmVzaG9sZCApe1xyXG5cdFx0XHRcdFx0XHRcdFx0YWR2YW5jZSggZmFsc2UgKTtcclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHRcdHdpbmRvdy5zZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdFx0XHRcdCQoIHdpbiApLm9uKCBcInJlc2l6ZVwiLCBmYWtlQnJlYWtwb2ludHMgKTtcclxuXHRcdFx0XHRcdFx0fSwgMzAwKTtcclxuXHRcdFx0XHRcdFx0JCggdGhpcyApLnVuYmluZCggXCJ0b3VjaG1vdmUgdG91Y2hlbmRcIiApO1xyXG5cdFx0XHRcdFx0fSk7XHJcblxyXG5cdFx0XHR9KVxyXG5cdFx0XHQuYmluZCggXCJ0YWJsZXNhd2NvbHVtbnMuc3dpcGV0b2dnbGVcIiwgZnVuY3Rpb24oKXtcclxuXHRcdFx0XHR2YXIgY2FuR29QcmV2ID0gY2FuQWR2YW5jZSggZ2V0UHJldigpICk7XHJcblx0XHRcdFx0dmFyIGNhbkdvTmV4dCA9IGNhbkFkdmFuY2UoIGdldE5leHQoKSApO1xyXG5cdFx0XHRcdCRwcmV2QnRuWyBjYW5Hb1ByZXYgPyBcInJlbW92ZUNsYXNzXCIgOiBcImFkZENsYXNzXCIgXSggY2xhc3Nlcy5oaWRlQnRuICk7XHJcblx0XHRcdFx0JG5leHRCdG5bIGNhbkdvTmV4dCA/IFwicmVtb3ZlQ2xhc3NcIiA6IFwiYWRkQ2xhc3NcIiBdKCBjbGFzc2VzLmhpZGVCdG4gKTtcclxuXHJcblx0XHRcdFx0JHByZXZCdG4uY2xvc2VzdCggXCIuXCIgKyBjbGFzc2VzLnRvb2xiYXIgKVsgIWNhbkdvUHJldiAmJiAhY2FuR29OZXh0ID8gJ2FkZENsYXNzJyA6ICdyZW1vdmVDbGFzcycgXSggY2xhc3Nlcy5hbGxDb2x1bW5zVmlzaWJsZSApO1xyXG5cdFx0XHR9KVxyXG5cdFx0XHQuYmluZCggXCJ0YWJsZXNhd25leHQuc3dpcGV0b2dnbGVcIiwgZnVuY3Rpb24oKXtcclxuXHRcdFx0XHRhZHZhbmNlKCB0cnVlICk7XHJcblx0XHRcdH0gKVxyXG5cdFx0XHQuYmluZCggXCJ0YWJsZXNhd3ByZXYuc3dpcGV0b2dnbGVcIiwgZnVuY3Rpb24oKXtcclxuXHRcdFx0XHRhZHZhbmNlKCBmYWxzZSApO1xyXG5cdFx0XHR9IClcclxuXHRcdFx0LmJpbmQoIFwidGFibGVzYXdkZXN0cm95LnN3aXBldG9nZ2xlXCIsIGZ1bmN0aW9uKCl7XHJcblx0XHRcdFx0dmFyICR0ID0gJCggdGhpcyApO1xyXG5cclxuXHRcdFx0XHQkdC5yZW1vdmVDbGFzcyggJ3RhYmxlc2F3LXN3aXBlJyApO1xyXG5cdFx0XHRcdCR0LnByZXYoKS5maWx0ZXIoICcudGFibGVzYXctYmFyJyApLmZpbmQoICcudGFibGVzYXctYWR2YW5jZScgKS5yZW1vdmUoKTtcclxuXHRcdFx0XHQkKCB3aW4gKS5vZmYoIFwicmVzaXplXCIsIGZha2VCcmVha3BvaW50cyApO1xyXG5cclxuXHRcdFx0XHQkdC51bmJpbmQoIFwiLnN3aXBldG9nZ2xlXCIgKTtcclxuXHRcdFx0fSk7XHJcblxyXG5cdFx0ZmFrZUJyZWFrcG9pbnRzKCk7XHJcblx0XHQkKCB3aW4gKS5vbiggXCJyZXNpemVcIiwgZmFrZUJyZWFrcG9pbnRzICk7XHJcblx0fVxyXG5cclxuXHJcblxyXG5cdC8vIG9uIHRhYmxlY3JlYXRlLCBpbml0XHJcblx0JCggZG9jdW1lbnQgKS5vbiggXCJ0YWJsZXNhd2NyZWF0ZVwiLCBmdW5jdGlvbiggZSwgVGFibGVzYXcgKXtcclxuXHJcblx0XHRpZiggVGFibGVzYXcubW9kZSA9PT0gJ3N3aXBlJyApe1xyXG5cdFx0XHRjcmVhdGVTd2lwZVRhYmxlKCBUYWJsZXNhdy4kdGFibGUgKTtcclxuXHRcdH1cclxuXHJcblx0fSApO1xyXG5cclxufSggdGhpcywgalF1ZXJ5ICkpO1xyXG5cclxuOyhmdW5jdGlvbiggJCApIHtcclxuXHRmdW5jdGlvbiBnZXRTb3J0VmFsdWUoIGNlbGwgKSB7XHJcblx0XHRyZXR1cm4gJC5tYXAoIGNlbGwuY2hpbGROb2RlcywgZnVuY3Rpb24oIGVsICkge1xyXG5cdFx0XHRcdHZhciAkZWwgPSAkKCBlbCApO1xyXG5cdFx0XHRcdGlmKCAkZWwuaXMoICdpbnB1dCwgc2VsZWN0JyApICkge1xyXG5cdFx0XHRcdFx0cmV0dXJuICRlbC52YWwoKTtcclxuXHRcdFx0XHR9IGVsc2UgaWYoICRlbC5oYXNDbGFzcyggJ3RhYmxlc2F3LWNlbGwtbGFiZWwnICkgKSB7XHJcblx0XHRcdFx0XHRyZXR1cm47XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdHJldHVybiAkLnRyaW0oICRlbC50ZXh0KCkgKTtcclxuXHRcdFx0fSkuam9pbiggJycgKTtcclxuXHR9XHJcblxyXG5cdHZhciBwbHVnaW5OYW1lID0gXCJ0YWJsZXNhdy1zb3J0YWJsZVwiLFxyXG5cdFx0aW5pdFNlbGVjdG9yID0gXCJ0YWJsZVtkYXRhLVwiICsgcGx1Z2luTmFtZSArIFwiXVwiLFxyXG5cdFx0c29ydGFibGVTd2l0Y2hTZWxlY3RvciA9IFwiW2RhdGEtXCIgKyBwbHVnaW5OYW1lICsgXCItc3dpdGNoXVwiLFxyXG5cdFx0YXR0cnMgPSB7XHJcblx0XHRcdGRlZmF1bHRDb2w6IFwiZGF0YS10YWJsZXNhdy1zb3J0YWJsZS1kZWZhdWx0LWNvbFwiLFxyXG5cdFx0XHRudW1lcmljQ29sOiBcImRhdGEtdGFibGVzYXctc29ydGFibGUtbnVtZXJpY1wiXHJcblx0XHR9LFxyXG5cdFx0Y2xhc3NlcyA9IHtcclxuXHRcdFx0aGVhZDogcGx1Z2luTmFtZSArIFwiLWhlYWRcIixcclxuXHRcdFx0YXNjZW5kOiBwbHVnaW5OYW1lICsgXCItYXNjZW5kaW5nXCIsXHJcblx0XHRcdGRlc2NlbmQ6IHBsdWdpbk5hbWUgKyBcIi1kZXNjZW5kaW5nXCIsXHJcblx0XHRcdHN3aXRjaGVyOiBwbHVnaW5OYW1lICsgXCItc3dpdGNoXCIsXHJcblx0XHRcdHRhYmxlVG9vbGJhcjogJ3RhYmxlc2F3LXRvb2xiYXInLFxyXG5cdFx0XHRzb3J0QnV0dG9uOiBwbHVnaW5OYW1lICsgXCItYnRuXCJcclxuXHRcdH0sXHJcblx0XHRtZXRob2RzID0ge1xyXG5cdFx0XHRfY3JlYXRlOiBmdW5jdGlvbiggbyApe1xyXG5cdFx0XHRcdHJldHVybiAkKCB0aGlzICkuZWFjaChmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdHZhciBpbml0ID0gJCggdGhpcyApLmRhdGEoIFwiaW5pdFwiICsgcGx1Z2luTmFtZSApO1xyXG5cdFx0XHRcdFx0aWYoIGluaXQgKSB7XHJcblx0XHRcdFx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdCQoIHRoaXMgKVxyXG5cdFx0XHRcdFx0XHQuZGF0YSggXCJpbml0XCIrIHBsdWdpbk5hbWUsIHRydWUgKVxyXG5cdFx0XHRcdFx0XHQudHJpZ2dlciggXCJiZWZvcmVjcmVhdGUuXCIgKyBwbHVnaW5OYW1lIClcclxuXHRcdFx0XHRcdFx0WyBwbHVnaW5OYW1lIF0oIFwiX2luaXRcIiAsIG8gKVxyXG5cdFx0XHRcdFx0XHQudHJpZ2dlciggXCJjcmVhdGUuXCIgKyBwbHVnaW5OYW1lICk7XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH0sXHJcblx0XHRcdF9pbml0OiBmdW5jdGlvbigpe1xyXG5cdFx0XHRcdHZhciBlbCA9ICQoIHRoaXMgKSxcclxuXHRcdFx0XHRcdGhlYWRzLFxyXG5cdFx0XHRcdFx0JHN3aXRjaGVyO1xyXG5cclxuXHRcdFx0XHR2YXIgYWRkQ2xhc3NUb1RhYmxlID0gZnVuY3Rpb24oKXtcclxuXHRcdFx0XHRcdFx0ZWwuYWRkQ2xhc3MoIHBsdWdpbk5hbWUgKTtcclxuXHRcdFx0XHRcdH0sXHJcblx0XHRcdFx0XHRhZGRDbGFzc1RvSGVhZHMgPSBmdW5jdGlvbiggaCApe1xyXG5cdFx0XHRcdFx0XHQkLmVhY2goIGggLCBmdW5jdGlvbiggaSAsIHYgKXtcclxuXHRcdFx0XHRcdFx0XHQkKCB2ICkuYWRkQ2xhc3MoIGNsYXNzZXMuaGVhZCApO1xyXG5cdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdH0sXHJcblx0XHRcdFx0XHRtYWtlSGVhZHNBY3Rpb25hYmxlID0gZnVuY3Rpb24oIGggLCBmbiApe1xyXG5cdFx0XHRcdFx0XHQkLmVhY2goIGggLCBmdW5jdGlvbiggaSAsIHYgKXtcclxuXHRcdFx0XHRcdFx0XHR2YXIgYiA9ICQoIFwiPGJ1dHRvbiBjbGFzcz0nXCIgKyBjbGFzc2VzLnNvcnRCdXR0b24gKyBcIicvPlwiICk7XHJcblx0XHRcdFx0XHRcdFx0Yi5iaW5kKCBcImNsaWNrXCIgLCB7IGNvbDogdiB9ICwgZm4gKTtcclxuXHRcdFx0XHRcdFx0XHQkKCB2ICkud3JhcElubmVyKCBiICk7XHJcblx0XHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0fSxcclxuXHRcdFx0XHRcdGNsZWFyT3RoZXJzID0gZnVuY3Rpb24oIHNpYnMgKXtcclxuXHRcdFx0XHRcdFx0JC5lYWNoKCBzaWJzICwgZnVuY3Rpb24oIGkgLCB2ICl7XHJcblx0XHRcdFx0XHRcdFx0dmFyIGNvbCA9ICQoIHYgKTtcclxuXHRcdFx0XHRcdFx0XHRjb2wucmVtb3ZlQXR0ciggYXR0cnMuZGVmYXVsdENvbCApO1xyXG5cdFx0XHRcdFx0XHRcdGNvbC5yZW1vdmVDbGFzcyggY2xhc3Nlcy5hc2NlbmQgKTtcclxuXHRcdFx0XHRcdFx0XHRjb2wucmVtb3ZlQ2xhc3MoIGNsYXNzZXMuZGVzY2VuZCApO1xyXG5cdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdH0sXHJcblx0XHRcdFx0XHRoZWFkc09uQWN0aW9uID0gZnVuY3Rpb24oIGUgKXtcclxuXHRcdFx0XHRcdFx0aWYoICQoIGUudGFyZ2V0ICkuaXMoICdhW2hyZWZdJyApICkge1xyXG5cdFx0XHRcdFx0XHRcdHJldHVybjtcclxuXHRcdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdFx0ZS5zdG9wUHJvcGFnYXRpb24oKTtcclxuXHRcdFx0XHRcdFx0dmFyIGhlYWQgPSAkKCB0aGlzICkucGFyZW50KCksXHJcblx0XHRcdFx0XHRcdFx0diA9IGUuZGF0YS5jb2wsXHJcblx0XHRcdFx0XHRcdFx0bmV3U29ydFZhbHVlID0gaGVhZHMuaW5kZXgoIGhlYWQgKTtcclxuXHJcblx0XHRcdFx0XHRcdGNsZWFyT3RoZXJzKCBoZWFkLnNpYmxpbmdzKCkgKTtcclxuXHRcdFx0XHRcdFx0aWYoIGhlYWQuaGFzQ2xhc3MoIGNsYXNzZXMuZGVzY2VuZCApICl7XHJcblx0XHRcdFx0XHRcdFx0ZWxbIHBsdWdpbk5hbWUgXSggXCJzb3J0QnlcIiAsIHYgLCB0cnVlKTtcclxuXHRcdFx0XHRcdFx0XHRuZXdTb3J0VmFsdWUgKz0gJ19hc2MnO1xyXG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHRcdGVsWyBwbHVnaW5OYW1lIF0oIFwic29ydEJ5XCIgLCB2ICk7XHJcblx0XHRcdFx0XHRcdFx0bmV3U29ydFZhbHVlICs9ICdfZGVzYyc7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0aWYoICRzd2l0Y2hlciApIHtcclxuXHRcdFx0XHRcdFx0XHQkc3dpdGNoZXIuZmluZCggJ3NlbGVjdCcgKS52YWwoIG5ld1NvcnRWYWx1ZSApLnRyaWdnZXIoICdyZWZyZXNoJyApO1xyXG5cdFx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XHJcblx0XHRcdFx0XHR9LFxyXG5cdFx0XHRcdFx0aGFuZGxlRGVmYXVsdCA9IGZ1bmN0aW9uKCBoZWFkcyApe1xyXG5cdFx0XHRcdFx0XHQkLmVhY2goIGhlYWRzICwgZnVuY3Rpb24oIGlkeCAsIGVsICl7XHJcblx0XHRcdFx0XHRcdFx0dmFyICRlbCA9ICQoIGVsICk7XHJcblx0XHRcdFx0XHRcdFx0aWYoICRlbC5pcyggXCJbXCIgKyBhdHRycy5kZWZhdWx0Q29sICsgXCJdXCIgKSApe1xyXG5cdFx0XHRcdFx0XHRcdFx0aWYoICEkZWwuaGFzQ2xhc3MoIGNsYXNzZXMuZGVzY2VuZCApICkge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHQkZWwuYWRkQ2xhc3MoIGNsYXNzZXMuYXNjZW5kICk7XHJcblx0XHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdH0sXHJcblx0XHRcdFx0XHRhZGRTd2l0Y2hlciA9IGZ1bmN0aW9uKCBoZWFkcyApe1xyXG5cdFx0XHRcdFx0XHQkc3dpdGNoZXIgPSAkKCAnPGRpdj4nICkuYWRkQ2xhc3MoIGNsYXNzZXMuc3dpdGNoZXIgKS5hZGRDbGFzcyggY2xhc3Nlcy50YWJsZVRvb2xiYXIgKS5odG1sKGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdFx0XHRcdHZhciBodG1sID0gWyAnPGxhYmVsPicgKyBUYWJsZXNhdy5pMThuLnNvcnQgKyAnOicgXTtcclxuXHJcblx0XHRcdFx0XHRcdFx0aHRtbC5wdXNoKCAnPHNwYW4gY2xhc3M9XCJidG4gYnRuLXNtYWxsXCI+JiMxNjA7PHNlbGVjdD4nICk7XHJcblx0XHRcdFx0XHRcdFx0aGVhZHMuZWFjaChmdW5jdGlvbiggaiApIHtcclxuXHRcdFx0XHRcdFx0XHRcdHZhciAkdCA9ICQoIHRoaXMgKTtcclxuXHRcdFx0XHRcdFx0XHRcdHZhciBpc0RlZmF1bHRDb2wgPSAkdC5pcyggXCJbXCIgKyBhdHRycy5kZWZhdWx0Q29sICsgXCJdXCIgKTtcclxuXHRcdFx0XHRcdFx0XHRcdHZhciBpc0Rlc2NlbmRpbmcgPSAkdC5oYXNDbGFzcyggY2xhc3Nlcy5kZXNjZW5kICk7XHJcblxyXG5cdFx0XHRcdFx0XHRcdFx0dmFyIGhhc051bWVyaWNBdHRyaWJ1dGUgPSAkdC5pcyggJ1tkYXRhLXNvcnRhYmxlLW51bWVyaWNdJyApO1xyXG5cdFx0XHRcdFx0XHRcdFx0dmFyIG51bWVyaWNDb3VudCA9IDA7XHJcblx0XHRcdFx0XHRcdFx0XHQvLyBDaGVjayBvbmx5IHRoZSBmaXJzdCBmb3VyIHJvd3MgdG8gc2VlIGlmIHRoZSBjb2x1bW4gaXMgbnVtYmVycy5cclxuXHRcdFx0XHRcdFx0XHRcdHZhciBudW1lcmljQ291bnRNYXggPSA1O1xyXG5cclxuXHRcdFx0XHRcdFx0XHRcdCQoIHRoaXMuY2VsbHMgKS5zbGljZSggMCwgbnVtZXJpY0NvdW50TWF4ICkuZWFjaChmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0aWYoICFpc05hTiggcGFyc2VJbnQoIGdldFNvcnRWYWx1ZSggdGhpcyApLCAxMCApICkgKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0bnVtZXJpY0NvdW50Kys7XHJcblx0XHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0XHRcdFx0dmFyIGlzTnVtZXJpYyA9IG51bWVyaWNDb3VudCA9PT0gbnVtZXJpY0NvdW50TWF4O1xyXG5cdFx0XHRcdFx0XHRcdFx0aWYoICFoYXNOdW1lcmljQXR0cmlidXRlICkge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHQkdC5hdHRyKCBcImRhdGEtc29ydGFibGUtbnVtZXJpY1wiLCBpc051bWVyaWMgPyBcIlwiIDogXCJmYWxzZVwiICk7XHJcblx0XHRcdFx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0XHRcdFx0aHRtbC5wdXNoKCAnPG9wdGlvbicgKyAoIGlzRGVmYXVsdENvbCAmJiAhaXNEZXNjZW5kaW5nID8gJyBzZWxlY3RlZCcgOiAnJyApICsgJyB2YWx1ZT1cIicgKyBqICsgJ19hc2NcIj4nICsgJHQudGV4dCgpICsgJyAnICsgKCBpc051bWVyaWMgPyAnJiN4MjE5MTsnIDogJyhBLVopJyApICsgJzwvb3B0aW9uPicgKTtcclxuXHRcdFx0XHRcdFx0XHRcdGh0bWwucHVzaCggJzxvcHRpb24nICsgKCBpc0RlZmF1bHRDb2wgJiYgaXNEZXNjZW5kaW5nID8gJyBzZWxlY3RlZCcgOiAnJyApICsgJyB2YWx1ZT1cIicgKyBqICsgJ19kZXNjXCI+JyArICR0LnRleHQoKSArICcgJyArICggaXNOdW1lcmljID8gJyYjeDIxOTM7JyA6ICcoWi1BKScgKSArICc8L29wdGlvbj4nICk7XHJcblx0XHRcdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHRcdFx0aHRtbC5wdXNoKCAnPC9zZWxlY3Q+PC9zcGFuPjwvbGFiZWw+JyApO1xyXG5cclxuXHRcdFx0XHRcdFx0XHRyZXR1cm4gaHRtbC5qb2luKCcnKTtcclxuXHRcdFx0XHRcdFx0fSk7XHJcblxyXG5cdFx0XHRcdFx0XHR2YXIgJHRvb2xiYXIgPSBlbC5wcmV2KCkuZmlsdGVyKCAnLnRhYmxlc2F3LWJhcicgKSxcclxuXHRcdFx0XHRcdFx0XHQkZmlyc3RDaGlsZCA9ICR0b29sYmFyLmNoaWxkcmVuKCkuZXEoIDAgKTtcclxuXHJcblx0XHRcdFx0XHRcdGlmKCAkZmlyc3RDaGlsZC5sZW5ndGggKSB7XHJcblx0XHRcdFx0XHRcdFx0JHN3aXRjaGVyLmluc2VydEJlZm9yZSggJGZpcnN0Q2hpbGQgKTtcclxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0XHQkc3dpdGNoZXIuYXBwZW5kVG8oICR0b29sYmFyICk7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0JHN3aXRjaGVyLmZpbmQoICcuYnRuJyApLnRhYmxlc2F3YnRuKCk7XHJcblx0XHRcdFx0XHRcdCRzd2l0Y2hlci5maW5kKCAnc2VsZWN0JyApLm9uKCAnY2hhbmdlJywgZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0XHRcdFx0dmFyIHZhbCA9ICQoIHRoaXMgKS52YWwoKS5zcGxpdCggJ18nICksXHJcblx0XHRcdFx0XHRcdFx0XHRoZWFkID0gaGVhZHMuZXEoIHZhbFsgMCBdICk7XHJcblxyXG5cdFx0XHRcdFx0XHRcdGNsZWFyT3RoZXJzKCBoZWFkLnNpYmxpbmdzKCkgKTtcclxuXHRcdFx0XHRcdFx0XHRlbFsgcGx1Z2luTmFtZSBdKCAnc29ydEJ5JywgaGVhZC5nZXQoIDAgKSwgdmFsWyAxIF0gPT09ICdhc2MnICk7XHJcblx0XHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0fTtcclxuXHJcblx0XHRcdFx0XHRhZGRDbGFzc1RvVGFibGUoKTtcclxuXHRcdFx0XHRcdGhlYWRzID0gZWwuZmluZCggXCJ0aGVhZCB0aFtkYXRhLVwiICsgcGx1Z2luTmFtZSArIFwiLWNvbF1cIiApO1xyXG5cdFx0XHRcdFx0YWRkQ2xhc3NUb0hlYWRzKCBoZWFkcyApO1xyXG5cdFx0XHRcdFx0bWFrZUhlYWRzQWN0aW9uYWJsZSggaGVhZHMgLCBoZWFkc09uQWN0aW9uICk7XHJcblx0XHRcdFx0XHRoYW5kbGVEZWZhdWx0KCBoZWFkcyApO1xyXG5cclxuXHRcdFx0XHRcdGlmKCBlbC5pcyggc29ydGFibGVTd2l0Y2hTZWxlY3RvciApICkge1xyXG5cdFx0XHRcdFx0XHRhZGRTd2l0Y2hlciggaGVhZHMsIGVsLmZpbmQoJ3Rib2R5IHRyOm50aC1jaGlsZCgtbiszKScpICk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdH0sXHJcblx0XHRcdGdldENvbHVtbk51bWJlcjogZnVuY3Rpb24oIGNvbCApe1xyXG5cdFx0XHRcdHJldHVybiAkKCBjb2wgKS5wcmV2QWxsKCkubGVuZ3RoO1xyXG5cdFx0XHR9LFxyXG5cdFx0XHRnZXRUYWJsZVJvd3M6IGZ1bmN0aW9uKCl7XHJcblx0XHRcdFx0cmV0dXJuICQoIHRoaXMgKS5maW5kKCBcInRib2R5IHRyXCIgKTtcclxuXHRcdFx0fSxcclxuXHRcdFx0c29ydFJvd3M6IGZ1bmN0aW9uKCByb3dzICwgY29sTnVtICwgYXNjZW5kaW5nLCBjb2wgKXtcclxuXHRcdFx0XHR2YXIgY2VsbHMsIGZuLCBzb3J0ZWQ7XHJcblx0XHRcdFx0dmFyIGdldENlbGxzID0gZnVuY3Rpb24oIHJvd3MgKXtcclxuXHRcdFx0XHRcdFx0dmFyIGNlbGxzID0gW107XHJcblx0XHRcdFx0XHRcdCQuZWFjaCggcm93cyAsIGZ1bmN0aW9uKCBpICwgciApe1xyXG5cdFx0XHRcdFx0XHRcdHZhciBlbGVtZW50ID0gJCggciApLmNoaWxkcmVuKCkuZ2V0KCBjb2xOdW0gKTtcclxuXHRcdFx0XHRcdFx0XHRjZWxscy5wdXNoKHtcclxuXHRcdFx0XHRcdFx0XHRcdGVsZW1lbnQ6IGVsZW1lbnQsXHJcblx0XHRcdFx0XHRcdFx0XHRjZWxsOiBnZXRTb3J0VmFsdWUoIGVsZW1lbnQgKSxcclxuXHRcdFx0XHRcdFx0XHRcdHJvd051bTogaVxyXG5cdFx0XHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdFx0cmV0dXJuIGNlbGxzO1xyXG5cdFx0XHRcdFx0fSxcclxuXHRcdFx0XHRcdGdldFNvcnRGeG4gPSBmdW5jdGlvbiggYXNjZW5kaW5nLCBmb3JjZU51bWVyaWMgKXtcclxuXHRcdFx0XHRcdFx0dmFyIGZuLFxyXG5cdFx0XHRcdFx0XHRcdHJlZ2V4ID0gL1teXFwtXFwrXFxkXFwuXS9nO1xyXG5cdFx0XHRcdFx0XHRpZiggYXNjZW5kaW5nICl7XHJcblx0XHRcdFx0XHRcdFx0Zm4gPSBmdW5jdGlvbiggYSAsIGIgKXtcclxuXHRcdFx0XHRcdFx0XHRcdGlmKCBmb3JjZU51bWVyaWMgKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdHJldHVybiBwYXJzZUZsb2F0KCBhLmNlbGwucmVwbGFjZSggcmVnZXgsICcnICkgKSAtIHBhcnNlRmxvYXQoIGIuY2VsbC5yZXBsYWNlKCByZWdleCwgJycgKSApO1xyXG5cdFx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuIGEuY2VsbC50b0xvd2VyQ2FzZSgpID4gYi5jZWxsLnRvTG93ZXJDYXNlKCkgPyAxIDogLTE7XHJcblx0XHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0fTtcclxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0XHRmbiA9IGZ1bmN0aW9uKCBhICwgYiApe1xyXG5cdFx0XHRcdFx0XHRcdFx0aWYoIGZvcmNlTnVtZXJpYyApIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuIHBhcnNlRmxvYXQoIGIuY2VsbC5yZXBsYWNlKCByZWdleCwgJycgKSApIC0gcGFyc2VGbG9hdCggYS5jZWxsLnJlcGxhY2UoIHJlZ2V4LCAnJyApICk7XHJcblx0XHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gYS5jZWxsLnRvTG93ZXJDYXNlKCkgPCBiLmNlbGwudG9Mb3dlckNhc2UoKSA/IDEgOiAtMTtcclxuXHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHR9O1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdHJldHVybiBmbjtcclxuXHRcdFx0XHRcdH0sXHJcblx0XHRcdFx0XHRhcHBseVRvUm93cyA9IGZ1bmN0aW9uKCBzb3J0ZWQgLCByb3dzICl7XHJcblx0XHRcdFx0XHRcdHZhciBuZXdSb3dzID0gW10sIGksIGwsIGN1cjtcclxuXHRcdFx0XHRcdFx0Zm9yKCBpID0gMCwgbCA9IHNvcnRlZC5sZW5ndGggOyBpIDwgbCA7IGkrKyApe1xyXG5cdFx0XHRcdFx0XHRcdGN1ciA9IHNvcnRlZFsgaSBdLnJvd051bTtcclxuXHRcdFx0XHRcdFx0XHRuZXdSb3dzLnB1c2goIHJvd3NbY3VyXSApO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdHJldHVybiBuZXdSb3dzO1xyXG5cdFx0XHRcdFx0fTtcclxuXHJcblx0XHRcdFx0Y2VsbHMgPSBnZXRDZWxscyggcm93cyApO1xyXG5cdFx0XHRcdHZhciBjdXN0b21GbiA9ICQoIGNvbCApLmRhdGEoICd0YWJsZXNhdy1zb3J0JyApO1xyXG5cdFx0XHRcdGZuID0gKCBjdXN0b21GbiAmJiB0eXBlb2YgY3VzdG9tRm4gPT09IFwiZnVuY3Rpb25cIiA/IGN1c3RvbUZuKCBhc2NlbmRpbmcgKSA6IGZhbHNlICkgfHxcclxuXHRcdFx0XHRcdGdldFNvcnRGeG4oIGFzY2VuZGluZywgJCggY29sICkuaXMoICdbZGF0YS1zb3J0YWJsZS1udW1lcmljXScgKSAmJiAhJCggY29sICkuaXMoICdbZGF0YS1zb3J0YWJsZS1udW1lcmljPVwiZmFsc2VcIl0nICkgKTtcclxuXHRcdFx0XHRzb3J0ZWQgPSBjZWxscy5zb3J0KCBmbiApO1xyXG5cdFx0XHRcdHJvd3MgPSBhcHBseVRvUm93cyggc29ydGVkICwgcm93cyApO1xyXG5cdFx0XHRcdHJldHVybiByb3dzO1xyXG5cdFx0XHR9LFxyXG5cdFx0XHRyZXBsYWNlVGFibGVSb3dzOiBmdW5jdGlvbiggcm93cyApe1xyXG5cdFx0XHRcdHZhciBlbCA9ICQoIHRoaXMgKSxcclxuXHRcdFx0XHRcdGJvZHkgPSBlbC5maW5kKCBcInRib2R5XCIgKTtcclxuXHRcdFx0XHRib2R5Lmh0bWwoIHJvd3MgKTtcclxuXHRcdFx0fSxcclxuXHRcdFx0bWFrZUNvbERlZmF1bHQ6IGZ1bmN0aW9uKCBjb2wgLCBhICl7XHJcblx0XHRcdFx0dmFyIGMgPSAkKCBjb2wgKTtcclxuXHRcdFx0XHRjLmF0dHIoIGF0dHJzLmRlZmF1bHRDb2wgLCBcInRydWVcIiApO1xyXG5cdFx0XHRcdGlmKCBhICl7XHJcblx0XHRcdFx0XHRjLnJlbW92ZUNsYXNzKCBjbGFzc2VzLmRlc2NlbmQgKTtcclxuXHRcdFx0XHRcdGMuYWRkQ2xhc3MoIGNsYXNzZXMuYXNjZW5kICk7XHJcblx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdGMucmVtb3ZlQ2xhc3MoIGNsYXNzZXMuYXNjZW5kICk7XHJcblx0XHRcdFx0XHRjLmFkZENsYXNzKCBjbGFzc2VzLmRlc2NlbmQgKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0sXHJcblx0XHRcdHNvcnRCeTogZnVuY3Rpb24oIGNvbCAsIGFzY2VuZGluZyApe1xyXG5cdFx0XHRcdHZhciBlbCA9ICQoIHRoaXMgKSwgY29sTnVtLCByb3dzO1xyXG5cclxuXHRcdFx0XHRjb2xOdW0gPSBlbFsgcGx1Z2luTmFtZSBdKCBcImdldENvbHVtbk51bWJlclwiICwgY29sICk7XHJcblx0XHRcdFx0cm93cyA9IGVsWyBwbHVnaW5OYW1lIF0oIFwiZ2V0VGFibGVSb3dzXCIgKTtcclxuXHRcdFx0XHRyb3dzID0gZWxbIHBsdWdpbk5hbWUgXSggXCJzb3J0Um93c1wiICwgcm93cyAsIGNvbE51bSAsIGFzY2VuZGluZywgY29sICk7XHJcblx0XHRcdFx0ZWxbIHBsdWdpbk5hbWUgXSggXCJyZXBsYWNlVGFibGVSb3dzXCIgLCByb3dzICk7XHJcblx0XHRcdFx0ZWxbIHBsdWdpbk5hbWUgXSggXCJtYWtlQ29sRGVmYXVsdFwiICwgY29sICwgYXNjZW5kaW5nICk7XHJcblx0XHRcdH1cclxuXHRcdH07XHJcblxyXG5cdC8vIENvbGxlY3Rpb24gbWV0aG9kLlxyXG5cdCQuZm5bIHBsdWdpbk5hbWUgXSA9IGZ1bmN0aW9uKCBhcnJnICkge1xyXG5cdFx0dmFyIGFyZ3MgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbCggYXJndW1lbnRzICwgMSksXHJcblx0XHRcdHJldHVyblZhbDtcclxuXHJcblx0XHQvLyBpZiBpdCdzIGEgbWV0aG9kXHJcblx0XHRpZiggYXJyZyAmJiB0eXBlb2YoIGFycmcgKSA9PT0gXCJzdHJpbmdcIiApe1xyXG5cdFx0XHRyZXR1cm5WYWwgPSAkLmZuWyBwbHVnaW5OYW1lIF0ucHJvdG90eXBlWyBhcnJnIF0uYXBwbHkoIHRoaXNbMF0sIGFyZ3MgKTtcclxuXHRcdFx0cmV0dXJuICh0eXBlb2YgcmV0dXJuVmFsICE9PSBcInVuZGVmaW5lZFwiKT8gcmV0dXJuVmFsOiQodGhpcyk7XHJcblx0XHR9XHJcblx0XHQvLyBjaGVjayBpbml0XHJcblx0XHRpZiggISQoIHRoaXMgKS5kYXRhKCBwbHVnaW5OYW1lICsgXCJkYXRhXCIgKSApe1xyXG5cdFx0XHQkKCB0aGlzICkuZGF0YSggcGx1Z2luTmFtZSArIFwiYWN0aXZlXCIsIHRydWUgKTtcclxuXHRcdFx0JC5mblsgcGx1Z2luTmFtZSBdLnByb3RvdHlwZS5fY3JlYXRlLmNhbGwoIHRoaXMgLCBhcnJnICk7XHJcblx0XHR9XHJcblx0XHRyZXR1cm4gJCh0aGlzKTtcclxuXHR9O1xyXG5cdC8vIGFkZCBtZXRob2RzXHJcblx0JC5leHRlbmQoICQuZm5bIHBsdWdpbk5hbWUgXS5wcm90b3R5cGUsIG1ldGhvZHMgKTtcclxuXHJcblx0JCggZG9jdW1lbnQgKS5vbiggXCJ0YWJsZXNhd2NyZWF0ZVwiLCBmdW5jdGlvbiggZSwgVGFibGVzYXcgKSB7XHJcblx0XHRpZiggVGFibGVzYXcuJHRhYmxlLmlzKCBpbml0U2VsZWN0b3IgKSApIHtcclxuXHRcdFx0VGFibGVzYXcuJHRhYmxlWyBwbHVnaW5OYW1lIF0oKTtcclxuXHRcdH1cclxuXHR9KTtcclxuXHJcbn0oIGpRdWVyeSApKTtcclxuXHJcbjsoZnVuY3Rpb24oIHdpbiwgJCwgdW5kZWZpbmVkICl7XHJcblxyXG5cdHZhciBNTSA9IHtcclxuXHRcdGF0dHI6IHtcclxuXHRcdFx0aW5pdDogJ2RhdGEtdGFibGVzYXctbWluaW1hcCdcclxuXHRcdH1cclxuXHR9O1xyXG5cclxuXHRmdW5jdGlvbiBjcmVhdGVNaW5pTWFwKCAkdGFibGUgKXtcclxuXHJcblx0XHR2YXIgJGJ0bnMgPSAkKCAnPGRpdiBjbGFzcz1cInRhYmxlc2F3LWFkdmFuY2UgbWluaW1hcFwiPicgKSxcclxuXHRcdFx0JGRvdE5hdiA9ICQoICc8dWwgY2xhc3M9XCJ0YWJsZXNhdy1hZHZhbmNlLWRvdHNcIj4nICkuYXBwZW5kVG8oICRidG5zICksXHJcblx0XHRcdGhpZGVEb3QgPSAndGFibGVzYXctYWR2YW5jZS1kb3RzLWhpZGUnLFxyXG5cdFx0XHQkaGVhZGVyQ2VsbHMgPSAkdGFibGUuZmluZCggJ3RoZWFkIHRoJyApO1xyXG5cclxuXHRcdC8vIHBvcHVsYXRlIGRvdHNcclxuXHRcdCRoZWFkZXJDZWxscy5lYWNoKGZ1bmN0aW9uKCl7XHJcblx0XHRcdCRkb3ROYXYuYXBwZW5kKCAnPGxpPjxpPjwvaT48L2xpPicgKTtcclxuXHRcdH0pO1xyXG5cclxuXHRcdCRidG5zLmFwcGVuZFRvKCAkdGFibGUucHJldigpLmZpbHRlciggJy50YWJsZXNhdy1iYXInICkgKTtcclxuXHJcblx0XHRmdW5jdGlvbiBzaG93TWluaW1hcCggJHRhYmxlICkge1xyXG5cdFx0XHR2YXIgbXEgPSAkdGFibGUuYXR0ciggTU0uYXR0ci5pbml0ICk7XHJcblx0XHRcdHJldHVybiAhbXEgfHwgd2luLm1hdGNoTWVkaWEgJiYgd2luLm1hdGNoTWVkaWEoIG1xICkubWF0Y2hlcztcclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBzaG93SGlkZU5hdigpe1xyXG5cdFx0XHRpZiggIXNob3dNaW5pbWFwKCAkdGFibGUgKSApIHtcclxuXHRcdFx0XHQkYnRucy5oaWRlKCk7XHJcblx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHR9XHJcblx0XHRcdCRidG5zLnNob3coKTtcclxuXHJcblx0XHRcdC8vIHNob3cvaGlkZSBkb3RzXHJcblx0XHRcdHZhciBkb3RzID0gJGRvdE5hdi5maW5kKCBcImxpXCIgKS5yZW1vdmVDbGFzcyggaGlkZURvdCApO1xyXG5cdFx0XHQkdGFibGUuZmluZCggXCJ0aGVhZCB0aFwiICkuZWFjaChmdW5jdGlvbihpKXtcclxuXHRcdFx0XHRpZiggJCggdGhpcyApLmNzcyggXCJkaXNwbGF5XCIgKSA9PT0gXCJub25lXCIgKXtcclxuXHRcdFx0XHRcdGRvdHMuZXEoIGkgKS5hZGRDbGFzcyggaGlkZURvdCApO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSk7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gcnVuIG9uIGluaXQgYW5kIHJlc2l6ZVxyXG5cdFx0c2hvd0hpZGVOYXYoKTtcclxuXHRcdCQoIHdpbiApLm9uKCBcInJlc2l6ZVwiLCBzaG93SGlkZU5hdiApO1xyXG5cclxuXHJcblx0XHQkdGFibGVcclxuXHRcdFx0LmJpbmQoIFwidGFibGVzYXdjb2x1bW5zLm1pbmltYXBcIiwgZnVuY3Rpb24oKXtcclxuXHRcdFx0XHRzaG93SGlkZU5hdigpO1xyXG5cdFx0XHR9KVxyXG5cdFx0XHQuYmluZCggXCJ0YWJsZXNhd2Rlc3Ryb3kubWluaW1hcFwiLCBmdW5jdGlvbigpe1xyXG5cdFx0XHRcdHZhciAkdCA9ICQoIHRoaXMgKTtcclxuXHJcblx0XHRcdFx0JHQucHJldigpLmZpbHRlciggJy50YWJsZXNhdy1iYXInICkuZmluZCggJy50YWJsZXNhdy1hZHZhbmNlJyApLnJlbW92ZSgpO1xyXG5cdFx0XHRcdCQoIHdpbiApLm9mZiggXCJyZXNpemVcIiwgc2hvd0hpZGVOYXYgKTtcclxuXHJcblx0XHRcdFx0JHQudW5iaW5kKCBcIi5taW5pbWFwXCIgKTtcclxuXHRcdFx0fSk7XHJcblx0fVxyXG5cclxuXHJcblxyXG5cdC8vIG9uIHRhYmxlY3JlYXRlLCBpbml0XHJcblx0JCggZG9jdW1lbnQgKS5vbiggXCJ0YWJsZXNhd2NyZWF0ZVwiLCBmdW5jdGlvbiggZSwgVGFibGVzYXcgKXtcclxuXHJcblx0XHRpZiggKCBUYWJsZXNhdy5tb2RlID09PSAnc3dpcGUnIHx8IFRhYmxlc2F3Lm1vZGUgPT09ICdjb2x1bW50b2dnbGUnICkgJiYgVGFibGVzYXcuJHRhYmxlLmlzKCAnWyAnICsgTU0uYXR0ci5pbml0ICsgJ10nICkgKXtcclxuXHRcdFx0Y3JlYXRlTWluaU1hcCggVGFibGVzYXcuJHRhYmxlICk7XHJcblx0XHR9XHJcblxyXG5cdH0gKTtcclxuXHJcbn0oIHRoaXMsIGpRdWVyeSApKTtcclxuXHJcbjsoZnVuY3Rpb24oIHdpbiwgJCApIHtcclxuXHJcblx0dmFyIFMgPSB7XHJcblx0XHRzZWxlY3RvcnM6IHtcclxuXHRcdFx0aW5pdDogJ3RhYmxlW2RhdGEtdGFibGVzYXctbW9kZS1zd2l0Y2hdJ1xyXG5cdFx0fSxcclxuXHRcdGF0dHJpYnV0ZXM6IHtcclxuXHRcdFx0ZXhjbHVkZU1vZGU6ICdkYXRhLXRhYmxlc2F3LW1vZGUtZXhjbHVkZSdcclxuXHRcdH0sXHJcblx0XHRjbGFzc2VzOiB7XHJcblx0XHRcdG1haW46ICd0YWJsZXNhdy1tb2Rlc3dpdGNoJyxcclxuXHRcdFx0dG9vbGJhcjogJ3RhYmxlc2F3LXRvb2xiYXInXHJcblx0XHR9LFxyXG5cdFx0bW9kZXM6IFsgJ3N0YWNrJywgJ3N3aXBlJywgJ2NvbHVtbnRvZ2dsZScgXSxcclxuXHRcdGluaXQ6IGZ1bmN0aW9uKCB0YWJsZSApIHtcclxuXHRcdFx0dmFyICR0YWJsZSA9ICQoIHRhYmxlICksXHJcblx0XHRcdFx0aWdub3JlTW9kZSA9ICR0YWJsZS5hdHRyKCBTLmF0dHJpYnV0ZXMuZXhjbHVkZU1vZGUgKSxcclxuXHRcdFx0XHQkdG9vbGJhciA9ICR0YWJsZS5wcmV2KCkuZmlsdGVyKCAnLnRhYmxlc2F3LWJhcicgKSxcclxuXHRcdFx0XHRtb2RlVmFsID0gJycsXHJcblx0XHRcdFx0JHN3aXRjaGVyID0gJCggJzxkaXY+JyApLmFkZENsYXNzKCBTLmNsYXNzZXMubWFpbiArICcgJyArIFMuY2xhc3Nlcy50b29sYmFyICkuaHRtbChmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdHZhciBodG1sID0gWyAnPGxhYmVsPicgKyBUYWJsZXNhdy5pMThuLmNvbHVtbnMgKyAnOicgXSxcclxuXHRcdFx0XHRcdFx0ZGF0YU1vZGUgPSAkdGFibGUuYXR0ciggJ2RhdGEtdGFibGVzYXctbW9kZScgKSxcclxuXHRcdFx0XHRcdFx0aXNTZWxlY3RlZDtcclxuXHJcblx0XHRcdFx0XHRodG1sLnB1c2goICc8c3BhbiBjbGFzcz1cImJ0biBidG4tc21hbGxcIj4mIzE2MDs8c2VsZWN0PicgKTtcclxuXHRcdFx0XHRcdGZvciggdmFyIGo9MCwgayA9IFMubW9kZXMubGVuZ3RoOyBqPGs7IGorKyApIHtcclxuXHRcdFx0XHRcdFx0aWYoIGlnbm9yZU1vZGUgJiYgaWdub3JlTW9kZS50b0xvd2VyQ2FzZSgpID09PSBTLm1vZGVzWyBqIF0gKSB7XHJcblx0XHRcdFx0XHRcdFx0Y29udGludWU7XHJcblx0XHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHRcdGlzU2VsZWN0ZWQgPSBkYXRhTW9kZSA9PT0gUy5tb2Rlc1sgaiBdO1xyXG5cclxuXHRcdFx0XHRcdFx0aWYoIGlzU2VsZWN0ZWQgKSB7XHJcblx0XHRcdFx0XHRcdFx0bW9kZVZhbCA9IFMubW9kZXNbIGogXTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdFx0aHRtbC5wdXNoKCAnPG9wdGlvbicgK1xyXG5cdFx0XHRcdFx0XHRcdCggaXNTZWxlY3RlZCA/ICcgc2VsZWN0ZWQnIDogJycgKSArXHJcblx0XHRcdFx0XHRcdFx0JyB2YWx1ZT1cIicgKyBTLm1vZGVzWyBqIF0gKyAnXCI+JyArIFRhYmxlc2F3LmkxOG4ubW9kZXNbIGogXSArICc8L29wdGlvbj4nICk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRodG1sLnB1c2goICc8L3NlbGVjdD48L3NwYW4+PC9sYWJlbD4nICk7XHJcblxyXG5cdFx0XHRcdFx0cmV0dXJuIGh0bWwuam9pbignJyk7XHJcblx0XHRcdFx0fSk7XHJcblxyXG5cdFx0XHR2YXIgJG90aGVyVG9vbGJhckl0ZW1zID0gJHRvb2xiYXIuZmluZCggJy50YWJsZXNhdy1hZHZhbmNlJyApLmVxKCAwICk7XHJcblx0XHRcdGlmKCAkb3RoZXJUb29sYmFySXRlbXMubGVuZ3RoICkge1xyXG5cdFx0XHRcdCRzd2l0Y2hlci5pbnNlcnRCZWZvcmUoICRvdGhlclRvb2xiYXJJdGVtcyApO1xyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdCRzd2l0Y2hlci5hcHBlbmRUbyggJHRvb2xiYXIgKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0JHN3aXRjaGVyLmZpbmQoICcuYnRuJyApLnRhYmxlc2F3YnRuKCk7XHJcblx0XHRcdCRzd2l0Y2hlci5maW5kKCAnc2VsZWN0JyApLmJpbmQoICdjaGFuZ2UnLCBTLm9uTW9kZUNoYW5nZSApO1xyXG5cdFx0fSxcclxuXHRcdG9uTW9kZUNoYW5nZTogZnVuY3Rpb24oKSB7XHJcblx0XHRcdHZhciAkdCA9ICQoIHRoaXMgKSxcclxuXHRcdFx0XHQkc3dpdGNoZXIgPSAkdC5jbG9zZXN0KCAnLicgKyBTLmNsYXNzZXMubWFpbiApLFxyXG5cdFx0XHRcdCR0YWJsZSA9ICR0LmNsb3Nlc3QoICcudGFibGVzYXctYmFyJyApLm5leHRVbnRpbCggJHRhYmxlICkuZXEoIDAgKSxcclxuXHRcdFx0XHR2YWwgPSAkdC52YWwoKTtcclxuXHJcblx0XHRcdCRzd2l0Y2hlci5yZW1vdmUoKTtcclxuXHRcdFx0JHRhYmxlLmRhdGEoICd0YWJsZScgKS5kZXN0cm95KCk7XHJcblxyXG5cdFx0XHQkdGFibGUuYXR0ciggJ2RhdGEtdGFibGVzYXctbW9kZScsIHZhbCApO1xyXG5cdFx0XHQkdGFibGUudGFibGUoKTtcclxuXHRcdH1cclxuXHR9O1xyXG5cclxuXHQkKCB3aW4uZG9jdW1lbnQgKS5vbiggXCJ0YWJsZXNhd2NyZWF0ZVwiLCBmdW5jdGlvbiggZSwgVGFibGVzYXcgKSB7XHJcblx0XHRpZiggVGFibGVzYXcuJHRhYmxlLmlzKCBTLnNlbGVjdG9ycy5pbml0ICkgKSB7XHJcblx0XHRcdFMuaW5pdCggVGFibGVzYXcudGFibGUgKTtcclxuXHRcdH1cclxuXHR9KTtcclxuXHJcbn0pKCB0aGlzLCBqUXVlcnkgKTsiLCIkLnZhbGlkYXRvci5tZXRob2RzLnJhbmdlID0gZnVuY3Rpb24gKHZhbHVlLCBlbGVtZW50LCBwYXJhbSkge1xyXG4gICAgdmFyIGdsb2JhbGl6ZWRWYWx1ZSA9IHZhbHVlLnJlcGxhY2UoXCIsXCIsIFwiLlwiKTtcclxuICAgIHJldHVybiB0aGlzLm9wdGlvbmFsKGVsZW1lbnQpIHx8IChnbG9iYWxpemVkVmFsdWUgPj0gcGFyYW1bMF0gJiYgZ2xvYmFsaXplZFZhbHVlIDw9IHBhcmFtWzFdKTtcclxufVxyXG5cclxuJC52YWxpZGF0b3IubWV0aG9kcy5udW1iZXIgPSBmdW5jdGlvbiAodmFsdWUsIGVsZW1lbnQpIHtcclxuICAgIHJldHVybiB0aGlzLm9wdGlvbmFsKGVsZW1lbnQpIHx8IC9eLT8oPzpcXGQrfFxcZHsxLDN9KD86W1xcc1xcLixdXFxkezN9KSspKD86W1xcLixdXFxkKyk/JC8udGVzdCh2YWx1ZSk7XHJcbn0iLCJpZiAoIUFycmF5LnByb3RvdHlwZS5maW5kKSB7XHJcbiAgICBBcnJheS5wcm90b3R5cGUuZmluZCA9IGZ1bmN0aW9uIChwcmVkaWNhdGUpIHtcclxuICAgICAgICAndXNlIHN0cmljdCc7XHJcbiAgICAgICAgaWYgKHRoaXMgPT0gbnVsbCkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdBcnJheS5wcm90b3R5cGUuZmluZCBjYWxsZWQgb24gbnVsbCBvciB1bmRlZmluZWQnKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHR5cGVvZiBwcmVkaWNhdGUgIT09ICdmdW5jdGlvbicpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcigncHJlZGljYXRlIG11c3QgYmUgYSBmdW5jdGlvbicpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgbGlzdCA9IE9iamVjdCh0aGlzKTtcclxuICAgICAgICB2YXIgbGVuZ3RoID0gbGlzdC5sZW5ndGggPj4+IDA7XHJcbiAgICAgICAgdmFyIHRoaXNBcmcgPSBhcmd1bWVudHNbMV07XHJcbiAgICAgICAgdmFyIHZhbHVlO1xyXG5cclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIHZhbHVlID0gbGlzdFtpXTtcclxuICAgICAgICAgICAgaWYgKHByZWRpY2F0ZS5jYWxsKHRoaXNBcmcsIHZhbHVlLCBpLCBsaXN0KSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XHJcbiAgICB9O1xyXG59XHJcblxyXG5pZiAoIURhdGUucHJvdG90eXBlLnRvU2hvcnREYXRlU3RyaW5nKSB7XHJcbiAgICBEYXRlLnByb3RvdHlwZS50b1Nob3J0RGF0ZVN0cmluZyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5nZXRGdWxsWWVhcigpICtcclxuICAgICAgICAgICAgXCItXCIgK1xyXG4gICAgICAgICAgICAoXCIwXCIgKyAodGhpcy5nZXRNb250aCgpICsgMSkpLnNsaWNlKC0yKSArXHJcbiAgICAgICAgICAgIFwiLVwiICtcclxuICAgICAgICAgICAgKFwiMFwiICsgdGhpcy5nZXREYXRlKCkpLnNsaWNlKC0yKTtcclxuICAgIH07XHJcbn1cclxuXHJcbnZhciBHcm9Db21tb24gPSBHcm9Db21tb24gfHwgKGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICB2YXIgZGF0ZUZyb21JU08gPSBmdW5jdGlvbiAocykge1xyXG4gICAgICAgIHMgPSBzLnNwbGl0KC9cXEQvKTtcclxuICAgICAgICByZXR1cm4gbmV3IERhdGUoRGF0ZS5VVEMoc1swXSwgLS1zWzFdIHx8ICcnLCBzWzJdIHx8ICcnLCBzWzNdIHx8ICcnLCBzWzRdIHx8ICcnLCBzWzVdIHx8ICcnLCBzWzZdIHx8ICcnKSk7XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBwYXJzZUludDMyID0gZnVuY3Rpb24gKHMpIHtcclxuICAgICAgICB2YXIgdmFsdWUgPSBwYXJzZUludChzKTtcclxuICAgICAgICBpZiAoaXNOYU4odmFsdWUpKSB2YWx1ZSA9IDA7XHJcblxyXG4gICAgICAgIHJldHVybiB2YWx1ZTtcclxuICAgIH07XHJcblxyXG4gICAgdmFyIGJsb2NrVUkgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgLy9CbG9jayBVSVxyXG4gICAgfTtcclxuXHJcbiAgICB2YXIgdW5ibG9ja1VJID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIC8vVW5ibG9jayBVSVxyXG4gICAgfTtcclxuICAgIHZhciBoYW5kbGVFeHRlcm5hbExpbmsgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyICRhID0gJCgnYScpO1xyXG4gICAgICAgICRhLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgaHJlZiA9ICQodGhpcykuYXR0cignaHJlZicpO1xyXG4gICAgICAgICAgICB2YXIgdGFyZ2V0ID0gJCh0aGlzKS5hdHRyKFwidGFyZ2V0XCIpO1xyXG5cclxuICAgICAgICAgICAgaWYgKCEhdGFyZ2V0KSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmICgkKHRoaXMpLmNsb3Nlc3QoXCIuYWdyaS1jaGFydF9fY29udGVudFwiKS5sZW5ndGgpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgdmFyIGlzRXh0ZXJuYWxMaW5rID0gaHJlZiAhPSB1bmRlZmluZWQgJiYgaHJlZi50cmltKCkuaW5kZXhPZihcIi9cIikgIT09IDAgJiYgaHJlZi50cmltKCkgIT09IFwiI1wiICYmIGhyZWYudHJpbSgpLmluZGV4T2YoXCJzY3JpcHQ6dm9pZFwiKSAmJiBocmVmLnRyaW0oKS5pbmRleE9mKFwic2NyaXB0OndpbmRvdy5wcmludCgpXCIpIDwgMDtcclxuICAgICAgICAgICAgaWYgKGlzRXh0ZXJuYWxMaW5rKSB7XHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLmF0dHIoXCJ0YXJnZXRcIiwgXCJfYmxhbmtcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH07XHJcblxyXG4gICAgdmFyIGdldElkeE9mRWxlbWVudCA9IGZ1bmN0aW9uICgkZWxlbWVudCwgJGFycmF5KSB7XHJcbiAgICAgICAgcmV0dXJuICRhcnJheS5pbmRleCgkZWxlbWVudCk7XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBkaXNhYmxlT3JFbmFibGVFbGVtZW50ID0gZnVuY3Rpb24gKGVsZW1lbnRTZWxlY3RvciwgJGN1cnJlbnRJbnB1dCwgJHJlY3Vyc2l2ZSkge1xyXG4gICAgICAgIHZhciBhZ3JlZW1lbnRFbGVtZW50cyA9ICQoZWxlbWVudFNlbGVjdG9yKTtcclxuICAgICAgICB2YXIgJGN1cnJlbnRFbGVtZW50ID0gJGN1cnJlbnRJbnB1dC5jbG9zZXN0KGVsZW1lbnRTZWxlY3Rvcik7XHJcbiAgICAgICAgdmFyICRpc0VtcHR5ID0gJGN1cnJlbnRJbnB1dC5odG1sKCkudHJpbSgpICsgJGN1cnJlbnRJbnB1dC52YWwoKS50cmltKCkgPT09IFwiXCI7XHJcbiAgICAgICAgaWYgKGFncmVlbWVudEVsZW1lbnRzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgdmFyIGlkeCA9IGdldElkeE9mRWxlbWVudCgkY3VycmVudEVsZW1lbnQsICQoYWdyZWVtZW50RWxlbWVudHMpKTtcclxuICAgICAgICAgICAgaWYgKGlkeCA+PSAwICYmIGlkeCA8IGFncmVlbWVudEVsZW1lbnRzLmxlbmd0aCAtIDEpIHtcclxuICAgICAgICAgICAgICAgIC8vIGVuYWJsZSB0aGUgZWxlbWVudCByaWdodCBhZnRlciB0aGUgY3VycmVudCBlbGVtZW50LlxyXG4gICAgICAgICAgICAgICAgdmFyICRuZXh0RWxlbWVudCA9ICQoYWdyZWVtZW50RWxlbWVudHNbaWR4ICsgMV0pO1xyXG4gICAgICAgICAgICAgICAgaWYgKCEkaXNFbXB0eSAmJiAkbmV4dEVsZW1lbnQuaGFzQ2xhc3MoJ2Rpc2FibGVkJykpIHtcclxuICAgICAgICAgICAgICAgICAgICAkbmV4dEVsZW1lbnQucmVtb3ZlQ2xhc3MoJ2Rpc2FibGVkJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZU9yRW5hYmxlRWxlbWVudChlbGVtZW50U2VsZWN0b3IsICRuZXh0RWxlbWVudC5maW5kKCdpbnB1dCcpKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoKCRpc0VtcHR5IHx8ICRyZWN1cnNpdmUpICYmICEkbmV4dEVsZW1lbnQuaGFzQ2xhc3MoJ2Rpc2FibGVkJykpIHtcclxuICAgICAgICAgICAgICAgICAgICAkbmV4dEVsZW1lbnQuYWRkQ2xhc3MoJ2Rpc2FibGVkJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZU9yRW5hYmxlRWxlbWVudChlbGVtZW50U2VsZWN0b3IsICRuZXh0RWxlbWVudC5maW5kKCdpbnB1dCcpLCB0cnVlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgdmFyIG1vZGFsSW5mb0NsYXNzID0ge1xyXG4gICAgICAgIHdhcm5pbmc6IFwid2FybmluZ1wiLFxyXG4gICAgICAgIGVycm9yOiBcIndhcm5pbmdcIixcclxuICAgICAgICBpbmZvOiBcIi1pbmZvLWNpcmNsZVwiLFxyXG4gICAgICAgIHN1Y2Nlc3M6IFwic3VjY2Vzc1wiXHJcbiAgICB9O1xyXG4gICAgdmFyIGdldE1vZGFsSWNvbkNsYXNzID0gZnVuY3Rpb24gKHBvcHVwVHlwZSkge1xyXG4gICAgICAgIGlmICghcG9wdXBUeXBlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBcIlwiO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgY3NzQ2xhc3MgPSBtb2RhbEluZm9DbGFzc1twb3B1cFR5cGVdO1xyXG4gICAgICAgIGlmICghY3NzQ2xhc3MpIHtcclxuICAgICAgICAgICAgY3NzQ2xhc3MgPSBcIlwiO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gY3NzQ2xhc3M7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBibG9ja1VJOiBibG9ja1VJLFxyXG4gICAgICAgIHVuYmxvY2tVSTogdW5ibG9ja1VJLFxyXG4gICAgICAgIGhhbmRsZUV4dGVybmFsTGluazogaGFuZGxlRXh0ZXJuYWxMaW5rLFxyXG4gICAgICAgIGRhdGVGcm9tSVNPOiBkYXRlRnJvbUlTTyxcclxuICAgICAgICBwYXJzZUludDogcGFyc2VJbnQzMixcclxuICAgICAgICBnZXRNb2RhbEljb25DbGFzczogZ2V0TW9kYWxJY29uQ2xhc3MsXHJcbiAgICAgICAgbW9kYWxJbmZvQ2xhc3M6IG1vZGFsSW5mb0NsYXNzLFxyXG4gICAgICAgIGRpc2FibGVPckVuYWJsZUVsZW1lbnQ6IGRpc2FibGVPckVuYWJsZUVsZW1lbnRcclxuICAgIH07XHJcbn0pKCk7XHJcblxyXG52YXIgSW1hZ2VQbGFjZUhvbGRlciA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBlbGVtZW50cyA9ICQoXCJpbWdbZGF0YS1pbWctc291cmNlXVwiKTtcclxuICAgIGVsZW1lbnRzLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBlbGVtZW50ID0gdGhpcztcclxuICAgICAgICAkKGVsZW1lbnQpLmF0dHIoXCJzcmNcIiwgJChlbGVtZW50KS5kYXRhKFwiaW1nU291cmNlXCIpKTtcclxuICAgICAgICAkKGVsZW1lbnQpLm9uKFwiZXJyb3JcIixcclxuICAgICAgICAgICAgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICAgICAgICAkKGV2ZW50LnRhcmdldCkub24oXCJlcnJvclwiLCBudWxsKTtcclxuICAgICAgICAgICAgICAgIGlmICgkKGV2ZW50LnRhcmdldCkuZGF0YShcInBsYWNlaG9sZGVyXCIpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJChldmVudC50YXJnZXQpLmF0dHIoXCJzcmNcIiwgJChldmVudC50YXJnZXQpLmRhdGEoXCJwbGFjZWhvbGRlclwiKSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbn07XHJcblxyXG52YXIgVXBsb2FkSW1hZ2VNb2R1bGUgPSBmdW5jdGlvbiAob3B0aW9ucykge1xyXG4gICAgdmFyIHNldHRpbmdzID0ge1xyXG4gICAgICAgIGZpbGVTZWxlY3RvcjogXCJcIixcclxuICAgICAgICBwcmV2aWV3SW1nU2VsZWN0b3I6IFwiXCIsXHJcbiAgICAgICAgdXBsb2FkQnRuU2VsZWN0b3I6IFwiXCIsXHJcbiAgICAgICAgbGlua1NlbGVjdG9yOiBcIlwiLFxyXG4gICAgICAgIGhhbmRsZVVybDogXCJcIixcclxuICAgICAgICBjYW5jZWxVcGxvYWRCdG5TZWxlY3RvcjogXCJcIixcclxuICAgICAgICBkZWxldGVMaW5rU2VsZWN0b3I6IFwiXCIsXHJcbiAgICAgICAgaGFuZGxlRGVsZXRlVXJsOiBcIlwiLFxyXG4gICAgICAgIGVycm9yTWVzc2FnZTogXCJcIixcclxuICAgICAgICBwcmV2SW1hZ2VEYXRhOiBcIlwiLFxyXG4gICAgICAgIGlzTmVlZFRvVXBkYXRlSGVhZGVyOiBmYWxzZSxcclxuXHJcbiAgICAgICAgbWVzc2FnZXM6IHtcclxuICAgICAgICAgICAgY29uZmlybWF0aW9uRGlhbG9nU2VsZWN0b3I6IFwiI2RpYWxvZy1jb25maXJtYXRpb25cIixcclxuICAgICAgICAgICAgZGVsQ29uZmlybWF0aW9uTWVzczogXCLDhHIgZHUgc8Oka2VyIHDDpSBhdHQgZHUgdmlsbCB0YSBib3J0IGJpbGRlbj9cIixcclxuICAgICAgICAgICAgeWVzRGVsQnRuVGV4dDogXCJKYSwgdGEgYm9ydFwiLFxyXG4gICAgICAgICAgICBub0RlbEJ0blRleHQ6IFwiTmVqLCBzcGFyYSBkZW5cIixcclxuXHJcbiAgICAgICAgICAgIHVwbG9hZGluZ0Vycm9yTWVzc2FnZTogXCJOw6Vnb3QgZ2ljayBmZWwgbsOkciBkdSBmw7Zyc8O2a3RlIGxhZGRhIHVwcCBiaWxkZW4uIFbDpG5saWdlbiBmw7Zyc8O2ayBpZ2VuLlwiLFxyXG4gICAgICAgICAgICB1cGxvYWRpbmdFcnJvclRpdGxlOiBcIkJpbGRlbiBrdW5kZSBpbnRlIGxhZGRhcyB1cHBcIixcclxuXHJcbiAgICAgICAgICAgIGluZm9ybWF0aW9uRGlhbG9nU2VsZWN0b3I6IFwiI2luZm9ybWF0aW9uRGlhbG9nXCJcclxuICAgICAgICB9XHJcbiAgICAgICAgLy9hZGRpdGlvbiBmb3IgZGlhbG9nc1xyXG4gICAgICAgIC8vY29uZmlybWF0aW9uRGlhbG9nU2VsZWN0b3I6IFwiI2RpYWxvZy1jb25maXJtYXRpb25cIixcclxuICAgICAgICAvL2RlbENvbmZpcm1hdGlvbk1lc3M6IFwiw4RyIGR1IHPDpGtlciBww6UgYXR0IGR1IHZpbGwgdGEgYm9ydCBiaWxkZW4/XCIsXHJcbiAgICAgICAgLy95ZXNEZWxCdG5UZXh0OiBcIkphLCB0YSBib3J0XCIsXHJcbiAgICAgICAgLy9ub0RlbEJ0blRleHQ6IFwiTmVqLCBzcGFyYSBkZW5cIlxyXG4gICAgfTtcclxuICAgIHZhciBfcHJldkltYWdlRGF0YTtcclxuICAgIHZhciBfZGF0YSA9IFtdOyAvL2FkZCBwYXJhbXMgdG8gcmVxdWVzdCBmb2xsb3dpbmcgZm9ybWF0IFt7XCJrZXlcIjogXCJpZFwiLCBcInZhbHVlXCI6IDF9LHtcImtleVwiOiBcIm5hbWVcIiwgXCJ2YWx1ZVwiOiBcImFiY1wifV1cclxuICAgIHZhciBkaWFsb2dUeXBlID0gR3JvQ29tbW9uLm1vZGFsSW5mb0NsYXNzO1xyXG5cclxuICAgICQuZXh0ZW5kKHNldHRpbmdzLCBvcHRpb25zKTtcclxuXHJcbiAgICB2YXIgYnVpbGRQYXJhbXNGb3JSZXF1ZXN0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBkYXRhID0gbmV3IEZvcm1EYXRhKCk7XHJcbiAgICAgICAgaWYgKF9kYXRhICYmIF9kYXRhLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBfZGF0YS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgdmFyIHBhcmFtID0gX2RhdGFbaV07XHJcbiAgICAgICAgICAgICAgICBpZiAocGFyYW0ua2V5ICYmIHBhcmFtLnZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YS5hcHBlbmQocGFyYW0ua2V5LCBwYXJhbS52YWx1ZSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGRhdGE7XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBhdHRhY2hGaWxlT25DaGFuZ2VFdmVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKHNldHRpbmdzLmZpbGVTZWxlY3RvcikuY2hhbmdlKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIGZpbGUgPSB0aGlzLmZpbGVzWzBdO1xyXG4gICAgICAgICAgICB2YXIgaW1hZ2VmaWxlID0gZmlsZS50eXBlO1xyXG4gICAgICAgICAgICB2YXIgbWF0Y2ggPSBbXCJpbWFnZS9qcGVnXCIsIFwiaW1hZ2UvcG5nXCIsIFwiaW1hZ2UvanBnXCJdO1xyXG4gICAgICAgICAgICBpZiAoISgoaW1hZ2VmaWxlID09PSBtYXRjaFswXSkgfHwgKGltYWdlZmlsZSA9PT0gbWF0Y2hbMV0pIHx8IChpbWFnZWZpbGUgPT09IG1hdGNoWzJdKSkpIHtcclxuICAgICAgICAgICAgICAgICQoc2V0dGluZ3MucHJldmlld0ltZ1NlbGVjdG9yKS5hdHRyKCdzcmMnLCBfcHJldkltYWdlRGF0YSk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcclxuICAgICAgICAgICAgICAgIHJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICAgICAgICAgICAgICAkKHNldHRpbmdzLnByZXZpZXdJbWdTZWxlY3RvcikuYXR0cignc3JjJywgZXZlbnQudGFyZ2V0LnJlc3VsdCk7XHJcbiAgICAgICAgICAgICAgICAgICAgLy9zaG93IENhbmNlbC9VcGxvYWQgYnV0dG9uc1xyXG4gICAgICAgICAgICAgICAgICAgICQoc2V0dGluZ3MudXBsb2FkQnRuU2VsZWN0b3IpLnBhcmVudCgpLnNob3coKTtcclxuXHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgcmVhZGVyLnJlYWRBc0RhdGFVUkwodGhpcy5maWxlc1swXSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH07XHJcblxyXG4gICAgdmFyIGF0dGFjaE9wZW5GaWxlRGlhbG9nID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQoc2V0dGluZ3MubGlua1NlbGVjdG9yKS5vbignY2xpY2snLFxyXG4gICAgICAgICAgICBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICAgICAgJCgnLnBvcHVwLXN1YiwgLmxpc3QtYWN0aW9uLWl0ZW0nKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgICAgICAkKHNldHRpbmdzLmZpbGVTZWxlY3RvcikudHJpZ2dlcignY2xpY2snKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBhdHRhY2hVcGxvYWRGaWxlQ2xpY2tFdmVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKHNldHRpbmdzLnVwbG9hZEJ0blNlbGVjdG9yKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciBkYXRhID0gYnVpbGRQYXJhbXNGb3JSZXF1ZXN0KCk7XHJcbiAgICAgICAgICAgIHZhciBmaWxlcyA9ICQoc2V0dGluZ3MuZmlsZVNlbGVjdG9yKS5nZXQoMCkuZmlsZXM7XHJcblxyXG4gICAgICAgICAgICAvLyBBZGQgdGhlIHVwbG9hZGVkIGltYWdlIGNvbnRlbnQgdG8gdGhlIGZvcm0gZGF0YSBjb2xsZWN0aW9uXHJcbiAgICAgICAgICAgIGlmIChmaWxlcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgZmlsZVNpemUgPSBmaWxlc1swXS5zaXplO1xyXG4gICAgICAgICAgICAgICAgaWYgKGZpbGVTaXplID4gNDA5NjAwMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHNob3dJbmZvcm1hdGlvbkRpYWxvZyhcIlwiLCBcIkZpbGVuIMOkciBmw7ZyIHN0b3IuIE1heGltYWwgZmlsc3RvcmxlayA0TUIuXCIsIGRpYWxvZ1R5cGUuZXJyb3IpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGRhdGEuYXBwZW5kKFwiVXBsb2FkZWRJbWFnZVwiLCBmaWxlc1swXSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJChzZXR0aW5ncy5wcmV2aWV3SW1nU2VsZWN0b3IpLnByZXYoKS5zaG93KCk7XHJcbiAgICAgICAgICAgICQoc2V0dGluZ3MudXBsb2FkQnRuU2VsZWN0b3IpLnBhcmVudCgpLmhpZGUoKTtcclxuICAgICAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgICAgIHVybDogc2V0dGluZ3MuaGFuZGxlVXJsLFxyXG4gICAgICAgICAgICAgICAgdHlwZTogXCJQT1NUXCIsXHJcbiAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLFxyXG4gICAgICAgICAgICAgICAgY29udGVudFR5cGU6IGZhbHNlLCAvLyBUaGUgY29udGVudCB0eXBlIHVzZWQgd2hlbiBzZW5kaW5nIGRhdGEgdG8gdGhlIHNlcnZlci5cclxuICAgICAgICAgICAgICAgIGNhY2hlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgIHByb2Nlc3NEYXRhOiBmYWxzZSwgLy8gVG8gc2VuZCBET01Eb2N1bWVudCBvciBub24gcHJvY2Vzc2VkIGRhdGEgZmlsZSBpdCBpcyBzZXQgdG8gZmFsc2VcclxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXN1bHQpIHtcclxuICAgICAgICAgICAgICAgICAgICAkKHNldHRpbmdzLnByZXZpZXdJbWdTZWxlY3RvcikucHJldigpLmhpZGUoKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3VsdC5zdWNjZXNzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoc2V0dGluZ3MudXBsb2FkQnRuU2VsZWN0b3IpLnBhcmVudCgpLmhpZGUoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJChzZXR0aW5ncy5kZWxldGVMaW5rU2VsZWN0b3IpLnNob3coKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIF9wcmV2SW1hZ2VEYXRhID0gJChzZXR0aW5ncy5wcmV2aWV3SW1nU2VsZWN0b3IpLmF0dHIoXCJzcmNcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzZXR0aW5ncy5pc05lZWRUb1VwZGF0ZUhlYWRlcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnLmxtX191c2VyLWF2YXRhci13cmFwcGVyIC5oZWFkZXJfdXNlcl9hdmF0YXInKS5hdHRyKCdzcmMnLCBfcHJldkltYWdlRGF0YSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE1hY2hpbmVEZXRhaWxQYWdlLmF1dG9GaXRJbWFnZXMoKTtcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKHNldHRpbmdzLnByZXZpZXdJbWdTZWxlY3RvcikuYXR0cihcInNyY1wiLCBfcHJldkltYWdlRGF0YSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vdmFyIG1lc3NhZ2UgPSBzZXR0aW5ncy5lcnJvck1lc3NhZ2UhPT1cIlwiID8gc2V0dGluZ3MuZXJyb3JNZXNzYWdlIDogXCJEZXQgdXBwc3RvZCBldHQgZmVsIG7DpHIgYmlsZGVuIHNrdWxsZSBsYWRkYXMgdXBwLiBWYXIgZ29kIGbDtnJzw7ZrIGlnZW4hXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNob3dJbmZvcm1hdGlvbkRpYWxvZyhzZXR0aW5ncy5tZXNzYWdlcy51cGxvYWRpbmdFcnJvclRpdGxlLCBzZXR0aW5ncy5tZXNzYWdlcy51cGxvYWRpbmdFcnJvck1lc3NhZ2UsIGRpYWxvZ1R5cGUuZXJyb3IpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKGpxWEhSLCB0ZXh0U3RhdHVzLCBlcnJvclRocm93bikge1xyXG4gICAgICAgICAgICAgICAgICAgICQoc2V0dGluZ3MucHJldmlld0ltZ1NlbGVjdG9yKS5wcmV2KCkuaGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoc2V0dGluZ3MucHJldmlld0ltZ1NlbGVjdG9yKS5hdHRyKFwic3JjXCIsIF9wcmV2SW1hZ2VEYXRhKTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgbWVzc2FnZSA9IFwiRGV0IHVwcHN0b2QgZXR0IGZlbCBuw6RyIGJpbGRlbiBza3VsbGUgbGFkZGFzIHVwcDogXCIgKyBlcnJvclRocm93bi50b1N0cmluZygpO1xyXG4gICAgICAgICAgICAgICAgICAgIHNob3dJbmZvcm1hdGlvbkRpYWxvZyh0aGlzLnNldHRpbmdzLnVwbG9hZGluZ0Vycm9yVGl0bGUsIG1lc3NhZ2UsIGRpYWxvZ1R5cGUuZXJyb3IpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcblxyXG4gICAgdmFyIGF0dGFjdENhbmNlbFVwbG9hZEV2ZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQoc2V0dGluZ3MuY2FuY2VsVXBsb2FkQnRuU2VsZWN0b3IpLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgLy8kKF9maWxlU2VsZWN0b3IpLnZhbCgnJyk7XHJcbiAgICAgICAgICAgICQoc2V0dGluZ3MuZmlsZVNlbGVjdG9yKS52YWwoJycpO1xyXG4gICAgICAgICAgICAkKHNldHRpbmdzLnVwbG9hZEJ0blNlbGVjdG9yKS5wYXJlbnQoKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICQoc2V0dGluZ3MucHJldmlld0ltZ1NlbGVjdG9yKS5hdHRyKFwic3JjXCIsIF9wcmV2SW1hZ2VEYXRhKTtcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcbiAgICB2YXIgZGVsZXRlSW1hZ2UgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgJChzZXR0aW5ncy5wcmV2aWV3SW1nU2VsZWN0b3IpLnByZXYoKS5zaG93KCk7XHJcbiAgICAgICAgJCgnLnBvcHVwLXN1YiwgLmxpc3QtYWN0aW9uLWl0ZW0nKS5oaWRlKCk7XHJcblxyXG4gICAgICAgIHZhciBkYXRhID0gYnVpbGRQYXJhbXNGb3JSZXF1ZXN0KCk7XHJcblxyXG4gICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgIHVybDogc2V0dGluZ3MuaGFuZGxlRGVsZXRlVXJsLFxyXG4gICAgICAgICAgICB0eXBlOiBcIlBPU1RcIixcclxuICAgICAgICAgICAgZGF0YTogZGF0YSxcclxuICAgICAgICAgICAgY29udGVudFR5cGU6IGZhbHNlLCAvLyBUaGUgY29udGVudCB0eXBlIHVzZWQgd2hlbiBzZW5kaW5nIGRhdGEgdG8gdGhlIHNlcnZlci5cclxuICAgICAgICAgICAgY2FjaGU6IGZhbHNlLFxyXG4gICAgICAgICAgICBwcm9jZXNzRGF0YTogZmFsc2UsIC8vIFRvIHNlbmQgRE9NRG9jdW1lbnQgb3Igbm9uIHByb2Nlc3NlZCBkYXRhIGZpbGUgaXQgaXMgc2V0IHRvIGZhbHNlXHJcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXN1bHQpIHtcclxuICAgICAgICAgICAgICAgICQoc2V0dGluZ3MucHJldmlld0ltZ1NlbGVjdG9yKS5wcmV2KCkuaGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgaWYgKHJlc3VsdC5zdWNjZXNzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgX3ByZXZJbWFnZURhdGEgPSByZXN1bHQuaW1hZ2VVcmw7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICQoc2V0dGluZ3MuZGVsZXRlTGlua1NlbGVjdG9yKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgJChzZXR0aW5ncy5wcmV2aWV3SW1nU2VsZWN0b3IpLmF0dHIoXCJzcmNcIiwgX3ByZXZJbWFnZURhdGEpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5zZXR0aW5ncy5pc05lZWRUb1VwZGF0ZUhlYWRlcikgeyAvL29ubHkgdXNpbmcgZm9yIHVwZGF0ZSB1c2VyIGF2YXRhciBvbiBoZWFkZXJcclxuICAgICAgICAgICAgICAgICAgICAgICAgJCgnLmxtX191c2VyLWF2YXRhci13cmFwcGVyIC5oZWFkZXJfdXNlcl9hdmF0YXInKS5hdHRyKCdzcmMnLCBfcHJldkltYWdlRGF0YSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAkKHNldHRpbmdzLnByZXZpZXdJbWdTZWxlY3RvcikuYXR0cihcInNyY1wiLCBfcHJldkltYWdlRGF0YSk7XHJcbiAgICAgICAgICAgICAgICAgICAgLy9hbGVydChcIkRldCB1cHBzdG9kIGV0dCBmZWwgbsOkciBiaWxkZW4gc2t1bGxlIGxhZGRhcyB1cHAuIFZhciBnb2QgZsO2cnPDtmsgaWdlbiFcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgc2hvd0luZm9ybWF0aW9uRGlhbG9nKFwiXCIsIFwiRGV0IHVwcHN0b2QgZXR0IGZlbCBuw6RyIGJpbGRlbiBza3VsbGUgbGFkZGFzIHVwcC4gVmFyIGdvZCBmw7Zyc8O2ayBpZ2VuIVwiLCBkaWFsb2dUeXBlLmVycm9yKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uIChqcVhIUiwgdGV4dFN0YXR1cywgZXJyb3JUaHJvd24pIHtcclxuICAgICAgICAgICAgICAgICQoc2V0dGluZ3MucHJldmlld0ltZ1NlbGVjdG9yKS5wcmV2KCkuaGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgJChzZXR0aW5ncy5wcmV2aWV3SW1nU2VsZWN0b3IpLmF0dHIoXCJzcmNcIiwgX3ByZXZJbWFnZURhdGEpO1xyXG4gICAgICAgICAgICAgICAgLy9hbGVydChcIkRldCB1cHBzdG9kIGV0dCBmZWwgbsOkciBiaWxkZW4gc2t1bGxlIHRhcyBib3J0OiBcIiArIGVycm9yVGhyb3duLnRvU3RyaW5nKCkpO1xyXG4gICAgICAgICAgICAgICAgdmFyIG1lc3NhZ2UgPSBcIkRldCB1cHBzdG9kIGV0dCBmZWwgbsOkciBiaWxkZW4gc2t1bGxlIHRhcyBib3J0OiBcIiArIGVycm9yVGhyb3duLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgICAgICAgICBzaG93SW5mb3JtYXRpb25EaWFsb2cobWVzc2FnZSwgXCJcIiwgZGlhbG9nVHlwZS5lcnJvcik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH07XHJcblxyXG4gICAgdmFyIGF0dGFjaERlbGV0ZUZpbGVDbGlja0V2ZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQoc2V0dGluZ3MuZGVsZXRlTGlua1NlbGVjdG9yKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHNob3dEZWxDb25maXJtYXRpb25EaWFsb2coZGVsZXRlSW1hZ2UpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcblxyXG4gICAgZnVuY3Rpb24gc2hvd0RlbENvbmZpcm1hdGlvbkRpYWxvZyhjYWxsYmFjaykge1xyXG4gICAgICAgIHZhciAkZGlhbG9nID0gJChzZXR0aW5ncy5tZXNzYWdlcy5jb25maXJtYXRpb25EaWFsb2dTZWxlY3Rvcik7XHJcbiAgICAgICAgaWYgKCRkaWFsb2cubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgJChcIi5tb2RhbC1oZWFkZXItdGl0bGVcIiwgJGRpYWxvZykuaHRtbChzZXR0aW5ncy5kZWxDb25maXJtYXRpb25NZXNzKTtcclxuICAgICAgICB2YXIgJHllc0J0biA9ICQoXCIuc3VjY2Vzcy1jb25maXJtLWluZm9ybS55ZXNcIiwgJGRpYWxvZyk7XHJcbiAgICAgICAgdmFyICRub0J0biA9ICQoXCIuc3VjY2Vzcy1jb25maXJtLWluZm9ybS5ub1wiLCAkZGlhbG9nKTtcclxuICAgICAgICAkbm9CdG4uaHRtbChzZXR0aW5ncy5ub0RlbEJ0blRleHQpO1xyXG4gICAgICAgICR5ZXNCdG4uaHRtbChzZXR0aW5ncy55ZXNEZWxCdG5UZXh0KTtcclxuXHJcbiAgICAgICAgJHllc0J0bi5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGNhbGxiYWNrKCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICRkaWFsb2cuZmFkZUluKCk7XHJcbiAgICB9XHJcbiAgICB2YXIgaW5pdERhdGFGb3JSZXF1ZXN0ID0gZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICBfZGF0YSA9IGRhdGE7XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBpbml0VXBsb2FkRmlsZSA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XHJcbiAgICAgICAgaWYgKCFvcHRpb25zKSB7XHJcbiAgICAgICAgICAgICQuZXh0ZW5kKHNldHRpbmdzLCBvcHRpb25zKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgX3ByZXZJbWFnZURhdGEgPSAkKHNldHRpbmdzLnByZXZpZXdJbWdTZWxlY3RvcikuYXR0cihcInNyY1wiKTtcclxuXHJcbiAgICAgICAgYXR0YWNoT3BlbkZpbGVEaWFsb2coKTtcclxuICAgICAgICBhdHRhY2hGaWxlT25DaGFuZ2VFdmVudCgpO1xyXG4gICAgICAgIGF0dGFjaFVwbG9hZEZpbGVDbGlja0V2ZW50KCk7XHJcbiAgICAgICAgYXR0YWN0Q2FuY2VsVXBsb2FkRXZlbnQoKTtcclxuICAgIH07XHJcblxyXG4gICAgdmFyIGluaXREZWxldGVGaWxlID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcclxuICAgICAgICBpZiAoIW9wdGlvbnMpIHtcclxuICAgICAgICAgICAgJC5leHRlbmQoc2V0dGluZ3MsIG9wdGlvbnMpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgYXR0YWNoRGVsZXRlRmlsZUNsaWNrRXZlbnQoKTtcclxuICAgIH07XHJcblxyXG4gICAgZnVuY3Rpb24gc2hvd0luZm9ybWF0aW9uRGlhbG9nKHRpdGxlLCBtZXNzYWdlLCBkaWFsb2dUeXBlKSB7XHJcbiAgICAgICAgdmFyICRpbmZvcm1hdGlvbkRpYWxvZyA9ICQoc2V0dGluZ3MubWVzc2FnZXMuaW5mb3JtYXRpb25EaWFsb2dTZWxlY3Rvcik7XHJcbiAgICAgICAgdmFyICRpY29uRWxlbWVudCA9ICRpbmZvcm1hdGlvbkRpYWxvZy5maW5kKFwic3Bhbi5wb3B1cC10eXBlXCIpO1xyXG4gICAgICAgIGlmIChkaWFsb2dUeXBlKSB7XHJcbiAgICAgICAgICAgICRpY29uRWxlbWVudC5yZW1vdmVDbGFzcyhcImhpZGRlblwiKTtcclxuICAgICAgICAgICAgJGljb25FbGVtZW50LmFkZENsYXNzKEdyb0NvbW1vbi5nZXRNb2RhbEljb25DbGFzcyhkaWFsb2dUeXBlKSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgJGljb25FbGVtZW50LmFkZENsYXNzKFwiaGlkZGVuXCIpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJGluZm9ybWF0aW9uRGlhbG9nLmZpbmQoJyNkaWFsb2dUaXRsZScpLmh0bWwodGl0bGUpO1xyXG4gICAgICAgICRpbmZvcm1hdGlvbkRpYWxvZy5maW5kKCcjZGlhbG9nQ29udGVudCcpLmh0bWwobWVzc2FnZSk7XHJcbiAgICAgICAgaWYgKCRpbmZvcm1hdGlvbkRpYWxvZy5oYXNDbGFzcygnaGlkZGVuJykpIHtcclxuICAgICAgICAgICAgJGluZm9ybWF0aW9uRGlhbG9nLnJlbW92ZUNsYXNzKCdoaWRkZW4nKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAkaW5mb3JtYXRpb25EaWFsb2cuZmFkZUluKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgaW5pdERhdGFGb3JSZXF1ZXN0OiBpbml0RGF0YUZvclJlcXVlc3QsXHJcbiAgICAgICAgaW5pdFVwbG9hZEZpbGU6IGluaXRVcGxvYWRGaWxlLFxyXG4gICAgICAgIGluaXREZWxldGVGaWxlOiBpbml0RGVsZXRlRmlsZVxyXG4gICAgfTtcclxufTtcclxuXHJcbiQoZnVuY3Rpb24gKCkge1xyXG4gICAgSW1hZ2VQbGFjZUhvbGRlcigpO1xyXG59KTtcclxuXHJcbiQoZnVuY3Rpb24gKCkge1xyXG4gICAgJChcImlucHV0W3R5cGU9YnV0dG9uXS5zdWJtaXRcIikuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQodGhpcykuYXR0cihcImRpc2FibGVkXCIsIFwiZGlzYWJsZWRcIik7XHJcbiAgICAgICAgdmFyIGZvcm0gPSAkKHRoaXMpLmNsb3Nlc3QoXCJmb3JtXCIpO1xyXG4gICAgICAgIGlmIChmb3JtKSB7XHJcbiAgICAgICAgICAgICQoZm9ybSkuc3VibWl0KCk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgJChcImZvcm1cIikua2V5dXAoZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgaWYgKGV2ZW50LndoaWNoID09PSAxMykge1xyXG4gICAgICAgICAgICAvLyBrZXkgZW50ZXJcclxuICAgICAgICAgICAgdmFyIGZvcm0gPSAkKGV2ZW50LnRhcmdldCkuY2xvc2VzdChcImZvcm1cIik7XHJcbiAgICAgICAgICAgIGlmIChmb3JtKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgc3VibWl0QnRuID0gZ2V0U3VibWl0QnRuKGZvcm0pO1xyXG4gICAgICAgICAgICAgICAgaWYgKHN1Ym1pdEJ0biAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJChzdWJtaXRCdG4pLmNsaWNrKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuICAgIGZ1bmN0aW9uIGdldFN1Ym1pdEJ0bihmb3JtKSB7XHJcbiAgICAgICAgdmFyIGJ0blN1Ym1pdCA9ICQoXCJidXR0b24uc3VibWl0LnRyaWdnZXItb24tZW50ZXJcIiwgJChmb3JtKSk7XHJcbiAgICAgICAgaWYgKGJ0blN1Ym1pdC5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBidG5TdWJtaXQ7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB2YXIgYnRuVHlwZVN1Ym1pdCA9ICQoXCJidXR0b25bdHlwZT1zdWJtaXRdLnRyaWdnZXItb24tZW50ZXJcIiwgJChmb3JtKSk7XHJcbiAgICAgICAgaWYgKGJ0blR5cGVTdWJtaXQubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICByZXR1cm4gYnRuVHlwZVN1Ym1pdDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHZhciBpbnB1dFN1Ym1pdCA9ICQoXCJpbnB1dFt0eXBlPXN1Ym1pdF0udHJpZ2dlci1vbi1lbnRlclwiLCAkKGZvcm0pKTtcclxuICAgICAgICBpZiAoaW5wdXRTdWJtaXQubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICByZXR1cm4gaW5wdXRTdWJtaXQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XHJcbiAgICB9XHJcblxyXG4gICAgJChcIi5sbV9fbW9kYWxfX3dyYXBwZXIgLm1hc2tcIikub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgJCh0aGlzKS5jbG9zZXN0KFwiLmxtX19tb2RhbF9fd3JhcHBlclwiKS5hZGRDbGFzcyhcImhpZGRlblwiKTtcclxuICAgIH0pO1xyXG59KTsiLCIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxyXG4gICAgI1VSTFxyXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5cclxuXHJcbndpbmRvdy5ncm8gPSB3aW5kb3cuZ3JvIHx8IHt9O1xyXG5ncm8ubW9kdWxlcyA9IGdyby5tb2R1bGVzIHx8IHt9O1xyXG5cclxuXHJcbmdyby5tb2R1bGVzLnVybCA9IChmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgcHJpdiA9IHt9O1xyXG4gICAgdmFyIHB1YiA9IHt9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogUHJpdmF0ZSBpbml0aWFsaXphdGlvbiBtZXRob2RcclxuICAgICAqL1xyXG4gICAgcHJpdi5pbml0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIEFkZCBhIFVSTCBwYXJhbWV0ZXIgKG9yIGNoYW5naW5nIGl0IGlmIGl0IGFscmVhZHkgZXhpc3RzKVxyXG4gICAgICogQHBhcmFtIHtzZWFyY2h9IHN0cmluZyAgLSBUaGlzIGlzIHR5cGljYWxseSBkb2N1bWVudC5sb2NhdGlvbi5zZWFyY2hcclxuICAgICAqIEBwYXJhbSB7a2V5fSAgICBzdHJpbmcgIC0gVGhlIGtleSB0byBzZXRcclxuICAgICAqIEBwYXJhbSB7dmFsfSAgICBzdHJpbmcgIC0gVmFsdWVcclxuICAgICAqL1xyXG4gICAgcHViLmFkZFVybFBhcmFtID0gZnVuY3Rpb24gKHNlYXJjaCwga2V5LCB2YWwpIHtcclxuICAgICAgICB2YXIgbmV3UGFyYW0gPSBrZXkgKyBcIj1cIiArIHZhbDtcclxuICAgICAgICB2YXIgcGFyYW1zID0gXCI/XCIgKyBuZXdQYXJhbTtcclxuXHJcbiAgICAgICAgaWYgKHNlYXJjaCkge1xyXG4gICAgICAgICAgICB2YXIga2V5Rm91bmQgPSBzZWFyY2guaW5kZXhPZihrZXkpICE9PSAtMTtcclxuXHJcbiAgICAgICAgICAgIC8vIFRyeSB0byByZXBsYWNlIGFuIGV4aXN0aW5nIHBhcmFtZXRlclxyXG4gICAgICAgICAgICBwYXJhbXMgPSBzZWFyY2gucmVwbGFjZShuZXcgUmVnRXhwKFwiKFtcXD8mXSlcIiArIGtleSArIFwiW14mXSpcIiksIFwiJDFcIiArIG5ld1BhcmFtKTtcclxuXHJcbiAgICAgICAgICAgIC8vIElmIGtleSB3YXMgbm90IGZvdW5kIGFuZCBub3RoaW5nIHdhcyByZXBsYWNlZCwgYWRkIHRoZSBuZXcgcGFyYW1cclxuICAgICAgICAgICAgaWYgKCFrZXlGb3VuZCAmJiBwYXJhbXMgPT09IHNlYXJjaCkge1xyXG4gICAgICAgICAgICAgICAgcGFyYW1zICs9IFwiJlwiICsgbmV3UGFyYW07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIFB1c2ggdG8gYnJvd3NlciBoaXN0b3J5XHJcbiAgICAgICAgaWYgKGhpc3RvcnkucHVzaFN0YXRlKSB7XHJcbiAgICAgICAgICAgIHZhciBuZXdVcmwgPSB3aW5kb3cubG9jYXRpb24ub3JpZ2luICsgd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lICsgcGFyYW1zO1xyXG4gICAgICAgICAgICB3aW5kb3cuaGlzdG9yeS5wdXNoU3RhdGUoeyBwYXRoOiBuZXdVcmwgfSwgXCJcIiwgbmV3VXJsKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0IHBhcmFtZXRlciBmcm9tIFVSTFxyXG4gICAgICogQHBhcmFtIHtrZXl9IHN0cmluZyAtIFRoZSBrZXkgdG8gZ2V0XHJcbiAgICAgKiBAcmV0dXJuICAgICAgc3RyaW5nIC0gVGhlIHZhbHVlXHJcbiAgICAgKi9cclxuICAgIHB1Yi5nZXRVcmxQYXJhbSA9IGZ1bmN0aW9uIChrZXkpIHtcclxuICAgICAgICB2YXIgcXVlcnkgPSB3aW5kb3cubG9jYXRpb24uc2VhcmNoLnN1YnN0cmluZygxKTtcclxuICAgICAgICB2YXIgdmFycyA9IHF1ZXJ5LnNwbGl0KFwiJlwiKTtcclxuXHJcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB2YXJzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIHZhciBwYWlyID0gdmFyc1tpXS5zcGxpdChcIj1cIik7XHJcblxyXG4gICAgICAgICAgICBpZiAocGFpclswXSA9PT0ga2V5KSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcGFpclsxXTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfTtcclxuXHJcbiAgICAvLyBJbml0aWFsaXplIG1vZHVsZVxyXG4gICAgJChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcHJpdi5pbml0KCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyBFeHBvc2UgcHVibGljIG1ldGhvZHNcclxuICAgIHJldHVybiBwdWI7XHJcblxyXG59KSgpO1xyXG4iLCI7KGZ1bmN0aW9uKCAkICkge1xyXG5cdCQoZG9jdW1lbnQpLnRyaWdnZXIoXCJlbmhhbmNlLnRhYmxlc2F3XCIpO1xyXG5cclxuXHQvLyBoaWRlIHRvZ2dsZSBpZiBoYXZlIG5vIG9wdGlvbiBjb2x1bW5zLlxyXG5cdGlmICgkKFwiLnRhYmxlc2F3XCIpLmxlbmd0aCA+IDApIHtcclxuXHQgICAgJChcIi50YWJsZXNhdy1iYXJcIikuaGlkZSgpO1xyXG5cdCAgICAkKFwiLnRhYmxlc2F3XCIpLmVhY2goZnVuY3Rpb24gKCkge1xyXG5cdCAgICAgICAgdmFyIF90aGF0ID0gJCh0aGlzKTtcclxuXHQgICAgICAgIHZhciB0YWJsZUhlYWRzID0gX3RoYXQuZmluZCgndGhlYWQgdHIgdGgnKTtcclxuXHQgICAgICAgIHZhciB0YWJsZUJhciA9IF90aGF0LnByZXYoKTtcclxuXHJcblx0ICAgICAgICBpZiAodGFibGVIZWFkcy5sZW5ndGggPiAyKSB7XHJcblx0ICAgICAgICAgICAgdGFibGVCYXIucmVtb3ZlQXR0cihcInN0eWxlXCIpO1xyXG5cdCAgICAgICAgfSBlbHNlIHtcclxuXHQgICAgICAgICAgICBfdGhhdC5jc3MoXCJtaW4td2lkdGhcIiwgXCJpbmhlcml0XCIpO1xyXG5cdCAgICAgICAgfVxyXG5cdCAgICB9KTtcclxuXHR9XHJcblxyXG5cdGZ1bmN0aW9uIERlbGV0ZVRhYmxlUm93V2l0aEFuaW1hdGlvbihjZWxsQnV0dG9uKSB7XHJcbiAgICAgICAgdmFyIHJvdyA9ICQoY2VsbEJ1dHRvbikuY2xvc2VzdChcInRyXCIpLmFkZENsYXNzKFwiZGVsZXRlZFwiKS5jaGlsZHJlbihcInRkXCIpO1xyXG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgJChyb3cpXHJcbiAgICAgICAgICAgICAgICAuYW5pbWF0ZSh7IHBhZGRpbmdUb3A6IDAsIHBhZGRpbmdCb3R0b206IDAgfSwgNTAwKVxyXG4gICAgICAgICAgICAgICAgLndyYXBJbm5lcihcIjxkaXYgLz5cIilcclxuICAgICAgICAgICAgICAgIC5jaGlsZHJlbigpXHJcbiAgICAgICAgICAgICAgICAuc2xpZGVVcCg1MDAsIGZ1bmN0aW9uKCkgeyAkKHRoaXMpLmNsb3Nlc3QoJ3RyJykucmVtb3ZlKCk7IH0pO1xyXG4gICAgXHQgICAgfSwgMTAwMFxyXG4gICAgICAgICk7XHJcblx0fVxyXG5cclxuLy9cdCQoXCIubG1fX2ludGVybmFsLXRhYmxlIHRib2R5IHRyIC5sbV9fZm9ybS1idG5cIikuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4vL1x0ICAgIERlbGV0ZVRhYmxlUm93V2l0aEFuaW1hdGlvbigkKHRoaXMpKTtcclxuLy9cdH0pO1xyXG59KSggalF1ZXJ5ICk7IiwiJChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBpc1RvdWNoRGV2aWNlKCkge1xyXG4gICAgICAgIHJldHVybiBcIm9udG91Y2hzdGFydFwiIGluIHdpbmRvdyB8fCAvLyB3b3JrcyBvbiBtb3N0IGJyb3dzZXJzXHJcbiAgICAgICAgICAgIG5hdmlnYXRvci5tYXhUb3VjaFBvaW50czsgLy8gd29ya3Mgb24gSUUxMC8xMSBhbmQgU3VyZmFjZVxyXG4gICAgfVxyXG5cclxuICAgIHZhciBoZWFkZXJNYWluTmF2aWdhdGlvbiA9IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICAgICAgdmFyIHRvZ2dsZUJ1dHRvbiA9ICQoXCIubG1fdG9nZ2xlLW1lbnVcIik7XHJcbiAgICAgICAgdmFyIHBhcmVudExpc3QgPSAkKFwiLmxtX19tYWluLW5hdmlnYXRpb24gPiB1bCA+IGxpXCIpLmhhcyhcInVsXCIpO1xyXG4gICAgICAgIHZhciBjaGlsZExpc3QgPSAkKFwiLmxtX19tYWluLW5hdmlnYXRpb24gPiB1bCBsaSB1bCBsaVwiKS5oYXMoXCIubG1fX2NoaWxkLXN1Yi1uYXZpZ2F0aW9uXCIpO1xyXG4gICAgICAgIHZhciBtYWluTmF2ID0gdG9nZ2xlQnV0dG9uLm5leHQoKTtcclxuICAgICAgICB2YXIgc2V0dGluZ0J0biA9ICQoXCIubG1fX3NldHRpbmdzID4gYVwiKTtcclxuICAgICAgICB2YXIgc3ViTmF2aWdhdGlvbiA9ICQoXCIubG1fX3N1Yi1uYXZpZ2F0aW9uXCIpO1xyXG4gICAgICAgIHZhciBzZXR0aW5nV3JhcHBlciA9ICQoXCIubG1fX3VzZXItYXZhdGFyLXdyYXBwZXJcIik7XHJcblxyXG4gICAgICAgIHZhciByZW1vdmVBY3RpdmVTdGF0ZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgbWFpbk5hdi5yZW1vdmVBdHRyKFwic3R5bGVcIik7XHJcbiAgICAgICAgICAgIHBhcmVudExpc3QuZmluZChcInVsXCIpLnNsaWRlVXAoXCJzbG93XCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICQodGhpcykucHJldigpLnJlbW92ZUNsYXNzKFwibWludXMtc2lnblwiKS5hZGRDbGFzcyhcInBsdXMtc2lnblwiKTtcclxuICAgICAgICAgICAgICAgICQodGhpcykuY2xvc2VzdChcImxpXCIpLnJlbW92ZUNsYXNzKFwib3BlblwiKTtcclxuICAgICAgICAgICAgICAgICQodGhpcykucmVtb3ZlQXR0cihcInN0eWxlXCIpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgLy9jaGlsZExpc3QuZmluZChcInVsXCIpLnNsaWRlVXAoXCJzbG93XCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgLy8gICAgJCh0aGlzKS5wcmV2KCkuZmluZChcIi50b2dnbGUtaWNvblwiKS5yZW1vdmVDbGFzcyhcIm1pbnVzLXNpZ25cIikuYWRkQ2xhc3MoXCJwbHVzLXNpZ25cIik7XHJcbiAgICAgICAgICAgIC8vICAgICQodGhpcykucmVtb3ZlQXR0cihcInN0eWxlXCIpO1xyXG4gICAgICAgICAgICAvL30pO1xyXG4gICAgICAgICAgICB0b2dnbGVCdXR0b24ucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIik7XHJcbiAgICAgICAgICAgICQoXCIuaHVtYlwiKS5yZW1vdmVDbGFzcyhcIm9wZW5cIik7XHJcbiAgICAgICAgICAgIHNldHRpbmdCdG4ucGFyZW50KCkuZmluZChcIi5sbV9zdWItc2V0dGluZ3NcIikuc2xpZGVVcChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBzZXR0aW5nQnRuLnBhcmVudCgpLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgJChcIi5sbV9fbmF2aWdhdGlvbi13cmFwcGVyLnNob3dlZC1tZW51XCIpLnJlbW92ZUNsYXNzKFwic2hvd2VkLW1lbnVcIik7XHJcbiAgICAgICAgICAgIHNldHRpbmdXcmFwcGVyLmZpbmQoXCIubG1fX3VzZXItYXZhdGFyXCIpLm5leHQoKS5zbGlkZVVwKCk7XHJcbiAgICAgICAgICAgICQoXCIudXNlci1pbmZvLXdyYXBwZXIgPiBhXCIpLm5leHQoKS5zbGlkZVVwKCk7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdmFyIGFkZFNldHRpbmdFdmVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIGF2YXRhciA9IHNldHRpbmdXcmFwcGVyLmZpbmQoXCIubG1fX3VzZXItYXZhdGFyXCIpO1xyXG4gICAgICAgICAgICBhdmF0YXIuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgcmVtb3ZlQWN0aXZlU3RhdGUoKTtcclxuICAgICAgICAgICAgICAgIHZhciBzdWIgPSAkKHRoaXMpLm5leHQoKTtcclxuXHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLnRvZ2dsZUNsYXNzKFwiYWN0aXZlXCIpO1xyXG4gICAgICAgICAgICAgICAgaWYgKHN1Yi5jc3MoXCJkaXNwbGF5XCIpID09PSBcIm5vbmVcIikge1xyXG4gICAgICAgICAgICAgICAgICAgIHN1Yi5zbGlkZURvd24oKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgc3ViLnNsaWRlVXAoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdmFyIGFkZFVzZXJJbmZvRXZlbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciB1c2VySW5mb1dyYXBwZXIgPSAkKFwiLnVzZXItaW5mby13cmFwcGVyID4gYVwiKTtcclxuICAgICAgICAgICAgdXNlckluZm9XcmFwcGVyLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHJlbW92ZUFjdGl2ZVN0YXRlKCk7XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKCQodGhpcykubmV4dCgpLmNzcyhcImRpc3BsYXlcIikgPT09IFwibm9uZVwiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdXNlckluZm9XcmFwcGVyLmFkZENsYXNzKFwiYWN0aXZlXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICQodGhpcykubmV4dCgpLnNsaWRlRG93bigpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICB1c2VySW5mb1dyYXBwZXIucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5uZXh0KCkuc2xpZGVVcCgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdmFyIGFkZFRvZ2dsZU1lbnUgPSBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICAgICAgICAvLyBSZW1vdmUgcGFkZGluZyBmcm9tIHNldHRpbmdzIGRvdCBidXR0b24gaWYgYW5jaG9yIGxpbmsgaGFzIG5vIGNvbnRlbnQuXHJcbiAgICAgICAgICAgIGlmICgkKFwiLmxtX19zZXR0aW5ncyA+IGFcIikudGV4dCgpID09PSBcIlwiKSB7XHJcbiAgICAgICAgICAgICAgICAkKFwiLmxtX19zZXR0aW5ncyA+IGFcIikuY3NzKHsgcGFkZGluZzogXCIwIDI1cHhcIiB9KTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJChkb2N1bWVudCkub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICAgICAgcmVtb3ZlQWN0aXZlU3RhdGUoKTtcclxuICAgICAgICAgICAgfSkub24oXCJ0b3VjaHN0YXJ0XCIsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgJHRoaXMgPSAkKGUudGFyZ2V0KTtcclxuICAgICAgICAgICAgICAgIGlmICgkdGhpcy5hdHRyKFwiY2xhc3NcIikgPT09IFwibG1fX3VzZXItaW5mb1wiIHx8ICQoJHRoaXMpLnBhcmVudHMoXCIudXNlci1pbmZvLXdyYXBwZXJcIikubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi51c2VyLWluZm8td3JhcHBlciA+IGFcIikubmV4dCgpLnNsaWRlVXAoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAvLyBUb2dnbGUgU2V0dGluZ3NcclxuICAgICAgICAgICAgc2V0dGluZ0J0bi5vZmYoXCJjbGlja1wiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAgICAgICAgICAgcmVtb3ZlQWN0aXZlU3RhdGUoKTtcclxuICAgICAgICAgICAgICAgIHZhciBzdWJNZW51ID0gJCh0aGlzKS5uZXh0KCk7XHJcblxyXG4gICAgICAgICAgICAgICAgcGFyZW50TGlzdC5maW5kKFwiLmxtX3N1Yi1zZXR0aW5nc1wiKS5zbGlkZVVwKCk7XHJcbiAgICAgICAgICAgICAgICBpZiAoc3ViTWVudS5jc3MoXCJkaXNwbGF5XCIpID09PSBcIm5vbmVcIikge1xyXG4gICAgICAgICAgICAgICAgICAgIHN1Yk1lbnUuc2xpZGVEb3duKFwiZmFzdFwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkKHRoaXMpLmlzKFwiOnZpc2libGVcIikpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmNzcyhcImRpc3BsYXlcIiwgXCJpbmxpbmUtYmxvY2tcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5wYXJlbnQoKS5hZGRDbGFzcyhcImFjdGl2ZVwiKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgc3ViTWVudS5zbGlkZVVwKFwiZmFzdFwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQodGhpcykucGFyZW50KCkucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgdG9nZ2xlQnV0dG9uLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpO1xyXG4gICAgICAgICAgICAgICAgJChcIi5odW1iXCIpLnJlbW92ZUNsYXNzKFwib3BlblwiKTtcclxuICAgICAgICAgICAgICAgIHN1Yk5hdmlnYXRpb24uc2xpZGVVcChcInNsb3dcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICQodGhpcykucmVtb3ZlQXR0cihcInN0eWxlXCIpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIC8vIFRvZ2dsZSBtZW51IG5hdmlnYXRpb25cclxuICAgICAgICAgICAgdG9nZ2xlQnV0dG9uLm9mZihcImNsaWNrXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XHJcblxyXG4gICAgICAgICAgICAgICAgdmFyICR0aGlzID0gJCh0aGlzKTtcclxuICAgICAgICAgICAgICAgIHZhciBzdWJNZW51ID0gJHRoaXMubmV4dCgpO1xyXG4gICAgICAgICAgICAgICAgLy9pZiAoaXNUb3VjaERldmljZSgpKSB7XHJcbiAgICAgICAgICAgICAgICAvLyAgICBzdWJNZW51LmNzcyh7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgXCJtYXgtaGVpZ2h0XCI6IFwiY2FsYygxMDB2aCAtIDEwMHB4KVwiLFxyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgIFwib3ZlcmZsb3dcIjogXCJoaWRkZW5cIixcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICBcIm92ZXJmbG93LXlcIjogXCJ2aXNpYmxlXCJcclxuICAgICAgICAgICAgICAgIC8vICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgLy99XHJcbiAgICAgICAgICAgICAgICBpZiAoc3ViTWVudS5jc3MoXCJkaXNwbGF5XCIpID09PSBcIm5vbmVcIikge1xyXG4gICAgICAgICAgICAgICAgICAgIHN1Yk1lbnUuc2xpZGVEb3duKFwiZmFzdFwiKTtcclxuICAgICAgICAgICAgICAgICAgICAkdGhpcy5hZGRDbGFzcyhcImFjdGl2ZVwiKS5maW5kKFwiLmh1bWJcIikuYWRkQ2xhc3MoXCJvcGVuXCIpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBzdWJNZW51LnNsaWRlVXAoXCJmYXN0XCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICR0aGlzLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpLmZpbmQoXCIuaHVtYlwiKS5yZW1vdmVDbGFzcyhcIm9wZW5cIik7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgc2V0dGluZ0J0bi5wYXJlbnQoKS5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiKS5maW5kKFwiPmFcIikubmV4dCgpLnNsaWRlVXAoKTtcclxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAvLyBUb2dnbGUgc3ViLW1lbnVcclxuICAgICAgICAgICAgcGFyZW50TGlzdC5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICQodGhpcykuZmluZChcIj4gYVwiKS5vZmYoXCJjbGlja1wiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgJHRoaXMgPSAkKHRoaXMpO1xyXG4gICAgICAgICAgICAgICAgICAgIHBhcmVudExpc3Qubm90KCR0aGlzLnBhcmVudCgpKS5maW5kKFwidWxcIikuc2xpZGVVcChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQodGhpcykucHJldigpLnJlbW92ZUNsYXNzKFwibWludXMtc2lnblwiKS5hZGRDbGFzcyhcInBsdXMtc2lnblwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5jbG9zZXN0KFwibGlcIikucmVtb3ZlQ2xhc3MoXCJvcGVuXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIHNldHRpbmdCdG4ucGFyZW50KCkucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIikuZmluZChcIi5sbV9zdWItc2V0dGluZ3NcIikuc2xpZGVVcCgpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBpZiAoJCh0aGlzKS5jc3MoXCJkaXNwbGF5XCIpICE9PSBcIm5vbmVcIikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkdGhpcy5yZW1vdmVDbGFzcyhcInBsdXMtc2lnblwiKS5hZGRDbGFzcyhcIm1pbnVzLXNpZ25cIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQodGhpcykuY2xvc2VzdChcImxpXCIpLmFkZENsYXNzKFwib3BlblwiKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICR0aGlzLm5leHQoKS5zbGlkZVRvZ2dsZShmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkKHRoaXMpLmNzcyhcImRpc3BsYXlcIikgPT09IFwibm9uZVwiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdGhpcy5yZW1vdmVDbGFzcyhcIm1pbnVzLXNpZ25cIikuYWRkQ2xhc3MoXCJwbHVzLXNpZ25cIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmNsb3Nlc3QoXCJsaVwiKS5yZW1vdmVDbGFzcyhcIm9wZW5cIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoJCh3aW5kb3cpLndpZHRoKCkgPCAxMDgzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICR0aGlzLm5leHQoKS5maW5kKFwiLmxtX19jaGlsZC1zdWItbmF2aWdhdGlvblwiKS5zbGlkZVRvZ2dsZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAvL2NoaWxkTGlzdC5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgLy8gICAgJCh0aGlzKS5maW5kKFwiPmEgLnRvZ2dsZS1pY29uXCIpLm9mZihcImNsaWNrXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgLy8gICAgICAgIHZhciAkdGhpcyA9ICQodGhpcyk7XHJcbiAgICAgICAgICAgIC8vICAgICAgICBjaGlsZExpc3Qubm90KCR0aGlzLnBhcmVudCgpLnBhcmVudCgpKS5maW5kKFwidWxcIikuc2xpZGVVcChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgJCh0aGlzKS5wcmV2KCkuZmluZChcIi50b2dnbGUtaWNvblwiKS5yZW1vdmVDbGFzcyhcIm1pbnVzLXNpZ25cIikuYWRkQ2xhc3MoXCJwbHVzLXNpZ25cIik7XHJcbiAgICAgICAgICAgIC8vICAgICAgICB9KTtcclxuICAgICAgICAgICAgLy8gICAgICAgICR0aGlzLnBhcmVudCgpLm5leHQoKS5zbGlkZVRvZ2dsZShmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgaWYgKCQodGhpcykuY3NzKFwiZGlzcGxheVwiKSA9PSBcIm5vbmVcIikge1xyXG4gICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAkdGhpcy5yZW1vdmVDbGFzcyhcIm1pbnVzLXNpZ25cIikuYWRkQ2xhc3MoXCJwbHVzLXNpZ25cIik7XHJcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgJHRoaXMucmVtb3ZlQ2xhc3MoXCJwbHVzLXNpZ25cIikuYWRkQ2xhc3MoXCJtaW51cy1zaWduXCIpO1xyXG4gICAgICAgICAgICAvLyAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy8gICAgICAgIH0pO1xyXG4gICAgICAgICAgICAvLyAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICAvLyAgICB9KTtcclxuICAgICAgICAgICAgLy99KTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB2YXIgcmVzaXplU3ViTmF2ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgd0hlaWdodCA9ICQod2luZG93KS5oZWlnaHQoKSAtIDUwO1xyXG4gICAgICAgICAgICB2YXIgc3ViSGVpZ2h0ID0gJChcIi5sbV9zdWItc2V0dGluZ3NcIikuaGVpZ2h0KCk7XHJcbiAgICAgICAgICAgIGlmIChzdWJIZWlnaHQgPiB3SGVpZ2h0KSAkKFwiLmxtX3N1Yi1zZXR0aW5nc1wiKS5jc3MoeyBoZWlnaHQ6ICQod2luZG93KS5oZWlnaHQoKSAtIDUwICsgXCJweFwiIH0pO1xyXG4gICAgICAgICAgICBlbHNlICQoXCIubG1fc3ViLXNldHRpbmdzXCIpLmNzcyhcImhlaWdodFwiLCBcImF1dG9cIik7XHJcbiAgICAgICAgICAgIC8vJChcIi5odW1iXCIpLnJlbW92ZUNsYXNzKFwib3BlblwiKTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB2YXIgc2V0SWNvbkZvclBhcmVudE1lbnUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIC8vIHNldCBpY29uIGZvciBtZW51IHdoaWNoIGhhdmUgc3ViIG1lbnVcclxuICAgICAgICAgICAgcGFyZW50TGlzdC5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHZhciAkdGhpcyA9ICQodGhpcyk7XHJcbiAgICAgICAgICAgICAgICBpZiAoJHRoaXMuaGFzKFwiLmxtX19zdWItbmF2aWdhdGlvblwiKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICR0aGlzLmZpbmQoXCI+YVwiKS5hZGRDbGFzcyhcInBsdXMtc2lnblwiKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAvL2NoaWxkTGlzdC5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgLy8gICAgdmFyICR0aGlzID0gJCh0aGlzKTtcclxuICAgICAgICAgICAgLy8gICAgaWYgKCR0aGlzLmhhcyhcIi5sbV9fY2hpbGQtc3ViLW5hdmlnYXRpb25cIikpIHtcclxuICAgICAgICAgICAgLy8gICAgICAgICR0aGlzLmZpbmQoXCI+YSAudG9nZ2xlLWljb25cIikuYWRkQ2xhc3MoXCJwbHVzLXNpZ25cIik7XHJcbiAgICAgICAgICAgIC8vICAgIH1cclxuICAgICAgICAgICAgLy99KTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB2YXIgcmVzcG9uc2l2ZUljb24gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmICgkKHdpbmRvdykud2lkdGgoKSA+PSAxMDgzKSB7XHJcbiAgICAgICAgICAgICAgICBwYXJlbnRMaXN0LmZpbmQoXCI+YVwiKS5hZGRDbGFzcyhcImhpZGUtaWNvblwiKTtcclxuICAgICAgICAgICAgICAgIC8vY2hpbGRMaXN0LmZpbmQoXCI+dWxcIikuaGlkZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcGFyZW50TGlzdC5maW5kKFwiPmFcIikucmVtb3ZlQ2xhc3MoXCJoaWRlLWljb25cIik7XHJcbiAgICAgICAgICAgICAgICAvL2NoaWxkTGlzdC5maW5kKFwiPnVsXCIpLnJlbW92ZUF0dHIoXCJzdHlsZVwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHZhciBzZXRMb2dvdXRVcmwgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmICgkKFwiLmpzLXBhZ2UtaWRlbnRpZmllci1oZWFkZXJcIikubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgdXJsID0gJChcIi5qcy1wYWdlLWlkZW50aWZpZXItaGVhZGVyXCIpLmRhdGEoXCJsb2dvdXQtdXJsXCIpO1xyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsb2dvdXRSZWRpcmVjdFwiKS52YWx1ZSA9IGxvY2F0aW9uLm9yaWdpbiArIHVybDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGluaXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHNldEljb25Gb3JQYXJlbnRNZW51KCk7XHJcbiAgICAgICAgICAgICAgICByZXNwb25zaXZlSWNvbigpO1xyXG5cclxuICAgICAgICAgICAgICAgIHJlbW92ZUFjdGl2ZVN0YXRlKCk7XHJcbiAgICAgICAgICAgICAgICBhZGRUb2dnbGVNZW51KCk7XHJcbiAgICAgICAgICAgICAgICBhZGRTZXR0aW5nRXZlbnQoKTtcclxuICAgICAgICAgICAgICAgIGFkZFVzZXJJbmZvRXZlbnQoKTtcclxuICAgICAgICAgICAgICAgIHJlc2l6ZVN1Yk5hdigpO1xyXG4gICAgICAgICAgICAgICAgc2V0TG9nb3V0VXJsKCk7XHJcblxyXG4gICAgICAgICAgICAgICAgJCh3aW5kb3cpLm9uKFwicmVzaXplIG9yaWVudGF0aW9uY2hhbmdlXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoJCh3aW5kb3cpLndpZHRoKCkgPj0gMTA4MykgJChcIi5sbV9fbWFpbi1uYXZpZ2F0aW9uID4gdWxcIikucmVtb3ZlQXR0cihcInN0eWxlXCIpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICByZXNpemVTdWJOYXYoKTtcclxuICAgICAgICAgICAgICAgICAgICByZXNwb25zaXZlSWNvbigpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgfTtcclxuXHJcbiAgICB2YXIgc2lkZWJhck5hdmlnYXRpb24gPSBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICAgIHZhciBzaWRlYmFyTmF2ID0gJChcIi5sbV9fY2F0ZWdvcnktbmF2ID4gdWwgPiBsaVwiKS5oYXMoXCJ1bFwiKTtcclxuXHJcbiAgICAgICAgdmFyIGFkZEFjY29yZGlvbiA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgc2lkZWJhck5hdi5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGlmICgkKHRoaXMpLmZpbmQoXCJ1bCBsaS5hY3RpdmVcIikubGVuZ3RoID4gMCB8fCAkKHRoaXMpLmhhc0NsYXNzKFwiYWN0aXZlXCIpKSAkKHRoaXMpLmFkZENsYXNzKFwib3BlblwiKS5maW5kKFwidWxcIikuc2xpZGVEb3duKCk7XHJcbiAgICAgICAgICAgICAgICBlbHNlICQodGhpcykucmVtb3ZlQ2xhc3MoXCJvcGVuXCIpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBpbml0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBhZGRBY2NvcmRpb24oKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBtZXNzYWdlSHViID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBnZXRUb3RhbFVucmVhZE1lc3NhZ2UgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmICgkKFwiI3RvdGFsVW5yZWFkXCIpLmxlbmd0aCB8fCAkKFwiI3RvdGFsU3RhcnJlZFwiKS5sZW5ndGgpIHtcclxuICAgICAgICAgICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YVR5cGU6IFwianNvblwiLFxyXG4gICAgICAgICAgICAgICAgICAgIHVybDogXCIvYXBpL3VzZXIvZ2V0LWluYm94LXN0YXRpc3RpY3NcIixcclxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcInBvc3RcIixcclxuICAgICAgICAgICAgICAgICAgICBjYWNoZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEgJiYgZGF0YS50b3RhbFVuUmVhZCA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghJChcIiN0b3RhbFVucmVhZFwiKS5oYXNDbGFzcyhcImxtX19tZXNzYWdlcy1jb3VudFwiKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCIjdG90YWxVbnJlYWRcIikuYWRkQ2xhc3MoXCJsbV9fbWVzc2FnZXMtY291bnRcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiI3RvdGFsVW5yZWFkXCIpLmh0bWwoZGF0YS50b3RhbFVuUmVhZCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJChcIiN0b3RhbFVucmVhZFwiKS5oYXNDbGFzcyhcImxtX19tZXNzYWdlcy1jb3VudFwiKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCIjdG90YWxVbnJlYWRcIikucmVtb3ZlQ2xhc3MoXCJsbV9fbWVzc2FnZXMtY291bnRcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiI3RvdGFsVW5yZWFkXCIpLmh0bWwoXCJcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhICYmIGRhdGEudG90YWxTdGFycmVkID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCEkKFwiI3RvdGFsU3RhcnJlZFwiKS5oYXNDbGFzcyhcImxtX19tZXNzYWdlcy1zdGF0LWNvdW50XCIpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJChcIiN0b3RhbFN0YXJyZWRcIikuYWRkQ2xhc3MoXCJsbV9fbWVzc2FnZXMtc3RhdC1jb3VudFwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCIjdG90YWxTdGFycmVkXCIpLmh0bWwoZGF0YS50b3RhbFN0YXJyZWQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCQoXCIjdG90YWxTdGFycmVkXCIpLmhhc0NsYXNzKFwibG1fX21lc3NhZ2VzLXN0YXQtY291bnRcIikpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiI3RvdGFsU3RhcnJlZFwiKS5yZW1vdmVDbGFzcyhcImxtX19tZXNzYWdlcy1zdGF0LWNvdW50XCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJChcIiN0b3RhbFN0YXJyZWRcIikuaHRtbChcIlwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGluaXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGdldFRvdGFsVW5yZWFkTWVzc2FnZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgIH07XHJcblxyXG4gICAgdmFyIGN1c3RvbWVyTGlzdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgcmVnaXN0ZXJFdmVudEhhbmRsZXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciBjdXN0b21lckNvbnRhaW5lciA9ICQoXCIudXNlci1pZF9fd3JhcHBlci5sbV9fcmFkaW9cIik7XHJcbiAgICAgICAgICAgIGlmICghIWN1c3RvbWVyQ29udGFpbmVyKSB7XHJcbiAgICAgICAgICAgICAgICBjdXN0b21lckNvbnRhaW5lci5vbihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgbmV3Q3VzdG9tZXJObyA9ICQodGhpcykuYXR0cihcImRhdGEtY3VzdG9tZXItbm9cIik7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGN1cnJlbnRBY3RpdmVObyA9ICQoXCJhLmxtX191c2VyLWluZm9cIikuYXR0cihcImRhdGEtYWN0aXZlLU5vXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChuZXdDdXN0b21lck5vID09PSBjdXJyZW50QWN0aXZlTm8pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB2YXIgbmV3Q3VzdG9tZXJOYW1lID0gJCh0aGlzKS5hdHRyKFwiZGF0YS1jdXN0b21lci1uYW1lXCIpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAvLyB1ZHBhdGUgbmV3dmFsdWUgZm9yIHZpZXc7XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi5sbV9fdXNlci1pbmZvIC5sbV9fdXNlci1pZFwiKS5odG1sKG5ld0N1c3RvbWVyTm8pO1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCJhLmxtX191c2VyLWluZm9cIikuYXR0cihcImRhdGEtYWN0aXZlLU5vXCIsIG5ld0N1c3RvbWVyTm8pO1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIubG1fX3VzZXItaW5mbyAubG1fX3VzZXItc3VtbWFyeVwiKS5odG1sKG5ld0N1c3RvbWVyTmFtZSk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICQoXCIjbmV3Q3VzdG9tZXJOdW1iZXJcIikudmFsKG5ld0N1c3RvbWVyTm8pO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vJChcIiNyZWZlcmVuY2VMaW5rXCIpLnZhbCh3aW5kb3cubG9jYXRpb24uaHJlZik7XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIiNjdXN0b21lck51bWJlckZvcm1cIikuc3VibWl0KCk7XHJcblxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBpbml0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICByZWdpc3RlckV2ZW50SGFuZGxlcigpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgIH07XHJcblxyXG4gICAgLy8gZGlzYWJsZSA6aG92ZXIgb24gdG91Y2ggZGV2aWNlc1xyXG4gICAgLy8gYmFzZWQgb24gaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vNDQwNDUwM1xyXG4gICAgLy8gdmlhIGh0dHBzOi8vdHdpdHRlci5jb20vamF2YW4vc3RhdHVzLzI4NDg3MzM3OTA2Mjg5MDQ5NlxyXG4gICAgLy8gKyBodHRwczovL3R3aXR0ZXIuY29tL3Blbm5pZy9zdGF0dXMvMjg1NzkwNTk4NjQyOTQ2MDQ4XHJcbiAgICAvLyByZSBodHRwOi8vcmV0cm9nYW1lY3J1bmNoLmNvbS90bXAvaG92ZXJcclxuICAgIC8vIE5PVEU6IHdlIHNob3VsZCB1c2UgLm5vLXRvdWNoIGNsYXNzIG9uIENTU1xyXG4gICAgLy8gaW5zdGVhZCBvZiByZWx5aW5nIG9uIHRoaXMgSlMgY29kZVxyXG4gICAgZnVuY3Rpb24gcmVtb3ZlSG92ZXJDc3NSdWxlKCkge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIHZhciBpZ25vcmUgPSAvOmhvdmVyLztcclxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBkb2N1bWVudC5zdHlsZVNoZWV0cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgdmFyIHNoZWV0ID0gZG9jdW1lbnQuc3R5bGVTaGVldHNbaV07XHJcbiAgICAgICAgICAgICAgICBpZiAoIXNoZWV0LmNzc1J1bGVzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBqID0gc2hlZXQuY3NzUnVsZXMubGVuZ3RoIC0gMTsgaiA+PSAwOyBqLS0pIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgcnVsZSA9IHNoZWV0LmNzc1J1bGVzW2pdO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChydWxlLnR5cGUgPT09IENTU1J1bGUuU1RZTEVfUlVMRSAmJiBpZ25vcmUudGVzdChydWxlLnNlbGVjdG9yVGV4dCkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2hlZXQuZGVsZXRlUnVsZShqKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgY2F0Y2ggKGUpIHtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gYWRqdXN0U3RpY2t5SGVhZGVyV2lkdGgoKSB7XHJcbiAgICAgICAgdmFyIGNvbnRlbnRXaWR0aCA9ICQoXCIubG1fX2NvbnRlbnRzXCIpLndpZHRoKCk7XHJcbiAgICAgICAgdmFyIHN0aWNreUhlYWRlciA9ICQoXCIuc3RpY2t5LWhlYWRlclwiKTtcclxuICAgICAgICB2YXIgbGVmdENvbHVtbiA9ICQoXCIuaW50ZXJuYWwtcGFnZSA+IC53cmFwcGVyID4ubGF5b3V0ID4gLmxheW91dF9faXRlbTpmaXJzdC1jaGlsZFwiKS53aWR0aCgpO1xyXG4gICAgICAgIHZhciBpbnRlcm5hbE5hdiA9ICQoXCIuaW50ZXJuYWwtbmF2aWdhdGlvblwiKTtcclxuXHJcbiAgICAgICAgaWYgKHN0aWNreUhlYWRlci5oYXNDbGFzcyhcImZpeGVkXCIpKSB7XHJcbiAgICAgICAgICAgIHN0aWNreUhlYWRlci5jc3MoeyB3aWR0aDogY29udGVudFdpZHRoICsgXCJweFwiIH0pO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHN0aWNreUhlYWRlci5yZW1vdmVBdHRyKFwic3R5bGVcIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGludGVybmFsTmF2LmNzcyh7IFwid2lkdGhcIjogbGVmdENvbHVtbiB9KTtcclxuICAgIH1cclxuXHJcbiAgICAkKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKCQoXCIubG1fX25hdmlnYXRpb24td3JhcHBlclwiKSAhPSB1bmRlZmluZWQgJiYgJChcIi5sbV9fbmF2aWdhdGlvbi13cmFwcGVyXCIpICE9IG51bGwgJiYgJChcIi5sbV9fbmF2aWdhdGlvbi13cmFwcGVyXCIpLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgLy8gQ2xpZW50IFNpdGVzIC0gTWFpbiBOYXZpZ2F0aW9uXHJcbiAgICAgICAgICAgIGlmICgkKFwiLmxtX19uYXZpZ2F0aW9uLXdyYXBwZXJcIikubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgJCh3aW5kb3cpLnNjcm9sbChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCQodGhpcykuc2Nyb2xsVG9wKCkgPiAkKFwiLmxtX19uYXZpZ2F0aW9uLXdyYXBwZXJcIikub2Zmc2V0KCkudG9wKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoXCIubG1fX25hdmlnYXRpb25cIikuYWRkQ2xhc3MoXCJmaXhlZFwiKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCQodGhpcykuc2Nyb2xsVG9wKCkgPD0gJChcIi5sbV9fbmF2aWdhdGlvbi13cmFwcGVyXCIpLm9mZnNldCgpLnRvcCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKFwiLmxtX19uYXZpZ2F0aW9uXCIpLnJlbW92ZUNsYXNzKFwiZml4ZWRcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHZhciBoZWFkZXJNYWluTmF2ID0gbmV3IGhlYWRlck1haW5OYXZpZ2F0aW9uKCk7XHJcbiAgICAgICAgICAgIGhlYWRlck1haW5OYXYuaW5pdCgpO1xyXG5cclxuICAgICAgICAgICAgdmFyIHNpZGViYXJOYXYgPSBuZXcgc2lkZWJhck5hdmlnYXRpb24oKTtcclxuICAgICAgICAgICAgc2lkZWJhck5hdi5pbml0KCk7XHJcbiAgICAgICAgICAgIHZhciBtaCA9IG5ldyBtZXNzYWdlSHViKCk7XHJcbiAgICAgICAgICAgIG1oLmluaXQoKTtcclxuXHJcbiAgICAgICAgICAgIC8vIGNoYW5nZSBjdXN0b21lciBudW1iZXJcclxuICAgICAgICAgICAgaWYgKCEhJChcIiNjdXN0b21lcl9saXN0X3NlbGVjdGlvblwiKSkge1xyXG4gICAgICAgICAgICAgICAgJChcIiNjdXN0b21lcl9saXN0X3NlbGVjdGlvblwiKS5vbihcImNoYW5nZVwiLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBmb3JtID0gJChlLnRhcmdldCkucGFyZW50cyhcImZvcm1cIik7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9ybS5zdWJtaXQoKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB2YXIgY2wgPSBuZXcgY3VzdG9tZXJMaXN0KCk7XHJcbiAgICAgICAgICAgIGNsLmluaXQoKTtcclxuXHJcbiAgICAgICAgICAgIGlmIChpc1RvdWNoRGV2aWNlKCkpIHtcclxuICAgICAgICAgICAgICAgIHJlbW92ZUhvdmVyQ3NzUnVsZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBJbnRlcm5hbCBTaXRlcyAtIFNlYXJjaCBib3hcclxuICAgICAgICBpZiAoJChcIi5sbV9faGVhZGVyLmludGVybmFsLXBhZ2VcIikubGVuZ3RoKSB7XHJcblxyXG5cclxuICAgICAgICAgICAgJCh3aW5kb3cpLnNjcm9sbChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoJCh0aGlzKS5zY3JvbGxUb3AoKSA+ICQoXCIubG1fX2hlYWRlci5pbnRlcm5hbC1wYWdlXCIpLm9mZnNldCgpLnRvcCkge1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIuc3RpY2t5LWhlYWRlclwiKS5hZGRDbGFzcyhcImZpeGVkXCIpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC5jc3MoeyB3aWR0aDogJChcIi5sbV9fY29udGVudHNcIikud2lkdGgoKSArIFwicHhcIiB9KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmICgkKHRoaXMpLnNjcm9sbFRvcCgpIDw9ICQoXCIubG1fX2hlYWRlci5pbnRlcm5hbC1wYWdlXCIpLm9mZnNldCgpLnRvcCkge1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIuc3RpY2t5LWhlYWRlclwiKS5yZW1vdmVDbGFzcyhcImZpeGVkXCIpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC5yZW1vdmVBdHRyKFwic3R5bGVcIik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgJCh3aW5kb3cpLnJlc2l6ZShmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBhZGp1c3RTdGlja3lIZWFkZXJXaWR0aCgpO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIGFkanVzdFN0aWNreUhlYWRlcldpZHRoKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChHcm9Db21tb24pIHtcclxuICAgICAgICAgICAgR3JvQ29tbW9uLmhhbmRsZUV4dGVybmFsTGluaygpO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG5cclxufSk7XHJcbiIsIlxyXG4kKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoKSB7XHJcbiAgICAkKFwiI2hlYWRlci1pbnRlcm5hbC1zZWFyY2ggLmRyb3Bkb3duIGxpIGFcIikuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBzZWFyY2hPcHRpb24gPSAkKHRoaXMpLmF0dHIoXCJkYXRhLXZhbHVlXCIpO1xyXG4gICAgICAgICQoXCIjc2VhcmNoT3B0aW9uXCIpLnZhbChzZWFyY2hPcHRpb24pO1xyXG4gICAgfSk7XHJcbiAgICAkKFwiYnV0dG9uI2ludGVybmFsLXNlYXJjaFwiKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIHNlYXJjaEtleSA9ICQoXCIjaW5wdXQta2V5LXNlYXJjaFwiKS52YWwoKTtcclxuICAgICAgICBpZiAoc2VhcmNoS2V5LnRyaW0oKSAhPT0gXCJcIikge1xyXG4gICAgICAgICAgICAkKFwiI3NlYXJjaEtleVwiKS52YWwoc2VhcmNoS2V5KTtcclxuICAgICAgICAgICAgJChcIiNpbnRlcm5hbFNlYXJjaEZvcm1cIikuc3VibWl0KCk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgJChcImhlYWRlci5pbnRlcm5hbC1wYWdlIGEuY2xvc2UtYnRuXCIpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAoJCh0aGlzKS5jbG9zZXN0KFwiI2N1c3RvbWVyLXBvcHVwXCIpLmhhc0NsYXNzKCdvcGVuJykpIHtcclxuICAgICAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgICAgIGRhdGFUeXBlOiBcImpzb25cIixcclxuICAgICAgICAgICAgICAgIHVybDogJy9pbnRlcm5hbC1wb3J0YWwvY2xvc2UtY3VzdG9tZXItc2Vzc2lvbicsXHJcbiAgICAgICAgICAgICAgICB0eXBlOiAnZ2V0JyxcclxuICAgICAgICAgICAgICAgIGNhY2hlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gcmVsb2FkIHRoZSBwYWdlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxvY2F0aW9uLnJlbG9hZCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG59KTtcclxuXHJcbiIsIi8qIFBST0dSRVNTIENJUkNMRSBDT01QT05FTlQgKi9cclxuKGZ1bmN0aW9uICgkKSB7XHJcblxyXG4gICAgJC5mbi5jaXJjbGlmdWwgPSBmdW5jdGlvbiAob3B0aW9ucywgY2FsbGJhY2spIHtcclxuXHJcbiAgICAgICAgdmFyIHNldHRpbmdzID0gJC5leHRlbmQoe1xyXG4gICAgICAgICAgICAvLyBUaGVzZSBhcmUgdGhlIGRlZmF1bHRzLlxyXG4gICAgICAgICAgICBzdGFydGRlZ3JlZTogMCxcclxuICAgICAgICAgICAgZmdjb2xvcjogXCIjNTU2YjJmXCIsXHJcbiAgICAgICAgICAgIGJnY29sb3I6IFwiI2VlZVwiLFxyXG4gICAgICAgICAgICBmaWxsOiBmYWxzZSxcclxuICAgICAgICAgICAgd2lkdGg6IDE1LFxyXG4gICAgICAgICAgICBkaW1lbnNpb246IDIwMCxcclxuICAgICAgICAgICAgZm9udHNpemU6IDE1LFxyXG4gICAgICAgICAgICBwZXJjZW50OiA1MCxcclxuICAgICAgICAgICAgYW5pbWF0aW9uc3RlcDogMS4wLFxyXG4gICAgICAgICAgICBpY29uc2l6ZTogJzIwcHgnLFxyXG4gICAgICAgICAgICBpY29uY29sb3I6ICcjOTk5JyxcclxuICAgICAgICAgICAgYm9yZGVyOiAnZGVmYXVsdCcsXHJcbiAgICAgICAgICAgIGNvbXBsZXRlOiBudWxsLFxyXG4gICAgICAgICAgICBib3JkZXJzaXplOiAxMFxyXG4gICAgICAgIH0sIG9wdGlvbnMpO1xyXG5cclxuICAgICAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICAgICAgICAgIHZhciBjdXN0b21TZXR0aW5ncyA9IFtcImZnY29sb3JcIiwgXCJiZ2NvbG9yXCIsIFwiZmlsbFwiLCBcIndpZHRoXCIsIFwiZGltZW5zaW9uXCIsIFwiZm9udHNpemVcIiwgXCJhbmltYXRpb25zdGVwXCIsIFwiZW5kUGVyY2VudFwiLCBcImljb25cIiwgXCJpY29uY29sb3JcIiwgXCJpY29uc2l6ZVwiLCBcImJvcmRlclwiLCBcInN0YXJ0ZGVncmVlXCIsIFwiYm9yZGVyc2l6ZVwiXTtcclxuXHJcbiAgICAgICAgICAgIHZhciBjdXN0b21TZXR0aW5nc09iaiA9IHt9O1xyXG4gICAgICAgICAgICB2YXIgaWNvbiA9ICcnO1xyXG4gICAgICAgICAgICB2YXIgZW5kUGVyY2VudCA9IDA7XHJcbiAgICAgICAgICAgIHZhciBvYmogPSAkKHRoaXMpO1xyXG4gICAgICAgICAgICB2YXIgZmlsbCA9IGZhbHNlO1xyXG4gICAgICAgICAgICB2YXIgdGV4dCwgaW5mbztcclxuXHJcbiAgICAgICAgICAgIG9iai5hZGRDbGFzcygnY2lyY2xpZnVsJyk7XHJcblxyXG4gICAgICAgICAgICBjaGVja0RhdGFBdHRyaWJ1dGVzKG9iaik7XHJcblxyXG4gICAgICAgICAgICBpZiAob2JqLmRhdGEoJ3RleHQnKSAhPSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICAgIHRleHQgPSBvYmouZGF0YSgndGV4dCcpO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmIChvYmouZGF0YSgnaWNvbicpICE9IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGljb24gPSAkKCc8aT48L2k+JylcclxuICAgICAgICAgICAgICAgICAgICAgICAgLmFkZENsYXNzKCdmYSAnICsgJCh0aGlzKS5kYXRhKCdpY29uJykpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC5jc3Moe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2NvbG9yJzogY3VzdG9tU2V0dGluZ3NPYmouaWNvbmNvbG9yLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2ZvbnQtc2l6ZSc6IGN1c3RvbVNldHRpbmdzT2JqLmljb25zaXplXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIGlmIChvYmouZGF0YSgndHlwZScpICE9IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHR5cGUgPSAkKHRoaXMpLmRhdGEoJ3R5cGUnKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGUgPT0gJ2hhbGYnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFkZENpcmNsZVRleHQob2JqLCAnY2lyY2xlLXRleHQtaGFsZicsIChjdXN0b21TZXR0aW5nc09iai5kaW1lbnNpb24gLyAxLjQ1KSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYWRkQ2lyY2xlVGV4dChvYmosICdjaXJjbGUtdGV4dCcsIGN1c3RvbVNldHRpbmdzT2JqLmRpbWVuc2lvbik7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBhZGRDaXJjbGVUZXh0KG9iaiwgJ2NpcmNsZS10ZXh0JywgY3VzdG9tU2V0dGluZ3NPYmouZGltZW5zaW9uKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYgKCQodGhpcykuZGF0YShcInRvdGFsXCIpICE9IHVuZGVmaW5lZCAmJiAkKHRoaXMpLmRhdGEoXCJwYXJ0XCIpICE9IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIHRvdGFsID0gJCh0aGlzKS5kYXRhKFwidG90YWxcIikgLyAxMDA7XHJcblxyXG4gICAgICAgICAgICAgICAgcGVyY2VudCA9ICgoJCh0aGlzKS5kYXRhKFwicGFydFwiKSAvIHRvdGFsKSAvIDEwMCkudG9GaXhlZCgzKTtcclxuICAgICAgICAgICAgICAgIGVuZFBlcmNlbnQgPSAoJCh0aGlzKS5kYXRhKFwicGFydFwiKSAvIHRvdGFsKS50b0ZpeGVkKDMpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgaWYgKCQodGhpcykuZGF0YShcInBlcmNlbnRcIikgIT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcGVyY2VudCA9ICQodGhpcykuZGF0YShcInBlcmNlbnRcIikgLyAxMDA7XHJcbiAgICAgICAgICAgICAgICAgICAgZW5kUGVyY2VudCA9ICQodGhpcykuZGF0YShcInBlcmNlbnRcIik7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHBlcmNlbnQgPSBzZXR0aW5ncy5wZXJjZW50IC8gMTAwO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAoJCh0aGlzKS5kYXRhKCdpbmZvJykgIT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgICAgICBpbmZvID0gJCh0aGlzKS5kYXRhKCdpbmZvJyk7XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKCQodGhpcykuZGF0YSgndHlwZScpICE9IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHR5cGUgPSAkKHRoaXMpLmRhdGEoJ3R5cGUnKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGUgPT0gJ2hhbGYnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFkZEluZm9UZXh0KG9iaiwgMC45KTtcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBhZGRJbmZvVGV4dChvYmosIDEuMjUpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYWRkSW5mb1RleHQob2JqLCAxLjI1KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJCh0aGlzKS53aWR0aChjdXN0b21TZXR0aW5nc09iai5kaW1lbnNpb24gKyAncHgnKTtcclxuXHJcbiAgICAgICAgICAgIHZhciBjYW52YXMgPSAkKCc8Y2FudmFzPjwvY2FudmFzPicpLmF0dHIoe1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IGN1c3RvbVNldHRpbmdzT2JqLmRpbWVuc2lvbixcclxuICAgICAgICAgICAgICAgIGhlaWdodDogY3VzdG9tU2V0dGluZ3NPYmouZGltZW5zaW9uXHJcbiAgICAgICAgICAgIH0pLmFwcGVuZFRvKCQodGhpcykpLmdldCgwKTtcclxuXHJcbiAgICAgICAgICAgIHZhciBjb250ZXh0ID0gY2FudmFzLmdldENvbnRleHQoJzJkJyk7XHJcbiAgICAgICAgICAgIHZhciBjb250YWluZXIgPSAkKGNhbnZhcykucGFyZW50KCk7XHJcbiAgICAgICAgICAgIHZhciB4ID0gY2FudmFzLndpZHRoIC8gMjtcclxuICAgICAgICAgICAgdmFyIHkgPSBjYW52YXMuaGVpZ2h0IC8gMjtcclxuICAgICAgICAgICAgdmFyIGRlZ3JlZXMgPSBjdXN0b21TZXR0aW5nc09iai5wZXJjZW50ICogMzYwLjA7XHJcbiAgICAgICAgICAgIHZhciByYWRpYW5zID0gZGVncmVlcyAqIChNYXRoLlBJIC8gMTgwKTtcclxuICAgICAgICAgICAgdmFyIHJhZGl1cyA9IGNhbnZhcy53aWR0aCAvIDIuNTtcclxuICAgICAgICAgICAgdmFyIHN0YXJ0QW5nbGUgPSAyLjMgKiBNYXRoLlBJO1xyXG4gICAgICAgICAgICB2YXIgZW5kQW5nbGUgPSAwO1xyXG4gICAgICAgICAgICB2YXIgY291bnRlckNsb2Nrd2lzZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICB2YXIgY3VyUGVyYyA9IGN1c3RvbVNldHRpbmdzT2JqLmFuaW1hdGlvbnN0ZXAgPT09IDAuMCA/IGVuZFBlcmNlbnQgOiAwLjA7XHJcbiAgICAgICAgICAgIHZhciBjdXJTdGVwID0gTWF0aC5tYXgoY3VzdG9tU2V0dGluZ3NPYmouYW5pbWF0aW9uc3RlcCwgMC4wKTtcclxuICAgICAgICAgICAgdmFyIGNpcmMgPSBNYXRoLlBJICogMjtcclxuICAgICAgICAgICAgdmFyIHF1YXJ0ID0gTWF0aC5QSSAvIDI7XHJcbiAgICAgICAgICAgIHZhciB0eXBlID0gJyc7XHJcbiAgICAgICAgICAgIHZhciBmaXJlQ2FsbGJhY2sgPSB0cnVlO1xyXG4gICAgICAgICAgICB2YXIgYWRkaXRpb25hbEFuZ2VsUEkgPSAoY3VzdG9tU2V0dGluZ3NPYmouc3RhcnRkZWdyZWUgLyAxODApICogTWF0aC5QSTtcclxuXHJcbiAgICAgICAgICAgIGlmICgkKHRoaXMpLmRhdGEoJ3R5cGUnKSAhPSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICAgIHR5cGUgPSAkKHRoaXMpLmRhdGEoJ3R5cGUnKTtcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAodHlwZSA9PSAnaGFsZicpIHtcclxuICAgICAgICAgICAgICAgICAgICBzdGFydEFuZ2xlID0gMi4wICogTWF0aC5QSTtcclxuICAgICAgICAgICAgICAgICAgICBlbmRBbmdsZSA9IDMuMTM7XHJcbiAgICAgICAgICAgICAgICAgICAgY2lyYyA9IE1hdGguUEk7XHJcbiAgICAgICAgICAgICAgICAgICAgcXVhcnQgPSBNYXRoLlBJIC8gMC45OTY7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8qKlxyXG4gICAgICAgICAgICAgKiBhZGRzIHRleHQgdG8gY2lyY2xlXHJcbiAgICAgICAgICAgICAqXHJcbiAgICAgICAgICAgICAqIEBwYXJhbSBvYmpcclxuICAgICAgICAgICAgICogQHBhcmFtIGNzc0NsYXNzXHJcbiAgICAgICAgICAgICAqIEBwYXJhbSBsaW5lSGVpZ2h0XHJcbiAgICAgICAgICAgICAqL1xyXG4gICAgICAgICAgICBmdW5jdGlvbiBhZGRDaXJjbGVUZXh0KG9iaiwgY3NzQ2xhc3MsIGxpbmVIZWlnaHQpIHtcclxuICAgICAgICAgICAgICAgICQoXCI8c3Bhbj48L3NwYW4+XCIpXHJcbiAgICAgICAgICAgICAgICAgICAgLmFwcGVuZFRvKG9iailcclxuICAgICAgICAgICAgICAgICAgICAuYWRkQ2xhc3MoY3NzQ2xhc3MpXHJcbiAgICAgICAgICAgICAgICAgICAgLnRleHQodGV4dClcclxuICAgICAgICAgICAgICAgICAgICAucHJlcGVuZChpY29uKVxyXG4gICAgICAgICAgICAgICAgICAgIC5jc3Moe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAnbGluZS1oZWlnaHQnOiBsaW5lSGVpZ2h0ICsgJ3B4JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ2ZvbnQtc2l6ZSc6IGN1c3RvbVNldHRpbmdzT2JqLmZvbnRzaXplICsgJ3B4JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ2NvbG9yJzogcGFyc2VJbnQodGV4dCkgPiAwID8gY3VzdG9tU2V0dGluZ3NPYmouZmdjb2xvciA6IGN1c3RvbVNldHRpbmdzT2JqLmJnY29sb3JcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLyoqXHJcbiAgICAgICAgICAgICAqIGFkZHMgaW5mbyB0ZXh0IHRvIGNpcmNsZVxyXG4gICAgICAgICAgICAgKlxyXG4gICAgICAgICAgICAgKiBAcGFyYW0gb2JqXHJcbiAgICAgICAgICAgICAqIEBwYXJhbSBmYWN0b3JcclxuICAgICAgICAgICAgICovXHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIGFkZEluZm9UZXh0KG9iaiwgZmFjdG9yKSB7XHJcbiAgICAgICAgICAgICAgICAkKCc8c3Bhbj48L3NwYW4+JylcclxuICAgICAgICAgICAgICAgICAgICAuYXBwZW5kVG8ob2JqKVxyXG4gICAgICAgICAgICAgICAgICAgIC5hZGRDbGFzcygnY2lyY2xlLWluZm8taGFsZicpXHJcbiAgICAgICAgICAgICAgICAgICAgLmNzcyhcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ2xpbmUtaGVpZ2h0JywgKGN1c3RvbVNldHRpbmdzT2JqLmRpbWVuc2lvbiAqIGZhY3RvcikgKyAncHgnXHJcbiAgICAgICAgICAgICAgICAgICAgKVxyXG4gICAgICAgICAgICAgICAgICAgIC50ZXh0KGluZm8pO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAvKipcclxuICAgICAgICAgICAgICogY2hlY2tzIHdoaWNoIGRhdGEgYXR0cmlidXRlcyBhcmUgZGVmaW5lZFxyXG4gICAgICAgICAgICAgKiBAcGFyYW0gb2JqXHJcbiAgICAgICAgICAgICAqL1xyXG4gICAgICAgICAgICBmdW5jdGlvbiBjaGVja0RhdGFBdHRyaWJ1dGVzKG9iaikge1xyXG4gICAgICAgICAgICAgICAgJC5lYWNoKGN1c3RvbVNldHRpbmdzLCBmdW5jdGlvbiAoaW5kZXgsIGF0dHJpYnV0ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChvYmouZGF0YShhdHRyaWJ1dGUpICE9IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjdXN0b21TZXR0aW5nc09ialthdHRyaWJ1dGVdID0gb2JqLmRhdGEoYXR0cmlidXRlKTtcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjdXN0b21TZXR0aW5nc09ialthdHRyaWJ1dGVdID0gJChzZXR0aW5ncykuYXR0cihhdHRyaWJ1dGUpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGF0dHJpYnV0ZSA9PSAnZmlsbCcgJiYgb2JqLmRhdGEoJ2ZpbGwnKSAhPSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZmlsbCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8qKlxyXG4gICAgICAgICAgICAgKiBhbmltYXRlIGZvcmVncm91bmQgY2lyY2xlXHJcbiAgICAgICAgICAgICAqIEBwYXJhbSBjdXJyZW50XHJcbiAgICAgICAgICAgICAqL1xyXG4gICAgICAgICAgICBmdW5jdGlvbiBhbmltYXRlKGN1cnJlbnQpIHtcclxuXHJcbiAgICAgICAgICAgICAgICBjb250ZXh0LmNsZWFyUmVjdCgwLCAwLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpO1xyXG5cclxuICAgICAgICAgICAgICAgIGNvbnRleHQuYmVnaW5QYXRoKCk7XHJcbiAgICAgICAgICAgICAgICBjb250ZXh0LmFyYyh4LCB5LCByYWRpdXMsIGVuZEFuZ2xlLCBzdGFydEFuZ2xlLCBmYWxzZSk7XHJcblxyXG4gICAgICAgICAgICAgICAgY29udGV4dC5saW5lV2lkdGggPSBjdXN0b21TZXR0aW5nc09iai5ib3JkZXJzaXplICsgMTtcclxuXHJcbiAgICAgICAgICAgICAgICBjb250ZXh0LnN0cm9rZVN0eWxlID0gY3VzdG9tU2V0dGluZ3NPYmouYmdjb2xvcjtcclxuICAgICAgICAgICAgICAgIGNvbnRleHQuc3Ryb2tlKCk7XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKGZpbGwpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb250ZXh0LmZpbGxTdHlsZSA9IGN1c3RvbVNldHRpbmdzT2JqLmZpbGw7XHJcbiAgICAgICAgICAgICAgICAgICAgY29udGV4dC5maWxsKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgY29udGV4dC5iZWdpblBhdGgoKTtcclxuICAgICAgICAgICAgICAgIGNvbnRleHQuYXJjKHgsIHksIHJhZGl1cywgLShxdWFydCkgKyBhZGRpdGlvbmFsQW5nZWxQSSwgKChjaXJjKSAqIGN1cnJlbnQpIC0gcXVhcnQgKyBhZGRpdGlvbmFsQW5nZWxQSSwgZmFsc2UpO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmIChjdXN0b21TZXR0aW5nc09iai5ib3JkZXIgPT0gJ291dGxpbmUnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29udGV4dC5saW5lV2lkdGggPSBjdXN0b21TZXR0aW5nc09iai53aWR0aCArIDEzO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChjdXN0b21TZXR0aW5nc09iai5ib3JkZXIgPT0gJ2lubGluZScpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb250ZXh0LmxpbmVXaWR0aCA9IGN1c3RvbVNldHRpbmdzT2JqLndpZHRoIC0gMTM7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgY29udGV4dC5zdHJva2VTdHlsZSA9IGN1c3RvbVNldHRpbmdzT2JqLmZnY29sb3I7XHJcbiAgICAgICAgICAgICAgICBjb250ZXh0LnN0cm9rZSgpO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmIChjdXJQZXJjIDwgZW5kUGVyY2VudCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGN1clBlcmMgKz0gY3VyU3RlcDtcclxuICAgICAgICAgICAgICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBhbmltYXRlKE1hdGgubWluKGN1clBlcmMsIGVuZFBlcmNlbnQpIC8gMTAwKTtcclxuICAgICAgICAgICAgICAgICAgICB9LCBvYmopO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIGlmIChjdXJQZXJjID09IGVuZFBlcmNlbnQgJiYgZmlyZUNhbGxiYWNrICYmIHR5cGVvZiAob3B0aW9ucykgIT0gXCJ1bmRlZmluZWRcIikge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICgkLmlzRnVuY3Rpb24ob3B0aW9ucy5jb21wbGV0ZSkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9ucy5jb21wbGV0ZSgpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgZmlyZUNhbGxiYWNrID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBhbmltYXRlKGN1clBlcmMgLyAxMDApO1xyXG5cclxuICAgICAgICB9KTtcclxuICAgIH07XHJcblxyXG4gICAgJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQoJy5jaXJjbGUtcHJvZ3Jlc3MnKS5jaXJjbGlmdWwoKTtcclxuICAgIH0pO1xyXG59KGpRdWVyeSkpO1xyXG4iLCIkKGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBtb2RhbCA9ICQoXCIubG1fX21vZGFsLWFsZXJ0XCIpO1xyXG4gICAgdmFyIGNvbnRhaW5lckRhdGEgPSBtb2RhbC5maW5kKFwiLmxtX19tb2RhbC1kaWFsb2dcIik7XHJcblxyXG4gICAgdmFyIGFncmVlbWVudERhdGEgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIG1vZGFsID0gJChcIi5sbV9fbW9kYWwtYWxlcnRcIik7XHJcbiAgICAgICAgdmFyIGNsb3NlTW9kYWwgPSBtb2RhbC5maW5kKFwiLm1vZGFsLWNsb3NlXCIpO1xyXG4gICAgICAgIHZhciBsb2FkaW5nSWNvbiA9IG1vZGFsLmZpbmQoXCIubG9hZGVyLXdyYXBwZXJcIik7XHJcbiAgICAgICAgdmFyIGNvbmZpcm0gPSBtb2RhbC5maW5kKFwiLnN1Y2Nlc3MtY29uZmlybVwiKTtcclxuXHJcbiAgICAgICAgdmFyIGNsb3NlTW9kYWxBbGVydCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgbW9kYWwuZmFkZU91dChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBjb250YWluZXJEYXRhLmZpbmQoXCIubW9kYWwtaGVhZGVyLXRpdGxlXCIpLmNsb3Nlc3QoXCIubW9kYWwtaW5qZWN0ZWQtY29udGVudFwiKS5yZW1vdmUoKTtcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICBsb2FkaW5nSWNvbi5mYWRlSW4oKTtcclxuXHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB2YXIgYWRkRXZlbnRzID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBtb2RhbC5iaW5kKFwiY2xpY2tcIiwgY2xvc2VNb2RhbEFsZXJ0KTtcclxuICAgICAgICAgICAgY29udGFpbmVyRGF0YS5iaW5kKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGV2ZW50KSB7IGV2ZW50LnByZXZlbnREZWZhdWx0KCk7IHJldHVybiBmYWxzZTsgfSk7XHJcbiAgICAgICAgICAgIGNsb3NlTW9kYWwuYmluZChcImNsaWNrXCIsIGNsb3NlTW9kYWxBbGVydCk7XHJcbiAgICAgICAgICAgIGNvbmZpcm0uYmluZChcImNsaWNrXCIsIGNsb3NlTW9kYWxBbGVydCk7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgaW5pdDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgYWRkRXZlbnRzKCk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICB9O1xyXG5cclxuICAgIGZ1bmN0aW9uIGJpbmREYXRhKGRhdGEpIHtcclxuICAgICAgICB2YXIgbG9hZGluZ0ljb24gPSBtb2RhbC5maW5kKFwiLmxvYWRlci13cmFwcGVyXCIpO1xyXG4gICAgICAgICQoXCIubW9kYWwtY29udGVudC13cmFwcGVyXCIpLnByZXBlbmQoZGF0YSk7XHJcbiAgICAgICAgbG9hZGluZ0ljb24uZmFkZU91dCgpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGdldFVybFBhcmFtZXRlcihzUGFyYW0pIHtcclxuICAgICAgICB2YXIgc1BhZ2VVcmwgPSB3aW5kb3cubG9jYXRpb24uc2VhcmNoLnN1YnN0cmluZygxKTtcclxuICAgICAgICB2YXIgc1VybFZhcmlhYmxlcyA9IHNQYWdlVXJsLnNwbGl0KFwiJlwiKTtcclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNVcmxWYXJpYWJsZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgdmFyIHNQYXJhbWV0ZXJOYW1lID0gc1VybFZhcmlhYmxlc1tpXS5zcGxpdChcIj1cIik7XHJcbiAgICAgICAgICAgIGlmIChzUGFyYW1ldGVyTmFtZVswXSA9PT0gc1BhcmFtKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gc1BhcmFtZXRlck5hbWVbMV07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuICcnO1xyXG4gICAgfVxyXG5cclxuICAgICQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICAgICAgLy8gZW5oYW5jZSB0YWJsZSBzYXcgdG8gbWFrZSByZXNwb25zaXZlIHRhYmxlXHJcbiAgICAgICAgJChkb2N1bWVudCkudHJpZ2dlcihcImVuaGFuY2UudGFibGVzYXdcIik7XHJcblxyXG4gICAgICAgIHZhciBhZCA9IG5ldyBhZ3JlZW1lbnREYXRhKCk7XHJcbiAgICAgICAgYWQuaW5pdCgpO1xyXG5cclxuICAgICAgICBpZiAoJChcIi5zZWVkRGl2XCIpLmxlbmd0aCkge1xyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIExvYWQgb3RoZXIgdGFicy9BZ3JlZW1lbnRzIGluIHRoZSBiYWNrZ3JvdW5kIHdoZW4gcGFnZSBpcyBsb2FkZWQuXHJcbiAgICAgICAgaWYgKCQoXCIubXktYWdyZWVtZW50cy1vdmVydmlld1wiKS5sZW5ndGgpIHtcclxuICAgICAgICAgICAgdmFyIHRhYiA9IGdldFVybFBhcmFtZXRlcihcInRhYlwiKTtcclxuICAgICAgICAgICAgdmFyIGN1cnJlbnRQYWdlSWQgPSAkKFwiI0N1cnJlbnRQYWdlSWRcIikudmFsKCk7XHJcbiAgICAgICAgICAgIHZhciBmb3JhZ2VVcmwgPSBcIi9hcGkvbXlhZ3JlZW1lbnRzL2ZvcmFnZVwiO1xyXG4gICAgICAgICAgICB2YXIgZmVlZFVybCA9IFwiL2FwaS9teWFncmVlbWVudHMvZmVlZFwiO1xyXG4gICAgICAgICAgICB2YXIgc2VlZFVybCA9IFwiL2FwaS9teWFncmVlbWVudHMvc2VlZFwiO1xyXG4gICAgICAgICAgICB2YXIgZ3JhaW5VcmwgPSBcIi9hcGkvbXlhZ3JlZW1lbnRzL2dyYWluXCI7XHJcbiAgICAgICAgICAgIHZhciBtZXJjaGFuZGlzZVVybCA9IFwiL2FwaS9teWFncmVlbWVudHMvbWVyY2hhbmRpc2VcIjtcclxuXHJcbiAgICAgICAgICAgIC8vIElmIHVzZXIgZ29lcyB0byBzZWVkIGFncmVlbWVudHMgd2l0aCB0b2dnbGUgYWN0aXZhdGVkLCBnZXQgYXJ0aWNsZXMgZnJvbSBiYWNrZW5kLlxyXG4gICAgICAgICAgICBpZiAodGFiID09PSBcInNlZWRcIikge1xyXG4gICAgICAgICAgICAgICAgdmFyIHRvZ2dsZSA9IGdldFVybFBhcmFtZXRlcihcInRvZ2dsZVwiKTtcclxuICAgICAgICAgICAgICAgIHZhciBhZ3JlZW1lbnROdW1iZXIgPSAoKHRvZ2dsZSkgPyB0b2dnbGUucmVwbGFjZSgvXlxcRCsvZywgJycpIDogJycpOyAvLyByZXBsYWNlIGFsbCBsZWFkaW5nIG5vbi1kaWdpdHMgd2l0aCBub3RoaW5nXHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKGFncmVlbWVudE51bWJlcikge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciB1cmwgPSBcIi9hcGkvc2VlZGFncmVlbWVudC9nZXRjb25uZWN0ZWRzZWVkYWdyZWVtZW50c1wiO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBkaXZJZCA9IFwic2VlZC1jaGlsZC1hZ3JlZW1lbnRzLVwiICsgYWdyZWVtZW50TnVtYmVyO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciB0b3RhbFF1YW50aXR5RGl2SWQgPSBcInRvdGFscXVhbnRpdHktXCIgKyBhZ3JlZW1lbnROdW1iZXI7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB1cmw6IHVybCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2FjaGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiB7IGFncmVlbWVudE51bWJlcjogYWdyZWVtZW50TnVtYmVyLCBwYWdlSWQ6IGN1cnJlbnRQYWdlSWQsIGFjY2VwdGVkUXVhbnRpdHk6IFwiXCIgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhLmxlbmd0aCAhPT0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhLk1vZGVsU3RyaW5nLmxlbmd0aCAhPT0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiI1wiICsgZGl2SWQpLmh0bWwoZGF0YS5Nb2RlbFN0cmluZyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCIjXCIgKyB0b3RhbFF1YW50aXR5RGl2SWQpLmh0bWwoXCItXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiU29tZXRoaW5nIHdlbnQgd3Jvbmcgd2l0aCB0aGUgQUpBWCByZXF1ZXN0IVwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGUucmVzcG9uc2VUZXh0KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIC8vIEdldCBhbGwgY29ubmVjdGVkIGFncmVlbWVudHMgaW4gdGhlIGJhY2tncm91bmRcclxuICAgICAgICAgICAgICAgIHZhciBzZWVkQWdyZWVtZW50c0NvbW1hU2VwYXJhdGVkTGlzdCA9ICQoXCIjU2VlZEFncmVlbWVudHNDb21tYVNlcGFyYXRlZExpc3RcIikudmFsKCk7XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKHNlZWRBZ3JlZW1lbnRzQ29tbWFTZXBhcmF0ZWRMaXN0Lmxlbmd0aCAhPT0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBzdHJpbmdBcnJheSA9IHNlZWRBZ3JlZW1lbnRzQ29tbWFTZXBhcmF0ZWRMaXN0LnNwbGl0KFwiLFwiKTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgc2VlZENvbm5lY3RlZEFncmVlbWVudHNVcmwgPSBcIi9hcGkvc2VlZGFncmVlbWVudC9nZXRjb25uZWN0ZWRzZWVkYWdyZWVtZW50c1wiO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN0cmluZ0FycmF5Lmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFRyaW0gdGhlIGV4Y2VzcyB3aGl0ZXNwYWNlLlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzdHJpbmdBcnJheVtpXSA9IHN0cmluZ0FycmF5W2ldLnJlcGxhY2UoL15cXHMqLywgXCJcIikucmVwbGFjZSgvXFxzKiQvLCBcIlwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGFncmVlbWVudCA9IHN0cmluZ0FycmF5W2ldO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgYWNjZXB0ZWRRdWFudGl0eSA9ICQoXCIjQWNjZXB0ZWRRdWFudGl0eS1cIiArIGFncmVlbWVudCkudmFsKCk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJQT1NUXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmw6IHNlZWRDb25uZWN0ZWRBZ3JlZW1lbnRzVXJsLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FjaGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogeyBhZ3JlZW1lbnROdW1iZXI6IGFncmVlbWVudCwgcGFnZUlkOiBjdXJyZW50UGFnZUlkLCBhY2NlcHRlZFF1YW50aXR5OiBhY2NlcHRlZFF1YW50aXR5IH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIE9ubHkgZm9yIGNhY2hpbmcgcHVycG9zZSBpbiB0aGUgYmFja2dyb3VuZFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiU29tZXRoaW5nIHdlbnQgd3Jvbmcgd2l0aCB0aGUgQUpBWCByZXF1ZXN0IVwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlLnJlc3BvbnNlVGV4dCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYgKHRhYiAhPT0gXCJncmFpblwiKSB7XHJcbiAgICAgICAgICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIHVybDogZ3JhaW5VcmwsXHJcbiAgICAgICAgICAgICAgICAgICAgY2FjaGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IHsgcGFnZUlkOiBjdXJyZW50UGFnZUlkIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEubGVuZ3RoICE9PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5Nb2RlbFN0cmluZy5sZW5ndGggIT09IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiI2dyYWluRGl2XCIpLmh0bWwoZGF0YS5Nb2RlbFN0cmluZyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIlNvbWV0aGluZyB3ZW50IHdyb25nIHdpdGggdGhlIEFKQVggcmVxdWVzdCFcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGUucmVzcG9uc2VUZXh0KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYgKHRhYiAhPT0gXCJzZWVkXCIpIHtcclxuICAgICAgICAgICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJQT1NUXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgdXJsOiBzZWVkVXJsLFxyXG4gICAgICAgICAgICAgICAgICAgIGNhY2hlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBkYXRhOiB7IHBhZ2VJZDogY3VycmVudFBhZ2VJZCB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhLmxlbmd0aCAhPT0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEuTW9kZWxTdHJpbmcubGVuZ3RoICE9PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJChcIiNzZWVkRGl2XCIpLmh0bWwoZGF0YS5Nb2RlbFN0cmluZyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5BZ3JlZW1lbnRzQ29tbWFzZXBhcmF0ZWRMaXN0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gTWFrZSBzdXJlIHRvIHJ1biBhbGwgdGhlIGNhbGxzIGZvciBnZXR0aW5nIGNvbm5lY3RlZCBhZ3JlZW1lbnRzIHNvIGV2ZXJ5dGhpbmcgaXMgY2FjaGVkLCBvdGhlcndpc2UgdGhlIHBlcmZvcm1hbmNlIHdpbGwgYmUgaW5zdWZmaWNpZW50XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHN0cmluZ0FycmF5ID0gZGF0YS5BZ3JlZW1lbnRzQ29tbWFzZXBhcmF0ZWRMaXN0LnNwbGl0KFwiLFwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdXJsID0gXCIvYXBpL3NlZWRhZ3JlZW1lbnQvZ2V0Y29ubmVjdGVkc2VlZGFncmVlbWVudHNcIjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgY3VycmVudFBhZ2VJZCA9ICQoXCIjQ3VycmVudFBhZ2VJZFwiKS52YWwoKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHJpbmdBcnJheS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBUcmltIHRoZSBleGNlc3Mgd2hpdGVzcGFjZS5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RyaW5nQXJyYXlbaV0gPSBzdHJpbmdBcnJheVtpXS5yZXBsYWNlKC9eXFxzKi8sIFwiXCIpLnJlcGxhY2UoL1xccyokLywgXCJcIik7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgYWdyZWVtZW50TnVtYmVyID0gc3RyaW5nQXJyYXlbaV07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBhY2NlcHRlZFF1YW50aXR5ID0gJChcIiNBY2NlcHRlZFF1YW50aXR5LVwiICsgYWdyZWVtZW50TnVtYmVyKS52YWwoKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIlBPU1RcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogdXJsLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FjaGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogeyBhZ3JlZW1lbnROdW1iZXI6IGFncmVlbWVudE51bWJlciwgcGFnZUlkOiBjdXJyZW50UGFnZUlkLCBhY2NlcHRlZFF1YW50aXR5OiBhY2NlcHRlZFF1YW50aXR5IH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIE9ubHkgZm9yIGNhY2hpbmcgcHVycG9zZSBpbiB0aGUgYmFja2dyb3VuZFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiU29tZXRoaW5nIHdlbnQgd3Jvbmcgd2l0aCB0aGUgQUpBWCByZXF1ZXN0IVwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlLnJlc3BvbnNlVGV4dCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiU29tZXRoaW5nIHdlbnQgd3Jvbmcgd2l0aCB0aGUgQUpBWCByZXF1ZXN0IVwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZS5yZXNwb25zZVRleHQpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAodGFiICE9PSBcImZvcmFnZVwiKSB7XHJcbiAgICAgICAgICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIHVybDogZm9yYWdlVXJsLFxyXG4gICAgICAgICAgICAgICAgICAgIGNhY2hlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBkYXRhOiB7IHBhZ2VJZDogY3VycmVudFBhZ2VJZCB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhLmxlbmd0aCAhPT0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEuTW9kZWxTdHJpbmcubGVuZ3RoICE9PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJChcIiNmb3JhZ2VkaXZcIikuaHRtbChkYXRhLk1vZGVsU3RyaW5nKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiU29tZXRoaW5nIHdlbnQgd3Jvbmcgd2l0aCB0aGUgQUpBWCByZXF1ZXN0IVwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZS5yZXNwb25zZVRleHQpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAodGFiICE9PSBcImZlZWRcIikge1xyXG4gICAgICAgICAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIlBPU1RcIixcclxuICAgICAgICAgICAgICAgICAgICB1cmw6IGZlZWRVcmwsXHJcbiAgICAgICAgICAgICAgICAgICAgY2FjaGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IHsgcGFnZUlkOiBjdXJyZW50UGFnZUlkIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEubGVuZ3RoICE9PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5Nb2RlbFN0cmluZy5sZW5ndGggIT09IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiI2ZlZWRhZ3JlZW1lbnRzXCIpLmh0bWwoZGF0YS5Nb2RlbFN0cmluZyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIlNvbWV0aGluZyB3ZW50IHdyb25nIHdpdGggdGhlIEFKQVggcmVxdWVzdCFcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGUucmVzcG9uc2VUZXh0KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYgKHRhYiAhPT0gXCJtZXJjaGFuZGlzZVwiKSB7XHJcbiAgICAgICAgICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIHVybDogbWVyY2hhbmRpc2VVcmwsXHJcbiAgICAgICAgICAgICAgICAgICAgY2FjaGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IHsgcGFnZUlkOiBjdXJyZW50UGFnZUlkIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEubGVuZ3RoICE9PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5Nb2RlbFN0cmluZy5sZW5ndGggIT09IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiI3RyYWRpbmdhZ3JlZW1lbnRzXCIpLmh0bWwoZGF0YS5Nb2RlbFN0cmluZyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIlNvbWV0aGluZyB3ZW50IHdyb25nIHdpdGggdGhlIEFKQVggcmVxdWVzdCFcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGUucmVzcG9uc2VUZXh0KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJChkb2N1bWVudCkub24oXCJjbGlja1wiLCBcIi5zaG93QW5hbHl6ZVwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciB1cmwgPSBcIi9hcGkvYWdyZWVtZW50L2Zhcm1zYW1wbGUvXCIgKyAkKHRoaXMpLmF0dHIoXCJkYXRhLWlkXCIpLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgICAgICBkYXRhVHlwZTogXCJodG1sXCIsXHJcbiAgICAgICAgICAgICAgICB1cmw6IHVybCxcclxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYmluZERhdGEoZGF0YSk7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZS5yZXNwb25zZVRleHQpO1xyXG4gICAgICAgICAgICAgICAgICAgIG1vZGFsLmZhZGVPdXQoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICBtb2RhbC5mYWRlSW4oKTtcclxuXHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChcIi5zaG93UHJpY2VIZWRnaW5nXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgdXJsID0gXCIvYXBpL2FncmVlbWVudC9wcmljZS1oZWRnaW5nL1wiICsgJCh0aGlzKS5hdHRyKFwiZGF0YS1pZFwiKS50b1N0cmluZygpO1xyXG4gICAgICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICAgICAgZGF0YVR5cGU6IFwiaHRtbFwiLFxyXG4gICAgICAgICAgICAgICAgdXJsOiB1cmwsXHJcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGJpbmREYXRhKGRhdGEpO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGUucmVzcG9uc2VUZXh0KTtcclxuICAgICAgICAgICAgICAgICAgICBtb2RhbC5mYWRlT3V0KCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgbW9kYWwuZmFkZUluKCk7XHJcblxyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoXCIuc2hvd1dlaWdoSW5Nb3JlSW5mb1wiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIHVybCA9IFwiL2FwaS93ZWlnaC1pbi9tb3JlLWluZm8vXCIgKyAkKHRoaXMpLmF0dHIoXCJkYXRhLWlkXCIpLnRvU3RyaW5nKCkgKyBcIi9cIiArICQoXCIjaXNJbnRlcm5hbFwiKS52YWwoKTtcclxuICAgICAgICAgICAgdXJsICs9IFwiP2RhdGU9XCIgKyBlbmNvZGVVUklDb21wb25lbnQoJCh0aGlzKS5hdHRyKFwiZGF0YS1kYXRlXCIpKSArIFwiJnNvcnQ9XCIgKyBlbmNvZGVVUklDb21wb25lbnQoJCh0aGlzKS5hdHRyKFwiZGF0YS1zb3J0XCIpKTtcclxuICAgICAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgICAgIGRhdGFUeXBlOiBcImh0bWxcIixcclxuICAgICAgICAgICAgICAgIHVybDogdXJsLFxyXG4gICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICBiaW5kRGF0YShkYXRhKTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIG1vZGFsLmZhZGVPdXQoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICBtb2RhbC5mYWRlSW4oKTtcclxuXHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChcIi5zaG93V2VpZ2hJbkFuYWx5emVcIikub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciB1cmwgPSBcIi9hcGkvd2VpZ2gtaW4vYW5hbHl6ZS9cIiArICQodGhpcykuYXR0cihcImRhdGEtaWRcIikudG9TdHJpbmcoKSArIFwiL1wiICsgJChcIiNpc0ludGVybmFsXCIpLnZhbCgpO1xyXG4gICAgICAgICAgICAvL3VybCArPSBcIj9kYXRlPVwiICsgZW5jb2RlVVJJQ29tcG9uZW50KCQodGhpcykuYXR0cihcImRhdGEtZGF0ZVwiKSkgKyBcIiZzb3J0PVwiICsgZW5jb2RlVVJJQ29tcG9uZW50KCQodGhpcykuYXR0cihcImRhdGEtc29ydFwiKSk7XHJcbiAgICAgICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgICAgICBkYXRhVHlwZTogXCJodG1sXCIsXHJcbiAgICAgICAgICAgICAgICB1cmw6IHVybCxcclxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEuaW5kZXhPZihcIjxodG1sPlwiKSA+IDApXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gXCIvXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBiaW5kRGF0YShkYXRhKTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIG1vZGFsLmZhZGVPdXQoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIG1vZGFsLmZhZGVJbigpO1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoXCIuanMtbG9hZC13ZWlnaC1pbi1hbmFseXNpc1wiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIGNvbnRyb2wgPSAkKHRoaXMpO1xyXG4gICAgICAgICAgICB2YXIgdXJsID0gXCIvYXBpL3dlaWdoLWluL2FuYWx5emUvXCIgKyAkKHRoaXMpLmF0dHIoXCJkYXRhLWlkXCIpLnRvU3RyaW5nKCkgKyBcIi9cIiArICQoXCIjaXNJbnRlcm5hbFwiKS52YWwoKTtcclxuXHJcbiAgICAgICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgICAgICBkYXRhVHlwZTogXCJodG1sXCIsXHJcbiAgICAgICAgICAgICAgICB1cmw6IHVybCxcclxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEuaW5kZXhPZihcIjxodG1sPlwiKSA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBcIi9cIjtcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgY29sbGFwc2VUYXJnZXQgPSBjb250cm9sLm5leHQoXCIuY29sbGFwc2VfX3RhcmdldFwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGxvYWRpbmdJY29uID0gY29sbGFwc2VUYXJnZXQuZmluZChcIi5sb2FkZXItd3JhcHBlclwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGNvbGxhcHNlQ29udGVudCA9IGNvbGxhcHNlVGFyZ2V0LmZpbmQoXCIuY29sbGFwc2VfX3RhcmdldC1jb250ZW50XCIpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgY29sbGFwc2VDb250ZW50Lmh0bWwoZGF0YSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxvYWRpbmdJY29uLmZhZGVPdXQoKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoZG9jdW1lbnQpLm9uKCdjaGFuZ2UnLCAnLmpzLXNob3ctaGFydmVzdC15ZWFyJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgY3VycmVudFBhZ2VJZCA9ICQoXCIjQ3VycmVudFBhZ2VJZFwiKS52YWwoKTtcclxuICAgICAgICAgICAgdmFyIGFncmVlbWVudE51bWJlciA9ICQoXCIjRm9yYWdlQWdyZWVtZW50TnVtYmVyXCIpLnZhbCgpO1xyXG4gICAgICAgICAgICB2YXIgc2VsZWN0ZWRJZCA9ICQoXCIjU2VsZWN0ZWRIYXJ2ZXN0WWVhclwiKS52YWwoKTtcclxuICAgICAgICAgICAgdmFyIHVybCA9IFwiL2FwaS9mb3JhZ2VhZ3JlZW1lbnQvZ2V0aGFydmVzdHllYXJkYXRhXCI7XHJcblxyXG4gICAgICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICAgICAgdHlwZTogXCJHRVRcIixcclxuICAgICAgICAgICAgICAgIHVybDogdXJsLFxyXG4gICAgICAgICAgICAgICAgY2FjaGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgZGF0YTogeyBzZWxlY3RlZHZhbHVlOiBzZWxlY3RlZElkLCBwYWdlSWQ6IGN1cnJlbnRQYWdlSWQsIGFncmVlbWVudE51bWJlcjogYWdyZWVtZW50TnVtYmVyIH0sXHJcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIjaGFydmVzdHllYXJcIikuaHRtbChkYXRhKTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIlNvbWV0aGluZyB3ZW50IHdyb25nIHdpdGggdGhlIEFKQVggcmVxdWVzdCFcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZS5yZXNwb25zZVRleHQpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChkb2N1bWVudCkub24oJ2NoYW5nZScsICcuc2VlZGFncmVlbWVudHMtZHJvcGRvd24nLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciBzZWxlY3RlZFZhbHVlID0gJChcIiNTZWxlY3RlZEhhcnZlc3RZZWFyXCIpLnZhbCgpO1xyXG4gICAgICAgICAgICB2YXIgY3VycmVudFBhZ2VJZCA9ICQoXCIjQ3VycmVudFBhZ2VJZFwiKS52YWwoKTtcclxuICAgICAgICAgICAgdmFyIHVybCA9IFwiL2FwaS9zZWVkYWdyZWVtZW50L2dldHNlZWRhZ3JlZW1lbnRzXCI7XHJcblxyXG4gICAgICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICAgICAgdHlwZTogXCJQT1NUXCIsXHJcbiAgICAgICAgICAgICAgICB1cmw6IHVybCxcclxuICAgICAgICAgICAgICAgIGNhY2hlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgIGRhdGE6IHsgc2VsZWN0ZWR2YWx1ZTogc2VsZWN0ZWRWYWx1ZSwgcGFnZUlkOiBjdXJyZW50UGFnZUlkIH0sXHJcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChkYXRhLmxlbmd0aCAhPT0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5Nb2RlbFN0cmluZy5sZW5ndGggIT09IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCIjc2VlZGFncmVlbWVudHNcIikuaHRtbChkYXRhLk1vZGVsU3RyaW5nKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIlNvbWV0aGluZyB3ZW50IHdyb25nIHdpdGggdGhlIEFKQVggcmVxdWVzdCFcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZS5yZXNwb25zZVRleHQpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJCgnLm15LWFncmVlbWVudHNfX3Byb3Zuci1saW5rJykuYmluZCgnY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciB1cmwgPSBcIi9hcGkvZm9yYWdlYWdyZWVtZW50L2dldGFuYWx5c2lzcmVzdWx0c1wiO1xyXG4gICAgICAgICAgICB2YXIgaWQgPSAoJCh0aGlzKS5hdHRyKCdpZCcpKTtcclxuICAgICAgICAgICAgJCgnLm15LWFncmVlbWVudHNfX3NhbXBsZS1saXN0LWl0ZW0gYS5pcy1hY3RpdmUnKS5yZW1vdmVDbGFzcygnaXMtYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICQodGhpcykuYWRkQ2xhc3MoXCJpcy1hY3RpdmVcIik7XHJcblxyXG4gICAgICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICAgICAgdHlwZTogXCJQT1NUXCIsXHJcbiAgICAgICAgICAgICAgICB1cmw6IHVybCxcclxuICAgICAgICAgICAgICAgIGNhY2hlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgIGRhdGE6IHsgcHJvdm5yOiBpZCB9LFxyXG4gICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5sZW5ndGggIT09IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEuTW9kZWxTdHJpbmcubGVuZ3RoICE9PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiI2FuYWx5c2lzcmVzdWx0c2RpdlwiKS5odG1sKGRhdGEuTW9kZWxTdHJpbmcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhLlByb3ZOci5sZW5ndGggIT09IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCIjY2VydG5yaGVhZGluZ1wiKS5odG1sKGRhdGEuUHJvdk5yKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIlNvbWV0aGluZyB3ZW50IHdyb25nIHdpdGggdGhlIEFKQVggcmVxdWVzdCFcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZS5yZXNwb25zZVRleHQpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChkb2N1bWVudCkub24oJ2NsaWNrJywgJy5zZWVkYWdyZWVlbWVudHMnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciBoYXNMb2FkZWQgPSAkKHRoaXMpLmhhc0NsYXNzKFwiaGFzLWxvYWRlZFwiKTtcclxuICAgICAgICAgICAgdmFyIGJ1dHRvbiA9IHRoaXM7XHJcblxyXG4gICAgICAgICAgICBpZiAoIWhhc0xvYWRlZCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIHVybCA9IFwiL2FwaS9zZWVkYWdyZWVtZW50L2dldGNvbm5lY3RlZHNlZWRhZ3JlZW1lbnRzXCI7XHJcbiAgICAgICAgICAgICAgICB2YXIgYWdyZWVtZW50TnVtYmVyID0gKCQodGhpcykuYXR0cignaWQnKSk7XHJcbiAgICAgICAgICAgICAgICB2YXIgY3VycmVudFBhZ2VJZCA9ICQoXCIjQ3VycmVudFBhZ2VJZFwiKS52YWwoKTtcclxuICAgICAgICAgICAgICAgIHZhciBhY2NlcHRlZFF1YW50aXR5ID0gJChcIiNBY2NlcHRlZFF1YW50aXR5LVwiICsgYWdyZWVtZW50TnVtYmVyKS52YWwoKTtcclxuICAgICAgICAgICAgICAgIHZhciBkaXZJZCA9IFwic2VlZC1jaGlsZC1hZ3JlZW1lbnRzLVwiICsgYWdyZWVtZW50TnVtYmVyO1xyXG4gICAgICAgICAgICAgICAgdmFyIHRvdGFsUXVhbnRpdHlEaXZJZCA9IFwidG90YWxxdWFudGl0eS1cIiArIGFncmVlbWVudE51bWJlcjtcclxuXHJcbiAgICAgICAgICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIHVybDogdXJsLFxyXG4gICAgICAgICAgICAgICAgICAgIGNhY2hlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBkYXRhOiB7IGFncmVlbWVudE51bWJlcjogYWdyZWVtZW50TnVtYmVyLCBwYWdlSWQ6IGN1cnJlbnRQYWdlSWQsIGFjY2VwdGVkUXVhbnRpdHk6IGFjY2VwdGVkUXVhbnRpdHkgfSxcclxuICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5sZW5ndGggIT09IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhLk1vZGVsU3RyaW5nLmxlbmd0aCAhPT0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCIjXCIgKyBkaXZJZCkuaHRtbChkYXRhLk1vZGVsU3RyaW5nKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vaWYgKGRhdGEuVG90YWxRdWFudGl0eS5sZW5ndGggIT09IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICQoXCIjXCIgKyB0b3RhbFF1YW50aXR5RGl2SWQpLmh0bWwoZGF0YS5Ub3RhbFF1YW50aXR5ICsgXCIgIHRvblwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJChcIiNcIiArIHRvdGFsUXVhbnRpdHlEaXZJZCkuaHRtbChcIi1cIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKGJ1dHRvbikuYWRkQ2xhc3MoXCJoYXMtbG9hZGVkXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJTb21ldGhpbmcgd2VudCB3cm9uZyB3aXRoIHRoZSBBSkFYIHJlcXVlc3QhXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlLnJlc3BvbnNlVGV4dCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAkKGJ1dHRvbikucmVtb3ZlQ2xhc3MoXCJoYXMtbG9hZGVkXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoZG9jdW1lbnQpLm9uKCdjbGljaycsICcuZmVlZGFncmVlbWVudHMnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciBoYXNMb2FkZWQgPSAkKHRoaXMpLmhhc0NsYXNzKFwiaGFzLWxvYWRlZFwiKTtcclxuICAgICAgICAgICAgdmFyIGJ1dHRvbiA9IHRoaXM7XHJcblxyXG4gICAgICAgICAgICBpZiAoIWhhc0xvYWRlZCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIHVybCA9IFwiL2FwaS9mZWVkYWdyZWVtZW50L2dldGZlZWRhZ3JlZW1lbnRhcnRpY2xlc1wiO1xyXG4gICAgICAgICAgICAgICAgdmFyIGFncmVlbWVudE51bWJlciA9ICgkKHRoaXMpLmF0dHIoJ2lkJykpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGN1cnJlbnRQYWdlSWQgPSAkKFwiI0N1cnJlbnRQYWdlSWRcIikudmFsKCk7XHJcbiAgICAgICAgICAgICAgICB2YXIgdW5pdCA9ICQoYnV0dG9uKS5maW5kKFwiLmpzLXVuaXRcIikudmFsKCk7XHJcbiAgICAgICAgICAgICAgICB2YXIgZGl2SWQgPSBcImZlZWRhZ3JlZW1lbnRhcnRpY2xlcy1cIiArIGFncmVlbWVudE51bWJlcjtcclxuXHJcbiAgICAgICAgICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIHVybDogdXJsLFxyXG4gICAgICAgICAgICAgICAgICAgIGNhY2hlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBkYXRhOiB7IGFncmVlbWVudE51bWJlcjogYWdyZWVtZW50TnVtYmVyLCBwYWdlSWQ6IGN1cnJlbnRQYWdlSWQsIHVuaXQ6IHVuaXQgfSxcclxuICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEubGVuZ3RoICE9PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEuTW9kZWxTdHJpbmcubGVuZ3RoICE9PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCIjXCIgKyBkaXZJZCkuaHRtbChkYXRhLk1vZGVsU3RyaW5nKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJChidXR0b24pLmFkZENsYXNzKFwiaGFzLWxvYWRlZFwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIlNvbWV0aGluZyB3ZW50IHdyb25nIHdpdGggdGhlIEFKQVggcmVxdWVzdCFcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGUucmVzcG9uc2VUZXh0KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICQoYnV0dG9uKS5yZW1vdmVDbGFzcyhcImhhcy1sb2FkZWRcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChkb2N1bWVudCkub24oJ2NsaWNrJywgJy50cmFkaW5nYWdyZWVtZW50cycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIGhhc0xvYWRlZCA9ICQodGhpcykuaGFzQ2xhc3MoXCJoYXMtbG9hZGVkXCIpO1xyXG4gICAgICAgICAgICB2YXIgYnV0dG9uID0gdGhpcztcclxuXHJcbiAgICAgICAgICAgIGlmICghaGFzTG9hZGVkKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgdXJsID0gXCIvYXBpL3RyYWRpbmdhZ3JlZW1lbnQvZ2V0dHJhZGluZ2FncmVlbWVudGFydGljbGVzXCI7XHJcbiAgICAgICAgICAgICAgICB2YXIgYWdyZWVtZW50TnVtYmVyID0gKCQodGhpcykuYXR0cignaWQnKSk7XHJcbiAgICAgICAgICAgICAgICB2YXIgdW5pdCA9ICQoYnV0dG9uKS5maW5kKFwiLmpzLXVuaXRcIikudmFsKCk7XHJcbiAgICAgICAgICAgICAgICB2YXIgZGl2SWQgPSBcInRyYWRpbmdhZ3JlZW1lbnRhcnRpY2xlcy1cIiArIGFncmVlbWVudE51bWJlcjtcclxuICAgICAgICAgICAgICAgIHZhciBoaWRkZW5JZCA9IFwiYWdyZWVtZW50dHlwZS1cIiArIGFncmVlbWVudE51bWJlcjtcclxuICAgICAgICAgICAgICAgIHZhciBhZ3JlZW1lbnRUeXBlID0gJChcIiNcIiArIGhpZGRlbklkKS52YWwoKTtcclxuXHJcbiAgICAgICAgICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIHVybDogdXJsLFxyXG4gICAgICAgICAgICAgICAgICAgIGNhY2hlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBkYXRhOiB7IGFncmVlbWVudE51bWJlcjogYWdyZWVtZW50TnVtYmVyLCBhZ3JlZW1lbnRUeXBlOiBhZ3JlZW1lbnRUeXBlIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhLmxlbmd0aCAhPT0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhLk1vZGVsU3RyaW5nLmxlbmd0aCAhPT0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGF0YVdpdGhVbml0ID0gZGF0YS5Nb2RlbFN0cmluZy5yZXBsYWNlKC97ezp1bml0fX0vZywgdW5pdCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCIjXCIgKyBkaXZJZCkuaHRtbChkYXRhV2l0aFVuaXQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKGJ1dHRvbikuYWRkQ2xhc3MoXCJoYXMtbG9hZGVkXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiU29tZXRoaW5nIHdlbnQgd3Jvbmcgd2l0aCB0aGUgQUpBWCByZXF1ZXN0IVwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZS5yZXNwb25zZVRleHQpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgJChidXR0b24pLnJlbW92ZUNsYXNzKFwiaGFzLWxvYWRlZFwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkKGRvY3VtZW50KS5vbignY2hhbmdlJywgJy5mZWVkYWdyZWVtZW50cy1kcm9wZG93bicsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIHNlbGVjdGVkVmFsdWUgPSAkKFwiI2FncmVlbWVudHR5cGVcIikudmFsKCk7XHJcbiAgICAgICAgICAgIHZhciB1cmwgPSBcIi9hcGkvZmVlZGFncmVlbWVudC9nZXRmZWVkYWdyZWVtZW50c2N1cnJlbnRvcmluYWN0aXZlXCI7XHJcbiAgICAgICAgICAgIHZhciBjdXJyZW50UGFnZUlkID0gJChcIiNDdXJyZW50UGFnZUlkXCIpLnZhbCgpO1xyXG5cclxuICAgICAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxyXG4gICAgICAgICAgICAgICAgdXJsOiB1cmwsXHJcbiAgICAgICAgICAgICAgICBjYWNoZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICBkYXRhOiB7IHNlbGVjdGVkdmFsdWU6IHNlbGVjdGVkVmFsdWUsIHBhZ2VJZDogY3VycmVudFBhZ2VJZCB9LFxyXG4gICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5sZW5ndGggIT09IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEuTW9kZWxTdHJpbmcubGVuZ3RoICE9PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiI2ZlZWRhZ3JlZW1lbnRzXCIpLmh0bWwoZGF0YS5Nb2RlbFN0cmluZyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJTb21ldGhpbmcgd2VudCB3cm9uZyB3aXRoIHRoZSBBSkFYIHJlcXVlc3QhXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGUucmVzcG9uc2VUZXh0KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoZG9jdW1lbnQpLm9uKCdjaGFuZ2UnLCAnLnRyYWRpbmdhZ3JlZW1lbnRzLWRyb3Bkb3duJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgc2VsZWN0ZWRWYWx1ZSA9ICQoXCIjdHJhZGluZ2FncmVlbWVudHR5cGVcIikudmFsKCk7XHJcbiAgICAgICAgICAgIHZhciB1cmwgPSBcIi9hcGkvdHJhZGluZ2FncmVlbWVudHMvZ2V0dHJhZGluZ2FncmVlbWVudHNjdXJyZW50b3JpbmFjdGl2ZVwiO1xyXG4gICAgICAgICAgICB2YXIgY3VycmVudFBhZ2VJZCA9ICQoXCIjQ3VycmVudFBhZ2VJZFwiKS52YWwoKTtcclxuXHJcbiAgICAgICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgICAgICB0eXBlOiBcIlBPU1RcIixcclxuICAgICAgICAgICAgICAgIHVybDogdXJsLFxyXG4gICAgICAgICAgICAgICAgY2FjaGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgZGF0YTogeyBzZWxlY3RlZHZhbHVlOiBzZWxlY3RlZFZhbHVlLCBwYWdlSWQ6IGN1cnJlbnRQYWdlSWQgfSxcclxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEubGVuZ3RoICE9PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhLk1vZGVsU3RyaW5nLmxlbmd0aCAhPT0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJChcIiN0cmFkaW5nYWdyZWVtZW50c1wiKS5odG1sKGRhdGEuTW9kZWxTdHJpbmcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiU29tZXRoaW5nIHdlbnQgd3Jvbmcgd2l0aCB0aGUgQUpBWCByZXF1ZXN0IVwiKTtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlLnJlc3BvbnNlVGV4dCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbn0pO1xyXG4iLCIoZnVuY3Rpb24gKCkge1xyXG4gICAgJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBjaGFydERpdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibG1fX2NoYXJ0LWR5Z3JhcGhzXCIpO1xyXG4gICAgICAgIHZhciBsYWJlbERpdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibG1fX2NoYXJ0LXN0YXR1c1wiKTtcclxuICAgICAgICBpZiAod2luZG93LkR5Z3JhcGggJiYgY2hhcnREaXYgJiYgbGFiZWxEaXYpIHtcclxuICAgICAgICAgICAgZzIgPSBuZXcgRHlncmFwaChcclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibG1fX2NoYXJ0LWR5Z3JhcGhzXCIpLFxyXG4gICAgICAgICAgICAgICAgY2hhcnREaXYuZGF0YXNldC5yb3dkYXRhLFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIGxhYmVsc0RpdjogZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsbV9fY2hhcnQtc3RhdHVzXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgIGxhYmVsc0tNQjogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgY29sb3JzOiBbXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiIzAwNjkyN1wiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcIiNGNTlDMDBcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgXCIjNzZCODQzXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiI0Y1NEEwMFwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcIiM1NjU2NTZcIl0sXHJcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IFwiMTAwJVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogNTQwLFxyXG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiBjaGFydERpdi5kYXRhc2V0LnRpdGxlLFxyXG4gICAgICAgICAgICAgICAgICAgIGF4aXNMaW5lQ29sb3I6IFwid2hpdGVcIixcclxuICAgICAgICAgICAgICAgICAgICB5bGFiZWw6IFwia3IvdG9uXCJcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vKioqIENob3NlZCBTZWxlY3RlZCBQZXJpb2QgaW4gZHJvcGRvd24gKioqXHJcbiAgICAgICAgdmFyIHNlbGVjdE1vbnRoRWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2VsZWN0TW9udGhQZXJpb2RcIik7XHJcbiAgICAgICAgaWYgKHNlbGVjdE1vbnRoRWxlbWVudCkge1xyXG4gICAgICAgICAgICAkKFwiI3NlbGVjdE1vbnRoUGVyaW9kID4gbGkgPiB1bCA+IGxpID4gYVwiKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgZGF0YVZhbHVlVHlwZSA9ICQodGhpcykucGFyZW50KCkuYXR0cihcImRhdGEtdmFsdWVcIik7XHJcbiAgICAgICAgICAgICAgICB2YXIgY3VycmVudFBhZ2VJZCA9ICQoXCIjQ3VycmVudFBhZ2VJZFwiKS52YWwoKTtcclxuICAgICAgICAgICAgICAgIHZhciBzZWxlY3RlZCA9IFtdO1xyXG4gICAgICAgICAgICAgICAgJChcImlucHV0W25hbWU9dHlwZV06Y2hlY2tlZFwiKS5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZC5wdXNoKCQodGhpcykuYXR0cihcImlkXCIpKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJQT1NUXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgdXJsOiBcIi9hcGkvcHJpY2VncmFwaHBhZ2UvZmlsdGVycHJpY2VncmFwaFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIGNhY2hlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBkYXRhOiB7IGlkQXJyYXk6IHNlbGVjdGVkLCBwYWdlSWQ6IGN1cnJlbnRQYWdlSWQsIHNlbGVjdGVkUGVyaW9kOiBkYXRhVmFsdWVUeXBlIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEubGVuZ3RoICE9PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5Nb2RlbFN0cmluZy5sZW5ndGggIT09IDAgJiYgZGF0YS5Db2xvckNvZGVzLmxlbmd0aCAhPT0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCIjcHJpY2VncmFwaGRpdlwiKS5odG1sKGRhdGEuTW9kZWxTdHJpbmcpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXQuc2V0QXR0cmlidXRlKFwidHlwZVwiLCBcImhpZGRlblwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnB1dC5zZXRBdHRyaWJ1dGUoXCJuYW1lXCIsIFwiU2VsZWN0ZWRQZXJpb2RcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXQuc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgZGF0YVZhbHVlVHlwZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXQuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJTZWxlY3RlZFBlcmlvZFwiKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJChcIiNzZWxlY3RlZHBlcmlvZGRpdlwiKS5odG1sKGlucHV0KTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGNoYXJ0RGl2ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsbV9fY2hhcnQtZHlncmFwaHNcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGxhYmVsRGl2ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsbV9fY2hhcnQtc3RhdHVzXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh3aW5kb3cuRHlncmFwaCAmJiBjaGFydERpdiAmJiBsYWJlbERpdikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnMiA9IG5ldyBEeWdyYXBoKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsbV9fY2hhcnQtZHlncmFwaHNcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGFydERpdi5kYXRhc2V0LnJvd2RhdGEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWxzRGl2OiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxtX19jaGFydC1zdGF0dXNcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWxzS01COiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcnM6IGRhdGEuQ29sb3JDb2RlcyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogXCIxMDAlXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiA1NDAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6IGNoYXJ0RGl2LmRhdGFzZXQudGl0bGUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXhpc0xpbmVDb2xvcjogXCJ3aGl0ZVwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHlsYWJlbDogXCJrci90b25cIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFNob3cgZW1wdHkgZ3JhcGhcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnMiA9IG5ldyBEeWdyYXBoKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxtX19jaGFydC1keWdyYXBoc1wiKSwgXCJYXFxuXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsc0RpdjogZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2xtX19jaGFydC1zdGF0dXMnKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsc0tNQjogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogXCIxMDAlXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDU0MCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxtX19jaGFydC1keWdyYXBoc1wiKS5kYXRhc2V0LnRpdGxlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXhpc0xpbmVDb2xvcjogXCJ3aGl0ZVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJTb21ldGhpbmcgd2VudCB3cm9uZyB3aXRoIHRoZSBBSkFYIHJlcXVlc3QhXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlLnJlc3BvbnNlVGV4dCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8qKiogRmlsdGVyZWQgZnJvbSBjaGVja2JveGVzICoqKlxyXG4gICAgICAgICQoZG9jdW1lbnQpLm9uKFwiY2hhbmdlXCIsIFwiLnByaWNlZ3JhcGgtY2hlY2tib3ggaW5wdXRcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgc2VsZWN0ZWQgPSBbXTtcclxuICAgICAgICAgICAgdmFyIGN1cnJlbnRQYWdlSWQgPSAkKFwiI0N1cnJlbnRQYWdlSWRcIikudmFsKCk7XHJcbiAgICAgICAgICAgIHZhciBzZWxlY3RlZFBlcmlvZCA9ICQoXCIjU2VsZWN0ZWRQZXJpb2RcIikudmFsKCk7XHJcblxyXG4gICAgICAgICAgICAkKFwiaW5wdXRbbmFtZT10eXBlXTpjaGVja2VkXCIpLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgc2VsZWN0ZWQucHVzaCgkKHRoaXMpLmF0dHIoXCJpZFwiKSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxyXG4gICAgICAgICAgICAgICAgdXJsOiBcIi9hcGkvcHJpY2VncmFwaHBhZ2UvZmlsdGVycHJpY2VncmFwaFwiLFxyXG4gICAgICAgICAgICAgICAgY2FjaGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgZGF0YTogeyBpZEFycmF5OiBzZWxlY3RlZCwgcGFnZUlkOiBjdXJyZW50UGFnZUlkLCBzZWxlY3RlZFBlcmlvZDogc2VsZWN0ZWRQZXJpb2QgfSxcclxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEubGVuZ3RoICE9PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhLk1vZGVsU3RyaW5nLmxlbmd0aCAhPT0gMCAmJiBkYXRhLkNvbG9yQ29kZXMubGVuZ3RoICE9PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiI3ByaWNlZ3JhcGhkaXZcIikuaHRtbChkYXRhLk1vZGVsU3RyaW5nKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjaGFydERpdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibG1fX2NoYXJ0LWR5Z3JhcGhzXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGxhYmVsRGl2ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsbV9fY2hhcnQtc3RhdHVzXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHdpbmRvdy5EeWdyYXBoICYmIGNoYXJ0RGl2ICYmIGxhYmVsRGl2KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZzIgPSBuZXcgRHlncmFwaChcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsbV9fY2hhcnQtZHlncmFwaHNcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoYXJ0RGl2LmRhdGFzZXQucm93ZGF0YSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWxzRGl2OiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxtX19jaGFydC1zdGF0dXNcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbHNLTUI6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3JzOiBkYXRhLkNvbG9yQ29kZXMsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogXCIxMDAlXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDU0MCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiBjaGFydERpdi5kYXRhc2V0LnRpdGxlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXhpc0xpbmVDb2xvcjogXCJ3aGl0ZVwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeWxhYmVsOiBcImtyL3RvblwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gU2hvdyBlbXB0eSBncmFwaFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZzIgPSBuZXcgRHlncmFwaChcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxtX19jaGFydC1keWdyYXBoc1wiKSwgXCJYXFxuXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbHNEaXY6IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdsbV9fY2hhcnQtc3RhdHVzJyksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsc0tNQjogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiBcIjEwMCVcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiA1NDAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxtX19jaGFydC1keWdyYXBoc1wiKS5kYXRhc2V0LnRpdGxlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBheGlzTGluZUNvbG9yOiBcIndoaXRlXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHlsYWJlbDogXCJrci90b25cIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJTb21ldGhpbmcgd2VudCB3cm9uZyB3aXRoIHRoZSBBSkFYIHJlcXVlc3QhXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGUucmVzcG9uc2VUZXh0KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxufSkoKTtcclxuIiwiZnVuY3Rpb24gc2V0RHJvcGRvd24ob2JqLCB0eXBlKSB7XHJcbiAgICBvYmouZmluZChcIi5zaG93Y2FzZSA+IGFcIikudW5iaW5kKCdjbGljaycpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgc3ViID0gJCh0aGlzKS5uZXh0KCk7XHJcbiAgICAgICAgJChcIi5kcm9wZG93blwiKS5ub3Qoc3ViKS5oaWRlKCk7XHJcbiAgICAgICAgaWYgKHN1Yi5jc3MoJ2Rpc3BsYXknKSA9PSAnbm9uZScpIHtcclxuICAgICAgICAgICAgc3ViLnNob3coKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBzdWIuaGlkZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9KTtcclxuXHJcbiAgICBvYmouZmluZChcIi5zaG93Y2FzZSAuZHJvcGRvd24gbGkgYVwiKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIGRhdGEgPSAkKHRoaXMpLnBhcmVudCgpLmF0dHIoXCJkYXRhLXZhbHVlXCIpO1xyXG4gICAgICAgIHZhciBkYXRhVGV4dCA9ICQodGhpcykudGV4dCgpO1xyXG4gICAgICAgIHZhciBkYXRhRWxlbWVudCA9ICQodGhpcykucGFyZW50cyhcIi5zaG93Y2FzZVwiKS5maW5kKFwiPmlucHV0W3R5cGU9aGlkZGVuXVwiKTtcclxuICAgICAgICB2YXIgcHJldmlvdXNEYXRhID0gZGF0YUVsZW1lbnQudmFsKCk7XHJcblxyXG4gICAgICAgICQoXCIuZHJvcGRvd24gbGlcIikucmVtb3ZlQ2xhc3MoXCJzZWxlY3RlZFwiKTtcclxuICAgICAgICAkKHRoaXMpLnBhcmVudCgpLmFkZENsYXNzKFwic2VsZWN0ZWRcIik7XHJcbiAgICAgICAgJCh0aGlzKS5wYXJlbnRzKFwiLnNob3djYXNlXCIpLmZpbmQoXCI+YVwiKS5odG1sKCh0eXBlID09PSBcInR5cGUtMlwiKSA/IGRhdGEgOiBkYXRhVGV4dCk7XHJcbiAgICAgICAgJCh0aGlzKS5wYXJlbnRzKFwiLnNob3djYXNlXCIpLmZpbmQoXCI+YVwiKS5odG1sKGRhdGFUZXh0KTtcclxuICAgICAgICAkKHRoaXMpLnBhcmVudHMoXCIuc2hvd2Nhc2VcIikuYXR0cihcImRhdGEtdmFsdWVcIiwgZGF0YSk7XHJcbiAgICAgICAgZGF0YUVsZW1lbnQudmFsKGRhdGEpO1xyXG5cclxuICAgICAgICBpZiAocHJldmlvdXNEYXRhICE9PSBkYXRhICYmIG9iai5kYXRhKFwidHJpZ2dlckNoYW5nZVwiKSkge1xyXG4gICAgICAgICAgICBvYmoudHJpZ2dlcihcImNoYW5nZVwiLCB7IGRhdGE6IGRhdGEsIGRhdGFUZXh0IDogZGF0YVRleHQgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAkKHRoaXMpLnBhcmVudHMoXCIuZHJvcGRvd25cIikuaGlkZSgpO1xyXG4gICAgICAgIGlmICgkKHRoaXMpLnBhcmVudCgpLmRhdGEoJ3ZhbHVlJykgPT09ICdBbm5hbicpIHtcclxuICAgICAgICAgICAgJCh0aGlzKS5wYXJlbnRzKCcubW9kZWwtYmxvY2snKS5maW5kKCdpbnB1dFt0eXBlPVwidGV4dFwiXScpLnNob3coKTtcclxuICAgICAgICAgICAgJCh0aGlzKS5wYXJlbnRzKCd1bC5sbV9fZm9ybS1kcm9wZG93bi5tb2RlbC1kcm9wZG93bicpLmhpZGUoKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH0pO1xyXG59XHJcblxyXG4kKGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIGFkZERhdGFQaWNrZXJIYW5kbGVyKCkge1xyXG4gICAgICAgIGlmICgkLmZuLmRhdGVwaWNrZXIgJiYgJChcIi5kYXRlcGlja2VyXCIpLmxlbmd0aCkge1xyXG4gICAgICAgICAgICAvLyBTZXQgZGVmYXVsdCBvcHRpb25zIGZvciBkYXRlcGlja2VyXHJcbiAgICAgICAgICAgICQuZGF0ZXBpY2tlci5zZXREZWZhdWx0cyh7XHJcbiAgICAgICAgICAgICAgICBtb250aE5hbWVzU2hvcnQ6IFtcIkphblwiLCBcIkZlYlwiLCBcIk1hclwiLCBcIkFwclwiLCBcIk1halwiLCBcIkp1blwiLCBcIkp1bFwiLCBcIkF1Z1wiLCBcIlNlcFwiLCBcIk9rdFwiLCBcIk5vdlwiLCBcIkRlY1wiXSxcclxuICAgICAgICAgICAgICAgIG1vbnRoTmFtZXM6IFsnSmFudWFyaScsICdGZWJydWFyaScsICdNYXJzJywgJ0FwcmlsJywgJ01haicsICdKdW5pJywgJ0p1bGknLCAnQXVndXN0aScsICdTZXB0ZW1iZXInLCAnT2t0b2JlcicsICdOb3ZlbWJlcicsICdEZWNlbWJlciddLFxyXG4gICAgICAgICAgICAgICAgZGF5TmFtZXNNaW46IFtcIlPDtlwiLCBcIk3DpVwiLCBcIlRpXCIsIFwiT25cIiwgXCJUb1wiLCBcIkZyXCIsIFwiTMO2XCJdLFxyXG4gICAgICAgICAgICAgICAgZmlyc3REYXk6IDAsXHJcbiAgICAgICAgICAgICAgICBzaG93T3RoZXJNb250aHM6IHRydWUsXHJcbiAgICAgICAgICAgICAgICBzZWxlY3RPdGhlck1vbnRoczogdHJ1ZSxcclxuICAgICAgICAgICAgICAgIGRhdGVGb3JtYXQ6IFwieXktbW0tZGRcIlxyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICQoXCIuZGF0ZXBpY2tlclwiKS5kYXRlcGlja2VyKHtcclxuICAgICAgICAgICAgICAgIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgpLFxyXG4gICAgICAgICAgICAgICAgb25TZWxlY3Q6IGZ1bmN0aW9uIChuZXdUZXh0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gY29tcGFyZSB0aGUgbmV3IHZhbHVlIHRvIHRoZSBwcmV2aW91cyBvbmVcclxuICAgICAgICAgICAgICAgICAgICBpZiAoJCh0aGlzKS5kYXRhKCdwcmV2aW91cycpICE9IG5ld1RleHQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gZG8gd2hhdGV2ZXIgaGFzIHRvIGJlIGRvbmUsIGUuZy4gbG9nIGl0IHRvIGNvbnNvbGVcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZygnY2hhbmdlZCB0bzogJyArIG5ld1RleHQpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBtb250aE5hbWVzOiBbXCJKYW51YXJpXCIsIFwiRmVicnVhcmlcIiwgXCJNYXJzXCIsIFwiQXByaWxcIiwgXCJNYWpcIiwgXCJKdW5pXCIsIFwiSnVsaVwiLCBcIkF1Z3VzdGlcIiwgXCJTZXB0ZW1iZXJcIiwgXCJPa3RvYmVyXCIsIFwiTm92ZW1iZXJcIiwgXCJEZWNlbWJlclwiXSxcclxuICAgICAgICAgICAgICAgIGRheU5hbWVzTWluOiBbXCJTw7ZcIiwgXCJNw6VcIiwgXCJUaVwiLCBcIk9uXCIsIFwiVG9cIiwgXCJGclwiLCBcIkzDtlwiXSxcclxuICAgICAgICAgICAgICAgIGZpcnN0RGF5OiAxXHJcbiAgICAgICAgICAgIH0pLmRhdGVwaWNrZXIoXCJzZXREYXRlXCIsIG5ldyBEYXRlKCkpXHJcbiAgICAgICAgICAgIC5vbignY2hhbmdlJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgdmFyICR0aGlzID0gJCh0aGlzKTtcclxuICAgICAgICAgICAgICAgIHZhciB2YWxpZERhdGUgPSAhL0ludmFsaWR8TmFOLy50ZXN0KG5ldyBEYXRlKCR0aGlzLnZhbCgpKS50b1N0cmluZygpKTtcclxuICAgICAgICAgICAgICAgIHZhciB2YWxpZERhdGVSZWdleCA9IC9eXFxkXFxkXFxkXFxkLSgwP1sxLTldfDFbMC0yXSktKDA/WzEtOV18WzEyXVswLTldfDNbMDFdKSQvaWcudGVzdCgkdGhpcy52YWwoKSk7XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKCF2YWxpZERhdGVSZWdleCB8fCAhdmFsaWREYXRlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8kdGhpcy5hZGRDbGFzcyhcImVycm9yXCIpLm5leHQoKS5zaG93KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgJHRoaXMubmV4dCgpLnNob3coKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8kdGhpcy5yZW1vdmVDbGFzcyhcImVycm9yXCIpLm5leHQoKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgJHRoaXMubmV4dCgpLmhpZGUoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGFkZERyb3BEb3duSGFuZGxlcigpIHtcclxuICAgICAgICB2YXIgZHJvcGRvd24gPSAkKFwiLmxtX19mb3JtLWRyb3Bkb3duXCIpO1xyXG5cclxuICAgICAgICAkKGRvY3VtZW50KS5vbignY2xpY2sgdG91Y2hzdGFydCcsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgIHZhciAkdGhpcyA9ICQoZS50YXJnZXQpO1xyXG4gICAgICAgICAgICBpZiAoJHRoaXMuYXR0cignY2xhc3MnKSA9PSAnZHJvcGRvd24nIHx8ICQoJHRoaXMpLnBhcmVudHMoJy5sbV9fZm9ybS1kcm9wZG93bicpLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICQoXCIuZHJvcGRvd25cIikuaGlkZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGRyb3Bkb3duLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAkKHRoaXMpLmZpbmQoXCIuc2hvd2Nhc2UgPiBhXCIpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHZhciBzdWIgPSAkKHRoaXMpLm5leHQoKTtcclxuICAgICAgICAgICAgICAgICQoXCIuZHJvcGRvd25cIikubm90KHN1YikuaGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgaWYgKHN1Yi5jc3MoJ2Rpc3BsYXknKSA9PSAnbm9uZScpIHtcclxuICAgICAgICAgICAgICAgICAgICBzdWIuc2hvdygpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBzdWIuaGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIHNldERyb3Bkb3duKCQodGhpcyksICd0eXBlLTInKTtcclxuICAgICAgICAgICAgc2V0RHJvcGRvd24oJCh0aGlzKSwgJ3R5cGUtMycpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGFkZERhdGFQaWNrZXJIYW5kbGVyKCk7XHJcbiAgICBhZGREcm9wRG93bkhhbmRsZXIoKTtcclxufSk7XHJcbiIsIiQoZnVuY3Rpb24gKCkge1xyXG4gICAgaWYgKCQoXCIjY2FsY3VsYXRlX2RlbGl2ZXJ5X2ZlZVwiKS5sZW5ndGgpIHtcclxuICAgICAgICBpZiAoalF1ZXJ5LnZhbGlkYXRvcikge1xyXG4gICAgICAgICAgICAkKFwiI2NhbGN1bGF0ZUZvcm1cIikudmFsaWRhdGUoe1xyXG4gICAgICAgICAgICAgICAgaWdub3JlOiBbXSxcclxuICAgICAgICAgICAgICAgIGVycm9yRWxlbWVudENsYXNzOiAnZXJyb3InLFxyXG4gICAgICAgICAgICAgICAgZXJyb3JDbGFzczogJ2Vycm9yLWl0ZW0nLFxyXG4gICAgICAgICAgICAgICAgZXJyb3JFbGVtZW50OiAnc3BhbicsXHJcbiAgICAgICAgICAgICAgICBydWxlczoge1xyXG4gICAgICAgICAgICAgICAgICAgIExvcnJ5VHlwZToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgRGVsaXZlcnlBZHJlc3M6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIFF1YW50aXR5OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBudW1iZXI6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1pbjogMVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgRGVsaXZlcnlEYXRlOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzd2VkaXNoRGF0ZTogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgQXJ0aWtlbF9GcmFrdDoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlczoge1xyXG4gICAgICAgICAgICAgICAgICAgIExvcnJ5VHlwZToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogXCJEdSBtw6VzdGUgdsOkbGphIGxldmVyYW5zc8OkdHRcIlxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgRGVsaXZlcnlBZHJlc3M6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IFwiRHUgbcOlc3RlIHbDpGxqYSBlbiBsZXZlcmFuc2FkcmVzc1wiXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBRdWFudGl0eToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogXCJEdSBtw6VzdGUgYW5nZSBlbiBrdmFudGl0ZXQgc3TDtnJyZSDDpG4gMFwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBudW1iZXI6IFwiQW5nZSBldHQgbnVtZXJpc2t0IHbDpHJkZVwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBtaW46IFwiRHUgbcOlc3RlIGFuZ2UgZW4ga3ZhbnRpdGV0IHN0w7ZycmUgw6RuIDFcIlxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgRGVsaXZlcnlEYXRlOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiBcIkR1IG3DpXN0ZSBhbmdlIGV0dCBnaWx0aWd0IGRhdHVtXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHN3ZWRpc2hEYXRlOiBcIkR1IG3DpXN0ZSBhbmdlIGV0dCBnaWx0aWd0IGRhdHVtXCJcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIEFydGlrZWxfRnJha3Q6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IFwiRHUgbcOlc3RlIHbDpGxqYSBlbiBhcnRpa2VsXCJcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgaGlnaGxpZ2h0OiBmdW5jdGlvbiAoZWxlbWVudCwgZXJyb3JDbGFzcywgdmFsaWRDbGFzcykge1xyXG4gICAgICAgICAgICAgICAgICAgICQoJ3VsLmVycm9ycy1saXN0Jykuc2hvdygpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoJ3VsLmVycm9ycy1saXN0JykucGFyZW50KCkuc2hvdygpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoJ2xpI3BfJyArICQoZWxlbWVudCkuYXR0cignaWQnKSkuc2hvdygpO1xyXG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQgPSB0aGlzLnNldHRpbmdzLl9nZXRJbmRpY2F0b3JFbGVtZW50KGVsZW1lbnQpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoZWxlbWVudCkuYWRkQ2xhc3ModGhpcy5zZXR0aW5ncy5lcnJvckVsZW1lbnRDbGFzcykucmVtb3ZlQ2xhc3MoZXJyb3JDbGFzcyk7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgdW5oaWdobGlnaHQ6IGZ1bmN0aW9uIChlbGVtZW50LCBlcnJvckNsYXNzLCB2YWxpZENsYXNzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnbGkjcF8nICsgJChlbGVtZW50KS5hdHRyKCdpZCcpKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCQoJ3VsLmVycm9ycy1saXN0JykuZmluZCgnbGlbaWRePVwicFwiXScpLmlzKFwiOnZpc2libGVcIikgPT09IGZhbHNlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJ3VsLmVycm9ycy1saXN0JykuaGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKCd1bC5lcnJvcnMtbGlzdCcpLnBhcmVudCgpLmhpZGUoKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgZWxlbWVudCA9IHRoaXMuc2V0dGluZ3MuX2dldEluZGljYXRvckVsZW1lbnQoZWxlbWVudCk7XHJcbiAgICAgICAgICAgICAgICAgICAgJChlbGVtZW50KS5yZW1vdmVDbGFzcyh0aGlzLnNldHRpbmdzLmVycm9yRWxlbWVudENsYXNzKS5yZW1vdmVDbGFzcyhlcnJvckNsYXNzKTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBfZ2V0SW5kaWNhdG9yRWxlbWVudDogZnVuY3Rpb24gKGVsZW1lbnQpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoJChlbGVtZW50KS5hdHRyKFwidHlwZVwiKSA9PSBcImhpZGRlblwiICYmICQoZWxlbWVudCkucGFyZW50cyhcInVsLmxtX19mb3JtLWRyb3Bkb3duXCIpKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJChlbGVtZW50KS5wYXJlbnRzKFwidWwubG1fX2Zvcm0tZHJvcGRvd25cIikuZmluZChcImxpLnNob3djYXNlID4gYVwiKS5nZXQoMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZWxlbWVudDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAkKFwiI2NhbGN1bGF0ZV9kZWxpdmVyeV9mZWVcIikuYmluZChcImNsaWNrXCIsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgIGlmICghJChcIiNjYWxjdWxhdGVGb3JtXCIpLnZhbGlkKCkpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoJCgnLmNhbGN1bGF0ZV9yZXN1bHQgLmNhbGN1bGF0ZV9mZWUnKSkge1xyXG4gICAgICAgICAgICAgICAgJCgnLmNhbGN1bGF0ZV9yZXN1bHQgLmNhbGN1bGF0ZV9mZWUnKS5odG1sKCcuLi4nKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAkKFwiI2xvYWRlckNhbGN1bGF0aW9uXCIpLnNob3coKTtcclxuICAgICAgICAgICAgdmFyIHVybCA9IFwiL2FwaS9kZWxpdmVyeWZlZS9jYWx1Y3VsYXRlXCI7XHJcbiAgICAgICAgICAgIHZhciBjYWxjdWxhdGVPYmogPSBnZXRDYWxjdWxhdGVPYmplY3QoKTtcclxuXHJcbiAgICAgICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgICAgICB0eXBlOiBcInBvc3RcIixcclxuICAgICAgICAgICAgICAgIGRhdGE6IGNhbGN1bGF0ZU9iaixcclxuICAgICAgICAgICAgICAgIGRhdGFUeXBlOiBcImh0bWxcIixcclxuICAgICAgICAgICAgICAgIHVybDogdXJsLFxyXG4gICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5pbmRleE9mKFwiPGh0bWw+XCIpID4gMClcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBcIi9cIjtcclxuICAgICAgICAgICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoXCIuY2FsY3VsYXRlX3Jlc3VsdFwiKS5odG1sKGRhdGEpO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGNvbXBsZXRlOiBmdW5jdGlvbiAoanFYSFIpIHtcclxuICAgICAgICAgICAgICAgICAgICAkKCcjbG9hZGVyQ2FsY3VsYXRpb24nKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiLmNhbGN1bGF0ZV9yZXN1bHRcIikuaHRtbCgnJyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChcIiNjYWxjdWxhdGVGb3JtXCIpLmZpbmQoXCIuc2hvd2Nhc2UgLmRyb3Bkb3duIGxpIGFcIikuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgaW5wdXRFbGVtZW50ID0gJCh0aGlzKS5wYXJlbnRzKFwiLnNob3djYXNlXCIpLmZpbmQoXCJpbnB1dC5mb3JtLWVsZW1lbnRcIik7XHJcbiAgICAgICAgICAgIHZhciBpbnB1dFNlbGVjdG9yID0gaW5wdXRFbGVtZW50LmF0dHIoJ2lkJyk7XHJcbiAgICAgICAgICAgICQoXCIjY2FsY3VsYXRlRm9ybVwiKS52YWxpZGF0ZSgpLmVsZW1lbnQoJyMnICsgaW5wdXRTZWxlY3Rvcik7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZ2V0Q2FsY3VsYXRlT2JqZWN0KCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHN1cHBsaWVyOiAkKCcuY2FsY3VsYXRlX3N1cHBsaWVyJykudmFsKCksXHJcbiAgICAgICAgICAgIGxvcnJ5VHlwZTogJCgnI0xvcnJ5VHlwZScpLnZhbCgpLFxyXG4gICAgICAgICAgICBkZWxpdmVyeUFkZHJlc3NJZDogJCgnI0RlbGl2ZXJ5QWRyZXNzJykudmFsKCksXHJcbiAgICAgICAgICAgIHF1YW50aXR5OiAkKCcuY2FsY3VsYXRlX3F1YW50aXR5JykudmFsKCksXHJcbiAgICAgICAgICAgIGRlbGl2ZXJ5RGF0ZTogJCgnLmNhbGN1bGF0ZV9kZWxpdmVyeURhdGUnKS52YWwoKSxcclxuICAgICAgICAgICAgaXRlbUlkOiAkKCcjQXJ0aWtlbF9GcmFrdCcpLnZhbCgpLFxyXG4gICAgICAgICAgICBpc0ludGVybmFsOiAkKCcjaXNJbnRlcm5hbCcpLnZhbCgpXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxufSk7IiwiJChmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgdmFyIGRlbGl2ZXJ5Tm90ZSA9IChmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICAgIHZhciAkb3JkZXJMaW5rID0gJChcIi5kZWxpdmVyeU5vdGUgYS5zaG93UGRmXCIpO1xyXG5cclxuICAgICAgICB2YXIgZ2V0UGRmID0gZnVuY3Rpb24gKG9yZGVyTnVtYmVyLCBmYWJyaWNJZCwgcm93TnVtYmVyKSB7XHJcbiAgICAgICAgICAgIEdyb0NvbW1vbi5ibG9ja1VJKCk7XHJcbiAgICAgICAgICAgIHZhciB1cmwgPSBcIi9hcGkvZGVsaXZlcnktbm90ZS9nZXQtZGVsaXZlcnlub3RlLXBkZlwiICsgXCI/b3JkZXJOdW1iZXI9XCIgKyBvcmRlck51bWJlciArIFwiJmZhYnJpY0lkPVwiICsgZmFicmljSWQgKyBcIiZyb3dOdW1iZXI9XCIgKyByb3dOdW1iZXI7XHJcblxyXG4gICAgICAgICAgICB3aW5kb3cub3BlbihkZWNvZGVVUklDb21wb25lbnQodXJsKSk7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdmFyIGluaXQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICRvcmRlckxpbmsuY2xpY2soZnVuY3Rpb24gKCkge1xyXG5cclxuICAgICAgICAgICAgICAgIHZhciBvcmRlck51bWJlciA9ICQodGhpcykuYXR0cihcImNkYXRhLW9yZGVyTnVtYmVyXCIpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGFjdGl2ZVBkZiA9ICQodGhpcykuYXR0cihcImNkYXRhLWFjdGl2ZVBkZlwiKTtcclxuICAgICAgICAgICAgICAgIHZhciBmYWJyaWNJZCA9ICQodGhpcykuYXR0cihcImNkYXRhLWZhYnJpY0lEXCIpO1xyXG4gICAgICAgICAgICAgICAgdmFyIHJvd051bWJlciA9ICQodGhpcykuYXR0cihcImNkYXRhLXJvd051bWJlclwiKTtcclxuICAgICAgICAgICAgICAgIHZhciBzeXN0ZW0gPSAkKHRoaXMpLmF0dHIoXCJjZGF0YS1zeXN0ZW1cIik7XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKGFjdGl2ZVBkZiA9PT0gXCJUcnVlXCIpIHtcclxuICAgICAgICAgICAgICAgICAgICBnZXRQZGYob3JkZXJOdW1iZXIsIGZhYnJpY0lkLCByb3dOdW1iZXIpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKHN5c3RlbSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFwiM1wiOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFwiNFwiOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBpbml0OiBpbml0XHJcbiAgICAgICAgfTtcclxuICAgIH0pKCk7XHJcblxyXG4gICAgJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGRlbGl2ZXJ5Tm90ZS5pbml0KCk7XHJcbiAgICB9KTtcclxufSk7XHJcbiIsIi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gLy9cclxuLy8gI01FU1NBR0VTXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gLy9cclxuXHJcblxyXG53aW5kb3cuZmFybWRheSA9IHdpbmRvdy5mYXJtZGF5IHx8IHt9O1xyXG5mYXJtZGF5Lm1vZHVsZXMgPSBmYXJtZGF5Lm1vZHVsZXMgfHwge307XHJcblxyXG5cclxuZmFybWRheS5tb2R1bGVzLm1lc3NhZ2VzID0gKGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBwcml2ID0ge307XHJcblxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUHJpdmF0ZSBpbml0aWFsaXphdGlvbiBtZXRob2RcclxuICAgICAqL1xyXG4gICAgcHJpdi5pbml0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBpc0RlYnVnO1xyXG5cclxuICAgICAgICBpZiAoJChcIi5qcy1wYWdlLWlkZW50aWZpZXItbWVzc2FnZXMtYWRtaW5pc3RlclwiKS5sZW5ndGgpIHtcclxuICAgICAgICAgICAgLy8kLmdldFNjcmlwdChcImh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL1RydW1ib3d5Zy8yLjQuMS90cnVtYm93eWcubWluLmpzXCIpO1xyXG4gICAgICAgICAgICAvLyQuZ2V0U2NyaXB0KFwiaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvVHJ1bWJvd3lnLzIuNC4xL2xhbmdzL3N2Lm1pbi5qc1wiKTtcclxuXHJcbiAgICAgICAgICAgIC8vdmFyIHN2TGFuZyA9IGpRdWVyeS50cnVtYm93eWcubGFuZ3Muc3YgfHwge307XHJcbiAgICAgICAgICAgIC8vc3ZMYW5nLnJlbW92ZWZvcm1hdCA9IFwiVGEgYm9ydCBmb3JtYXRlcmluZ1wiO1xyXG4gICAgICAgICAgICAvL3N2TGFuZy51bmRvID0gXCLDhW5ncmFcIjtcclxuXHJcbiAgICAgICAgICAgIGlzRGVidWcgPSAkKFwiLmpzLXBhZ2UtaWRlbnRpZmllci1tZXNzYWdlcy1hZG1pbmlzdGVyXCIpLmRhdGEoXCJkZWJ1Z1wiKTtcclxuXHJcbiAgICAgICAgICAgIGlmIChpc0RlYnVnKSB7XHJcbiAgICAgICAgICAgICAgICAkLmdldFNjcmlwdChcIi9TdGF0aWMvZGlzdC9zY3JpcHRzL2FkbWluaXN0ZXJNZXNzYWdlLmpzXCIpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgJC5nZXRTY3JpcHQoXCIvU3RhdGljL2Rpc3Qvc2NyaXB0cy9hZG1pbmlzdGVyTWVzc2FnZS5wcm9kdWN0aW9uLmpzXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoJChcIi5qcy1wYWdlLWlkZW50aWZpZXItbWVzc2FnZXNcIikubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgIGlzRGVidWcgPSAkKFwiLmpzLXBhZ2UtaWRlbnRpZmllci1tZXNzYWdlc1wiKS5kYXRhKFwiZGVidWdcIik7XHJcblxyXG4gICAgICAgICAgICBpZiAoaXNEZWJ1Zykge1xyXG4gICAgICAgICAgICAgICAgJC5nZXRTY3JpcHQoXCIvU3RhdGljL2Rpc3Qvc2NyaXB0cy91c2VyTWVzc2FnZXMuanNcIik7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAkLmdldFNjcmlwdChcIi9TdGF0aWMvZGlzdC9zY3JpcHRzL3VzZXJNZXNzYWdlcy5wcm9kdWN0aW9uLmpzXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoJChcIi5qcy1wYWdlLWlkZW50aWZpZXItbWVzc2FnZXMtc2V0dGluZ3NcIikubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgIGlzRGVidWcgPSAkKFwiLmpzLXBhZ2UtaWRlbnRpZmllci1tZXNzYWdlcy1zZXR0aW5nc1wiKS5kYXRhKFwiZGVidWdcIik7XHJcblxyXG4gICAgICAgICAgICBpZiAoaXNEZWJ1Zykge1xyXG4gICAgICAgICAgICAgICAgJC5nZXRTY3JpcHQoXCIvU3RhdGljL2Rpc3Qvc2NyaXB0cy91c2VyU2V0dGluZ3MuanNcIik7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAkLmdldFNjcmlwdChcIi9TdGF0aWMvZGlzdC9zY3JpcHRzL3VzZXJTZXR0aW5ncy5wcm9kdWN0aW9uLmpzXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcblxyXG4gICAgLy8gSW5pdGlhbGl6ZSBtb2R1bGVcclxuICAgICQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHByaXYuaW5pdCgpO1xyXG4gICAgfSk7XHJcblxyXG59KSgpO1xyXG4iLCIkKGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICB2YXIgU29rR3JvYmFyaGV0ID0gZnVuY3Rpb24gKCkge1xyXG5cclxuICAgICAgICB2YXIgY29udGFpbmVyID0gJChcIi5sbV9fc29rLWdyb2JhcmhldFwiKTtcclxuICAgICAgICB2YXIgaW5mb0J0biA9IGNvbnRhaW5lci5maW5kKFwiLmxtX19pbmZvXCIpO1xyXG4gICAgICAgIHZhciBtb2RhbCA9IGNvbnRhaW5lci5maW5kKFwiLmxtX19tb2RhbC1hbGVydFwiKTtcclxuICAgICAgICB2YXIgbWVzc2FnZUNsb3NhYmxlID0gJChcIi5sbV9fbWVzc2FnZS1jbG9zYWJsZSAuY2xvc2UtYnRuLCAubG1fX21vZGFsLWFsZXJ0IC5idXR0b24tY29uZmlybSAuc3VjY2Vzcy1jb25maXJtLWluZm9ybVwiKTtcclxuICAgICAgICB2YXIgaW5mb3JtTW9kYWwgPSAkKFwiLmxtX19pbmZvcm1hdGlvbi1tb2RhbF9fd3JhcHBlclwiKTtcclxuXHJcbiAgICAgICAgdmFyIG1vZGFsUG9wdXAgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGluZm9CdG4uY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgbW9kYWwuZmFkZUluKCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHZhciBjbG9zZU1lc3NhZ2UgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIG1lc3NhZ2VDbG9zYWJsZS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLnBhcmVudHMoXCIubG1fX21vZGFsLWFsZXJ0LCAubG1fX21lc3NhZ2UtY2xvc2FibGVcIikuZmFkZU91dCgpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB2YXIgaW5mb3JtTW9kYWxFdmVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgJChcIi5sbV9faW5mb3JtYXRpb24tbW9kYWxfX2Nsb3NlLWJ0blwiKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLnBhcmVudHMoXCIubG1fX2luZm9ybWF0aW9uLW1vZGFsX193cmFwcGVyXCIpLmFkZENsYXNzKFwiaGlkZGVuXCIpO1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5wYXJlbnRzKFwiLmxtX19tb2RhbC1hbGVydFwiKS5mYWRlT3V0KCk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGluaXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIG1vZGFsUG9wdXAoKTtcclxuICAgICAgICAgICAgICAgIGNsb3NlTWVzc2FnZSgpO1xyXG4gICAgICAgICAgICAgICAgaW5mb3JtTW9kYWxFdmVudCgpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgIH07XHJcblxyXG4gICAgdmFyIENvbW1vbk1vZGFsID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBtb2RhbCA9ICQoXCIubG1fX21vZGFsX193cmFwcGVyXCIpO1xyXG4gICAgICAgIHZhciBjbG9zZVhCdG4gPSBtb2RhbC5maW5kKFwiLmxtX193aWRlLW1vZGFsX19jbG9zZS1idG5cIik7XHJcbiAgICAgICAgdmFyIGNsb3NlQnRuID0gbW9kYWwuZmluZChcIi5sbV9fYnRuLWNsb3NlXCIpO1xyXG5cclxuICAgICAgICB2YXIgY2xvc2VNb2RhbCA9IGZ1bmN0aW9uIChlbGVtZW50KSB7XHJcbiAgICAgICAgICAgIGVsZW1lbnQuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5wYXJlbnRzKFwiLmxtX19tb2RhbF9fd3JhcHBlclwiKS5hZGRDbGFzcyhcImhpZGRlblwiKTtcclxuICAgICAgICAgICAgICAgICQoXCIjdWktZGF0ZXBpY2tlci1kaXZcIikuY3NzKHsgekluZGV4OiA5IH0pO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB2YXIgY2xvc2VNb2RhbEV2ZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBjbG9zZU1vZGFsKGNsb3NlWEJ0bik7XHJcbiAgICAgICAgICAgIGNsb3NlTW9kYWwoY2xvc2VCdG4pO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGluaXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGNsb3NlTW9kYWxFdmVudCgpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgIH07XHJcblxyXG4gICAgJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBzb2sgPSBuZXcgU29rR3JvYmFyaGV0KCk7XHJcbiAgICAgICAgc29rLmluaXQoKTtcclxuXHJcbiAgICAgICAgdmFyIG1vZGFsID0gbmV3IENvbW1vbk1vZGFsKCk7XHJcbiAgICAgICAgbW9kYWwuaW5pdCgpO1xyXG4gICAgfSk7XHJcbn0pO1xyXG4iLCIkKGZ1bmN0aW9uICgpIHtcclxuICAgICQoXCJmb3JtXCIpLm9uKFwiY2hhbmdlXCIsIFwiLmZpbGUtdXBsb2FkLWZpZWxkXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKHRoaXMpLnBhcmVudChcIi5maWxlLXVwbG9hZC13cmFwcGVyXCIpLmF0dHIoXCJkYXRhLXRleHRcIiwgJCh0aGlzKS52YWwoKS5yZXBsYWNlKC8uKihcXC98XFxcXCkvLCAnJykpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgaWYgKCQoJyNhdHRhY2htZW50cycpLmxlbmd0aCkge1xyXG4gICAgICAgICQoJyNhdHRhY2htZW50cycpLmZpbGVyKHtcclxuICAgICAgICAgICAgc2hvd1RodW1iczogdHJ1ZSxcclxuICAgICAgICAgICAgYWRkTW9yZTogdHJ1ZSxcclxuICAgICAgICAgICAgYWxsb3dEdXBsaWNhdGVzOiBmYWxzZVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59KTtcclxuIiwiJChmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgdmFyIE1pdHRLb250byA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgdXBsb2FkQnRuID0gJChcIi5sbV9fdXNlci1pbmZvcm1fX3dyYXBwZXIgLmxtX19hdmF0YXJfX3VwbG9hZC1idG5cIik7XHJcbiAgICAgICAgdmFyIHJlbW92ZUF2YXRhckJ0biA9ICQoXCIubG1fX3VzZXItaW5mb3JtX193cmFwcGVyIC5wb3B1cC1zdWIgbGkgLnJlbW92ZS1hdmF0YXJcIik7XHJcbiAgICAgICAgdmFyIHVwbG9hZEJ0bnMgPSAkKFwiLmZpbGUtdXBsb2FkLWlucHV0XCIpO1xyXG5cclxuICAgICAgICB2YXIgYWRkVXBsb2FkUG9wdXBFdmVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgJChkb2N1bWVudCkub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAkKCcucG9wdXAtc3ViJykuZmFkZU91dCgpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgJChcIi5wb3B1cC1zdWJcIikuY2xpY2soZnVuY3Rpb24gKCkgeyByZXR1cm4gZmFsc2U7IH0pO1xyXG4gICAgICAgICAgICB1cGxvYWRCdG4uY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIHBvcHVwU3ViID0gJCh0aGlzKS5wYXJlbnQoKTtcclxuICAgICAgICAgICAgICAgIGlmIChwb3B1cFN1Yi5oYXMoJy5wb3B1cC1zdWInKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHBvcHVwU3ViLmZpbmQoJy5wb3B1cC1zdWInKS5mYWRlVG9nZ2xlKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgLy9yZW1vdmVBdmF0YXJCdG4uY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAvLyAgICB2YXIgYXZhdGFyID0gJCh0aGlzKS5wYXJlbnRzKFwiLmxtX19hdmF0YXJcIikuZmluZChcIi5hdmF0YXItaW1nXCIpO1xyXG4gICAgICAgICAgICAvLyAgICBhdmF0YXIuYXR0cihcInNyY1wiLCAkKHRoaXMpLmF0dHIoXCJkZWZhdWx0LWF2YXRhclwiKSk7XHJcbiAgICAgICAgICAgIC8vICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgLy99KTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB2YXIgYWRkVXBsb2FkSW1hZ2VFdmVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdXBsb2FkQnRucy5lYWNoKGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5jaGFuZ2UoZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGltZ0VsZSA9ICQodGhpcykucGFyZW50KCkuZmluZChcIi5hdmF0YXItaW1nXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGltZ0VsZS5hdHRyKCdzcmMnLCBVUkwuY3JlYXRlT2JqZWN0VVJMKGV2ZW50LnRhcmdldC5maWxlc1swXSkpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGluaXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGFkZFVwbG9hZFBvcHVwRXZlbnQoKTtcclxuICAgICAgICAgICAgICAgIC8vYWRkVXBsb2FkSW1hZ2VFdmVudCgpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgIH07XHJcblxyXG4gICAgJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIC8vdmFyIG1pdCA9IG5ldyBNaXR0S29udG8oKTtcclxuICAgICAgICAvL21pdC5pbml0KCk7XHJcbiAgICB9KTtcclxuXHJcbn0pOyIsIiQoZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIE1hY2hpbmVMaXN0aW5nID0gZnVuY3Rpb24gKCkge1xyXG5cclxuICAgICAgICB2YXIgdG9nZ2xlVmlld0J0bnMgPSAkKFwiI3RvZ2dsZS12aWV3IGFcIik7XHJcbiAgICAgICAgdmFyIHRvZ2dsZVZpZXcgPSAkKFwiLm1hY2hpbmUtbGlzdFwiKTtcclxuICAgICAgICB2YXIgbWFjaGluZUl0ZW1zID0gJCgnLm1hY2hpbmUtaXRlbScpO1xyXG5cclxuICAgICAgICB2YXIgVG9nZ2xlVmlld0V2ZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0b2dnbGVWaWV3QnRucy5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHZhciAkdGhpcyA9ICQodGhpcyk7XHJcbiAgICAgICAgICAgICAgICBpZiAoJHRoaXMuaGFzQ2xhc3MoJ2FjdGl2ZScpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJHRoaXMuY3NzKHsgYmFja2dyb3VuZENvbG9yOiAnI2ZmZicgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB0b2dnbGVWaWV3QnRucy5vbignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICAgICAgICAgICAgICAgIHZhciAkdGhpcyA9ICQodGhpcyk7XHJcbiAgICAgICAgICAgICAgICB2YXIgdGdyID0gJHRoaXMuZGF0YSgndGFyZ2V0Jyk7XHJcblxyXG4gICAgICAgICAgICAgICAgLy8gU3dpdGNoIHZpZXdcclxuICAgICAgICAgICAgICAgIHRvZ2dsZVZpZXcuYWRkQ2xhc3MoKHRnciA9PSAnbGlzdCcpID8gJ2xpc3QtdmlldycgOiAnJyk7XHJcbiAgICAgICAgICAgICAgICB0b2dnbGVWaWV3LnJlbW92ZUNsYXNzKCh0Z3IgPT0gJ2dyaWQnKSA/ICdsaXN0LXZpZXcnIDogJycpO1xyXG5cclxuICAgICAgICAgICAgICAgIC8vIENoYW5nZSBhY3RpdmUgY2xhc3MgZm9yIHNlbGVjdGVkIGJ0blxyXG4gICAgICAgICAgICAgICAgdG9nZ2xlVmlld0J0bnMucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpLnJlbW92ZUF0dHIoJ3N0eWxlJyk7XHJcbiAgICAgICAgICAgICAgICAkdGhpcy5hZGRDbGFzcygnYWN0aXZlJykuY3NzKHsgYmFja2dyb3VuZENvbG9yOiAnI2ZmZicgfSk7XHJcblxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBpbml0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBUb2dnbGVWaWV3RXZlbnQoKTtcclxuXHJcbiAgICAgICAgICAgICAgICAvLyQod2luZG93KS5vbigncmVzaXplIG9yaWVudGF0aW9uY2hhbmdlJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgLy8gICAgaWYgKHdpbmRvdy5pbm5lcldpZHRoIDwgNzY4KSB7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgdG9nZ2xlVmlldy5yZW1vdmVDbGFzcygnbGlzdC12aWV3Jyk7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgdG9nZ2xlVmlld0J0bnMucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpLmZpcnN0KCkuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgLy8gICAgfVxyXG4gICAgICAgICAgICAgICAgLy99KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICB9O1xyXG5cclxuICAgIC8qKiA9PT09PT09PT09PT09PT09PT09PT09PSBERVBSRUFDQVRFRCA9PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG4gICAgJCgnLmxtX19saXN0LXR5cGUgYScpLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgZGF0YUxheW91dCA9ICQodGhpcykuYXR0cihcImRhdGEtbGF5b3V0XCIpO1xyXG5cclxuICAgICAgICAvLyBDaGFuZ2UgYWN0aXZlIGxheW91dCBidXR0b25cclxuICAgICAgICAkKCcubG1fX2xpc3QtdHlwZSBhJykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICQodGhpcykuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xyXG5cclxuICAgICAgICAvLyBDaGFuZ2UgbGF5b3V0XHJcbiAgICAgICAgJChcIi5saXN0LW1hc2tpblwiKS5yZW1vdmVDbGFzcyhcImxpc3QtdHlwZVwiKS5yZW1vdmVDbGFzcyhcImdyaWQtdHlwZVwiKS5hZGRDbGFzcyhkYXRhTGF5b3V0KS5zaG93KCk7XHJcblxyXG4gICAgICAgIC8vJChcIi5saXN0LW1hc2tpblwiKS5oaWRlKCk7XHJcbiAgICAgICAgLy8kKFwiLlwiK2RhdGFMYXlvdXQpLnNob3coKTtcclxuICAgIH0pO1xyXG5cclxuICAgICQoJy5sbV9fbGlzdC10eXBlIGEuYWN0aXZlJykuY2xpY2soKTtcclxuXHJcbiAgICAkKCcjY2hlY2tSZWdpc3RlckJ0bicpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKCcubG1fX21vZGFsLWFsZXJ0Jykuc2hvdygpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLyoqID09PT09PT09PT09PT09PT09PT09PT09IERFUFJFQUNBVEVEID09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4gICAgdmFyIG1hY2hpbmVMaXN0aW5nID0gbmV3IE1hY2hpbmVMaXN0aW5nKCk7XHJcbiAgICBtYWNoaW5lTGlzdGluZy5pbml0KCk7XHJcblxyXG59KTtcclxuIiwiaWYgKGpRdWVyeS52YWxpZGF0b3IpIHtcclxuICAgIGpRdWVyeS52YWxpZGF0b3IuYWRkTWV0aG9kKFwic3ViSXRlbVJlcXVpcmVkXCIsIGZ1bmN0aW9uICh2YWx1ZSwgZWxlbWVudCwgbWV0aG9kKSB7XHJcbiAgICAgICAgcmV0dXJuIG1ldGhvZDtcclxuICAgIH0sICcnKTtcclxuICAgIGpRdWVyeS52YWxpZGF0b3IuYWRkTWV0aG9kKFwicmVnZXhcIiwgZnVuY3Rpb24gKHZhbHVlLCBlbGVtZW50LCByZWdleHByKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMub3B0aW9uYWwoZWxlbWVudCkgfHwgcmVnZXhwci50ZXN0KHZhbHVlKTtcclxuICAgIH0sICdQbGVhc2UgZW50ZXIgYSB2YWxpZCB2YWx1ZS4nKTtcclxufVxyXG5cclxualF1ZXJ5KGZ1bmN0aW9uICgpIHtcclxuICAgIE15QWNjb3VudFBhZ2UuaW5pdCgpO1xyXG4gICAgSGFuZGluU2lnbkluSW5mb3JtYXRpb25QYWdlLmluaXQoKTtcclxuICAgIENvbXBhbnlJbmZvcm1hdGlvbi5pbml0KCk7XHJcbiAgICBCdXNpbmVzc1Byb2ZpbGUuaW5pdCgpO1xyXG4gICAgRGVsaXZlcnlBZGRyZXNzLmluaXQoKTtcclxufSk7XHJcblxyXG52YXIgTXlBY2NvdW50UGFnZSA9IE15QWNjb3VudFBhZ2UgfHwgKGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICB2YXIgYWRkVXBsb2FkUG9wdXBFdmVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKGRvY3VtZW50KS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgJCgnLnBvcHVwLXN1YicpLmZhZGVPdXQoKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgLy8kKFwiLnBvcHVwLXN1YlwiKS5jbGljayhmdW5jdGlvbiAoKSB7IHJldHVybiBmYWxzZTsgfSk7XHJcbiAgICAgICAgJChcIi5sbV9fYXZhdGFyIC5sbV9fYXZhdGFyX191cGxvYWQtYnRuXCIpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIHBvcHVwU3ViID0gJCh0aGlzKS5wYXJlbnQoKTtcclxuICAgICAgICAgICAgaWYgKHBvcHVwU3ViLmhhcygnLnBvcHVwLXN1YicpKSB7XHJcbiAgICAgICAgICAgICAgICBwb3B1cFN1Yi5maW5kKCcucG9wdXAtc3ViJykuZmFkZVRvZ2dsZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcblxyXG4gICAgdmFyIGluaXQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgYWRkVXBsb2FkUG9wdXBFdmVudCgpO1xyXG4gICAgICAgIC8vSW5pdCBmb3IgUHJvZmlsZSBwaWN0dXJlXHJcbiAgICAgICAgdmFyIHVzZXJQYXJhbXNGb3JVcGxvYWQgPSBnZXRTZXR0aW5nc0ZvclVzZXJVcGxvYWQoKTtcclxuICAgICAgICB2YXIgdXNlclVwbG9hZEltYWdlTW9kdWxlID0gbmV3IFVwbG9hZEltYWdlTW9kdWxlKHVzZXJQYXJhbXNGb3JVcGxvYWQpO1xyXG4gICAgICAgIHVzZXJVcGxvYWRJbWFnZU1vZHVsZS5pbml0VXBsb2FkRmlsZSgpO1xyXG4gICAgICAgIHVzZXJVcGxvYWRJbWFnZU1vZHVsZS5pbml0RGVsZXRlRmlsZSgpO1xyXG5cclxuICAgICAgICAvL0luaXQgZm9yIEN1c3RvbWVyIHBpY3R1cmVcclxuICAgICAgICB2YXIgY29tcGFueVVwbG9hZFNldHRpbmdzID0gZ2V0U2V0dGluZ3NGb3JDb21wYW55VXBsb2FkKCk7XHJcbiAgICAgICAgdmFyIGNvbXBhbnlVcGxvYWRJbWFnZU1vZHVsZSA9IG5ldyBVcGxvYWRJbWFnZU1vZHVsZShjb21wYW55VXBsb2FkU2V0dGluZ3MpO1xyXG4gICAgICAgIGNvbXBhbnlVcGxvYWRJbWFnZU1vZHVsZS5pbml0VXBsb2FkRmlsZSgpO1xyXG4gICAgICAgIGNvbXBhbnlVcGxvYWRJbWFnZU1vZHVsZS5pbml0RGVsZXRlRmlsZSgpO1xyXG4gICAgfTtcclxuICAgIGZ1bmN0aW9uIGdldFNldHRpbmdzRm9yVXNlclVwbG9hZCgpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBmaWxlU2VsZWN0b3I6IFwiI3VzZXItYXZhdGFyX19maWxlXCIsXHJcbiAgICAgICAgICAgIHByZXZpZXdJbWdTZWxlY3RvcjogXCIjdXNlci1hdmF0YXJcIixcclxuICAgICAgICAgICAgdXBsb2FkQnRuU2VsZWN0b3I6IFwiI3VzZXItdXBsb2FkQnRuXCIsXHJcbiAgICAgICAgICAgIGNhbmNlbFVwbG9hZEJ0blNlbGVjdG9yOiBcIiN1c2VyLWNhbmNlbFVwbG9hZFwiLFxyXG4gICAgICAgICAgICBsaW5rU2VsZWN0b3I6IFwiI3VzZXItbGlua1wiLFxyXG4gICAgICAgICAgICBoYW5kbGVVcmw6IFwiL2FwaS9wcm9maWxlL3VzZXItdXBsb2FkLWF2YXRhclwiLFxyXG4gICAgICAgICAgICBpc05lZWRUb1VwZGF0ZUhlYWRlcjogdHJ1ZSxcclxuICAgICAgICAgICAgZGVsZXRlTGlua1NlbGVjdG9yOiBcIiN1c2VyLWRlbGV0ZUJ0blwiLFxyXG4gICAgICAgICAgICBoYW5kbGVEZWxldGVVcmw6IFwiL2FwaS9wcm9maWxlL3VzZXItZGVsZXRlLWF2YXRhclwiLFxyXG4gICAgICAgICAgICBtZXNzYWdlczoge1xyXG4gICAgICAgICAgICAgICAgY29uZmlybWF0aW9uRGlhbG9nU2VsZWN0b3I6IFwiI2RpYWxvZy11c2VyLWNvbmZpcm1hdGlvblwiXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBnZXRTZXR0aW5nc0ZvckNvbXBhbnlVcGxvYWQoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgZmlsZVNlbGVjdG9yOiBcIiNjb21wYW55LWF2YXRhcl9fZmlsZVwiLFxyXG4gICAgICAgICAgICBwcmV2aWV3SW1nU2VsZWN0b3I6IFwiI2NvbXBhbnktYXZhdGFyXCIsXHJcbiAgICAgICAgICAgIHVwbG9hZEJ0blNlbGVjdG9yOiBcIiNjb21wYW55LXVwbG9hZEJ0blwiLFxyXG4gICAgICAgICAgICBjYW5jZWxVcGxvYWRCdG5TZWxlY3RvcjogXCIjY29tcGFueS1jYW5jZWxVcGxvYWRcIixcclxuICAgICAgICAgICAgbGlua1NlbGVjdG9yOiBcIiNjb21wYW55LWxpbmtcIixcclxuICAgICAgICAgICAgaGFuZGxlVXJsOiBcIi9hcGkvcHJvZmlsZS9jb21wYW55LXVwbG9hZC1hdmF0YXJcIixcclxuICAgICAgICAgICAgZGVsZXRlTGlua1NlbGVjdG9yOiBcIiNjb21wYW55LWRlbGV0ZUJ0blwiLFxyXG4gICAgICAgICAgICBoYW5kbGVEZWxldGVVcmw6IFwiL2FwaS9wcm9maWxlL2NvbXBhbnktZGVsZXRlLWF2YXRhclwiLFxyXG4gICAgICAgICAgICBtZXNzYWdlczoge1xyXG4gICAgICAgICAgICAgICAgY29uZmlybWF0aW9uRGlhbG9nU2VsZWN0b3I6IFwiI2RpYWxvZy1jb21wYW55LWNvbmZpcm1hdGlvblwiXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgaW5pdDogaW5pdFxyXG4gICAgfTtcclxuXHJcbn0pKCk7XHJcblxyXG52YXIgSGFuZGluU2lnbkluSW5mb3JtYXRpb25QYWdlID0gSGFuZGluU2lnbkluSW5mb3JtYXRpb25QYWdlIHx8IChmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgdW5zYXZlZCA9IGZhbHNlO1xyXG4gICAgdmFyIGZvcm1TdWJtaXR0aW5nID0gZmFsc2U7XHJcblxyXG5cclxuICAgIHZhciBpbml0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciB4ID0gJCgnI2hpZGRlblNvY2lhbE51bWJlcicpLnZhbCgpO1xyXG4gICAgICAgIGlmICh4ICYmIHggIT09IFwiXCIpIHtcclxuICAgICAgICAgICAgJCgnI2hpZGRlblNvY2lhbE51bWJlciwgI1NvY2lhbFNlY3VyaXR5TnVtYmVyJykudmFsKCcqKioqKioqKioqKionKTtcclxuICAgICAgICAgICAgJCgnLmxtX19ibG9jayAubG1fX2NoZWNrYm94Jykuc2hvdygpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJCgnI1NvY2lhbFNlY3VyaXR5TnVtYmVyJykuY2hhbmdlKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdW5zYXZlZCA9IHRydWU7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHdpbmRvdy5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwiYmVmb3JldW5sb2FkXCIsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZm9ybVN1Ym1pdHRpbmcgfHwgIXVuc2F2ZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIHZhciBjb25maXJtYXRpb25NZXNzYWdlID0gJ0l0IGxvb2tzIGxpa2UgeW91IGhhdmUgYmVlbiBlZGl0aW5nIHNvbWV0aGluZy4gJyArXHJcbiAgICAgICAgICAgICAgICAgICAgJ0lmIHlvdSBsZWF2ZSBiZWZvcmUgc2F2aW5nLCB5b3VyIGNoYW5nZXMgd2lsbCBiZSBsb3N0Lic7XHJcblxyXG4gICAgICAgICAgICAgICAgKGUgfHwgd2luZG93LmV2ZW50KS5yZXR1cm5WYWx1ZSA9IGNvbmZpcm1hdGlvbk1lc3NhZ2U7IC8vR2Vja28gKyBJRVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbmZpcm1hdGlvbk1lc3NhZ2U7IC8vR2Vja28gKyBXZWJraXQsIFNhZmFyaSwgQ2hyb21lIGV0Yy5cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfTtcclxuICAgIH07XHJcblxyXG4gICAgdmFyIHZhbGlkYXRlRm9ybSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgeCA9ICQoJyNTb2NpYWxTZWN1cml0eU51bWJlcicpLnJlbW92ZUNsYXNzKCdlcnJvcicpLnZhbCgpO1xyXG4gICAgICAgICQoJyNlcnJvci1tZXNzYWdlJykuaGlkZSgpO1xyXG4gICAgICAgIGlmICh4ID09IG51bGwgfHwgeCA9PT0gXCJcIikge1xyXG4gICAgICAgICAgICAkKCcjU29jaWFsU2VjdXJpdHlOdW1iZXInKS5hZGRDbGFzcygnZXJyb3InKTtcclxuICAgICAgICAgICAgJCgnI2Vycm9yLW1lc3NhZ2UnKS5zaG93KCkuaHRtbChcIlBlcnNvbm51bW1lciBtw6VzdGUgZnlsbGFzIGlcIik7XHJcbiAgICAgICAgICAgICQoJy5sbV9fYmxvY2sgLmxtX19jaGVja2JveCcpLmhpZGUoKTtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgcmV4ID0gL14oWzAtOV17MTJ9KSR8XihbMC05XXsxMH0pJC87XHJcbiAgICAgICAgaWYgKCFyZXgudGVzdCh4KSkge1xyXG4gICAgICAgICAgICAkKCcjU29jaWFsU2VjdXJpdHlOdW1iZXInKS5hZGRDbGFzcygnZXJyb3InKTtcclxuICAgICAgICAgICAgJCgnI2Vycm9yLW1lc3NhZ2UnKS5zaG93KCkuaHRtbChcIkR1IG3DpXN0ZSBhbmdlIDEyIHNpZmZyb3IgKMOFw4XDhcOFTU1ERE5OTk4pXCIpO1xyXG4gICAgICAgICAgICAkKCcubG1fX2Jsb2NrIC5sbV9fY2hlY2tib3gnKS5oaWRlKCk7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZvcm1TdWJtaXR0aW5nID0gdHJ1ZTtcclxuICAgIH07XHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBpbml0OiBpbml0LFxyXG4gICAgICAgIHZhbGlkYXRlRm9ybTogdmFsaWRhdGVGb3JtXHJcbiAgICB9O1xyXG5cclxufSkoKTtcclxuXHJcbnZhciBDb21wYW55SW5mb3JtYXRpb24gPSBDb21wYW55SW5mb3JtYXRpb24gfHwgKGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBpbml0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKCQoKS52YWxpZGF0ZSkge1xyXG4gICAgICAgICAgICAgICAgJChcIiNlZGl0Q29tcGFueUluZm9ybWF0aW9uRnJvbVwiKS52YWxpZGF0ZSh7XHJcbiAgICAgICAgICAgICAgICAgICAgZXJyb3JFbGVtZW50Q2xhc3M6ICdlcnJvcicsXHJcbiAgICAgICAgICAgICAgICAgICAgZXJyb3JDbGFzczogJ2Vycm9yLWl0ZW0nLFxyXG4gICAgICAgICAgICAgICAgICAgIGVycm9yRWxlbWVudDogJ3NwYW4nLFxyXG4gICAgICAgICAgICAgICAgICAgIHJ1bGVzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENvbXBhbnlOYW1lOiBcInJlcXVpcmVkXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIEFkZHJlc3M6IFwicmVxdWlyZWRcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgWmlwQ29kZToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB6aXBDb2RlOiB0cnVlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENpdHk6IFwicmVxdWlyZWRcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgUGhvbmVNb2JpbGU6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9iaWxlU0U6IHRydWVcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUGhvbmVXb3JrOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwaG9uZVNFOiB0cnVlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIEVtYWlsOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZ2V4OiAvXlxcYltBLVowLTkuXyUtXStAW0EtWjAtOS4tXStcXC5bQS1aXXsyLDR9XFxiJC9pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIENvbXBhbnlOYW1lOiBcIkR1IG3DpXN0ZSBhbmdlIEbDtnJldGFnL25hbW5cIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgQWRkcmVzczogXCJEdSBtw6VzdGUgYW5nZSBHYXR1YWRyZXNzXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFppcENvZGU6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiBcIkR1IG3DpXN0ZSBhbmdlIFBvc3RudW1tZXJcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHppcENvZGU6IHdpbmRvd1tcInZhbGlkYXRpb25NZXNzYWdlXCJdLnppcENvZGUudmFsaWRcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ2l0eToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IFwiRHUgbcOlc3RlIGFuZ2UgT3J0XCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUGhvbmVNb2JpbGU6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB3aW5kb3dbXCJ2YWxpZGF0aW9uTWVzc2FnZVwiXS5tb2JpbGVTRS5yZXF1aXJlZCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vYmlsZVNFOiB3aW5kb3dbXCJ2YWxpZGF0aW9uTWVzc2FnZVwiXS5tb2JpbGVTRS52YWxpZFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBQaG9uZVdvcms6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBob25lU0U6IHdpbmRvd1tcInZhbGlkYXRpb25NZXNzYWdlXCJdLnBob25lU0UudmFsaWRcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgRW1haWw6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiBcIkR1IG3DpXN0ZSBhbmdlIEUtcG9zdFwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZW1haWw6IFwiQW5nZSBlbiBnaWx0aWcgZS1wb3N0YWRyZXNzXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgaGlnaGxpZ2h0OiBmdW5jdGlvbiAoZWxlbWVudCwgZXJyb3JDbGFzcywgdmFsaWRDbGFzcykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKCdkaXYuZXJyb3JzLWxpc3QnKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJ3VsLmVycm9ycy1saXN0Jykuc2hvdygpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKCdsaSNwXycgKyAkKGVsZW1lbnQpLmF0dHIoJ2lkJykpLnNob3coKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJChlbGVtZW50KS5hZGRDbGFzcyh0aGlzLnNldHRpbmdzLmVycm9yRWxlbWVudENsYXNzKS5yZW1vdmVDbGFzcyhlcnJvckNsYXNzKTtcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHVuaGlnaGxpZ2h0OiBmdW5jdGlvbiAoZWxlbWVudCwgZXJyb3JDbGFzcywgdmFsaWRDbGFzcykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKGVsZW1lbnQpLnJlbW92ZUNsYXNzKHRoaXMuc2V0dGluZ3MuZXJyb3JFbGVtZW50Q2xhc3MpLnJlbW92ZUNsYXNzKGVycm9yQ2xhc3MpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKCdsaSNwXycgKyAkKGVsZW1lbnQpLmF0dHIoJ2lkJykpLmhpZGUoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCQoJ3VsLmVycm9ycy1saXN0JykuZmluZCgnbGlbaWRePVwicFwiXScpLmlzKFwiOnZpc2libGVcIikgPT09IGZhbHNlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCd1bC5lcnJvcnMtbGlzdCcpLmhpZGUoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBpbml0OiBpbml0XHJcbiAgICB9O1xyXG59KSgpO1xyXG5cclxudmFyIEJ1c2luZXNzUHJvZmlsZSA9IEJ1c2luZXNzUHJvZmlsZSB8fCAoZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIGluaXQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAoJCgpLnZhbGlkYXRlKSB7XHJcbiAgICAgICAgICAgICAgICAkKFwiI2VkaXRCdXNpbmVzc1Byb2ZpbGVGb3JtXCIpLnZhbGlkYXRlKHtcclxuICAgICAgICAgICAgICAgICAgICBlcnJvckVsZW1lbnRDbGFzczogJ2Vycm9yJyxcclxuICAgICAgICAgICAgICAgICAgICBlcnJvckNsYXNzOiAnZXJyb3ItaXRlbScsXHJcbiAgICAgICAgICAgICAgICAgICAgZXJyb3JFbGVtZW50OiAnc3BhbicsXHJcbiAgICAgICAgICAgICAgICAgICAgcnVsZXM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgXCJCdXNpbmVzc1Byb2ZpbGUuTmFtZVwiOiBcInJlcXVpcmVkXCJcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiQnVzaW5lc3NQcm9maWxlLk5hbWVcIjogXCJEdSBtw6VzdGUgYW5nZSBUeXAgYXYgdmVya3NhbWhldFwiXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBoaWdobGlnaHQ6IGZ1bmN0aW9uIChlbGVtZW50LCBlcnJvckNsYXNzLCB2YWxpZENsYXNzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJ2Rpdi5lcnJvcnMtbGlzdCcpLmhpZGUoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJCgndWwuZXJyb3JzLWxpc3QnKS5zaG93KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJ2xpI3BfJyArICQoZWxlbWVudCkuYXR0cignaWQnKSkuc2hvdygpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKGVsZW1lbnQpLmFkZENsYXNzKHRoaXMuc2V0dGluZ3MuZXJyb3JFbGVtZW50Q2xhc3MpLnJlbW92ZUNsYXNzKGVycm9yQ2xhc3MpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgdW5oaWdobGlnaHQ6IGZ1bmN0aW9uIChlbGVtZW50LCBlcnJvckNsYXNzLCB2YWxpZENsYXNzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoZWxlbWVudCkucmVtb3ZlQ2xhc3ModGhpcy5zZXR0aW5ncy5lcnJvckVsZW1lbnRDbGFzcykucmVtb3ZlQ2xhc3MoZXJyb3JDbGFzcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJ2xpI3BfJyArICQoZWxlbWVudCkuYXR0cignaWQnKSkuaGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoJCgndWwuZXJyb3JzLWxpc3QnKS5maW5kKCdsaVtpZF49XCJwXCJdJykuaXMoXCI6dmlzaWJsZVwiKSA9PT0gZmFsc2UpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJ3VsLmVycm9ycy1saXN0JykuaGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH07XHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBpbml0OiBpbml0XHJcbiAgICB9O1xyXG59KSgpO1xyXG5cclxudmFyIERlbGl2ZXJ5QWRkcmVzcyA9IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICB2YXIgYWRkRGVsZXRlQWRkcmVzc0hhbmRsZXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyICRkZWxFbGVtZW50ID0gJChcIiNkZWwtZGVsaXZlcnktYWRkcmVzc1wiKTtcclxuICAgICAgICBpZiAoJGRlbEVsZW1lbnQubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAkZGVsRWxlbWVudC5jbGljayhmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGFkZHJlc3NOdW1iZXIgPSAkKFwiI2FkZHJlc3NOdW1iZXJcIikudmFsKCkudG9TdHJpbmcoKTtcclxuICAgICAgICAgICAgICAgIHZhciBoYW5kbGVQYWdlSWQgPSAkKFwiI2hhbmRsZXItZGVsaXZlcnktcGFnZS1pZFwiKS52YWwoKS50b1N0cmluZygpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGFwaVVybCA9IFwiL2FwaS9oYW5kbGUtZGVsaXZlcnktYWRkcmVzcy9kZWxldGUvXCIgKyBhZGRyZXNzTnVtYmVyICsgXCIvXCIgKyBoYW5kbGVQYWdlSWQ7XHJcbiAgICAgICAgICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICAgICAgICAgIGRhdGFUeXBlOiBcImh0bWxcIixcclxuICAgICAgICAgICAgICAgICAgICB1cmw6IGFwaVVybCxcclxuICAgICAgICAgICAgICAgICAgICBjYWNoZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCEhZGF0YSAmJiBkYXRhLnRvU3RyaW5nKCkudHJpbSgpICE9PSBcIlwiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24gPSBkYXRhO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgZnVuY3Rpb24gZ2VuZXJhdGVTaWxvUm93KHJvd0lkeCkge1xyXG4gICAgICAgIHZhciBzaWxvc0ZpcnN0VmFsdWUgPSAkKFwiI1NpbG9zRmlyc3RWYWx1ZVwiKS52YWwoKS50b1N0cmluZygpO1xyXG4gICAgICAgIHZhciBzaWxvc1NlY29uZFZhbHVlID0gJChcIiNTaWxvc1NlY29uZFZhbHVlXCIpLnZhbCgpLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgdmFyIHNpbG9zVGhpcmRWYWx1ZSA9ICQoXCIjU2lsb3NUaGlyZFZhbHVlXCIpLnZhbCgpLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgdmFyIHNpbG9Cb3ggPSBcIjxkaXYgY2xhc3M9J2F1dGhvci1pbmZvcm0tZm9ybV9fY29sdW1uIGF1dGhvci1pbmZvcm0tZm9ybV9fY29sdW1uLWZ1bGwgc2lsb3MtYm94IGdyYXktYmFja2dyb3VuZCc+IDwvZGl2PlwiO1xyXG4gICAgICAgIHZhciBkZWxCdG4gPSBcIjxhIGhyZWY9JyMnIGNsYXNzPSdzaWxvcy1ib3hfX2RlbGV0ZS1idG4nPjwvYT5cIjtcclxuICAgICAgICB2YXIgc2lsb3JEZXNjID0gXCIgPHNwYW4+U2lsbyBucio8L3NwYW4+IDxpbnB1dCB0eXBlPSd0ZXh0JyBuYW1lPSdTaWxvc1tcIiArIHJvd0lkeCArIFwiXS5OdW1iZXInIGNsYXNzPSdzaWxvcyBzaWxvLW51bWJlcicgLz48c3Bhbj5GcmFta29tbGlnaGV0KiA8L3NwYW4+XCI7XHJcbiAgICAgICAgdmFyIHNpbG9BY2Nlc3NpYmlsaXR5ID0gXCIgPHVsIGNsYXNzPSdsbV9fZm9ybS1kcm9wZG93biB0eXBlLTMnPlwiICtcclxuICAgICAgICAgICAgXCI8bGkgY2xhc3M9J3Nob3djYXNlJyBkYXRhLXZhbHVlPScxME0nPlwiICtcclxuICAgICAgICAgICAgXCI8YSBocmVmPScjJyBpZD0nc2VsZWN0ZWQtc2lsb3JcIiArIHJvd0lkeCArIFwiJz5cIiArICgoc2lsb3NGaXJzdFZhbHVlKSA/IHNpbG9zRmlyc3RWYWx1ZSA6IFwiMTAgbWV0ZXJcIikgKyBcIjwvYT5cIiArXHJcbiAgICAgICAgICAgIFwiPHVsIGNsYXNzPSdkcm9wZG93bic+XCIgK1xyXG4gICAgICAgICAgICBcIjxsaSBkYXRhLXZhbHVlPScxME0nIGNsYXNzPSdzZWxlY3RlZCc+PGEgaHJlZj0nIyc+XCIgKyAoKHNpbG9zRmlyc3RWYWx1ZSkgPyBzaWxvc0ZpcnN0VmFsdWUgOiBcIjEwIG1ldGVyXCIpICtcIjwvYT48L2xpPlwiICtcclxuICAgICAgICAgICAgXCI8bGkgZGF0YS12YWx1ZT0nMThNJz48YSBocmVmPScjJz5cIiArICgoc2lsb3NTZWNvbmRWYWx1ZSkgPyBzaWxvc1NlY29uZFZhbHVlIDogXCIxOCBtZXRlclwiKSArIFwiPC9hPjwvbGk+XCIgK1xyXG4gICAgICAgICAgICBcIjxsaSBkYXRhLXZhbHVlPScyNE0nPjxhIGhyZWY9JyMnPlwiICsgKChzaWxvc1RoaXJkVmFsdWUpID8gc2lsb3NUaGlyZFZhbHVlIDogXCIyNCBtZXRlclwiKSArIFwiPC9hPjwvbGk+XCIgK1xyXG4gICAgICAgICAgICBcIjwvdWw+XCIgK1xyXG4gICAgICAgICAgICBcIjxpbnB1dCB0eXBlPSdoaWRkZW4nIGNsYXNzPSdmb3JtLWVsZW1lbnQgc2lsby1hY2Nlc3NpYmlsaXR5JyBuYW1lPSdTaWxvc1tcIiArIHJvd0lkeCArIFwiXS5BY2Nlc3NpYmlsaXR5JyB2YWx1ZT0nMTBNJyAvPlwiICtcclxuICAgICAgICAgICAgXCI8L2xpPlwiICtcclxuICAgICAgICAgICAgXCI8L3VsPlwiO1xyXG4gICAgICAgIHJldHVybiAkKHNpbG9Cb3gpLmFwcGVuZChkZWxCdG4sIHNpbG9yRGVzYywgc2lsb0FjY2Vzc2liaWxpdHkpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHNldFNlbGVjdGVkRHJvcGRvd24oKSB7XHJcbiAgICAgICAgdmFyIHNlbGVjdGVkVmFsdWUgPSAkKFwiI2VkaXREZWxpdmVyeUFkZHJlc3MgLmxtX19mb3JtLWRyb3Bkb3duIC5zaG93Y2FzZVwiKS5hdHRyKFwiZGF0YS12YWx1ZVwiKTtcclxuICAgICAgICBpZiAoIXNlbGVjdGVkVmFsdWUpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdmFyIGxpSXRlbXMgPSAkKFwiLmxtX19mb3JtLWRyb3Bkb3duIC5kcm9wZG93biBsaVwiKTtcclxuICAgICAgICAvLyByZXNldCBzZWxlY3RlZCBzdGF0ZVxyXG4gICAgICAgIGxpSXRlbXMucmVtb3ZlQ2xhc3MoXCJzZWxlY3RlZFwiKTtcclxuICAgICAgICBsaUl0ZW1zLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgZGF0YSA9ICQodGhpcykuYXR0cihcImRhdGEtdmFsdWVcIik7XHJcblxyXG4gICAgICAgICAgICBpZiAoZGF0YSA9PSBzZWxlY3RlZFZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLmFkZENsYXNzKFwic2VsZWN0ZWRcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBhZGRTaWxvKCkge1xyXG4gICAgICAgICQoJyNidG4tYWRkLXNpbG8nKS5jbGljayhmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICB2YXIgcm93Q291bnQgPSAkKFwiZGl2LnNpbG9zLWJveFwiKS5sZW5ndGg7XHJcbiAgICAgICAgICAgIHZhciBzaWxvckNvbnRhaW5lciA9ICQoJy5zaWxvLWNvbnRhaW5lcicpO1xyXG4gICAgICAgICAgICB2YXIgbmV3Um93ID0gZ2VuZXJhdGVTaWxvUm93KHJvd0NvdW50KTtcclxuICAgICAgICAgICAgc2lsb3JDb250YWluZXIuYXBwZW5kKG5ld1Jvdyk7XHJcbiAgICAgICAgICAgIHNldERyb3Bkb3duKCQoXCIubG1fX2Zvcm0tZHJvcGRvd25cIiksICd0eXBlLTMnKTtcclxuXHJcbiAgICAgICAgICAgIGFkZFJlbW92ZVNpbG9IYW5kbGVyKCk7XHJcblxyXG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gYWRkUmVtb3ZlU2lsb0hhbmRsZXIoKSB7XHJcbiAgICAgICAgJChcIi5zaWxvcy1ib3hfX2RlbGV0ZS1idG5cIikuY2xpY2soZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICAkKHRoaXMpLmNsb3Nlc3QoJ2Rpdi5zaWxvcy1ib3gnKS5yZW1vdmUoKTtcclxuICAgICAgICAgICAgJCgnaW5wdXQuc2lsby1udW1iZXInKS5lYWNoKGZ1bmN0aW9uIChpZHgsIGl0ZW0pIHtcclxuICAgICAgICAgICAgICAgICQodGhpcykuYXR0cignbmFtZScsICdTaWxvc1snICsgaWR4ICsgJ10uTnVtYmVyJyk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAkKCdpbnB1dC5zaWxvLWFjY2Vzc2liaWxpdHknKS5lYWNoKGZ1bmN0aW9uIChpZHgsIGl0ZW0pIHtcclxuICAgICAgICAgICAgICAgICQodGhpcykuYXR0cignbmFtZScsICdTaWxvc1snICsgaWR4ICsgJ10uQWNjZXNzaWJpbGl0eScpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIGZ1bmN0aW9uIHNob3dPckhpZGVEaWFsb2cobmFtZSkge1xyXG4gICAgICAgIHZhciBpbmRpY2F0b3JJZCA9IFwiI2hhcy1cIiArIG5hbWUgKyBcIi1pbmRpY2F0b3JcIjtcclxuICAgICAgICB2YXIgJGl0ZW1JbmRpY2F0b3IgPSAkKGluZGljYXRvcklkKTtcclxuICAgICAgICBpZiAoJGl0ZW1JbmRpY2F0b3IgJiYgJGl0ZW1JbmRpY2F0b3IubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICB2YXIgdXBkYXRlU3VjY2VzcyA9ICRpdGVtSW5kaWNhdG9yLnZhbCgpLnRvU3RyaW5nKCkudG9Mb3dlckNhc2UoKSA9PT0gXCJ0cnVlXCI7XHJcbiAgICAgICAgICAgIGlmICh1cGRhdGVTdWNjZXNzKSB7XHJcbiAgICAgICAgICAgICAgICAvL3Nob3cgc3VjY2VzcyBkaWFsb2dcclxuICAgICAgICAgICAgICAgIHZhciBtb2RhbElkID0gXCIjbW9kYWwtXCIgKyBuYW1lICsgXCIubG1fX2luZm9ybWF0aW9uLW1vZGFsX193cmFwcGVyXCI7XHJcbiAgICAgICAgICAgICAgICB2YXIgbW9kYWwgPSAkKG1vZGFsSWQpO1xyXG4gICAgICAgICAgICAgICAgbW9kYWwucmVtb3ZlQ2xhc3MoXCJoaWRkZW5cIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiBhZGROb3RpZmljYXRpb25SZWNlaXZlckhhbmRsZXIoKSB7XHJcbiAgICAgICAgdmFyICRyZWNlaXZlckNoZWNrQm94ID0gJCgnaW5wdXQubm90aWZpY2F0aW9uLXJlY2VpdmVyLWhhbmRsZXInKTtcclxuICAgICAgICBpZiAoISEkcmVjZWl2ZXJDaGVja0JveCAmJiAkcmVjZWl2ZXJDaGVja0JveC5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICRyZWNlaXZlckNoZWNrQm94LmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICQodGhpcykudmFsKCQodGhpcykuaXMoXCI6Y2hlY2tlZFwiKSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBhZGRQcm9maWxlRm9ybVZhbGlkYXRpb25IYW5kbGVyKCkge1xyXG4gICAgICAgIGlmICgkKFwiLmpzLXBhZ2UtaWRlbnRpZmllci1wcm9maWxlLXBhZ2VcIikubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICQoXCIjZWRpdC1wcm9maWxlLWZvcm1cIikudmFsaWRhdGUoe1xyXG4gICAgICAgICAgICAgICAgZXJyb3JFbGVtZW50OiAnZGl2JyxcclxuICAgICAgICAgICAgICAgIGVycm9yQ2xhc3M6IFwiZXJyb3JcIixcclxuICAgICAgICAgICAgICAgIHJ1bGVzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgRmlyc3ROYW1lOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBMYXN0TmFtZToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgTW9iaWxlcGhvbmU6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1vYmlsZVNFOiB0cnVlXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBUZWxlcGhvbmU6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcGhvbmVTRTogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgRW1haWw6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZ2V4OiAvXlxcYltBLVowLTkuXyUtXStAW0EtWjAtOS4tXStcXC5bQS1aXXsyLDR9XFxiJC9pXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBaaXA6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgemlwQ29kZTogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVnZXg6IC9eKFxcZFxcZFxcZCBcXGRcXGR8XFxkXFxkXFxkXFxkXFxkKSQvaVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcblxyXG4gICAgICAgICAgICAgICAgbWVzc2FnZXM6IHtcclxuICAgICAgICAgICAgICAgICAgICBGaXJzdE5hbWU6IHdpbmRvd1tcInZhbGlkYXRpb25NZXNzYWdlXCJdLmZpcnN0TmFtZS5yZXF1aXJlZCxcclxuICAgICAgICAgICAgICAgICAgICBMYXN0TmFtZTogd2luZG93W1widmFsaWRhdGlvbk1lc3NhZ2VcIl0ubGFzdE5hbWUucmVxdWlyZWQsXHJcbiAgICAgICAgICAgICAgICAgICAgTW9iaWxlcGhvbmU6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHdpbmRvd1tcInZhbGlkYXRpb25NZXNzYWdlXCJdLm1vYmlsZVNFLnJlcXVpcmVkLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBtb2JpbGVTRTogd2luZG93W1widmFsaWRhdGlvbk1lc3NhZ2VcIl0ubW9iaWxlU0UudmFsaWRcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIFRlbGVwaG9uZToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwaG9uZVNFOiB3aW5kb3dbXCJ2YWxpZGF0aW9uTWVzc2FnZVwiXS5waG9uZVNFLnZhbGlkXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBFbWFpbDoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogd2luZG93W1widmFsaWRhdGlvbk1lc3NhZ2VcIl0uZW1haWwucmVxdWlyZWQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVtYWlsOiB3aW5kb3dbXCJ2YWxpZGF0aW9uTWVzc2FnZVwiXS5lbWFpbC52YWxpZFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgWmlwOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHppcENvZGU6IHdpbmRvd1tcInZhbGlkYXRpb25NZXNzYWdlXCJdLnppcENvZGUudmFsaWQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZ2V4OiB3aW5kb3dbXCJ2YWxpZGF0aW9uTWVzc2FnZVwiXS56aXBDb2RlLnZhbGlkXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGhpZ2hsaWdodDogZnVuY3Rpb24gKGVsZW1lbnQsIGVycm9yQ2xhc3MpIHtcclxuICAgICAgICAgICAgICAgICAgICAkKGVsZW1lbnQpLmFkZENsYXNzKGVycm9yQ2xhc3MpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gYWRkVXNlckFncmVlbWVudEhhbmRsZXIoKSB7XHJcbiAgICAgICAgaWYgKCQoXCIuanMtcGFnZS1pZGVudGlmaWVyLXVzZXItYWdyZWVtZW50XCIpLmxlbmd0aCkge1xyXG4gICAgICAgICAgICB2YXIgdXJsID0gJChcIi5qcy1wYWdlLWlkZW50aWZpZXItdXNlci1hZ3JlZW1lbnRcIikuZGF0YShcInVybFwiKTtcclxuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsb2dvdXRSZWRpcmVjdFwiKS52YWx1ZSA9IGxvY2F0aW9uLm9yaWdpbiArIHVybDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gaW5pdCgpIHtcclxuICAgICAgICBzaG93T3JIaWRlRGlhbG9nKFwiYWRkZWRcIik7XHJcbiAgICAgICAgc2hvd09ySGlkZURpYWxvZyhcInVwZGF0ZWRcIik7XHJcbiAgICAgICAgc2hvd09ySGlkZURpYWxvZyhcImRlbGV0ZWRcIik7XHJcbiAgICAgICAgYWRkUHJvZmlsZUZvcm1WYWxpZGF0aW9uSGFuZGxlcigpO1xyXG5cclxuICAgICAgICBpZiAoISQoXCIjZWRpdERlbGl2ZXJ5QWRkcmVzc1wiKSB8fCAkKFwiI2VkaXREZWxpdmVyeUFkZHJlc3NcIikubGVuZ3RoID09IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBzZXRTZWxlY3RlZERyb3Bkb3duKCk7XHJcbiAgICAgICAgYWRkU2lsbygpO1xyXG4gICAgICAgIGFkZFJlbW92ZVNpbG9IYW5kbGVyKCk7XHJcbiAgICAgICAgYWRkRGVsZXRlQWRkcmVzc0hhbmRsZXIoKTtcclxuICAgICAgICBhZGROb3RpZmljYXRpb25SZWNlaXZlckhhbmRsZXIoKTtcclxuICAgICAgICBhZGRVc2VyQWdyZWVtZW50SGFuZGxlcigpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBpbml0OiBpbml0XHJcbiAgICB9O1xyXG5cclxufSgpO1xyXG5cclxuIiwiJChmdW5jdGlvbiAoKSB7XHJcbiAgICBNYWNoaW5lRGV0YWlsUGFnZS5pbml0KCk7XHJcbiAgICBNYWNoaW5lQWRkUGFnZS5Jbml0KCk7XHJcbiAgICBNYWNoaW5lQm9va2luZ1NlcnZpY2UuSW5pdCgpO1xyXG59KTtcclxuXHJcbihmdW5jdGlvbiAoJCkge1xyXG4gICAgJC5mbi5pbWdMb2FkID0gZnVuY3Rpb24gKGNhbGxiYWNrKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmIChjYWxsYmFjaykge1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuY29tcGxldGUgfHwgLypmb3IgSUUgMTAtKi8gJCh0aGlzKS5oZWlnaHQoKSA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjay5hcHBseSh0aGlzKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICQodGhpcykub24oJ2xvYWQnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrLmFwcGx5KHRoaXMpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG59KShqUXVlcnkpO1xyXG5cclxudmFyIE1hY2hpbmVEZXRhaWxQYWdlID0gTWFjaGluZURldGFpbFBhZ2UgfHwgKGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciB1cGRhdGVkID0gZmFsc2U7XHJcblxyXG4gICAgdmFyIGFkZFVwbG9hZFBvcHVwRXZlbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgJCgnLmF2YXRhci1pY29uJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICAkKHRoaXMpLnBhcmVudHMoJy5sbV9fYmxvY2stbWV0YWRhdGEnKS5maW5kKCcubGlzdC1hY3Rpb24taXRlbScpLnRvZ2dsZSgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbiAgICB2YXIgZmV0Y2hUb3RhbEhvdXJzRm9yTWFjaGluZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgaW5ubyA9ICQoJyNpbm5vJykudmFsKCk7XHJcbiAgICAgICAgaWYgKGlubm8pIHtcclxuICAgICAgICAgICAgdmFyIHVybCA9ICdodHRwczovL2FwaS50cmFja3VuaXQuY29tL3B1YmxpYy9HZXRVbml0JztcclxuICAgICAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgICAgIHVybDogdXJsLFxyXG4gICAgICAgICAgICAgICAgdHlwZTogXCJHRVRcIixcclxuICAgICAgICAgICAgICAgIGNhY2hlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgIGRhdGE6IHsgdG9rZW46ICcxMWRmMmFlOWJiYTY0NmNlYjhiZTk1OWYyMzQ0NWIyMycsIGZvcm1hdDogJ2pzb24nLCByZWZlcmVuY2VOdW1iZXI6IGlubm8gfSxcclxuICAgICAgICAgICAgICAgIGRhdGFUeXBlOiAnanNvbnAnLFxyXG4gICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlc3VsdCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHQgJiYgcmVzdWx0Lmxpc3QgJiYgcmVzdWx0Lmxpc3QubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdHJhY2tVbml0SW5mbyA9IHJlc3VsdC5saXN0WzBdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdG90YWxIb3VycyA9ICgocGFyc2VGbG9hdCh0cmFja1VuaXRJbmZvLnByZVJ1bjEpICsgcGFyc2VGbG9hdCh0cmFja1VuaXRJbmZvLnJ1bjEpKSAvIDM2MDApLnRvRml4ZWQoMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJyN0b3RhbF9ob3VycycpLnNob3coKS5maW5kKCcudG90YWwtdGV4dCcpLmh0bWwodG90YWxIb3VycyArICcgaCcpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJyNnZW5lcmljX2Jhbm5lcicpLnNob3coKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJTb21ldGhpbmcgd2VudCB3cm9uZyB3aXRoIHRoZSBBSkFYIHJlcXVlc3QhXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGUucmVzcG9uc2VUZXh0KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgJCgnI2dlbmVyaWNfYmFubmVyJykuc2hvdygpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgdmFyIGZldGNoSG91cnNGb3JNYWNoaW5lTG9nTWFzdGVyID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBzZXJpYWxOdW1iZXIgPSAkKCcjc2VyaWFsTnVtYmVyJykudmFsKCk7XHJcbiAgICAgICAgaWYgKHNlcmlhbE51bWJlcikge1xyXG4gICAgICAgICAgICB2YXIgdXJsID0gJCgnI2RhdGF2YXh0QXBpVXJsJykudmFsKCk7XHJcbiAgICAgICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgICAgICB1cmw6IHVybCxcclxuICAgICAgICAgICAgICAgIHR5cGU6IFwiR0VUXCIsXHJcbiAgICAgICAgICAgICAgICBjYWNoZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICBkYXRhOiB7IHZpbjogc2VyaWFsTnVtYmVyIH0sXHJcbiAgICAgICAgICAgICAgICBkYXRhVHlwZTogJ2pzb24nLFxyXG4gICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlc3VsdCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHQgJiYgcmVzdWx0LmVuZ2luZUhvdXJzID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgaG91cnMgPSByZXN1bHQuZW5naW5lSG91cnMudG9GaXhlZCgwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJCgnI3RvdGFsX2hvdXJzJykuc2hvdygpLmZpbmQoJy50b3RhbC10ZXh0JykuaHRtbChob3VycyArICcgaCcpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJyNnZW5lcmljX2Jhbm5lcicpLnNob3coKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJTb21ldGhpbmcgd2VudCB3cm9uZyB3aXRoIHRoZSBBSkFYIHJlcXVlc3QhXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGUucmVzcG9uc2VUZXh0KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgJCgnI2dlbmVyaWNfYmFubmVyJykuc2hvdygpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgdmFyIGF1dG9GaXRJbWFnZXMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIGltYWdlcyA9ICQoXCIubWFjaGluZS1pdGVtX190aHVtYm5haWwtd3JhcHBlciBpbWdcIik7XHJcblxyXG4gICAgICAgIGltYWdlcy5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgJCh0aGlzKS5pbWdMb2FkKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHZhciAkdGhpcyA9ICQodGhpcyk7XHJcbiAgICAgICAgICAgICAgICB2YXIgc2l6ZSA9IHtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogJCh0aGlzKS53aWR0aCgpLFxyXG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogJCh0aGlzKS5oZWlnaHQoKVxyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgIGlmIChzaXplLmhlaWdodCA8IHNpemUud2lkdGgpIHtcclxuICAgICAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKHNpemUud2lkdGggLyBzaXplLmhlaWdodCArICcsICcgKyAkdGhpcy5wYXJlbnQoKS53aWR0aCgpIC8gJHRoaXMucGFyZW50KCkuaGVpZ2h0KCkpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChzaXplLndpZHRoIC8gc2l6ZS5oZWlnaHQgPiAkdGhpcy5wYXJlbnQoKS53aWR0aCgpIC8gJHRoaXMucGFyZW50KCkuaGVpZ2h0KCkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5yZW1vdmVDbGFzcygnaG9yaXpvbnRhbC1pbWcnKS5hZGRDbGFzcygndmVydGljYWwtaW1nJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5yZW1vdmVDbGFzcygndmVydGljYWwtaW1nJykuYWRkQ2xhc3MoJ2hvcml6b250YWwtaW1nJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKHNpemUuaGVpZ2h0IC8gc2l6ZS53aWR0aCArICc7ICcgKyAkdGhpcy5wYXJlbnQoKS5oZWlnaHQoKSAvICR0aGlzLnBhcmVudCgpLndpZHRoKCkpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChzaXplLmhlaWdodCAvIHNpemUud2lkdGggPiAkdGhpcy5wYXJlbnQoKS5oZWlnaHQoKSAvICR0aGlzLnBhcmVudCgpLndpZHRoKCkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5yZW1vdmVDbGFzcygndmVydGljYWwtaW1nJykuYWRkQ2xhc3MoJ2hvcml6b250YWwtaW1nJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5yZW1vdmVDbGFzcygnaG9yaXpvbnRhbC1pbWcnKS5hZGRDbGFzcygndmVydGljYWwtaW1nJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcblxyXG4gICAgdmFyIGF0dGFjaERlbGV0ZU1hY2hpbmVFdmVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKCcucmVtb3ZlLW1hY2hpbmUtYnV0dG9uJykuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAkKCcuZGVsZXRlLW1hY2hpbmUtYWxlcnQnKS5zaG93KCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgJCgnI2FncmVlLXJlbW92ZS1tYWNoaW5lJykuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAkKCcjZm9ybS1yZW1vdmUtbWFjaGluZScpLnN1Ym1pdCgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgICQoJyNkaXNhZ3JlZS1yZW1vdmUtbWFjaGluZScpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgJCgnLmxtX19tb2RhbC1hbGVydCcpLmhpZGUoKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdmFyIGlzRmFpbGVkID0gJCgnI2RlbGV0ZUZhaWxlZCcpLnZhbCgpO1xyXG4gICAgICAgIGlmIChpc0ZhaWxlZCA9PT0gXCJUcnVlXCIpIHtcclxuICAgICAgICAgICAgYWxlcnQoXCJSYWRlcmEgbWFza2luIG1pc3NseWNrYWRlcy4gS29udHJvbGxlcmEgaWdlbiFcIik7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICB2YXIgaW5pdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBhZGRVcGxvYWRQb3B1cEV2ZW50KCk7XHJcbiAgICAgICAgZmV0Y2hUb3RhbEhvdXJzRm9yTWFjaGluZSgpO1xyXG4gICAgICAgIGZldGNoSG91cnNGb3JNYWNoaW5lTG9nTWFzdGVyKCk7XHJcbiAgICAgICAgYXR0YWNoRGVsZXRlTWFjaGluZUV2ZW50KCk7XHJcbiAgICAgICAgYXV0b0ZpdEltYWdlcygpO1xyXG5cclxuICAgICAgICAkKHdpbmRvdykub24oJ3Jlc2l6ZSBvcmllbnRhdGlvbmNoYW5nZScsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKCF1cGRhdGVkKSB7XHJcbiAgICAgICAgICAgICAgICB1cGRhdGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGF1dG9GaXRJbWFnZXMoKTtcclxuICAgICAgICAgICAgICAgICAgICB1cGRhdGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICB9LCAxMDApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQod2luZG93KS50cmlnZ2VyKCdyZXNpemUnKTtcclxuXHJcbiAgICAgICAgdmFyIG1hY2hpbmVVcGxvYWRTZXR0aW5ncyA9IHtcclxuICAgICAgICAgICAgZmlsZVNlbGVjdG9yOiBcIiNtYWNoaW5lLWZpbGVcIixcclxuICAgICAgICAgICAgcHJldmlld0ltZ1NlbGVjdG9yOiBcIiNtYWNoaW5lLXBpY3R1cmVcIixcclxuICAgICAgICAgICAgdXBsb2FkQnRuU2VsZWN0b3I6IFwiI21hY2hpbmUtdXBsb2FkQnRuXCIsXHJcbiAgICAgICAgICAgIGNhbmNlbFVwbG9hZEJ0blNlbGVjdG9yOiBcIiNtYWNoaW5lLWNhbmNlbFVwbG9hZFwiLFxyXG4gICAgICAgICAgICBsaW5rU2VsZWN0b3I6IFwiI21hY2hpbmUtbGlua1wiLFxyXG4gICAgICAgICAgICBoYW5kbGVVcmw6IFwiL2FwaS9tYWNoaW5lL21hY2hpbmUtdXBsb2FkLWF2YXRhclwiLFxyXG4gICAgICAgICAgICBpc05lZWRUb1VwZGF0ZUhlYWRlcjogZmFsc2UsXHJcbiAgICAgICAgICAgIGVycm9yTWVzc2FnZTogXCJEZXQgdXBwc3RvZCBldHQgZmVsIG7DpHIgYmlsZGVuIHNrdWxsZSBsYWRkYXMgdXBwLiBWYXIgZ8O2ciBmw7Zyc8O2ayBpZ2VuIVwiLFxyXG4gICAgICAgICAgICBkZWxldGVMaW5rU2VsZWN0b3I6IFwiI21hY2hpbmUtZGVsZXRlQnRuXCIsXHJcbiAgICAgICAgICAgIGhhbmRsZURlbGV0ZVVybDogXCIvYXBpL21hY2hpbmUvbWFjaGluZS1kZWxldGUtYXZhdGFyXCJcclxuICAgICAgICB9O1xyXG4gICAgICAgIHZhciB1c2VyVXBsb2FkSW1hZ2VNb2R1bGUgPSBuZXcgVXBsb2FkSW1hZ2VNb2R1bGUobWFjaGluZVVwbG9hZFNldHRpbmdzKTtcclxuICAgICAgICB1c2VyVXBsb2FkSW1hZ2VNb2R1bGUuaW5pdERhdGFGb3JSZXF1ZXN0KFt7ICdrZXknOiAnbWFjaGluZUlkJywgJ3ZhbHVlJzogJCgnI21hY2hpbmVJZCcpLnZhbCgpIH1dKTtcclxuICAgICAgICB1c2VyVXBsb2FkSW1hZ2VNb2R1bGUuaW5pdFVwbG9hZEZpbGUoKTtcclxuICAgICAgICB1c2VyVXBsb2FkSW1hZ2VNb2R1bGUuaW5pdERlbGV0ZUZpbGUoKTtcclxuICAgIH07XHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBpbml0OiBpbml0LFxyXG4gICAgICAgIGF1dG9GaXRJbWFnZXM6IGF1dG9GaXRJbWFnZXNcclxuICAgIH07XHJcblxyXG59KSgpO1xyXG5cclxudmFyIE1hY2hpbmVBZGRQYWdlID0gTWFjaGluZUFkZFBhZ2UgfHwgKGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBicmFuZERkQ29udGFpbmVyU2VsZWN0b3IgPSBcIiNkcm9wLW1hY2hpbmUtYnJhbmRcIjtcclxuICAgIHZhciBtb2RlbERkQ29udGFpbmVyU2VsZWN0b3IgPSBcIiNkcm9wLW1hY2hpbmUtbW9kZWxcIjtcclxuXHJcbiAgICBmdW5jdGlvbiBjaGVja1JlZ2lzdGVyTnVtYmVyKCkge1xyXG4gICAgICAgIHZhciBpZCA9ICQoJyNyZWdpc3RyYXRpb24nKS52YWwoKS50b1VwcGVyQ2FzZSgpO1xyXG4gICAgICAgIGlmICghaWQgfHwgaWQudHJpbSgpID09PSBcIlwiKSByZXR1cm47XHJcblxyXG4gICAgICAgIGlkID0gaWQudHJpbSgpO1xyXG4gICAgICAgIHNob3dMb2FkZXIoKTtcclxuXHJcbiAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgdXJsOiAnL2FwaS9hZGQtbWFjaGluZS9jaGVjay1yZWdpc3Rlci1udW1iZXI/cmVnaXN0ZXJOdW1iZXI9JyArIGlkLFxyXG4gICAgICAgICAgICB0eXBlOiBcIkdFVFwiLFxyXG4gICAgICAgICAgICBkYXRhVHlwZTogXCJqc29uXCIsXHJcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICBoaWRlTG9hZGVyKCk7XHJcbiAgICAgICAgICAgICAgICBpZiAoZGF0YS5pZCAhPSBudWxsICYmIGRhdGEuaWQgIT0gJycpIHtcclxuICAgICAgICAgICAgICAgICAgICAvL3VwZGF0ZSBzZXJpYWxudW1iZXJcclxuICAgICAgICAgICAgICAgICAgICAkKCcjc2VyaWFsLW51bWJlcicpLnZhbChkYXRhLnNlcmlhbE51bWJlcik7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIC8vdXBkYXRlIGNhdGVnb3J5XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnI2Ryb3AtbWFjaGluZS1jYXRlZ29yeSA+IC5kcm9wZG93biA+IGxpJykuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkKHRoaXMpLmF0dHIoJ2RhdGEtdmFsdWUnKSA9PSBkYXRhLmNhdGVnb3J5LktleSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnI2Ryb3AtbWFjaGluZS1jYXRlZ29yeSA+IC5kcm9wZG93biA+IGxpJykucmVtb3ZlQ2xhc3MoJ3NlbGVjdGVkJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmFkZENsYXNzKCdzZWxlY3RlZCcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5wYXJlbnRzKCcuc2hvd2Nhc2UnKS5hdHRyKCdkYXRhLXZhbHVlJywgZGF0YS5jYXRlZ29yeS5LZXkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5wYXJlbnRzKCcuc2hvd2Nhc2UnKS5maW5kKCc+YScpLmh0bWwoZGF0YS5jYXRlZ29yeS5OYW1lKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQodGhpcykucGFyZW50cygnLnNob3djYXNlJykuZmluZCgnPmlucHV0JykudmFsKGRhdGEuY2F0ZWdvcnkuS2V5KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgLy91cGRhdGUgYnJhbmQgYW5kIG1vZGVsXHJcbiAgICAgICAgICAgICAgICAgICAgJCgnI2Ryb3AtbWFjaGluZS1icmFuZCA+IC5kcm9wZG93biA+IGxpJykuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkKHRoaXMpLmF0dHIoJ2RhdGEtdmFsdWUnKSA9PSBkYXRhLmJyYW5kLktleSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnI2Ryb3AtbWFjaGluZS1icmFuZCA+IC5kcm9wZG93biA+IGxpJykucmVtb3ZlQ2xhc3MoJ3NlbGVjdGVkJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmFkZENsYXNzKCdzZWxlY3RlZCcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5wYXJlbnRzKCcuc2hvd2Nhc2UnKS5hdHRyKCdkYXRhLXZhbHVlJywgZGF0YS5icmFuZC5LZXkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5wYXJlbnRzKCcuc2hvd2Nhc2UnKS5maW5kKCc+YScpLmh0bWwoZGF0YS5icmFuZC5OYW1lKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQodGhpcykucGFyZW50cygnLnNob3djYXNlJykuZmluZCgnPmlucHV0JykudmFsKGRhdGEuYnJhbmQuS2V5KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vY2hhbmdlTW9kZWxCeUJyYW5kKGRhdGEpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hhbmdlTWFjaGluZU1vZGVsKGRhdGEuYnJhbmQuS2V5LCBkYXRhLm1vZGVsLk5hbWUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAkKCcubG1fX21vZGFsLWFsZXJ0Jykuc2hvdygpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKGpxWEhSLCB0ZXh0U3RhdHVzLCBlcnJvclRocm93bikge1xyXG4gICAgICAgICAgICAgICAgaGlkZUxvYWRlcigpO1xyXG4gICAgICAgICAgICAgICAgYWxlcnQoZXJyb3JUaHJvd24udG9TdHJpbmcoKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBjaGFuZ2VNYWNoaW5lTW9kZWwoc2VsZWN0ZWRCcmFuZElkLCBtb2RlbE5hbWUpIHtcclxuICAgICAgICB2YXIgYnJhbmRJZCA9IHNlbGVjdGVkQnJhbmRJZCA9PSB1bmRlZmluZWQgPyAkKGJyYW5kRGRDb250YWluZXJTZWxlY3RvcikuYXR0cignZGF0YS12YWx1ZScpIDogc2VsZWN0ZWRCcmFuZElkO1xyXG4gICAgICAgIHZhciBhcGlVcmwgPSAnL2FwaS9hZGQtbWFjaGluZS9nZXQtbWFjaGluZS1tb2RlbHM/YnJhbmRJZD0nICsgYnJhbmRJZDtcclxuICAgICAgICBpZiAobW9kZWxOYW1lICE9IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICBhcGlVcmwgKz0gXCImbW9kZWxOYW1lPVwiICsgbW9kZWxOYW1lO1xyXG4gICAgICAgIH1cclxuICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICB1cmw6IGFwaVVybCxcclxuICAgICAgICAgICAgdHlwZTogXCJHRVRcIixcclxuICAgICAgICAgICAgZGF0YVR5cGU6IFwiaHRtbFwiLFxyXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgaWYgKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiLm1vZGVsLWRkLWNvbnRhaW5lclwiKS5odG1sKGRhdGEpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgc2V0RHJvcGRvd24oJChtb2RlbERkQ29udGFpbmVyU2VsZWN0b3IpLnBhcmVudCgpLCAndHlwZS0zJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiB2YWxpZGF0ZUZvcm1BZGRNYWNoaW5lKCkge1xyXG4gICAgICAgIHZhciBjYXRlZ29yeSA9ICQoJyNkcm9wLW1hY2hpbmUtY2F0ZWdvcnknKTtcclxuICAgICAgICB2YXIgYnJhbmQgPSAkKGJyYW5kRGRDb250YWluZXJTZWxlY3Rvcik7XHJcbiAgICAgICAgdmFyIG1vZGVsID0gJChtb2RlbERkQ29udGFpbmVyU2VsZWN0b3IpO1xyXG5cclxuICAgICAgICB2YXIgYnJhbmREZXNjID0gYnJhbmQucGFyZW50KCkucGFyZW50KCkuZmluZCgnPmlucHV0Jyk7XHJcbiAgICAgICAgdmFyIG1vZGVsRGVzYyA9IG1vZGVsLnBhcmVudCgpLnBhcmVudCgpLmZpbmQoJz5pbnB1dCcpO1xyXG5cclxuICAgICAgICB2YXIgZXJyb3JMaXN0ID0gW107XHJcbiAgICAgICAgaWYgKGNhdGVnb3J5LmF0dHIoJ2RhdGEtdmFsdWUnKSA9PSBcIlwiIHx8IGNhdGVnb3J5LmF0dHIoJ2RhdGEtdmFsdWUnKSA9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgZXJyb3JMaXN0LnB1c2goXCJUeXBcIik7XHJcbiAgICAgICAgICAgIGNhdGVnb3J5LnBhcmVudCgpLnBhcmVudCgpLmZpbmQoJy5lcnJvci1pdGVtJykuc2hvdygpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgY2F0ZWdvcnkucGFyZW50KCkucGFyZW50KCkuZmluZCgnLmVycm9yLWl0ZW0nKS5oaWRlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChicmFuZC5hdHRyKCdkYXRhLXZhbHVlJykgPT0gXCJcIiB8fCBicmFuZC5hdHRyKCdkYXRhLXZhbHVlJykgPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIGVycm9yTGlzdC5wdXNoKFwiTcOkcmtlXCIpO1xyXG4gICAgICAgICAgICBicmFuZC5wYXJlbnQoKS5wYXJlbnQoKS5maW5kKCcuZXJyb3ItaXRlbScpLnNob3coKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAoYnJhbmQuYXR0cignZGF0YS12YWx1ZScpID09IFwiQW5uYW5cIiAmJiBicmFuZERlc2MudmFsKCkgPT0gXCJcIikge1xyXG4gICAgICAgICAgICBlcnJvckxpc3QucHVzaChcIk3DpHJrZVwiKTtcclxuICAgICAgICAgICAgYnJhbmQucGFyZW50KCkucGFyZW50KCkuZmluZCgnLmVycm9yLWl0ZW0nKS5zaG93KCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBicmFuZC5wYXJlbnQoKS5wYXJlbnQoKS5maW5kKCcuZXJyb3ItaXRlbScpLmhpZGUoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKG1vZGVsLmF0dHIoJ2RhdGEtdmFsdWUnKSA9PSBcIlwiIHx8IG1vZGVsLmF0dHIoJ2RhdGEtdmFsdWUnKSA9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgZXJyb3JMaXN0LnB1c2goXCJNb2RlbGxcIik7XHJcbiAgICAgICAgICAgIG1vZGVsLnBhcmVudCgpLnBhcmVudCgpLmZpbmQoJy5lcnJvci1pdGVtJykuc2hvdygpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmIChtb2RlbC5hdHRyKCdkYXRhLXZhbHVlJykgPT0gXCJBbm5hblwiICYmIG1vZGVsRGVzYy52YWwoKSA9PSBcIlwiKSB7XHJcbiAgICAgICAgICAgIGVycm9yTGlzdC5wdXNoKFwiTW9kZWxsXCIpO1xyXG4gICAgICAgICAgICBtb2RlbC5wYXJlbnQoKS5wYXJlbnQoKS5maW5kKCcuZXJyb3ItaXRlbScpLnNob3coKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIG1vZGVsLnBhcmVudCgpLnBhcmVudCgpLmZpbmQoJy5lcnJvci1pdGVtJykuaGlkZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgZXJyb3JMaXN0Qm94ID0gJCgnI21hY2hpbmUtYWRkLWVycm9yLWxpc3QnKTtcclxuICAgICAgICBpZiAoZXJyb3JMaXN0Lmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgZXJyb3JMaXN0Qm94LnNob3coKTtcclxuICAgICAgICAgICAgZXJyb3JMaXN0Qm94Lmh0bWwoJycpO1xyXG4gICAgICAgICAgICBlcnJvckxpc3RCb3guYXBwZW5kKFxyXG4gICAgICAgICAgICAgICAgJCgnPGxpPjwvbGk+JykuYWRkQ2xhc3MoJ2Vycm9ycy1saXN0X19oZWFkZXInKS5hcHBlbmQoJ0R1IG3DpXN0ZSBhbmdlJylcclxuICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICQuZWFjaChlcnJvckxpc3QsIGZ1bmN0aW9uIChpLCBlcnJvcikge1xyXG4gICAgICAgICAgICAgICAgZXJyb3JMaXN0Qm94LmFwcGVuZChcclxuICAgICAgICAgICAgICAgICAgICAkKCc8bGk+PC9saT4nKS5hcHBlbmQoZXJyb3IpXHJcbiAgICAgICAgICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGVycm9yTGlzdEJveC5oaWRlKCk7XHJcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBoaWRlTG9hZGVyKCkge1xyXG4gICAgICAgICQoJy5sb2FkZXItd3JhcHBlcicpLmhpZGUoKTtcclxuICAgICAgICAkKCcubG9hZGVyLXdyYXBwZXInKS5wYXJlbnQoKS5yZW1vdmVDbGFzcygnZGlzYWJsZWQnKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBzaG93TG9hZGVyKCkge1xyXG4gICAgICAgICQoJy5sb2FkZXItd3JhcHBlcicpLnNob3coKTtcclxuICAgICAgICAkKCcubG9hZGVyLXdyYXBwZXInKS5wYXJlbnQoKS5hZGRDbGFzcygnZGlzYWJsZWQnKTtcclxuICAgIH1cclxuXHJcbiAgICB2YXIgYWRkQnJhbmRIYW5kbGVyID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQoXCIjZHJvcC1tYWNoaW5lLWJyYW5kIC5kcm9wZG93biBsaSBhXCIpLmVhY2goZnVuY3Rpb24gKGlkeCwgaXRlbSkge1xyXG4gICAgICAgICAgICB2YXIgJGl0ZW0gPSAkKGl0ZW0pO1xyXG4gICAgICAgICAgICAkaXRlbS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoJGl0ZW0ucGFyZW50KCkuZGF0YSgndmFsdWUnKSA9PT0gJ0FubmFuJykge1xyXG4gICAgICAgICAgICAgICAgICAgICRpdGVtLnBhcmVudHMoJy5icmFuY2gtYmxvY2snKS5maW5kKCdpbnB1dFt0eXBlPVwidGV4dFwiXScpLnNob3coKTtcclxuICAgICAgICAgICAgICAgICAgICAkaXRlbS5wYXJlbnRzKCd1bC5sbV9fZm9ybS1kcm9wZG93bi5icmFuY2gtZHJvcGRvd24nKS5oaWRlKCk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHZhciAkbW9kZWxEZENvbnRhaW5lciA9ICQobW9kZWxEZENvbnRhaW5lclNlbGVjdG9yKTtcclxuICAgICAgICAgICAgICAgICAgICAkbW9kZWxEZENvbnRhaW5lci5wYXJlbnRzKCcubW9kZWwtYmxvY2snKS5maW5kKCdpbnB1dFt0eXBlPVwidGV4dFwiXScpLnNob3coKTtcclxuICAgICAgICAgICAgICAgICAgICAkbW9kZWxEZENvbnRhaW5lci5hdHRyKCdkYXRhLXZhbHVlJywgJ0FubmFuJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgJG1vZGVsRGRDb250YWluZXIuZmluZCgnPmlucHV0W3R5cGU9XCJoaWRkZW5cIl0nKS52YWwoJ0FubmFuJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgJG1vZGVsRGRDb250YWluZXIucGFyZW50cygndWwubG1fX2Zvcm0tZHJvcGRvd24ubW9kZWwtZHJvcGRvd24nKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgYnJhbmRJZCA9ICRpdGVtLmF0dHIoJ2RhdGEtdmFsdWUnKTtcclxuICAgICAgICAgICAgICAgICAgICBjaGFuZ2VNYWNoaW5lTW9kZWwoYnJhbmRJZCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbiAgICB2YXIgYWRkQ2F0ZWdvcnlIYW5kbGVyID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQoXCIjZHJvcC1tYWNoaW5lLWNhdGVnb3J5IC5kcm9wZG93biBsaSBhXCIpLmVhY2goZnVuY3Rpb24gKGlkeCwgaXRlbSkge1xyXG4gICAgICAgICAgICB2YXIgJGl0ZW0gPSAkKGl0ZW0pO1xyXG4gICAgICAgICAgICAkaXRlbS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgc2VsZWN0ZWRLZXkgPSAkaXRlbS5wYXJlbnRzKFwiLnNob3djYXNlXCIpLmRhdGEoJ3ZhbHVlJyk7XHJcbiAgICAgICAgICAgICAgICBpZiAoc2VsZWN0ZWRLZXkgPT09IFwiT3RoZXJcIikge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIGluY2FzZSBjaG9vc2luZyBvdGhlciBjYXRlZ29yeSwgc2hvdyB0ZXh0Ym94IHRvIGlucHV0IHZhbHVlXHJcbiAgICAgICAgICAgICAgICAgICAgJGl0ZW0ucGFyZW50cygnLmNhdGVnb3J5LWJsb2NrJykuZmluZCgnaW5wdXRbdHlwZT1cInRleHRcIl0nKS5zaG93KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgJGl0ZW0ucGFyZW50cygndWwubG1fX2Zvcm0tZHJvcGRvd24nKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgJGl0ZW0ucGFyZW50cygnLnNob3djYXNlJykuZmluZChcImlucHV0W25hbWU9bWFjaGluZUNhdGVnb3J5XCIpLnZhbChcIlwiKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBzZWFyY2hCeVJlZ05vSGFuZGxlciA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKCcjbWFjaGluZS1yZWdpc3RyYXRpb24tYnV0dG9uJykuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBjaGVja1JlZ2lzdGVyTnVtYmVyKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBzdWJtaXRBZGRpbmdGb3JtSGFuZGxlciA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKCcjZm9ybS1hZGRpbmctbWFjaGluZScpLnN1Ym1pdChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB2YWxpZGF0ZUZvcm1BZGRNYWNoaW5lKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBpbml0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGFkZEJyYW5kSGFuZGxlcigpO1xyXG4gICAgICAgIGFkZENhdGVnb3J5SGFuZGxlcigpO1xyXG4gICAgICAgIHNlYXJjaEJ5UmVnTm9IYW5kbGVyKCk7XHJcbiAgICAgICAgc3VibWl0QWRkaW5nRm9ybUhhbmRsZXIoKTtcclxuICAgIH07XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIEluaXQ6IGluaXRcclxuICAgIH07XHJcbn0pKCk7XHJcblxyXG52YXIgTWFjaGluZUJvb2tpbmdTZXJ2aWNlID0gTWFjaGluZUJvb2tpbmdTZXJ2aWNlIHx8IChmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgdmFyIGRhdGFNYWNoaW5lcyA9IG51bGw7XHJcblxyXG4gICAgZnVuY3Rpb24gc2V0RGF0YU1hY2hpbmVzKGRhdGEpIHtcclxuICAgICAgICBkYXRhTWFjaGluZXMgPSBkYXRhO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHNldE9uY2xpY2tNYWNoaW5lTGlzdChvYmosIGRhdGEpIHtcclxuICAgICAgICAkKG9iaikuZmluZCgncCA+IGEnKS5jbGljayhmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICBpZiAoZGF0YSAhPSBudWxsICYmIGRhdGEubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIG1hY2hpbmVJZCA9ICQodGhpcykucGFyZW50KCkuZmluZCgnaW5wdXRbdHlwZT1cImhpZGRlblwiXScpLnZhbCgpO1xyXG4gICAgICAgICAgICAgICAgZmlsbERldGFpbE1hY2hpbmUoZGF0YSwgbWFjaGluZUlkKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZ2V0TWFjaGluZXNCeUNhdGVnb3J5KCkge1xyXG4gICAgICAgIHZhciBrZXkgPSAkKCcjYm9vay1zZXJ2aWNlLWNhdGVnb3J5JykuYXR0cignZGF0YS12YWx1ZScpO1xyXG4gICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgIHVybDogJy9hcGkvYm9vay1zZXJ2aWNlL2dldC1tYWNoaW5lLWJ5LWNhdGVnb3J5P2NhdGVnb3J5S2V5PScgKyBrZXksXHJcbiAgICAgICAgICAgIHR5cGU6IFwiR0VUXCIsXHJcbiAgICAgICAgICAgIGRhdGFUeXBlOiBcImpzb25cIixcclxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICQoJyNib29rLXNlcnZpY2UtbG9hZGluZycpLmhpZGUoKTtcclxuICAgICAgICAgICAgICAgICQuZWFjaChkYXRhLCBmdW5jdGlvbiAoaSwgbWFjaGluZXMpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAobWFjaGluZXMubGVuZ3RoID4gNikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKCcjYm9vay1tYWNoaW5lLWxpc3QtMicpLnNob3coKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJCgnI2Jvb2stbWFjaGluZS1saXN0LTEnKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkcm9wZG93biA9ICQoJyNib29rLW1hY2hpbmUtbGlzdC0yID4gLmFkZHJlc3Mtc2VjdGlvbnMgPiBzZWxlY3QnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZHJvcGRvd24uaHRtbCgnJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQuZWFjaChtYWNoaW5lcywgZnVuY3Rpb24gKGosIG1hY2hpbmUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRyb3Bkb3duLmFwcGVuZChcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCc8b3B0aW9uPjwvb3B0aW9uPicpLmF0dHIoJ3ZhbHVlJywgbWFjaGluZS5pZCkuYXBwZW5kKG1hY2hpbmUubW9kZWxOYW1lKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldERhdGFNYWNoaW5lcyhtYWNoaW5lcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKG1hY2hpbmVzLmxlbmd0aCA+IDAgJiYgbWFjaGluZXMubGVuZ3RoIDw9IDYpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJCgnI2Jvb2stbWFjaGluZS1saXN0LTInKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJyNib29rLW1hY2hpbmUtbGlzdC0xJykuc2hvdygpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbGlzdFNlbGVjdE1hY2hpbmUgPSAkKCcjYm9vay1tYWNoaW5lLWxpc3QtMSA+IC5hZGRyZXNzLXNlY3Rpb25zJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxpc3RTZWxlY3RNYWNoaW5lLmh0bWwoJycpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsaXN0U2VsZWN0TWFjaGluZS5hcHBlbmQoJCgnPGgzPjwvaDM+JykuYWRkQ2xhc3MoJ2xtX19ib2xkLXRpdGxlJykuYXBwZW5kKCdNaW5hIG1hc2tpbmVyJykpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkLmVhY2gobWFjaGluZXMsIGZ1bmN0aW9uIChqLCBtYWNoaW5lKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaXN0U2VsZWN0TWFjaGluZS5hcHBlbmQoJCgnPHA+PC9wPicpLmFwcGVuZChcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCc8YT48L2E+JykuYWRkQ2xhc3MoJ2xtX19saW5rJykuYXR0cignaHJlZicsICcjJykuYXBwZW5kKG1hY2hpbmUubW9kZWxOYW1lKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCc8aW5wdXQ+PC9pbnB1dD4nKS5hdHRyKCd0eXBlJywgJ2hpZGRlbicpLnZhbChtYWNoaW5lLmlkKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0T25jbGlja01hY2hpbmVMaXN0KGxpc3RTZWxlY3RNYWNoaW5lLCBtYWNoaW5lcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKCcjYm9vay1tYWNoaW5lLWxpc3QtMicpLmhpZGUoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJCgnI2Jvb2stbWFjaGluZS1saXN0LTEnKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZ2V0TWFjaGluZUJ5SWQobGlzdE1hY2hpbmUsIG1hY2hpbmVJZCkge1xyXG4gICAgICAgIHZhciByZXN1bHQgPSBudWxsO1xyXG4gICAgICAgICQuZWFjaChsaXN0TWFjaGluZSwgZnVuY3Rpb24gKGksIG1hY2hpbmUpIHtcclxuICAgICAgICAgICAgaWYgKG1hY2hpbmUuaWQudG9TdHJpbmcoKSA9PSBtYWNoaW5lSWQudG9TdHJpbmcoKSkge1xyXG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gbWFjaGluZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZmlsbERldGFpbE1hY2hpbmUobGlzdE1hY2hpbmUsIG1hY2hpbmVJZCkge1xyXG4gICAgICAgIHZhciBtYWNoaW5lID0gZ2V0TWFjaGluZUJ5SWQobGlzdE1hY2hpbmUsIG1hY2hpbmVJZCk7XHJcbiAgICAgICAgdmFyIGJsb2NrRGV0YWlsTWFjaGluZSA9ICQoJyNib29rLXNlcnZpY2UtZGV0YWlsLW1hY2hpbmUnKS5wYXJlbnQoKTtcclxuICAgICAgICBpZiAobWFjaGluZSAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgIGJsb2NrRGV0YWlsTWFjaGluZS5zaG93KCk7XHJcbiAgICAgICAgICAgICQoJyNib29rLXNlcnZpY2UtZGV0YWlsLW1hY2hpbmUnKS5odG1sKCcnKTtcclxuICAgICAgICAgICAgJCgnI2Jvb2stc2VydmljZS1kZXRhaWwtbWFjaGluZScpLmFwcGVuZChcclxuICAgICAgICAgICAgICAgICQoJzxoMj48L2gyPicpLmFkZENsYXNzKCdoZWFkaW5nLXRpdGxlLTInKS5hcHBlbmQoJ1ZhbGQgbWFza2luJylcclxuICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICQoJyNib29rLXNlcnZpY2UtZGV0YWlsLW1hY2hpbmUnKS5hcHBlbmQoXHJcbiAgICAgICAgICAgICAgICAkKCc8aDM+PC9oMz4nKS5hZGRDbGFzcygnbG1fX2JvbGQtdGl0bGUnKS5hcHBlbmQobWFjaGluZS5tb2RlbE5hbWUpXHJcbiAgICAgICAgICAgICAgICApO1xyXG5cclxuICAgICAgICAgICAgJCgnI2Jvb2stc2VydmljZS1kZXRhaWwtbWFjaGluZScpLmFwcGVuZChcclxuICAgICAgICAgICAgICAgICQoJzxwPjwvcD4nKS5hcHBlbmQoXHJcbiAgICAgICAgICAgICAgICAgICAgJCgnPHNwYW4+PC9zcGFuPicpLmFkZENsYXNzKCdsbV9fYm9sZC10aXRsZScpLmFwcGVuZCgnU2VyaWVucicpLFxyXG4gICAgICAgICAgICAgICAgICAgIG1hY2hpbmUuc2VyaWFsTnVtYmVyXHJcbiAgICAgICAgICAgICAgICAgICAgKVxyXG4gICAgICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgJCgnI2Jvb2stc2VydmljZS1kZXRhaWwtbWFjaGluZScpLmFwcGVuZChcclxuICAgICAgICAgICAgICAgICQoJzxwPjwvcD4nKS5hcHBlbmQoXHJcbiAgICAgICAgICAgICAgICAgICAgJCgnPHNwYW4+PC9zcGFuPicpLmFkZENsYXNzKCdsbV9fYm9sZC10aXRsZScpLmFwcGVuZCgnUmVnbnInKSxcclxuICAgICAgICAgICAgICAgICAgICBtYWNoaW5lLnJlZ2lzdGVyTnVtYmVyXHJcbiAgICAgICAgICAgICAgICAgICAgKVxyXG4gICAgICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgYmxvY2tEZXRhaWxNYWNoaW5lLmZpbmQoXCJwID4gaW5wdXRbbmFtZT1CcmFuZEFuZE1vZGVsXVwiKS52YWwobWFjaGluZS5tb2RlbE5hbWUpO1xyXG4gICAgICAgICAgICBibG9ja0RldGFpbE1hY2hpbmUuZmluZChcInAgPiBpbnB1dFtuYW1lPVNlcmlhbE51bWJlcl1cIikudmFsKG1hY2hpbmUuc2VyaWFsTnVtYmVyKTtcclxuICAgICAgICAgICAgYmxvY2tEZXRhaWxNYWNoaW5lLmZpbmQoXCJwID4gaW5wdXRbbmFtZT1SZWdpc3Rlck51bWJlcl1cIikudmFsKG1hY2hpbmUucmVnaXN0ZXJOdW1iZXIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgYmxvY2tEZXRhaWxNYWNoaW5lLmhpZGUoKTtcclxuICAgICAgICAgICAgYmxvY2tEZXRhaWxNYWNoaW5lLmZpbmQoXCJwID4gaW5wdXRbbmFtZT1CcmFuZEFuZE1vZGVsXVwiKS52YWwoJycpO1xyXG4gICAgICAgICAgICBibG9ja0RldGFpbE1hY2hpbmUuZmluZChcInAgPiBpbnB1dFtuYW1lPVNlcmlhbE51bWJlcl1cIikudmFsKCcnKTtcclxuICAgICAgICAgICAgYmxvY2tEZXRhaWxNYWNoaW5lLmZpbmQoXCJwID4gaW5wdXRbbmFtZT1SZWdpc3Rlck51bWJlcl1cIikudmFsKCcnKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gYm9va2luZ1NlcnZpY2VTZW5kRmFpbGQoKSB7XHJcbiAgICAgICAgdmFyIHJlc3VsdCA9ICQoJyNib29raW5nLXNlcnZpY2Utc2VuZC1mYWlsZCcpLnZhbCgpO1xyXG4gICAgICAgIGlmIChyZXN1bHQgIT0gXCJcIiAmJiByZXN1bHQgIT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIGFsZXJ0KHJlc3VsdCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHZhciBhZGRNYXNraW5UeXBlSGFuZGxlciA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAvLyBmb3IgY2hvb3NlIE1hc2tpbiBUeXBlIGluIEJvb2sgU2VydmljZVxyXG4gICAgICAgICQoXCIubWFza2luLXR5cGUgLnNob3djYXNlIC5kcm9wZG93biBsaSBhXCIpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgJCgnI2Jvb2stc2VydmljZS1kZXRhaWwtbWFjaGluZScpLnBhcmVudCgpLmhpZGUoKTtcclxuICAgICAgICAgICAgJCgnI2Jvb2stbWFjaGluZS1saXN0LTEnKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICQoJyNib29rLW1hY2hpbmUtbGlzdC0yJykuaGlkZSgpO1xyXG4gICAgICAgICAgICAkKCcjYm9vay1zZXJ2aWNlLWxvYWRpbmcnKS5zaG93KCk7XHJcbiAgICAgICAgICAgIGdldE1hY2hpbmVzQnlDYXRlZ29yeSgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbiAgICB2YXIgYWRkQWRkcmVzc0hhbmRsZXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgJChcIiNib29rLW1hY2hpbmUtbGlzdC0yID4gLmFkZHJlc3Mtc2VjdGlvbnMgPiBzZWxlY3RcIikuY2hhbmdlKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKGRhdGFNYWNoaW5lcyAhPSBudWxsICYmIGRhdGFNYWNoaW5lcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICBmaWxsRGV0YWlsTWFjaGluZShkYXRhTWFjaGluZXMsICQodGhpcykudmFsKCkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBhZGRCb29rU2VydmljZUZhaWxlZEhhbmRsZXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgLy9hbGVydCBib29raW5nIHNlcnZpY2Ugc2VuZCBmYWlsZFxyXG4gICAgICAgIHJldHVybiBib29raW5nU2VydmljZVNlbmRGYWlsZCgpO1xyXG4gICAgfTtcclxuXHJcbiAgICB2YXIgaW5pdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBhZGRNYXNraW5UeXBlSGFuZGxlcigpO1xyXG4gICAgICAgIGFkZEFkZHJlc3NIYW5kbGVyKCk7XHJcbiAgICAgICAgYWRkQm9va1NlcnZpY2VGYWlsZWRIYW5kbGVyKCk7XHJcbiAgICB9O1xyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgSW5pdDogaW5pdFxyXG4gICAgfTtcclxufSkoKTtcclxuIiwiJChmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgdmFyIE15Q29tcGFueSA9IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICAgICAgdmFyIGFjY29yZGlvbkxpbmtzID0gJChcIi5sbV9fYWNjb3JkaW9uLXdyYXBwZXIgLmxtX19hY2NvcmRpb24tbGlua1wiKTtcclxuICAgICAgICB2YXIgYWNjb3JkaW9uQ29udGVudHMgPSAkKFwiLmxtX19hY2NvcmRpb24td3JhcHBlciAubG1fX2FjY29yZGlvbi1jb250ZW50XCIpO1xyXG5cclxuICAgICAgICB2YXIgYWRkQWNjb3JkaW9uRXZlbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGFjY29yZGlvbkxpbmtzLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEkKHRoaXMpLmhhc0NsYXNzKCdhY3RpdmUnKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBhY2NvcmRpb25Db250ZW50cy5zbGlkZVVwKCdmYXN0JywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5wcmV2KCkucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5uZXh0KCkuc2xpZGVEb3duKCdmYXN0JywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5wcmV2KCkuYWRkQ2xhc3MoXCJhY3RpdmVcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQodGhpcykubmV4dCgpLnNsaWRlVXAoJ2Zhc3QnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLnByZXYoKS5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGluaXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGFkZEFjY29yZGlvbkV2ZW50KCk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgfTtcclxuXHJcbiAgICAkKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIG15Q29tID0gbmV3IE15Q29tcGFueSgpO1xyXG4gICAgICAgIG15Q29tLmluaXQoKTtcclxuICAgIH0pO1xyXG5cclxufSk7IiwiJChmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgdmFyIE15QWNjb3VudCA9IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICAgICAgdmFyIHVzZXJUeXBlUmFkaW9zID0gJChcIi5jaG9vc2UtdXNlci10eXBlIC5sbV9fcmFkaW8gaW5wdXRbbmFtZT0ndXNlci10eXBlJ11cIik7XHJcbiAgICAgICAgdmFyIHN1YlVzZXJUeXBlTWVudSA9ICQoXCIudXNlci10eXBlX19zdWItdHlwZXNcIik7XHJcbiAgICAgICAgdmFyIHN1YlR5cGUgPSAkKFwiLnN1Yi10eXBlIC5sbV9fY2hlY2tib3ggaW5wdXRbdHlwZT0nY2hlY2tib3gnXVwiKTtcclxuXHJcbiAgICAgICAgdmFyIHNob3dTdWJPcHRpb25zID0gZnVuY3Rpb24gKGVsZSkge1xyXG4gICAgICAgICAgICBpZiAoZWxlLmlzKFwiOmNoZWNrZWRcIikpIHtcclxuICAgICAgICAgICAgICAgIHZhciBzdWJVc2VyVHlwZSA9IGVsZS5hdHRyKFwiaWRcIik7XHJcblxyXG4gICAgICAgICAgICAgICAgc3ViVXNlclR5cGVNZW51LmhpZGUoKTtcclxuICAgICAgICAgICAgICAgIHN1YlVzZXJUeXBlTWVudS5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoJCh0aGlzKS5hdHRyKFwiZGF0YS1wYXJlbnRcIikgPT0gc3ViVXNlclR5cGUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5zaG93KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB2YXIgbWVtYmVyc2hpcENob29zZW4gPSBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGluaXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICB9O1xyXG5cclxuICAgICQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgbXlBY2MgPSBuZXcgTXlBY2NvdW50KCk7XHJcbiAgICAgICAgbXlBY2MuaW5pdCgpO1xyXG4gICAgfSk7XHJcblxyXG59KTsiLCIkKGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICB2YXIgY3VzdG9tZXJJZFBhZ2UgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIHBhcmVudENoZWNrYm94ID0gJChcIi5jdXN0b21lci1pZC1ibG9jayAubG1fX2Jsb2NrLWJveCAucGFyZW50LWNoZWNrYm94IC5sbV9fY2hlY2tib3ggaW5wdXRcIik7XHJcbiAgICAgICAgdmFyIGNoaWxkQ2hlY2tib3hlcyA9IHBhcmVudENoZWNrYm94LnBhcmVudHMoXCIubG1fX2Jsb2NrLWJveFwiKS5maW5kKFwiLnN1Yi1jaGVja2JveCAubG1fX2NoZWNrYm94IGlucHV0XCIpO1xyXG4gICAgICAgIHZhciB0b29sdGlwTGluayA9ICQoXCIubGluay10by1vcGVuLXBvcHVwXCIpO1xyXG4gICAgICAgIHZhciB0b29sdGlwTWFzayA9ICQoXCIubG1fX2luZm9ybWF0aW9uLW1vZGFsX193cmFwcGVyIC5tYXNrXCIpO1xyXG5cclxuICAgICAgICB2YXIgYWRkQ2hlY2tib3hFdmVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKHBhcmVudENoZWNrYm94KSB7XHJcbiAgICAgICAgICAgICAgICBwYXJlbnRDaGVja2JveC5jaGFuZ2UoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBfdGhhdCA9ICQodGhpcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGNoaWxkQ2hlY2tib3hlc1dyYXBwZXIgPSBfdGhhdC5wYXJlbnRzKFwiLmxtX19ibG9jay1ib3hcIikuZmluZChcIi5zdWItY2hlY2tib3hcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGNoaWxkQ2hlY2tib3hlcyA9IGNoaWxkQ2hlY2tib3hlc1dyYXBwZXIuZmluZChcIi5sbV9fcmFkaW8gaW5wdXRcIik7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChjaGlsZENoZWNrYm94ZXNXcmFwcGVyICYmIGNoaWxkQ2hlY2tib3hlcykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoX3RoYXQuaXMoXCI6Y2hlY2tlZFwiKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRDaGVja2JveGVzLnBhcmVudCgpLnJlbW92ZUNsYXNzKCdzdWItaGlkZGVuJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKGNoaWxkQ2hlY2tib3hlc1swXSkucHJvcCgnY2hlY2tlZCcsIHRydWUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRDaGVja2JveGVzLnBhcmVudCgpLmFkZENsYXNzKCdzdWItaGlkZGVuJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZENoZWNrYm94ZXMucHJvcCgnY2hlY2tlZCcsIGZhbHNlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB2YXIgdG9vbHRpcEV2ZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAodG9vbHRpcExpbmsgJiYgdG9vbHRpcE1hc2spIHtcclxuICAgICAgICAgICAgICAgIHRvb2x0aXBMaW5rLmNsaWNrKGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciB0b29sdGlwUGFuZWwgPSAkKHRoaXMpLnBhcmVudCgpLm5leHQoKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAodG9vbHRpcFBhbmVsKSB0b29sdGlwUGFuZWwucmVtb3ZlQ2xhc3MoXCJoaWRkZW5cIik7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAgICAgdG9vbHRpcE1hc2suY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICQodGhpcykucGFyZW50KCkuYWRkQ2xhc3MoXCJoaWRkZW5cIik7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGluaXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGFkZENoZWNrYm94RXZlbnQoKTtcclxuICAgICAgICAgICAgICAgIHRvb2x0aXBFdmVudCgpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgIH07XHJcblxyXG4gICAgJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBjdXN0b21lcklkID0gbmV3IGN1c3RvbWVySWRQYWdlKCk7XHJcbiAgICAgICAgY3VzdG9tZXJJZC5pbml0KCk7XHJcbiAgICB9KTtcclxuXHJcbn0pOyIsIiQoZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIFRlcm1PZlVzZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBmdW5jdGlvbiByZWdpc3RlckhhbmRsZXIoKSB7XHJcbiAgICAgICAgICAgIGlmICgkKFwiI3Rlcm0tb2YtdXNlLW5vXCIpLmxlbmd0aCA9PT0gMCAmJiAkKFwiI3Rlcm0tb2YtdXNlLXllc1wiKS5sZW5ndGggPT09IDApIHtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJChcIiN0ZXJtLW9mLXVzZS1ub1wiKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgZmlyc3RSZWZlY3REaWFsb2cgPSAkKFwiLmxtX19tYWluLWNvbnRlbnRcIikuZmluZChcIiNkaWFsb2ctZmlyc3QtcmVqZWN0XCIpO1xyXG4gICAgICAgICAgICAgICAgZmlyc3RSZWZlY3REaWFsb2cuZmFkZUluKCk7XHJcblxyXG4gICAgICAgICAgICAgICAgJChcIi5iYWNrLXRvLXRlcm1cIiwgZmlyc3RSZWZlY3REaWFsb2cpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICBmaXJzdFJlZmVjdERpYWxvZy5mYWRlT3V0KCk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICAgICAkKFwiLnJlamVjdFwiLCBmaXJzdFJlZmVjdERpYWxvZykuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBzZWNvbmRSZWplY3REaWFsb2cgPSAkKFwiLmxtX19tYWluLWNvbnRlbnRcIikuZmluZChcIiNkaWFsb2ctcmVjb25maXJtLXJlamVjdFwiKTtcclxuICAgICAgICAgICAgICAgICAgICBzZWNvbmRSZWplY3REaWFsb2cuZmFkZUluKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgZmlyc3RSZWZlY3REaWFsb2cuZmFkZU91dCgpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAkKFwiLmJhY2stdG8tdGVybVwiLCBzZWNvbmRSZWplY3REaWFsb2cpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2Vjb25kUmVqZWN0RGlhbG9nLmZhZGVPdXQoKTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi5yZWplY3RcIiwgc2Vjb25kUmVqZWN0RGlhbG9nKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlY29uZFJlamVjdERpYWxvZy5mYWRlT3V0KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoXCIjcmVqZWN0Rm9ybVwiKS5zdWJtaXQoKTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGluaXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHJlZ2lzdGVySGFuZGxlcigpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgIH07XHJcblxyXG4gICAgdmFyIHRlcm1PZlVzZSA9IG5ldyBUZXJtT2ZVc2UoKTtcclxuICAgIHRlcm1PZlVzZS5pbml0KCk7XHJcbn0pOyIsImlmIChqUXVlcnkudmFsaWRhdG9yKSB7XHJcblxyXG4gICAgZnVuY3Rpb24gaXNWYWxpZGF0ZShzZWxlY3Rvcikge1xyXG4gICAgICAgIHZhciBpc1ZhbGlkID0gJChzZWxlY3RvcikudmFsKCkgIT09IFwiVHJ1ZVwiO1xyXG4gICAgICAgIGlmICghaXNWYWxpZCkge1xyXG4gICAgICAgICAgICAkKHNlbGVjdG9yKS52YWwoJ0ZhbHNlJyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBpc1ZhbGlkO1xyXG4gICAgfVxyXG5cclxuICAgIGpRdWVyeS52YWxpZGF0b3IuYWRkTWV0aG9kKFwiQ3VzdG9tZXJOdW1iZXJOb3RNYXRjaFwiLCBmdW5jdGlvbiAodmFsdWUsIGVsZW1lbnQsIHNlbGVjdG9yKSB7XHJcbiAgICAgICAgcmV0dXJuIGlzVmFsaWRhdGUoc2VsZWN0b3IpO1xyXG4gICAgfSwgXCJLdW5kbnVtcmV0IGR1IGhhciBhbmdldHQgZmlubnMgaW50ZSByZWdpc3RyZXJhdCBob3MgTGFudG3DpG5uZW4gZsO2ciBkZXQgb3JnYW5pc2F0aW9uc251bW1lciBkdSBoYXIgYW5nZXR0LlwiKTtcclxuICAgIGpRdWVyeS52YWxpZGF0b3IuYWRkTWV0aG9kKFwiQ3VzdG9tZXJOdW1iZXJOb3RFeGlzdFwiLCBmdW5jdGlvbiAodmFsdWUsIGVsZW1lbnQsIHNlbGVjdG9yKSB7XHJcbiAgICAgICAgcmV0dXJuIGlzVmFsaWRhdGUoc2VsZWN0b3IpO1xyXG4gICAgfSwgJ0t1bmRudW1yZXQgZmlubnMgaW50ZSByZWdpc3RyZXJhdCBob3MgTGFudG3DpG5uZW4uJyk7XHJcbiAgICBqUXVlcnkudmFsaWRhdG9yLmFkZE1ldGhvZChcIkN1c3RvbWVyTnVtYmVyQWN0aXZhdGVkXCIsIGZ1bmN0aW9uICh2YWx1ZSwgZWxlbWVudCwgc2VsZWN0b3IpIHtcclxuICAgICAgICByZXR1cm4gaXNWYWxpZGF0ZShzZWxlY3Rvcik7XHJcbiAgICB9LCAnS3VuZG51bXJldCBvY2ggb3JnYW5pc2F0aW9uc251bXJldCAgZHUgaGFyIGFuZ2V0dCDDpHIgcmVkYW4gYWt0aXZlcmF0IGbDtnIgZXR0IGtvbnRvIGkgTE0yLicpO1xyXG4gICAgalF1ZXJ5LnZhbGlkYXRvci5hZGRNZXRob2QoXCJPcmdhbmlzYXRpb25OdW1iZXJOb3RNYXRjaFwiLCBmdW5jdGlvbiAodmFsdWUsIGVsZW1lbnQsIHNlbGVjdG9yKSB7XHJcbiAgICAgICAgcmV0dXJuIGlzVmFsaWRhdGUoc2VsZWN0b3IpO1xyXG4gICAgfSwgJ09yZ2FuaXNhdGlvbnNudW1yZXQgZHUgaGFyIGFuZ2V0dCBzdMOkbW1lciBpbnRlIMO2dmVyZW5zIG1lZCBrdW5kbnVtcmV0IGR1IGhhciBhbmdldHQuJyk7XHJcbiAgICBqUXVlcnkudmFsaWRhdG9yLmFkZE1ldGhvZChcIk9yZ2FuaXNhdGlvbk51bWJlckFjdGl2YXRlZFwiLCBmdW5jdGlvbiAodmFsdWUsIGVsZW1lbnQsIHNlbGVjdG9yKSB7XHJcbiAgICAgICAgcmV0dXJuIGlzVmFsaWRhdGUoc2VsZWN0b3IpO1xyXG4gICAgfSwgJ09yZ2FuaXNhdGlvbnNudW1yZXQgb2NoIGt1bmRudW1yZXQgZHUgaGFyIGFuZ2V0dCDDpHIgcmVkYW4gYWt0aXZlcmF0IGbDtnIgZXR0IGtvbnRvIGkgTE0yLicpO1xyXG59XHJcblxyXG5qUXVlcnkoZnVuY3Rpb24gKCkge1xyXG4gICAgQWN0aXZlRmFybWRheUN1c3RvbWVyLmluaXQoKTtcclxuICAgIEFjdGl2ZUZhcm1kYXlDdXN0b21lci5pbml0RXZlbnQoKTtcclxuICAgIEFjdGl2ZUZhcm1kYXlDdXN0b21lci5pbml0VmFsaWRhdGVUZXJtT2ZVc2VGb3JtKCk7XHJcbn0pO1xyXG5cclxudmFyIEFjdGl2ZUZhcm1kYXlDdXN0b21lciA9IEFjdGl2ZUZhcm1kYXlDdXN0b21lciB8fCAoZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIGluaXQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKCQoKS52YWxpZGF0ZSkge1xyXG4gICAgICAgICAgICAkKCcjdmVyaWZ5Q3VzdG9tZXInKS52YWxpZGF0ZSh7XHJcbiAgICAgICAgICAgICAgICBlcnJvckVsZW1lbnRDbGFzczogJ2Vycm9yJyxcclxuICAgICAgICAgICAgICAgIGVycm9yQ2xhc3M6ICdlcnJvci1pdGVtJyxcclxuICAgICAgICAgICAgICAgIGVycm9yRWxlbWVudDogJ3NwYW4nLFxyXG4gICAgICAgICAgICAgICAgcnVsZXM6IHtcclxuICAgICAgICAgICAgICAgICAgICBDdXN0b21lck51bWJlcjoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ3VzdG9tZXJOdW1iZXJOb3RNYXRjaDogJyNDdXN0b21lck51bWJlck5vdE1hdGNoJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ3VzdG9tZXJOdW1iZXJOb3RFeGlzdDogJyNDdXN0b21lck51bWJlck5vdEV4aXN0JyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ3VzdG9tZXJOdW1iZXJBY3RpdmF0ZWQ6ICcjQ3VzdG9tZXJOdW1iZXJBY3RpdmF0ZWQnXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBPcmdhbmlzYXRpb25OdW1iZXI6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZ2V4OiAvXlxcZHs2fVstXXswLDF9XFxkezR9JC8sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE9yZ2FuaXNhdGlvbk51bWJlck5vdE1hdGNoOiAnI09yZ2FuaXNhdGlvbk51bWJlck5vdE1hdGNoJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgT3JnYW5pc2F0aW9uTnVtYmVyQWN0aXZhdGVkOiAnI09yZ2FuaXNhdGlvbk51bWJlckFjdGl2YXRlZCdcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgbWVzc2FnZXM6IHtcclxuICAgICAgICAgICAgICAgICAgICBDdXN0b21lck51bWJlcjoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogXCJEdSBtw6VzdGUgYW5nZSBLdW5kbnVtcmV0XCJcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIE9yZ2FuaXNhdGlvbk51bWJlcjoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogXCJEdSBtw6VzdGUgYW5nZSBPcmdhbmlzYXRpb25zbnVtcmV0XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZ2V4OiBcIk9yZ2FuaXNhdGlvbnNudW1yZXQgZHUgaGFyIGFuZ2V0dCDDpHIgYXYgZmVsIHR5cC5cIlxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBoaWdobGlnaHQ6IGZ1bmN0aW9uIChlbGVtZW50LCBlcnJvckNsYXNzLCB2YWxpZENsYXNzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnZGl2LmVycm9ycy1saXN0JykuaGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoJ3VsLmVycm9ycy1saXN0Jykuc2hvdygpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoJ2xpI3BfJyArICQoZWxlbWVudCkuYXR0cignaWQnKSkuc2hvdygpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoZWxlbWVudCkuYWRkQ2xhc3ModGhpcy5zZXR0aW5ncy5lcnJvckVsZW1lbnRDbGFzcykucmVtb3ZlQ2xhc3MoZXJyb3JDbGFzcyk7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgdW5oaWdobGlnaHQ6IGZ1bmN0aW9uIChlbGVtZW50LCBlcnJvckNsYXNzLCB2YWxpZENsYXNzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJChlbGVtZW50KS5yZW1vdmVDbGFzcyh0aGlzLnNldHRpbmdzLmVycm9yRWxlbWVudENsYXNzKS5yZW1vdmVDbGFzcyhlcnJvckNsYXNzKTtcclxuICAgICAgICAgICAgICAgICAgICAkKCdsaSNwXycgKyAkKGVsZW1lbnQpLmF0dHIoJ2lkJykpLmhpZGUoKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoJCgndWwuZXJyb3JzLWxpc3QnKS5maW5kKCdsaVtpZF49XCJwXCJdJykuaXMoXCI6dmlzaWJsZVwiKSA9PT0gZmFsc2UpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJCgndWwuZXJyb3JzLWxpc3QnKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHN1Ym1pdEhhbmRsZXI6IGZ1bmN0aW9uIChmb3JtKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnI2xvYWRlcicpLnNob3coKTtcclxuICAgICAgICAgICAgICAgICAgICAkKCcjbG9hZGVyJykucGFyZW50KCkuYWRkQ2xhc3MoJ2Rpc2FibGVkJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9ybS5zdWJtaXQoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoJCgpLnZhbGlkYXRlKSB7XHJcbiAgICAgICAgICAgIHZhciBpc0ludmFsaWQgPSAkKCcjQ3VzdG9tZXJOdW1iZXJOb3RNYXRjaCcpLnZhbCgpID09PSBcIlRydWVcIiB8fFxyXG4gICAgICAgICAgICAgICAgJCgnI0N1c3RvbWVyTnVtYmVyTm90RXhpc3QnKS52YWwoKSA9PT0gXCJUcnVlXCIgfHxcclxuICAgICAgICAgICAgICAgICQoJyNDdXN0b21lck51bWJlckFjdGl2YXRlZCcpLnZhbCgpID09PSBcIlRydWVcIiB8fFxyXG4gICAgICAgICAgICAgICAgJCgnI09yZ2FuaXNhdGlvbk51bWJlck5vdE1hdGNoJykudmFsKCkgPT09IFwiVHJ1ZVwiIHx8XHJcbiAgICAgICAgICAgICAgICAkKCcjT3JnYW5pc2F0aW9uTnVtYmVyQWN0aXZhdGVkJykudmFsKCkgPT09IFwiVHJ1ZVwiO1xyXG4gICAgICAgICAgICBpZiAoaXNJbnZhbGlkKSB7XHJcbiAgICAgICAgICAgICAgICAkKFwiI3ZlcmlmeUN1c3RvbWVyXCIpLnZhbGlkKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBpbml0RXZlbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgJCgnI2V4cGFuZFRlcm1PZlVzZScpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgJCh0aGlzKS50b2dnbGVDbGFzcygnZXhwYW5kZWQnKS5uZXh0KCkudG9nZ2xlKCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoZG9jdW1lbnQpLm9uKCdjaGFuZ2UnLCAnI2FjY2VwdFRlcm0nLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmICgkKHRoaXMpLmlzKCc6Y2hlY2tlZCcpKSB7XHJcbiAgICAgICAgICAgICAgICAkKCcuc3VjY2Vzcy1pY29uJykuc2hvdygpLnBhcmVudCgpLm5leHQoKS5odG1sKCdEdSBoYXIgZ29ka8OkbnQgPGEgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiIGNsYXNzPVwibG1fX2xpbmtcIj5hbnbDpG5kbmluZ3N2aWxsa29yZW48L2E+IGbDtnIgTE08c3VwPjI8L3N1cD4uJyk7XHJcbiAgICAgICAgICAgICAgICAkKCcjc3VibWl0QnRuJykucmVtb3ZlQ2xhc3MoJ2Rpc2FibGVkLWJ0bicpO1xyXG4gICAgICAgICAgICAgICAgJCgnI2V4cGFuZFRlcm1PZlVzZScpLnRvZ2dsZUNsYXNzKCdleHBhbmRlZCcpLm5leHQoKS50b2dnbGUoKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICQoJy5zdWNjZXNzLWljb24nKS5oaWRlKCkucGFyZW50KCkubmV4dCgpLmh0bWwoJ0R1IG3DpXN0ZSBsw6RzYSBvY2ggZ29ka8Okbm5hIDxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMClcIiBjbGFzcz1cImxtX19saW5rXCI+YW52w6RuZG5pbmdzdmlsbGtvcmVuPC9hPiBmw7ZyIGF0dCByZWdpc3RyZXJhIGV0dCBMTTxzdXA+Mjwvc3VwPi1rb250bycpO1xyXG4gICAgICAgICAgICAgICAgJCgnI3N1Ym1pdEJ0bicpLmFkZENsYXNzKCdkaXNhYmxlZC1idG4nKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB2YXIgdGVybXNTdGF0ZTtcclxuICAgICAgICB2YXIgc3VibWl0dGVkO1xyXG5cclxuICAgICAgICBpZiAoJChcIi5qcy1wYWdlLWlkZW50aWZpZXItYWN0aWNhdGlvbi1ub24tcHJpdmF0ZVwiKS5sZW5ndGgpIHtcclxuXHJcbiAgICAgICAgICAgIHRlcm1zU3RhdGUgPSBcImNsb3NlZFwiO1xyXG4gICAgICAgICAgICBzdWJtaXR0ZWQgPSBmYWxzZTtcclxuXHJcbiAgICAgICAgICAgICQoXCIjYWN0aXZhdGlvbi1mb3JtXCIpLnZhbGlkYXRlKHtcclxuICAgICAgICAgICAgICAgIGVycm9yRWxlbWVudDogJ2RpdicsXHJcbiAgICAgICAgICAgICAgICBlcnJvckNsYXNzOiBcImVycm9yXCIsXHJcbiAgICAgICAgICAgICAgICBydWxlczoge1xyXG4gICAgICAgICAgICAgICAgICAgIEZpcnN0TmFtZTogXCJyZXF1aXJlZFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIExhc3ROYW1lOiBcInJlcXVpcmVkXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgRW1haWw6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZ2V4OiAvXlxcYltBLVowLTkuXyUtXStAW0EtWjAtOS4tXStcXC5bQS1aXXsyLDR9XFxiJC9pXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBUZWxlcGhvbmU6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcGhvbmVTRTogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgTW9iaWxlcGhvbmU6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1vYmlsZVNFOiB0cnVlXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuXHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlczoge1xyXG4gICAgICAgICAgICAgICAgICAgIEZpcnN0TmFtZTogd2luZG93W1widmFsaWRhdGlvbk1lc3NhZ2VcIl0uZmlyc3ROYW1lLnJlcXVpcmVkLFxyXG4gICAgICAgICAgICAgICAgICAgIExhc3ROYW1lOiB3aW5kb3dbXCJ2YWxpZGF0aW9uTWVzc2FnZVwiXS5sYXN0TmFtZS5yZXF1aXJlZCxcclxuICAgICAgICAgICAgICAgICAgICBUZWxlcGhvbmU6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcGhvbmVTRTogd2luZG93W1widmFsaWRhdGlvbk1lc3NhZ2VcIl0ucGhvbmVTRS52YWxpZFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgTW9iaWxlcGhvbmU6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHdpbmRvd1tcInZhbGlkYXRpb25NZXNzYWdlXCJdLm1vYmlsZVNFLnJlcXVpcmVkLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBtb2JpbGVTRTogd2luZG93W1widmFsaWRhdGlvbk1lc3NhZ2VcIl0ubW9iaWxlU0UudmFsaWRcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIEVtYWlsOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB3aW5kb3dbXCJ2YWxpZGF0aW9uTWVzc2FnZVwiXS5lbWFpbC5yZXF1aXJlZCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgZW1haWw6IHdpbmRvd1tcInZhbGlkYXRpb25NZXNzYWdlXCJdLmVtYWlsLnZhbGlkXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuXHJcbiAgICAgICAgICAgICAgICBzaG93RXJyb3JzOiBmdW5jdGlvbiAoZXJyb3JNYXAsIGVycm9yTGlzdCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChzdWJtaXR0ZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3JNYXApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvckxpc3QpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzdWJtaXR0ZWQgPSBmYWxzZTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vLy9zZXQgdG9wIGVycm9yIGFsZXJ0IGJveFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZXJyb3JMaXN0RWxlbWVudCA9ICQoXCIjZXJyb3JzLWxpc3RcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlcnJvckxpc3QubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3JMaXN0RWxlbWVudC5jc3MoXCJkaXNwbGF5XCIsIFwiYmxvY2tcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiI2Vycm9ycy1saXN0IC5lcnJvci1saXN0LWl0ZW1cIikuZWFjaChmdW5jdGlvbiAoaWR4LCBlbGkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGlzcGxheSA9IGVycm9yTWFwWyQoZWxpKS5kYXRhKFwiZm9yXCIpXSA/IFwiYmxvY2tcIiA6IFwibm9uZVwiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoZWxpKS5jc3MoXCJkaXNwbGF5XCIsIGRpc3BsYXkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZGVmYXVsdFNob3dFcnJvcnMoKTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBpbnZhbGlkSGFuZGxlcjogZnVuY3Rpb24gKGZvcm0sIHZhbGlkYXRvcikge1xyXG4gICAgICAgICAgICAgICAgICAgIHN1Ym1pdHRlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgdmFyIGVtYWlsZXJyb3IgPSAnQChWaWV3RGF0YVtcImVtYWlsRXJyb3JcIl0pJztcclxuICAgICAgICAgICAgaWYgKGVtYWlsZXJyb3IpIHtcclxuICAgICAgICAgICAgICAgICQoXCIjZXJyb3JzLWxpc3RcIikuY3NzKFwiZGlzcGxheVwiLCBcImJsb2NrXCIpO1xyXG4gICAgICAgICAgICAgICAgJChcIiNqc0VtYWlsRXJyb3JcIikuY3NzKFwiZGlzcGxheVwiLCBcImJsb2NrXCIpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAkKFwiI2FjY29yZGlvbi1jb250cm9sXCIpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGlmICh0ZXJtc1N0YXRlID09PSBcImNsb3NlZFwiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy9vcGVuIGl0XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIiNhY2NvcmRpb24tY29udGVudFwiKS5yZW1vdmVDbGFzcyhcImhpZGRlblwiKTtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiI2FjY29yZGlvbi1jb250cm9sXCIpLmFkZENsYXNzKFwiZXhwYW5kZWRcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgdGVybXNTdGF0ZSA9IFwib3BlblwiO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICh0ZXJtc1N0YXRlID09PSBcIm9wZW5cIikge1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIjYWNjb3JkaW9uLWNvbnRlbnRcIikuYWRkQ2xhc3MoXCJoaWRkZW5cIik7XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIiNhY2NvcmRpb24tY29udHJvbFwiKS5yZW1vdmVDbGFzcyhcImV4cGFuZGVkXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRlcm1zU3RhdGUgPSBcImNsb3NlZFwiO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICQoXCIjdGVybXNDaGVja2JveFwiKS5jaGFuZ2UoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgJChcIi5zdWNjZXNzLWljb25cIikucmVtb3ZlQ2xhc3MoXCJoaWRkZW5cIik7XHJcbiAgICAgICAgICAgICAgICAkKFwiLm1lZGRlbGFuZGVuLWFjY29yZGlvblwiKS5hZGRDbGFzcyhcImhpZGRlblwiKTtcclxuICAgICAgICAgICAgICAgIHRlcm1zU3RhdGUgPSBcImFncmVlZFwiO1xyXG4gICAgICAgICAgICAgICAgJChcImlucHV0W3R5cGU9c3VibWl0XVwiKS5yZW1vdmVDbGFzcyhcImRpc2FibGVkLWJ0blwiKTtcclxuICAgICAgICAgICAgICAgICQoXCIjdGVybS1oZWFkZXItYWNjZXB0ZWRcIikuY3NzKFwiZGlzcGxheVwiLCBcImJsb2NrXCIpO1xyXG4gICAgICAgICAgICAgICAgJChcIiN0ZXJtLWhlYWRlclwiKS5jc3MoXCJkaXNwbGF5XCIsIFwibm9uZVwiKTtcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAkKFwiI2NhbmNlbC1idXR0b25cIikuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGNhbmNlbERpYWxvZyA9ICQoXCIjY2FuY2VsLWRpYWxvZ1wiKTtcclxuICAgICAgICAgICAgICAgIGNhbmNlbERpYWxvZy5jc3MoXCJkaXNwbGF5XCIsIFwiYmxvY2tcIik7XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgJChcIiNjYW5jZWwtYWNjZXB0XCIpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHZhciB1cmwgPSAkKFwiLmpzLXBhZ2UtaWRlbnRpZmllci1hY3RpY2F0aW9uLW5vbi1wcml2YXRlXCIpLmRhdGEoXCJjYW5jZWwtdXJsXCIpO1xyXG4gICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSB1cmw7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKCQoXCIuanMtcGFnZS1pZGVudGlmaWVyLWFjdGljYXRpb24tcHJpdmF0ZVwiKS5sZW5ndGgpIHtcclxuXHJcbiAgICAgICAgICAgIHRlcm1zU3RhdGUgPSBcImNsb3NlZFwiO1xyXG4gICAgICAgICAgICBzdWJtaXR0ZWQgPSBmYWxzZTtcclxuXHJcbiAgICAgICAgICAgICQoXCIjYWN0aXZhdGlvbi1mb3JtXCIpLnZhbGlkYXRlKHtcclxuICAgICAgICAgICAgICAgIGVycm9yRWxlbWVudDogJ2RpdicsXHJcbiAgICAgICAgICAgICAgICBlcnJvckNsYXNzOiBcImVycm9yXCIsXHJcbiAgICAgICAgICAgICAgICBydWxlczoge1xyXG4gICAgICAgICAgICAgICAgICAgIEZpcnN0TmFtZTogXCJyZXF1aXJlZFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIExhc3ROYW1lOiBcInJlcXVpcmVkXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgVGVsZXBob25lOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBob25lU0U6IHRydWVcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIE1vYmlsZXBob25lOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBtb2JpbGVTRTogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgRW1haWw6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZ2V4OiAvXlxcYltBLVowLTkuXyUtXStAW0EtWjAtOS4tXStcXC5bQS1aXXsyLDR9XFxiJC9pXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuXHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlczoge1xyXG4gICAgICAgICAgICAgICAgICAgIEZpcnN0TmFtZTogd2luZG93W1widmFsaWRhdGlvbk1lc3NhZ2VcIl0uZmlyc3ROYW1lLnJlcXVpcmVkLFxyXG4gICAgICAgICAgICAgICAgICAgIExhc3ROYW1lOiB3aW5kb3dbXCJ2YWxpZGF0aW9uTWVzc2FnZVwiXS5sYXN0TmFtZS5yZXF1aXJlZCxcclxuICAgICAgICAgICAgICAgICAgICBUZWxlcGhvbmU6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcGhvbmVTRTogd2luZG93W1widmFsaWRhdGlvbk1lc3NhZ2VcIl0ucGhvbmVTRS52YWxpZFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgTW9iaWxlcGhvbmU6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHdpbmRvd1tcInZhbGlkYXRpb25NZXNzYWdlXCJdLm1vYmlsZVNFLnJlcXVpcmVkLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBtb2JpbGVTRTogd2luZG93W1widmFsaWRhdGlvbk1lc3NhZ2VcIl0ubW9iaWxlU0UudmFsaWRcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIEVtYWlsOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB3aW5kb3dbXCJ2YWxpZGF0aW9uTWVzc2FnZVwiXS5lbWFpbC5yZXF1aXJlZCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgZW1haWw6IHdpbmRvd1tcInZhbGlkYXRpb25NZXNzYWdlXCJdLmVtYWlsLnZhbGlkXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIH0sXHJcblxyXG4gICAgICAgICAgICAgICAgaW52YWxpZEhhbmRsZXI6IGZ1bmN0aW9uIChmb3JtLCB2YWxpZGF0b3IpIHtcclxuICAgICAgICAgICAgICAgICAgICBzdWJtaXR0ZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuXHJcbiAgICAgICAgICAgICAgICBoaWdobGlnaHQ6IGZ1bmN0aW9uIChlbGVtZW50LCBlcnJvckNsYXNzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJChlbGVtZW50KS5hZGRDbGFzcyhlcnJvckNsYXNzKTtcclxuICAgICAgICAgICAgICAgIH0sXHJcblxyXG4gICAgICAgICAgICAgICAgc2hvd0Vycm9yczogZnVuY3Rpb24gKGVycm9yTWFwLCBlcnJvckxpc3QpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoc3VibWl0dGVkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yTWFwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3JMaXN0KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3VibWl0dGVkID0gZmFsc2U7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLy8vc2V0IHRvcCBlcnJvciBhbGVydCBib3hcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGVycm9yTGlzdEVsZW1lbnQgPSAkKFwiI2Vycm9ycy1saXN0XCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZXJyb3JMaXN0Lmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yTGlzdEVsZW1lbnQuY3NzKFwiZGlzcGxheVwiLCBcImJsb2NrXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJChcIiNlcnJvcnMtbGlzdCAuZXJyb3ItbGlzdC1pdGVtXCIpLmVhY2goZnVuY3Rpb24gKGlkeCwgZWxpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGRpc3BsYXkgPSBlcnJvck1hcFskKGVsaSkuZGF0YShcImZvclwiKV0gPyBcImJsb2NrXCIgOiBcIm5vbmVcIjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKGVsaSkuY3NzKFwiZGlzcGxheVwiLCBkaXNwbGF5KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmRlZmF1bHRTaG93RXJyb3JzKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB2YXIgZW1haWxlcnJvciA9ICdAKFZpZXdEYXRhW1wiZW1haWxFcnJvclwiXSknO1xyXG4gICAgICAgICAgICBpZiAoZW1haWxlcnJvcikge1xyXG4gICAgICAgICAgICAgICAgJChcIiNlcnJvcnMtbGlzdFwiKS5jc3MoXCJkaXNwbGF5XCIsIFwiYmxvY2tcIik7XHJcbiAgICAgICAgICAgICAgICAkKFwiI2pzRW1haWxFcnJvclwiKS5jc3MoXCJkaXNwbGF5XCIsIFwiYmxvY2tcIik7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICQoXCIjYWNjb3JkaW9uLWNvbnRyb2xcIikuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKHRlcm1zU3RhdGUgPT09IFwiY2xvc2VkXCIpIHtcclxuICAgICAgICAgICAgICAgICAgICAvL29wZW4gaXRcclxuICAgICAgICAgICAgICAgICAgICAkKFwiI2FjY29yZGlvbi1jb250ZW50XCIpLnJlbW92ZUNsYXNzKFwiaGlkZGVuXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIjYWNjb3JkaW9uLWNvbnRyb2xcIikuYWRkQ2xhc3MoXCJleHBhbmRlZFwiKTtcclxuICAgICAgICAgICAgICAgICAgICB0ZXJtc1N0YXRlID0gXCJvcGVuXCI7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHRlcm1zU3RhdGUgPT09IFwib3BlblwiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIiNhY2NvcmRpb24tY29udGVudFwiKS5hZGRDbGFzcyhcImhpZGRlblwiKTtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiI2FjY29yZGlvbi1jb250cm9sXCIpLnJlbW92ZUNsYXNzKFwiZXhwYW5kZWRcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgdGVybXNTdGF0ZSA9IFwiY2xvc2VkXCI7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgJChcIiN0ZXJtc0NoZWNrYm94XCIpLmNoYW5nZShmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAkKFwiLnN1Y2Nlc3MtaWNvblwiKS5yZW1vdmVDbGFzcyhcImhpZGRlblwiKTtcclxuICAgICAgICAgICAgICAgICQoXCIubWVkZGVsYW5kZW4tYWNjb3JkaW9uXCIpLmFkZENsYXNzKFwiaGlkZGVuXCIpO1xyXG4gICAgICAgICAgICAgICAgdGVybXNTdGF0ZSA9IFwiYWdyZWVkXCI7XHJcbiAgICAgICAgICAgICAgICAkKFwiaW5wdXRbdHlwZT1zdWJtaXRdXCIpLnJlbW92ZUNsYXNzKFwiZGlzYWJsZWQtYnRuXCIpO1xyXG4gICAgICAgICAgICAgICAgJChcIiN0ZXJtLWhlYWRlci1hY2NlcHRlZFwiKS5jc3MoXCJkaXNwbGF5XCIsIFwiYmxvY2tcIik7XHJcbiAgICAgICAgICAgICAgICAkKFwiI3Rlcm0taGVhZGVyXCIpLmNzcyhcImRpc3BsYXlcIiwgXCJub25lXCIpO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICQoXCIjY2FuY2VsLWJ1dHRvblwiKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgY2FuY2VsRGlhbG9nID0gJChcIiNjYW5jZWwtZGlhbG9nXCIpO1xyXG4gICAgICAgICAgICAgICAgY2FuY2VsRGlhbG9nLmNzcyhcImRpc3BsYXlcIiwgXCJibG9ja1wiKTtcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAkKFwiI2NhbmNlbC1hY2NlcHRcIikuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIHVybCA9ICQoXCIuanMtcGFnZS1pZGVudGlmaWVyLWFjdGljYXRpb24tbm9uLXByaXZhdGVcIikuZGF0YShcImNhbmNlbC11cmxcIik7XHJcbiAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IHVybDtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB2YXIgaXNEZWJ1ZztcclxuXHJcbiAgICAgICAgaWYgKCQoXCIuanMtcGFnZS1pZGVudGlmaWVyLXJlZ2lzdHJhdGlvbi1ub24tcHJpdmF0ZVwiKS5sZW5ndGgpIHtcclxuICAgICAgICAgICAgaXNEZWJ1ZyA9ICQoXCIuanMtcGFnZS1pZGVudGlmaWVyLXJlZ2lzdHJhdGlvbi1ub24tcHJpdmF0ZVwiKS5kYXRhKFwiZGVidWdcIik7XHJcblxyXG4gICAgICAgICAgICBpZiAoaXNEZWJ1Zykge1xyXG4gICAgICAgICAgICAgICAgJC5nZXRTY3JpcHQoXCIvU3RhdGljL2Rpc3Qvc2NyaXB0cy9ub25Qcml2YXRlRmlybVJlZ2lzdHJhdGlvbi5qc1wiKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICQuZ2V0U2NyaXB0KFwiL1N0YXRpYy9kaXN0L3NjcmlwdHMvbm9uUHJpdmF0ZUZpcm1SZWdpc3RyYXRpb24ucHJvZHVjdGlvbi5qc1wiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKCQoXCIuanMtcGFnZS1pZGVudGlmaWVyLXJlZ2lzdHJhdGlvbi1wcml2YXRlXCIpLmxlbmd0aCkge1xyXG4gICAgICAgICAgICBpc0RlYnVnID0gJChcIi5qcy1wYWdlLWlkZW50aWZpZXItcmVnaXN0cmF0aW9uLXByaXZhdGVcIikuZGF0YShcImRlYnVnXCIpO1xyXG5cclxuICAgICAgICAgICAgaWYgKGlzRGVidWcpIHtcclxuICAgICAgICAgICAgICAgICQuZ2V0U2NyaXB0KFwiL1N0YXRpYy9kaXN0L3NjcmlwdHMvcHJpdmF0ZUZpcm1SZWdpc3RyYXRpb24uanNcIik7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAkLmdldFNjcmlwdChcIi9TdGF0aWMvZGlzdC9zY3JpcHRzL3ByaXZhdGVGaXJtUmVnaXN0cmF0aW9uLnByb2R1Y3Rpb24uanNcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuXHJcbiAgICB2YXIgaW5pdFZhbGlkYXRlVGVybU9mVXNlRm9ybSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAoJCgpLnZhbGlkYXRlKSB7XHJcbiAgICAgICAgICAgICQoJyNyZWdpc3RlckN1c3RvbWVyJykudmFsaWRhdGUoe1xyXG4gICAgICAgICAgICAgICAgZXJyb3JFbGVtZW50Q2xhc3M6ICdlcnJvcicsXHJcbiAgICAgICAgICAgICAgICBlcnJvckNsYXNzOiAnZXJyb3ItaXRlbScsXHJcbiAgICAgICAgICAgICAgICBlcnJvckVsZW1lbnQ6ICdzcGFuJyxcclxuICAgICAgICAgICAgICAgIHJ1bGVzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgQ29udHJhY3RBcHBsaWNhdGlvbjoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgQ29weU9mSUREb2N1bWVudHM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIFJlZ2lzdHJhdGlvbkNlcnRpZmljYXRlOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBGaXJzdE5hbWU6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIFN1ck5hbWU6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIFRlbGVwaG9uZToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZWdleDogL15cXCs/KFxcZFtcXGQtLiBdKyk/KFxcKFtcXGQtLiBdK1xcKSk/W1xcZC0uIF0rXFxkJC9cclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIE1vYmlsZToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVnZXg6IC9eXFwrPyhcXGRbXFxkLS4gXSspPyhcXChbXFxkLS4gXStcXCkpP1tcXGQtLiBdK1xcZCQvXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBQZXJzb25OdW1iZXI6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZ2V4OiAvXlswLTldezEyfSQvXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIG1lc3NhZ2VzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgQ29udHJhY3RBcHBsaWNhdGlvbjoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogXCJEdSBtw6VzdGUgYmlmb2dhIGFuc8O2a2FuIG9tIGF2dGFsIGbDtnIgZS10asOkbnN0ZXJcIlxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgQ29weU9mSUREb2N1bWVudHM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IFwiRHUgbcOlc3RlIGJpZm9nYSBLb3BpYSBww6UgSUQtaGFuZGxpbmdhclwiXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBSZWdpc3RyYXRpb25DZXJ0aWZpY2F0ZToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogXCJEdSBtw6VzdGUgYmlmb2dhIFJlZ2lzdHJlcmluZ3NiZXZpcyBmw7ZyIGRpdHQgZsO2cmV0YWdcIlxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgRmlyc3ROYW1lOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiBcIkbDtnJuYW1uIMOkciBvYmxpZ2F0b3Jpc2tcIlxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgU3VyTmFtZToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogXCJFZnRlcm5hbW4gw6RyIG9ibGlnYXRvcmlza3RcIlxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgVGVsZXBob25lOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZ2V4OiBcIkFuZ2UgZW4gZ2lsdGlnIHRlbGVmb25udW1tZXJcIlxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgTW9iaWxlOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiBcIk1vYmlsbnIgw6RyIG9ibGlnYXRvcmlza3RcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVnZXg6IFwiQW5nZSBldHQgZ2lsdGlndCBtb2JpbG51bW1lclwiXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBQZXJzb25OdW1iZXI6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IFwiUGVyc29ubnIgw6RyIG9ibGlnYXRvcmlza3RcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVnZXg6IFwiUGVyc29ubnIgbcOlc3RlIGJlc3TDpSBhdiAxMiBzaWZmcm9yXCJcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgaGlnaGxpZ2h0OiBmdW5jdGlvbiAoZWxlbWVudCwgZXJyb3JDbGFzcywgdmFsaWRDbGFzcykge1xyXG4gICAgICAgICAgICAgICAgICAgICQoJ2Rpdi5lcnJvcnMtbGlzdCcpLmhpZGUoKTtcclxuICAgICAgICAgICAgICAgICAgICAkKCd1bC5lcnJvcnMtbGlzdCcpLnNob3coKTtcclxuICAgICAgICAgICAgICAgICAgICAkKCdsaSNwXycgKyAkKGVsZW1lbnQpLmF0dHIoJ2lkJykpLnNob3coKTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgdHlwZUVsZW1lbnQgPSAkKGVsZW1lbnQpLmF0dHIoJ3R5cGUnKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAodHlwZUVsZW1lbnQgPT09ICdmaWxlJykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKGVsZW1lbnQpLnBhcmVudCgpLmFkZENsYXNzKHRoaXMuc2V0dGluZ3MuZXJyb3JFbGVtZW50Q2xhc3MpLnJlbW92ZUNsYXNzKGVycm9yQ2xhc3MpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoZWxlbWVudCkuYWRkQ2xhc3ModGhpcy5zZXR0aW5ncy5lcnJvckVsZW1lbnRDbGFzcykucmVtb3ZlQ2xhc3MoZXJyb3JDbGFzcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB1bmhpZ2hsaWdodDogZnVuY3Rpb24gKGVsZW1lbnQsIGVycm9yQ2xhc3MsIHZhbGlkQ2xhc3MpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgdHlwZUVsZW1lbnQgPSAkKGVsZW1lbnQpLmF0dHIoJ3R5cGUnKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAodHlwZUVsZW1lbnQgPT09ICdmaWxlJykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKGVsZW1lbnQpLnBhcmVudCgpLnJlbW92ZUNsYXNzKHRoaXMuc2V0dGluZ3MuZXJyb3JFbGVtZW50Q2xhc3MpLnJlbW92ZUNsYXNzKGVycm9yQ2xhc3MpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoZWxlbWVudCkucmVtb3ZlQ2xhc3ModGhpcy5zZXR0aW5ncy5lcnJvckVsZW1lbnRDbGFzcykucmVtb3ZlQ2xhc3MoZXJyb3JDbGFzcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAkKCdsaSNwXycgKyAkKGVsZW1lbnQpLmF0dHIoJ2lkJykpLmhpZGUoKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoJCgndWwuZXJyb3JzLWxpc3QnKS5maW5kKCdsaVtpZF49XCJwXCJdJykuaXMoXCI6dmlzaWJsZVwiKSA9PT0gZmFsc2UpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJCgndWwuZXJyb3JzLWxpc3QnKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGVycm9yUGxhY2VtZW50OiBmdW5jdGlvbiAoZXJyb3IsIGVsZW1lbnQpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgdHlwZUVsZW1lbnQgPSBlbGVtZW50LmF0dHIoJ3R5cGUnKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAodHlwZUVsZW1lbnQgPT09ICdmaWxlJykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50LnBhcmVudCgpLmFmdGVyKGVycm9yKTtcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50LmFmdGVyKGVycm9yKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgaW5pdDogaW5pdCxcclxuICAgICAgICBpbml0RXZlbnQ6IGluaXRFdmVudCxcclxuICAgICAgICBpbml0VmFsaWRhdGVUZXJtT2ZVc2VGb3JtOiBpbml0VmFsaWRhdGVUZXJtT2ZVc2VGb3JtXHJcbiAgICB9O1xyXG59KSgpO1xyXG4iLCJpZiAoalF1ZXJ5LnZhbGlkYXRvcikge1xyXG4gICAgaWYgKGpRdWVyeS52YWxpZGF0b3IucmVnZXggPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgalF1ZXJ5LnZhbGlkYXRvci5hZGRNZXRob2QoXCJyZWdleFwiLCBmdW5jdGlvbiAodmFsdWUsIGVsZW1lbnQsIHJlZ2V4cHIpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMub3B0aW9uYWwoZWxlbWVudCkgfHwgcmVnZXhwci50ZXN0KHZhbHVlKTtcclxuICAgICAgICB9LCAnUGxlYXNlIGVudGVyIGEgdmFsaWQgdmFsdWUuJyk7XHJcbiAgICB9XHJcbn1cclxuXHJcbnZhciBDb250YWN0Rm9ybSA9IENvbnRhY3RGb3JtIHx8IGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBmb3JtVmFsaWRhdG9yO1xyXG5cclxuICAgIGZ1bmN0aW9uIGFkZFZhbGlkYXRpb24oKSB7XHJcbiAgICAgICAgaWYgKCQoJyNDb250YWN0Rm9ybScpLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgICQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIHJ1bGVzID0ge1xyXG4gICAgICAgICAgICAgICAgc3ViamVjdDogXCJyZXF1aXJlZFwiLFxyXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogXCJyZXF1aXJlZFwiXHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICB2YXIgbWVzc2FnZXMgPSB7XHJcbiAgICAgICAgICAgICAgICBzdWJqZWN0OiBcIkR1IG3DpXN0ZSBhbmdlIMOEbW5lXCIsXHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBcIkR1IG3DpXN0ZSBhbmdlIE1lZGRlbGFuZGVcIlxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICBpZiAoJCgnI2xvZ2luRmxhZycpLnZhbCgpLnRvU3RyaW5nKCkudG9Mb3dlckNhc2UgIT09IFwidHJ1ZVwiKSB7XHJcbiAgICAgICAgICAgICAgICBydWxlcy5uYW1lID0gXCJyZXF1aXJlZFwiO1xyXG4gICAgICAgICAgICAgICAgcnVsZXMuZW1haWwgPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgZW1haWw6IHRydWVcclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICBydWxlcy5jdXN0b21lck51bWJlciA9IHtcclxuICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICByZWdleDogL14oXFxkKykvXHJcbiAgICAgICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgICAgIG1lc3NhZ2VzLm5hbWUgPSBcIkR1IG3DpXN0ZSBhbmdlIERpdHQgbmFtblwiO1xyXG4gICAgICAgICAgICAgICAgbWVzc2FnZXMuZW1haWwgPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IFwiRHUgbcOlc3RlIGFuZ2UgRS1wb3N0XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgZW1haWw6IFwiQW5nZSBlbiBnaWx0aWcgZS1wb3N0YWRyZXNzXCJcclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlcy5jdXN0b21lck51bWJlciA9IHtcclxuICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogXCJEdSBtw6VzdGUgYW5nZSBLdW5kbnVtbWVyXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgcmVnZXg6IFwiQW5nZSBlbiBnaWx0aWcgS3VuZG51bW1lclwiXHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICgkKCkudmFsaWRhdGUpIHtcclxuICAgICAgICAgICAgICAgIGZvcm1WYWxpZGF0b3IgPSAkKCcjQ29udGFjdEZvcm0nKS52YWxpZGF0ZSh7XHJcbiAgICAgICAgICAgICAgICAgICAgaWdub3JlOiBbXSxcclxuICAgICAgICAgICAgICAgICAgICBlcnJvckVsZW1lbnRDbGFzczogJ2Vycm9yJyxcclxuICAgICAgICAgICAgICAgICAgICBlcnJvckNsYXNzOiAnZXJyb3ItaXRlbScsXHJcbiAgICAgICAgICAgICAgICAgICAgZXJyb3JFbGVtZW50OiAnc3BhbicsXHJcbiAgICAgICAgICAgICAgICAgICAgcnVsZXM6IHJ1bGVzLFxyXG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VzOiBtZXNzYWdlcyxcclxuICAgICAgICAgICAgICAgICAgICBoaWdobGlnaHQ6IGZ1bmN0aW9uIChlbGVtZW50LCBlcnJvckNsYXNzLCB2YWxpZENsYXNzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coXCJqcXVlcnkgdmFsaWRhdGlvblwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJCgndWwuZXJyb3JzLWxpc3QnKS5zaG93KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJ2xpI2xpXycgKyAkKGVsZW1lbnQpLmF0dHIoJ2lkJykpLnNob3coKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJChlbGVtZW50KS5hZGRDbGFzcyh0aGlzLnNldHRpbmdzLmVycm9yRWxlbWVudENsYXNzKS5yZW1vdmVDbGFzcyhlcnJvckNsYXNzKTtcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHVuaGlnaGxpZ2h0OiBmdW5jdGlvbiAoZWxlbWVudCwgZXJyb3JDbGFzcywgdmFsaWRDbGFzcykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKGVsZW1lbnQpLnJlbW92ZUNsYXNzKHRoaXMuc2V0dGluZ3MuZXJyb3JFbGVtZW50Q2xhc3MpLnJlbW92ZUNsYXNzKGVycm9yQ2xhc3MpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKCdsaSNsaV8nICsgJChlbGVtZW50KS5hdHRyKCdpZCcpKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkKCd1bC5lcnJvcnMtbGlzdCcpLmZpbmQoJ2xpW2lkXj1cImxpXCJdJykuaXMoXCI6dmlzaWJsZVwiKSA9PT0gZmFsc2UpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJ3VsLmVycm9ycy1saXN0JykuaGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAgICAgJChcImlucHV0W3R5cGU9cmVzZXRdXCIpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZm9ybVZhbGlkYXRvcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3JtVmFsaWRhdG9yLnJlc2V0Rm9ybSgpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gaGlkZSBhbGwgZXJyb3JzXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJ3VsLmVycm9ycy1saXN0JykuaGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKCcuZXJyb3InKS5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQodGhpcykucmVtb3ZlQ2xhc3MoJ2Vycm9yJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIGZ1bmN0aW9uIGluaXQoKSB7XHJcbiAgICAgICAgYWRkVmFsaWRhdGlvbigpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBpbml0OiBpbml0XHJcbiAgICB9O1xyXG5cclxufSgpO1xyXG5cclxuJChmdW5jdGlvbiAoKSB7XHJcbiAgICBDb250YWN0Rm9ybS5pbml0KCk7XHJcbn0pO1xyXG4iLCIkKGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICB2YXIgVXBjb21pbmdEZWxpdmVyeSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgY2Fyb3VzZWwgPSAkKFwiLmxtX19jYXJvdXNlbC1ibG9ja1wiKTtcclxuICAgICAgICAvL3ZhciBjYXJvdXNlbEl0ZW0gPSBjYXJvdXNlbC5maW5kKFwiLmxtX19jYXJvdXNlbF9fY29udGVudCAubG1fX2Nhcm91c2VsX19pdGVtIC5sbV9fYmx1ZS1idG5cIik7XHJcbiAgICAgICAgdmFyIGNhcm91c2VsSXRlbSA9IGNhcm91c2VsLmZpbmQoXCIubG1fX2Nhcm91c2VsX19pdGVtIGFcIikubm90KFwiLmNhbGxlbmRhclwiKTtcclxuICAgICAgICB2YXIgJGl0ZW1Qb3B1cCA9ICQoXCIjdXBjb21pbmctZGV0YWlsXCIpO1xyXG4gICAgICAgIHZhciBhZ3JlZW1lbnRTaWRlYmFyID0gJChcIi5sbV9fYmxvY2suYWdyZWVtZW50XCIpO1xyXG5cclxuICAgICAgICB2YXIgc2hvd0luZm9ybWF0aW9uID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBjYXJvdXNlbEl0ZW0ub24oJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgICAgIHZhciAkdGhpcyA9ICQodGhpcyk7XHJcblxyXG4gICAgICAgICAgICAgICAgdmFyIGRlbGl2ZXJ5T2JqID0gZ2V0RGVsaXZlcnlJbmZvcigkdGhpcyk7XHJcblxyXG4gICAgICAgICAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcInBvc3RcIixcclxuICAgICAgICAgICAgICAgICAgICBkYXRhOiBkZWxpdmVyeU9iaixcclxuICAgICAgICAgICAgICAgICAgICBkYXRhVHlwZTogXCJodG1sXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgdXJsOiBcIi9hcGkvdXBjb21taW5nLWRlbGl2ZXJpZXMvZ2V0LWRldGFpbFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICRpdGVtUG9wdXAuaHRtbChkYXRhKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJGl0ZW1Qb3B1cCA9ICQoXCIjdXBjb21pbmctZGV0YWlsXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkaXRlbVBvcHVwLmZhZGVJbigpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgZnVuY3Rpb24gZ2V0RGVsaXZlcnlJbmZvcigkY2Fyb3VzZWxJdGVtKSB7XHJcbiAgICAgICAgICAgIC8vdmFyICRpbmZvckVsZW1lbnQgPSAkY2Fyb3VzZWxJdGVtLnBhcmVudCgpLnBhcmVudHMoKTtcclxuICAgICAgICAgICAgdmFyICRpbmZvckVsZW1lbnQgPSAkY2Fyb3VzZWxJdGVtLnBhcmVudCgpO1xyXG4gICAgICAgICAgICB2YXIgaXNEZWxpdmVyeUZyb21DdXN0b21lciA9ICRjYXJvdXNlbEl0ZW0uY2xvc2VzdChcInNlY3Rpb25cIikuYXR0cihcImRhdGEtaXNGcm9tQ3VzdG9tZXJcIik7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICBvcmRlck5vOiAkaW5mb3JFbGVtZW50LmF0dHIoXCJkYXRhLW9yZGVyTm9cIiksXHJcbiAgICAgICAgICAgICAgICBvcmRlckxpbmU6ICRpbmZvckVsZW1lbnQuYXR0cihcImRhdGEtb3JkZXJMaW5lXCIpLFxyXG4gICAgICAgICAgICAgICAgaXRlbU5hbWU6ICRpbmZvckVsZW1lbnQuYXR0cihcImRhdGEtaXRlbU5hbWVcIiksXHJcbiAgICAgICAgICAgICAgICBvcmRlclF1YW50aXR5OiAkaW5mb3JFbGVtZW50LmF0dHIoXCJkYXRhLW9yZGVyUXVhbnRpdHlcIiksXHJcbiAgICAgICAgICAgICAgICB3YXJlaG91c2U6ICRpbmZvckVsZW1lbnQuYXR0cihcImRhdGEtd2FyZWhvdXNlXCIpLFxyXG4gICAgICAgICAgICAgICAgY29udGFpbmVyOiAkaW5mb3JFbGVtZW50LmF0dHIoXCJkYXRhLWNvbnRhaW5lclwiKSxcclxuICAgICAgICAgICAgICAgIHBsYW5lZERlbGl2ZXJ5RGF0ZTogJGluZm9yRWxlbWVudC5hdHRyKFwiZGF0YS1wbGFuZWREYXRlXCIpLFxyXG4gICAgICAgICAgICAgICAgaXNGcm9tQ3VzdG9tZXI6IGlzRGVsaXZlcnlGcm9tQ3VzdG9tZXJcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIHNpZGViYXJzXHJcbiAgICAgICAgdmFyIHRvZ2dsZVNpZGViYXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmIChhZ3JlZW1lbnRTaWRlYmFyLmxlbmd0aCkgYWdyZWVtZW50U2lkZWJhci5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHZhciBpdGVtcyA9ICQodGhpcykuZmluZChcIi5sbV9fbmV3cy1pdGVtXCIpO1xyXG4gICAgICAgICAgICAgICAgaXRlbXMuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyICR0aGF0ID0gJCh0aGlzKTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgdG9nZ2xlTGluayA9ICR0aGF0LmZpbmQoXCI+YVwiKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCR0aGF0Lmhhc0NsYXNzKCdvcGVuJykpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJHRoYXQuZmluZCgnLmRldGFpbC1pbmZvcm1hdGlvbicpLnNsaWRlRG93bignZmFzdCcpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHRvZ2dsZUxpbmsub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgJHRoaXMgPSAkKHRoaXMpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcGFyZW50SXRlbSA9ICR0aGlzLnBhcmVudCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgaXNPcGVuID0gcGFyZW50SXRlbS5oYXNDbGFzcygnb3BlbicpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGV0YWlsSW5mb3JtYXRpb24gPSAkdGhpcy5uZXh0KCk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpdGVtcy5yZW1vdmVDbGFzcygnb3BlbicpLmZpbmQoJy5kZXRhaWwtaW5mb3JtYXRpb24nKS5zbGlkZVVwKCdmYXN0Jyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc09wZW4pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmVudEl0ZW0ucmVtb3ZlQ2xhc3MoJ29wZW4nKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRldGFpbEluZm9ybWF0aW9uLnNsaWRlVXAoJ2Zhc3QnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmVudEl0ZW0uYWRkQ2xhc3MoJ29wZW4nKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRldGFpbEluZm9ybWF0aW9uLnNsaWRlRG93bignZmFzdCcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBzaG93SW5mb3JtYXRpb246IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHNob3dJbmZvcm1hdGlvbigpO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB0b2dnbGVTaWRlYmFyOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB0b2dnbGVTaWRlYmFyKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgfTtcclxuXHJcbiAgICAvLyBzdGljayBjYXJvdXNlbFxyXG4gICAgaWYgKCQuZm4uc2xpY2spIHtcclxuICAgICAgICAkKCcubG1fX2Nhcm91c2VsLWJsb2NrIC5sbV9fY2Fyb3VzZWxfX2NvbnRlbnQnKS5zbGljayh7XHJcbiAgICAgICAgICAgIGRvdHM6IHRydWUsXHJcbiAgICAgICAgICAgIGluZmluaXRlOiBmYWxzZSxcclxuICAgICAgICAgICAgc3BlZWQ6IDMwMCxcclxuICAgICAgICAgICAgc2xpZGVzVG9TaG93OiAzLFxyXG4gICAgICAgICAgICBzbGlkZXNUb1Njcm9sbDogMyxcclxuICAgICAgICAgICAgcmVzcG9uc2l2ZTogW1xyXG4gICAgICAgICAgICAvL3tcclxuICAgICAgICAgICAgLy8gICAgYnJlYWtwb2ludDogMTM2NixcclxuICAgICAgICAgICAgLy8gICAgc2V0dGluZ3M6IHtcclxuICAgICAgICAgICAgLy8gICAgICAgIHNsaWRlc1RvU2hvdzogMyxcclxuICAgICAgICAgICAgLy8gICAgICAgIHNsaWRlc1RvU2Nyb2xsOiAzXHJcbiAgICAgICAgICAgIC8vICAgIH1cclxuICAgICAgICAgICAgLy99LFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBicmVha3BvaW50OiAxMTAwLFxyXG4gICAgICAgICAgICAgICAgc2V0dGluZ3M6IHtcclxuICAgICAgICAgICAgICAgICAgICBzbGlkZXNUb1Nob3c6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgc2xpZGVzVG9TY3JvbGw6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgdmFyaWFibGVXaWR0aDogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICBjZW50ZXJNb2RlOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgIGNlbnRlclBhZGRpbmc6ICc0MHB4JyxcclxuICAgICAgICAgICAgICAgICAgICBpbmZpbml0ZTogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBicmVha3BvaW50OiA2NDAsXHJcbiAgICAgICAgICAgICAgICBzZXR0aW5nczoge1xyXG4gICAgICAgICAgICAgICAgICAgIHNsaWRlc1RvU2hvdzogMSxcclxuICAgICAgICAgICAgICAgICAgICBzbGlkZXNUb1Njcm9sbDogMSxcclxuICAgICAgICAgICAgICAgICAgICBkb3RzOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBhcnJvd3M6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIHZhcmlhYmxlV2lkdGg6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgY2VudGVyTW9kZTogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICBjZW50ZXJQYWRkaW5nOiAnNDBweCcsXHJcbiAgICAgICAgICAgICAgICAgICAgLy9pbmZpbml0ZTogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIF1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBpbml0IGV2ZW50IGZvciBpdGVtIGluIHVwY29taW5nIGRlbGl2ZXJ5XHJcbiAgICB2YXIgdXBjb21pbmdEZWxpdmVyeSA9IG5ldyBVcGNvbWluZ0RlbGl2ZXJ5KCk7XHJcbiAgICB1cGNvbWluZ0RlbGl2ZXJ5LnNob3dJbmZvcm1hdGlvbigpO1xyXG4gICAgdXBjb21pbmdEZWxpdmVyeS50b2dnbGVTaWRlYmFyKCk7XHJcbn0pOyIsIiQoZnVuY3Rpb24gKCkge1xyXG4gICAgaWYgKCQuZm4uZGF0ZXBpY2tlcikge1xyXG4gICAgICAgICQoXCIuZGF0ZXBpY2tlci1ibGFuay1kZWZhdWx0XCIpLmRhdGVwaWNrZXIoe1xyXG4gICAgICAgICAgICBvblNlbGVjdDogZnVuY3Rpb24gKG5ld1RleHQpIHtcclxuICAgICAgICAgICAgICAgIGlmICgkKHRoaXMpLmlzKFwiI3NlbGVjdGVkRGF0ZVwiKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICgkKHRoaXMpLmRhdGEoXCJwcmV2aW91c1wiKSAhPT0gbmV3VGV4dCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdGltZUJvb2tpbmcgPSBuZXcgVGltZUJvb2tpbmdQYWdlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpbWVCb29raW5nLnNlYXJjaEl0ZW1zKFwiXCIsICQoXCIjcmVzb3VyY2VEcnBcIikuYXR0cihcImRhdGEtdmFsdWVcIikpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aW1lQm9va2luZy5zZWFyY2hBdmFsaWJsZVNsb3RBY3Rpb24oKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdmFyIGVycm9yID0gJChcIiNlcnJvci1mcm9tRGF0ZVwiKTtcclxuICAgICAgICAgICAgICAgIGlmICgkKHRoaXMpLmlzKFwiI2Zyb21EYXRlVHh0XCIpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRvRGF0ZVZhbHVlID0gJChcIiN0b0RhdGVUeHRcIikudmFsKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHZhbGlkYXRlRGF0ZVZhbHVlKG5ld1RleHQsIHRvRGF0ZVZhbHVlKSA9PT0gMSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBlcnJvci5zaG93KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICh2YWxpZGF0ZURhdGVWYWx1ZShuZXdUZXh0LCB0b0RhdGVWYWx1ZSkgPT09IC0xKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoXCIjdG9EYXRlVHh0XCIpLnZhbChuZXdUZXh0KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3IuaGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yLmhpZGUoKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAoJCh0aGlzKS5pcyhcIiN0b0RhdGVUeHRcIikpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgZnJvbURhdGVWYWx1ZSA9ICQoXCIjZnJvbURhdGVUeHRcIikudmFsKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHZhbGlkYXRlRGF0ZVZhbHVlKGZyb21EYXRlVmFsdWUsIG5ld1RleHQpID09PSAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yLnNob3coKTtcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBlcnJvci5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBtb250aE5hbWVzU2hvcnQ6IFtcIkphblwiLCBcIkZlYlwiLCBcIk1hclwiLCBcIkFwclwiLCBcIk1halwiLCBcIkp1blwiLCBcIkp1bFwiLCBcIkF1Z1wiLCBcIlNlcFwiLCBcIk9rdFwiLCBcIk5vdlwiLCBcIkRlY1wiXSxcclxuICAgICAgICAgICAgZGF5TmFtZXNNaW46IFtcIlPDtlwiLCBcIk3DpVwiLCBcIlRpXCIsIFwiT25cIiwgXCJUb1wiLCBcIkZyXCIsIFwiTMO2XCJdLFxyXG4gICAgICAgICAgICBmaXJzdERheTogMSxcclxuICAgICAgICAgICAgZGF0ZUZvcm1hdDogXCJ5eS1tbS1kZFwiLFxyXG4gICAgICAgICAgICBiZWZvcmVTaG93OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAkKCcudWktZGF0ZXBpY2tlcicpLmNzcygnei1pbmRleCcsIDUpO1xyXG4gICAgICAgICAgICAgICAgfSwgMCk7XHJcbiAgICAgICAgICAgICAgICBpZiAoJCh0aGlzKS5pcyhcIiN0b0RhdGVUeHRcIikpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgZnJvbURhdGVWYWx1ZSA9ICQoXCIjZnJvbURhdGVUeHRcIikudmFsKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRvRGF0ZVZhbHVlID0gJChcIiN0b0RhdGVUeHRcIikudmFsKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5kYXRlcGlja2VyKCdvcHRpb24nLCAnbWluRGF0ZScsIG5ldyBEYXRlKGZyb21EYXRlVmFsdWUpKTtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiI3RvRGF0ZVR4dFwiKS52YWwodG9EYXRlVmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKCQodGhpcykuaXMoXCIjc2VsZWN0ZWREYXRlXCIpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5kYXRlcGlja2VyKCdvcHRpb24nLCAnbWluRGF0ZScsIG5ldyBEYXRlKCkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSkub24oXCJjaGFuZ2VcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgJHRoaXMgPSAkKHRoaXMpO1xyXG4gICAgICAgICAgICB2YXIgdmFsaWREYXRlID0gIS9JbnZhbGlkfE5hTi8udGVzdChuZXcgRGF0ZSgkdGhpcy52YWwoKSkudG9TdHJpbmcoKSk7XHJcbiAgICAgICAgICAgIHZhciB2YWxpZERhdGVSZWdleCA9IC9eXFxkXFxkXFxkXFxkLSgwP1sxLTldfDFbMC0yXSktKDA/WzEtOV18WzEyXVswLTldfDNbMDFdKSQvaWcudGVzdCgkdGhpcy52YWwoKSk7XHJcblxyXG4gICAgICAgICAgICBpZiAoIXZhbGlkRGF0ZVJlZ2V4IHx8ICF2YWxpZERhdGUpIHtcclxuICAgICAgICAgICAgICAgIC8vJHRoaXMuYWRkQ2xhc3MoXCJlcnJvclwiKS5uZXh0KCkuc2hvdygpO1xyXG4gICAgICAgICAgICAgICAgJHRoaXMubmV4dCgpLnNob3coKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIC8vJHRoaXMucmVtb3ZlQ2xhc3MoXCJlcnJvclwiKS5uZXh0KCkuaGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgJHRoaXMubmV4dCgpLmhpZGUoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkKFwiLmRhdGVwaWNrZXItYmxhbmstZGlhbG9nXCIpLmRhdGVwaWNrZXIoe1xyXG4gICAgICAgICAgICBvblNlbGVjdDogZnVuY3Rpb24gKG5ld1RleHQpIHtcclxuICAgICAgICAgICAgICAgIGlmICgkKHRoaXMpLmlzKFwiI3NlbGVjdGVkRGF0ZVwiKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICgkKHRoaXMpLmRhdGEoXCJwcmV2aW91c1wiKSAhPT0gbmV3VGV4dCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdGltZUJvb2tpbmcgPSBuZXcgVGltZUJvb2tpbmdQYWdlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpbWVCb29raW5nLnNlYXJjaEl0ZW1zKFwiXCIsICQoXCIjcmVzb3VyY2VEcnBcIikuYXR0cihcImRhdGEtdmFsdWVcIikpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aW1lQm9va2luZy5zZWFyY2hBdmFsaWJsZVNsb3RBY3Rpb24oKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdmFyIGVycm9yID0gJChcIiNlcnJvci1mcm9tRGF0ZVwiKTtcclxuICAgICAgICAgICAgICAgIGlmICgkKHRoaXMpLmlzKFwiI2Zyb21EYXRlVHh0XCIpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRvRGF0ZVZhbHVlID0gJChcIiN0b0RhdGVUeHRcIikudmFsKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHZhbGlkYXRlRGF0ZVZhbHVlKG5ld1RleHQsIHRvRGF0ZVZhbHVlKSA9PT0gMSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBlcnJvci5zaG93KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICh2YWxpZGF0ZURhdGVWYWx1ZShuZXdUZXh0LCB0b0RhdGVWYWx1ZSkgPT09IC0xKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoXCIjdG9EYXRlVHh0XCIpLnZhbChuZXdUZXh0KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3IuaGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yLmhpZGUoKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAoJCh0aGlzKS5pcyhcIiN0b0RhdGVUeHRcIikpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgZnJvbURhdGVWYWx1ZSA9ICQoXCIjZnJvbURhdGVUeHRcIikudmFsKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHZhbGlkYXRlRGF0ZVZhbHVlKGZyb21EYXRlVmFsdWUsIG5ld1RleHQpID09PSAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yLnNob3coKTtcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBlcnJvci5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBtb250aE5hbWVzU2hvcnQ6IFtcIkphblwiLCBcIkZlYlwiLCBcIk1hclwiLCBcIkFwclwiLCBcIk1halwiLCBcIkp1blwiLCBcIkp1bFwiLCBcIkF1Z1wiLCBcIlNlcFwiLCBcIk9rdFwiLCBcIk5vdlwiLCBcIkRlY1wiXSxcclxuICAgICAgICAgICAgZGF5TmFtZXNNaW46IFtcIlPDtlwiLCBcIk3DpVwiLCBcIlRpXCIsIFwiT25cIiwgXCJUb1wiLCBcIkZyXCIsIFwiTMO2XCJdLFxyXG4gICAgICAgICAgICBmaXJzdERheTogMSxcclxuICAgICAgICAgICAgZGF0ZUZvcm1hdDogXCJ5eS1tbS1kZFwiLFxyXG4gICAgICAgICAgICBiZWZvcmVTaG93OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAvLyQoJy51aS1kYXRlcGlja2VyJykuY3NzKCd6LWluZGV4JywgOSk7XHJcbiAgICAgICAgICAgICAgICB9LCAwKTtcclxuICAgICAgICAgICAgICAgIGlmICgkKHRoaXMpLmlzKFwiI3RvRGF0ZVR4dFwiKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBmcm9tRGF0ZVZhbHVlID0gJChcIiNmcm9tRGF0ZVR4dFwiKS52YWwoKTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgdG9EYXRlVmFsdWUgPSAkKFwiI3RvRGF0ZVR4dFwiKS52YWwoKTtcclxuICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmRhdGVwaWNrZXIoJ29wdGlvbicsICdtaW5EYXRlJywgbmV3IERhdGUoZnJvbURhdGVWYWx1ZSkpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIjdG9EYXRlVHh0XCIpLnZhbCh0b0RhdGVWYWx1ZSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAoJCh0aGlzKS5pcyhcIiNzZWxlY3RlZERhdGVcIikpIHtcclxuICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmRhdGVwaWNrZXIoJ29wdGlvbicsICdtaW5EYXRlJywgbmV3IERhdGUoKSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KS5vbihcImNoYW5nZVwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciAkdGhpcyA9ICQodGhpcyk7XHJcbiAgICAgICAgICAgIHZhciB2YWxpZERhdGUgPSAhL0ludmFsaWR8TmFOLy50ZXN0KG5ldyBEYXRlKCR0aGlzLnZhbCgpKS50b1N0cmluZygpKTtcclxuICAgICAgICAgICAgdmFyIHZhbGlkRGF0ZVJlZ2V4ID0gL15cXGRcXGRcXGRcXGQtKDA/WzEtOV18MVswLTJdKS0oMD9bMS05XXxbMTJdWzAtOV18M1swMV0pJC9pZy50ZXN0KCR0aGlzLnZhbCgpKTtcclxuXHJcbiAgICAgICAgICAgIGlmICghdmFsaWREYXRlUmVnZXggfHwgIXZhbGlkRGF0ZSkge1xyXG4gICAgICAgICAgICAgICAgLy8kdGhpcy5hZGRDbGFzcyhcImVycm9yXCIpLm5leHQoKS5zaG93KCk7XHJcbiAgICAgICAgICAgICAgICAkdGhpcy5uZXh0KCkuc2hvdygpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgLy8kdGhpcy5yZW1vdmVDbGFzcyhcImVycm9yXCIpLm5leHQoKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAkdGhpcy5uZXh0KCkuaGlkZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgJChcIi5leHBhbmQtaW5mb1wiKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIGN1cnJlbnRSb3cgPSAkKCQodGhpcykucGFyZW50KCkucGFyZW50KCkpO1xyXG4gICAgICAgIHZhciBoaWRkZW5Sb3cgPSBjdXJyZW50Um93Lm5leHQoKTtcclxuICAgICAgICBoaWRkZW5Sb3cuc2xpZGVUb2dnbGUoMTAwKTtcclxuICAgICAgICBpZiAoJCh0aGlzKS5oYXNDbGFzcyhcImV4cGFuZC1pY29uLXBsdXNcIikpIHtcclxuICAgICAgICAgICAgJCh0aGlzKS5yZW1vdmVDbGFzcyhcImV4cGFuZC1pY29uLXBsdXNcIik7XHJcbiAgICAgICAgICAgICQodGhpcykuYWRkQ2xhc3MoXCJleHBhbmQtaWNvbi1taW51c1wiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICQodGhpcykucmVtb3ZlQ2xhc3MoXCJleHBhbmQtaWNvbi1taW51c1wiKTtcclxuICAgICAgICAgICAgJCh0aGlzKS5hZGRDbGFzcyhcImV4cGFuZC1pY29uLXBsdXNcIik7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgVHJhbnNwb3J0VHlwZUNoYW5nZUV2ZW50KCk7XHJcblxyXG4gICAgJChcIi5zaG93RGlhbG9nXCIpLmNsaWNrKGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgZ2V0QW5ub25jZW1lbnRzKCQodGhpcykpO1xyXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgIH0pO1xyXG5cclxuICAgICQoXCIudGFibGUtdHJhbnNwb3J0ID4gdGJvZHkgPiB0ciA+IHRkID4gYVwiKS5jbGljayhmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgIHN1Ym1pdEZvcm0oJCh0aGlzKS5odG1sKCksICQodGhpcykuYXR0cignZGF0YS12YWx1ZScpKTtcclxuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAkKFwiLnNlYXJjaC1jdXN0b21lck5yXCIpLmNsaWNrKGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgc3VibWl0Rm9ybSgkKHRoaXMpLmF0dHIoJ2RhdGEtY3VzdG9tZXJOcicpLCAkKHRoaXMpLmF0dHIoJ2RhdGEtdmFsdWUnKSk7XHJcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgJChkb2N1bWVudCkub24oXCJjbGlja1wiLCBcIi5kYXRlcGlja2VyLWNvbnRhaW5lclwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgY29uc29sZS5kaXIoXCJwYXJlbnQgY2xpY2tlZFwiKTtcclxuICAgICAgICAkKHRoaXMpLmZpbmQoXCJpbnB1dFwiKS5mb2N1cygpO1xyXG4gICAgfSk7XHJcbn0pO1xyXG5cclxudmFyIHZhbGlkYXRlRGF0ZVZhbHVlID0gZnVuY3Rpb24gKGZyb21EYXRhLCB0b0RhdGUpIHtcclxuICAgIHZhciBteUZyb21EYXRlID0gbmV3IERhdGUoZnJvbURhdGEpO1xyXG4gICAgdmFyIG15VG9EYXRlID0gbmV3IERhdGUodG9EYXRlKTtcclxuICAgIHZhciB0aW1lT2ZTZXZlbkRheSA9ICgyNCAqIDYwICogNjAgKiAxMDAwKSAqIDc7XHJcbiAgICBpZiAobXlUb0RhdGUuZ2V0VGltZSgpIC0gbXlGcm9tRGF0ZS5nZXRUaW1lKCkgPiB0aW1lT2ZTZXZlbkRheSkge1xyXG4gICAgICAgIHJldHVybiAxO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAobXlUb0RhdGUuZ2V0VGltZSgpIC0gbXlGcm9tRGF0ZS5nZXRUaW1lKCkgPCAwKSB7XHJcbiAgICAgICAgcmV0dXJuIC0xO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIDA7XHJcbn07XHJcblxyXG52YXIgc2V0VG9EYXRlQnlGcm9tRGF0ZSA9IGZ1bmN0aW9uIChmcm9tRGF0ZVZhbHVlLCB0b0RhdGVWYWx1ZSkge1xyXG4gICAgdmFyIG15RnJvbURhdGUgPSBuZXcgRGF0ZShmcm9tRGF0ZVZhbHVlKTtcclxuICAgIHZhciBteVRvRGF0ZSA9IG5ldyBEYXRlKHRvRGF0ZVZhbHVlKTtcclxuICAgIGlmIChteUZyb21EYXRlLmdldFRpbWUoKSA+IG15VG9EYXRlLmdldFRpbWUoKSkge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxufTtcclxuZnVuY3Rpb24gc3VibWl0Rm9ybShzZWFyY2gsIGNhdGVnb3J5KSB7XHJcbiAgICB2YXIgc2VhcmNoVmFsID0gc2VhcmNoO1xyXG4gICAgdmFyIGNhdFZhbCA9IGNhdGVnb3J5O1xyXG4gICAgJChcImlucHV0W25hbWU9ICdTZWFyY2hUZXh0J11cIikudmFsKHNlYXJjaFZhbCk7XHJcbiAgICAkKFwiI3NlYXJjaC10cmFuc3BvcnQtdHlwZSA+IHVsID4gbGlcIikuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKCQodGhpcykuYXR0cihcImRhdGEtdmFsdWVcIikgPT09IGNhdFZhbCkge1xyXG4gICAgICAgICAgICAkKFwiaW5wdXRbbmFtZT0gJ0NhdGVnb3J5J11cIikudmFsKGNhdFZhbCk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICAkKFwiI2Zvcm0tc2VhcmNoLXRyYW5zcG9ydFwiKS5zdWJtaXQoKTtcclxufVxyXG5cclxuZnVuY3Rpb24gZ2V0QW5ub25jZW1lbnRzKHJvdykge1xyXG4gICAgdmFyIG9yZGVyUm93SWQgPSAkKHJvdykucGFyZW50cyhcIi5sbV9fY29sbGFwc2Utcm93XCIpLnByZXYoKS5maW5kKFwidGQgPiBhXCIpLmh0bWwoKTtcclxuICAgIHZhciBhbm5vbmNlbWVudFRhYmxlID0gJChcIi50YmxBbm5vbmNlbWVudHMgdGJvZHlcIik7XHJcbiAgICB2YXIgbW9kYWwgPSAkKFwiLmxtX19pbmZvcm1hdGlvbi1tb2RhbF9fd3JhcHBlclwiKTtcclxuXHJcbiAgICAkLmFqYXgoe1xyXG4gICAgICAgIHR5cGU6IFwiUE9TVFwiLFxyXG4gICAgICAgIHVybDogXCIvYXBpL3NlYXJjaC10cmFuc3BvcnQvZ2V0LWFubm9uY2VtZW50c1wiLFxyXG4gICAgICAgIGNvbnRlbnRUeXBlOiBcImFwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9dXRmLThcIixcclxuICAgICAgICBkYXRhOiBcInsnb3JkZXJSb3dJZCc6J1wiICsgb3JkZXJSb3dJZCArIFwiJ31cIixcclxuXHJcbiAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgYW5ub25jZW1lbnRUYWJsZS5odG1sKFwiXCIpO1xyXG4gICAgICAgICAgICBpZiAoZGF0YS50cmltKCkpIHtcclxuICAgICAgICAgICAgICAgIGFubm9uY2VtZW50VGFibGUuaHRtbChkYXRhKTtcclxuICAgICAgICAgICAgICAgICQoXCIudGJsQW5ub25jZW1lbnRzIHRoZWFkXCIpLnNob3coKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGFubm9uY2VtZW50VGFibGUuaHRtbChcIjxwPkF2aXNlcmluZ3NpbmZvcm1hdGlvbiBzYWtuYXM8L3A+XCIpO1xyXG4gICAgICAgICAgICAgICAgJChcIi50YmxBbm5vbmNlbWVudHMgdGhlYWRcIikuaGlkZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIG1vZGFsLnJlbW92ZUNsYXNzKFwiaGlkZGVuXCIpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZXJyb3I6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgYW5ub25jZW1lbnRUYWJsZS5odG1sKFwiXCIpO1xyXG4gICAgICAgICAgICBtb2RhbC5yZW1vdmVDbGFzcyhcImhpZGRlblwiKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxufVxyXG5cclxudmFyIFRyYW5zcG9ydFR5cGVDaGFuZ2VFdmVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICQoXCIjc2VhcmNoLXRyYW5zcG9ydC10eXBlID4gdWwgPiBsaSA+IGFcIikuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBkYXRhVmFsdWVUeXBlID0gJCh0aGlzKS5wYXJlbnQoKS5hdHRyKFwiZGF0YS12YWx1ZVwiKTtcclxuICAgICAgICB2YXIgcGxhY2Vob2xkZXJEYXRhID0gXCJBbmdlIFwiICsgZGF0YVZhbHVlVHlwZS50b0xvd2VyQ2FzZSgpO1xyXG4gICAgICAgICQoXCJpbnB1dFtuYW1lPSdDYXRlZ29yeSddXCIpLnZhbChkYXRhVmFsdWVUeXBlKTtcclxuICAgICAgICAkKFwiaW5wdXRbbmFtZT0gJ1NlYXJjaFRleHQnXVwiKS5hdHRyKCdwbGFjZWhvbGRlcicsIHBsYWNlaG9sZGVyRGF0YSk7XHJcbiAgICAgICAgdmFyIGlucHV0RnJvbURhdGUgPSAkKFwiaW5wdXRbbmFtZT0gJ0Zyb21EYXRlJ11cIik7XHJcbiAgICAgICAgdmFyIGlucHV0VG9EYXRlID0gJChcImlucHV0W25hbWU9ICdUb0RhdGUnXVwiKTtcclxuICAgICAgICBpZiAoZGF0YVZhbHVlVHlwZSA9PT0gXCJLdW5kbnVtbWVyXCIgfHwgZGF0YVZhbHVlVHlwZSA9PT0gXCJMYXN0YmlsXCIpIHtcclxuICAgICAgICAgICAgaW5wdXRGcm9tRGF0ZS5wcm9wKFwiZGlzYWJsZWRcIiwgZmFsc2UpO1xyXG4gICAgICAgICAgICBpbnB1dFRvRGF0ZS5wcm9wKFwiZGlzYWJsZWRcIiwgZmFsc2UpO1xyXG4gICAgICAgICAgICBpZiAoaW5wdXRGcm9tRGF0ZS5wYXJlbnQoKS5oYXNDbGFzcyhcImRpc2FibGVkXCIpKSB7XHJcbiAgICAgICAgICAgICAgICBpbnB1dEZyb21EYXRlLnBhcmVudCgpLnJlbW92ZUNsYXNzKFwiZGlzYWJsZWRcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKGlucHV0VG9EYXRlLnBhcmVudCgpLmhhc0NsYXNzKFwiZGlzYWJsZWRcIikpIHtcclxuICAgICAgICAgICAgICAgIGlucHV0VG9EYXRlLnBhcmVudCgpLnJlbW92ZUNsYXNzKFwiZGlzYWJsZWRcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBpbnB1dEZyb21EYXRlLnByb3AoXCJkaXNhYmxlZFwiLCB0cnVlKTtcclxuICAgICAgICAgICAgaW5wdXRUb0RhdGUucHJvcChcImRpc2FibGVkXCIsIHRydWUpO1xyXG4gICAgICAgICAgICBpbnB1dEZyb21EYXRlLnZhbChcIlwiKTtcclxuICAgICAgICAgICAgaW5wdXRUb0RhdGUudmFsKFwiXCIpO1xyXG4gICAgICAgICAgICBpbnB1dEZyb21EYXRlLnBhcmVudCgpLmFkZENsYXNzKFwiZGlzYWJsZWRcIik7XHJcbiAgICAgICAgICAgIGlucHV0VG9EYXRlLnBhcmVudCgpLmFkZENsYXNzKFwiZGlzYWJsZWRcIik7XHJcblxyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG59O1xyXG4iLCJ3aW5kb3cudmFsaWRhdGlvbiA9IHtcclxuICAgIHBob25lU0U6IGZ1bmN0aW9uIChwaG9uZU51bWJlcikge1xyXG4gICAgICAgIHBob25lTnVtYmVyID0gcGhvbmVOdW1iZXIucmVwbGFjZSgvXFxzKy9nLCBcIlwiKTtcclxuICAgICAgICByZXR1cm4gcGhvbmVOdW1iZXIubWF0Y2goL14oXFwrNDYpXFxkezYsfSQvKTtcclxuICAgIH0sXHJcblxyXG4gICAgbW9iaWxlU0U6IGZ1bmN0aW9uIChwaG9uZU51bWJlcikge1xyXG4gICAgICAgIHBob25lTnVtYmVyID0gcGhvbmVOdW1iZXIucmVwbGFjZSgvXFxzKy9nLCBcIlwiKTtcclxuICAgICAgICByZXR1cm4gcGhvbmVOdW1iZXIubWF0Y2goL14oXFwrNDYpXFxkezl9JC8pO1xyXG4gICAgfSxcclxuXHJcbiAgICB6aXBDb2RlOiBmdW5jdGlvbiAoemlwQ29kZSkge1xyXG4gICAgICAgIHppcENvZGUgPSB6aXBDb2RlLnJlcGxhY2UoL1xccysvZywgXCJcIik7XHJcbiAgICAgICAgcmV0dXJuIHppcENvZGUubWF0Y2goL14oXFxkezV9JCkvKTtcclxuICAgIH0sXHJcblxyXG4gICAgcGVyc29uTnVtYmVyOiBmdW5jdGlvbiAocGVyc29uTnVtYmVyKSB7XHJcbiAgICAgICAgcGVyc29uTnVtYmVyID0gcGVyc29uTnVtYmVyLnJlcGxhY2UoL1xccysvZywgXCJcIik7XHJcbiAgICAgICAgcmV0dXJuIHBlcnNvbk51bWJlci5tYXRjaCgvXlxcZHsxMn0kLyk7XHJcbiAgICB9LFxyXG4gICAgc3dlZGlzaERhdGU6IGZ1bmN0aW9uIChzd2VkaXNoRGF0ZSkge1xyXG4gICAgICAgIHZhciBzd2VkaXNoRGF0ZVJlZ2V4ID0gL14oXFxkezR9KShcXC98LSkoXFxkezEsMn0pKFxcL3wtKShcXGR7MSwyfSkkLztcclxuICAgICAgICByZXR1cm4gc3dlZGlzaERhdGUubWF0Y2goc3dlZGlzaERhdGVSZWdleCkgJiYgKChuZXcgRGF0ZShzd2VkaXNoRGF0ZSkpICE9IFwiSW52YWxpZCBEYXRlXCIpO1xyXG4gICAgfVxyXG59O1xyXG5cclxud2luZG93LnZhbGlkYXRpb25NZXNzYWdlID0ge1xyXG4gICAgZmlyc3ROYW1lOiB7XHJcbiAgICAgICAgcmVxdWlyZWQ6IFwiRHUgbcOlc3RlIGFuZ2UgRsO2cm5hbW5cIlxyXG4gICAgfSxcclxuICAgIGxhc3ROYW1lOiB7XHJcbiAgICAgICAgcmVxdWlyZWQ6IFwiRHUgbcOlc3RlIGFuZ2UgRWZ0ZXJuYW1uXCJcclxuICAgIH0sXHJcbiAgICBwaG9uZVNFOiB7XHJcbiAgICAgICAgdmFsaWQ6IFwiQW5nZSBUZWxlZm9ubnIgZW5saWd0IGZvcm1hdGV0ICs0NjgxMjM0NVwiXHJcbiAgICB9LFxyXG4gICAgbW9iaWxlU0U6IHtcclxuICAgICAgICByZXF1aXJlZDogXCJEdSBtw6VzdGUgYW5nZSBNb2JpbG5yXCIsXHJcbiAgICAgICAgdmFsaWQ6IFwiQW5nZSBNb2JpbG5yIGVubGlndCBmb3JtYXRldCArNDY3MDEyMzQ1NjdcIlxyXG4gICAgfSxcclxuICAgIHppcENvZGU6IHtcclxuICAgICAgICByZXF1aXJlZDogXCJQb3N0bnVtcmV0IHNrYSBiZXN0w6UgYXYgNSBzaWZmcm9yXCIsXHJcbiAgICAgICAgdmFsaWQ6IFwiUG9zdG51bXJldCBza2EgYmVzdMOlIGF2IDUgc2lmZnJvclwiXHJcbiAgICB9LFxyXG4gICAgZW1haWw6IHtcclxuICAgICAgICByZXF1aXJlZDogXCJEdSBtw6VzdGUgYW5nZSBFLXBvc3RcIixcclxuICAgICAgICB2YWxpZDogXCJBbmdlIGVuIGdpbHRpZyBlLXBvc3RhZHJlc3NcIlxyXG4gICAgfSxcclxuICAgIHBlcnNvbk51bWJlcjoge1xyXG4gICAgICAgIHZhbGlkOiBcIlBlcnNvbm51bXJldCBza2EgYmVzdMOlIGF2IDEyIHNpZmZyb3JcIlxyXG4gICAgfSxcclxuICAgIHN3ZWRpc2hEYXRlOiB7XHJcbiAgICAgICAgcmVxdWlyZWQ6IFwiRHUgbcOlc3RlIGFuZ2UgZXR0IGdpbHRpZ3QgZGF0dW1cIixcclxuICAgICAgICB2YWxpZDogXCJEdSBtw6VzdGUgYW5nZSBldHQgZ2lsdGlndCBkYXR1bVwiXHJcbiAgICB9XHJcbn07XHJcblxyXG4kKGZ1bmN0aW9uICgpIHtcclxuICAgIGlmICghalF1ZXJ5LnZhbGlkYXRvcikge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICAkLnZhbGlkYXRvci5hZGRNZXRob2QoXCJwaG9uZVNFXCIsXHJcbiAgICAgICAgZnVuY3Rpb24gKHBob25lTnVtYmVyLCBlbGVtZW50KSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLm9wdGlvbmFsKGVsZW1lbnQpIHx8IHdpbmRvdy52YWxpZGF0aW9uLnBob25lU0UocGhvbmVOdW1iZXIpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgd2luZG93LnZhbGlkYXRpb25NZXNzYWdlLnBob25lU0UudmFsaWQpO1xyXG5cclxuICAgICQudmFsaWRhdG9yLmFkZE1ldGhvZChcIm1vYmlsZVNFXCIsXHJcbiAgICAgICAgZnVuY3Rpb24gKHBob25lTnVtYmVyLCBlbGVtZW50KSB7XHJcbiAgICAgICAgICAgIHJldHVybiB3aW5kb3cudmFsaWRhdGlvbi5tb2JpbGVTRShwaG9uZU51bWJlcik7XHJcbiAgICAgICAgfSxcclxuICAgICAgICB3aW5kb3cudmFsaWRhdGlvbk1lc3NhZ2UubW9iaWxlU0UudmFsaWQpO1xyXG5cclxuICAgICQudmFsaWRhdG9yLmFkZE1ldGhvZChcInppcENvZGVcIixcclxuICAgICAgICBmdW5jdGlvbiAoemlwQ29kZSwgZWxlbWVudCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5vcHRpb25hbChlbGVtZW50KSB8fCB3aW5kb3cudmFsaWRhdGlvbi56aXBDb2RlKHppcENvZGUpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgd2luZG93LnZhbGlkYXRpb25NZXNzYWdlLnppcENvZGUudmFsaWQpO1xyXG5cclxuICAgICQudmFsaWRhdG9yLmFkZE1ldGhvZChcInBlcnNvbk51bWJlclwiLFxyXG4gICAgICAgIGZ1bmN0aW9uIChwbiwgZWxlbWVudCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5vcHRpb25hbChlbGVtZW50KSB8fCB3aW5kb3cudmFsaWRhdGlvbi5wZXJzb25OdW1iZXIocG4pO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgd2luZG93LnZhbGlkYXRpb25NZXNzYWdlLnBlcnNvbk51bWJlci52YWxpZCk7XHJcblxyXG4gICAgJC52YWxpZGF0b3IuYWRkTWV0aG9kKFwic3dlZGlzaERhdGVcIixcclxuICAgICAgIGZ1bmN0aW9uIChwbiwgZWxlbWVudCkge1xyXG4gICAgICAgICAgIHJldHVybiB3aW5kb3cudmFsaWRhdGlvbi5zd2VkaXNoRGF0ZShwbik7XHJcbiAgICAgICB9LFxyXG4gICAgICAgd2luZG93LnZhbGlkYXRpb25NZXNzYWdlLnN3ZWRpc2hEYXRlLnZhbGlkKTtcclxufSk7XHJcbiIsImpRdWVyeShmdW5jdGlvbiAoKSB7XHJcbiAgICBEZWxpdmVyeUFzc3VyYW5jZU1vZHVsZS5pbml0KCk7XHJcbn0pO1xyXG5cclxudmFyIERlbGl2ZXJ5QXNzdXJhbmNlTW9kdWxlID0gRGVsaXZlcnlBc3N1cmFuY2VNb2R1bGUgfHwgKGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciByZXFEYXRlLCBzdGFydERhdGUsIGVuZERhdGUsIGhhcnZlc3RQZXJpb2RTdGFydCwgaGFydmVzdFBlcmlvZEVuZCwgZXhpc3REZXBhQXZ0YWw7XHJcbiAgICB2YXIgYWdyZWVtZW50VHlwZUlzQ29uZmlybWVkID0gZmFsc2U7XHJcbiAgICB2YXIgaXNJbnRlcm5hbCA9IDA7XHJcbiAgICB2YXIgZW5hYmxlZFdhcmVob3VzZSA9IDA7XHJcbiAgICB2YXIgcG9wdXBUeXBlID0gR3JvQ29tbW9uLm1vZGFsSW5mb0NsYXNzO1xyXG4gICAgdmFyIGZpcnN0VGltZU9wZW4gPSB0cnVlO1xyXG5cclxuICAgIHZhciBnZXRDYWxjdWxhdGVPYmplY3QgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgc3VwcGxpZXI6ICQoJyNkaWFsb2dfQ3VzdG9tZXJOdW1iZXInKS52YWwoKSxcclxuICAgICAgICAgICAgbG9ycnlUeXBlOiAkKCcjZGlhbG9nX0xvcnJ5VHlwZScpLnZhbCgpLFxyXG4gICAgICAgICAgICBkZWxpdmVyeUFkZHJlc3NJZDogJCgnI2RpYWxvZ19EZWxpdmVyeUFkZHJlc3MnKS52YWwoKSxcclxuICAgICAgICAgICAgcXVhbnRpdHk6ICQoJyNkaWFsb2dfUXVhbnRpdHknKS52YWwoKSxcclxuICAgICAgICAgICAgZGVsaXZlcnlEYXRlOiAkKCcjZGlhbG9nX0RlbGl2ZXJ5RGF0ZScpLnZhbCgpLFxyXG4gICAgICAgICAgICBpdGVtSWQ6ICQoJyNkaWFsb2dfQXJ0aWNsZScpLnZhbCgpLFxyXG4gICAgICAgICAgICBpc0ludGVybmFsOiAkKCcjSXNJbnRlcm5hbCcpLnZhbCgpXHJcbiAgICAgICAgfTtcclxuICAgIH07XHJcblxyXG4gICAgdmFyIHNldFNlbGVjdGVkRm9yQ3VzdG9tU2VsZWN0Qm94ID0gZnVuY3Rpb24gKHRhcmdlU2VsZWN0b3IsIHNvdXJjZVNlbGVjdG9yKSB7XHJcbiAgICAgICAgdmFyIHNlbGVjdGVkVmFsdWUgPSAkKHNvdXJjZVNlbGVjdG9yKS52YWwoKTtcclxuICAgICAgICAkKHRhcmdlU2VsZWN0b3IpLnByZXYoKS5maW5kKCdsaScpLmVhY2goZnVuY3Rpb24gKGluZGV4LCBpdGVtKSB7XHJcbiAgICAgICAgICAgIHZhciBtYXRjaFZhbHVlID0gJChpdGVtKS5hdHRyKCdkYXRhLXZhbHVlJyk7XHJcbiAgICAgICAgICAgIGlmIChtYXRjaFZhbHVlID09PSBzZWxlY3RlZFZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICAkKGl0ZW0pLmZpbmQoJ2EnKS50cmlnZ2VyKCdjbGljaycpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBmaWxsQ2FsY3VsYXRlRm9ybSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKCcjZGlhbG9nX1F1YW50aXR5JykudmFsKCQoJyNRdWFudGl0eScpLnZhbCgpKTtcclxuICAgICAgICAkKCcjZGlhbG9nX0RlbGl2ZXJ5RGF0ZScpLnZhbCgkKCcjRGVsaXZlcnlEYXRlJykudmFsKCkpO1xyXG4gICAgICAgIHNldFNlbGVjdGVkRm9yQ3VzdG9tU2VsZWN0Qm94KCcjZGlhbG9nX0xvcnJ5VHlwZScsICcjTG9ycnlUeXBlJyk7XHJcbiAgICAgICAgc2V0U2VsZWN0ZWRGb3JDdXN0b21TZWxlY3RCb3goJyNkaWFsb2dfRGVsaXZlcnlBZGRyZXNzJywgJyNEZWxpdmVyeUFkZHJlc3MnKTtcclxuICAgICAgICBzZXRTZWxlY3RlZEZvckN1c3RvbVNlbGVjdEJveCgnI2RpYWxvZ19BcnRpY2xlJywgJyNBcnRpY2xlJyk7XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBjb25maXJtRGlhbG9nID0gZnVuY3Rpb24gKHllc0NhbGxiYWNrLCBub0NhbGxiYWNrKSB7XHJcbiAgICAgICAgJCgnI2NvbmZpcm1EZWxldGUnKS5yZW1vdmVDbGFzcygnaGlkZGVuJyk7XHJcbiAgICAgICAgJCgnI2J0blllcycpLnVuYmluZCgpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgJCgnI2NvbmZpcm1EZWxldGUnKS5hZGRDbGFzcygnaGlkZGVuJyk7XHJcbiAgICAgICAgICAgIHllc0NhbGxiYWNrKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgJCgnI2J0bk5vJykudW5iaW5kKCkuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAkKCcjY29uZmlybURlbGV0ZScpLmFkZENsYXNzKCdoaWRkZW4nKTtcclxuICAgICAgICAgICAgbm9DYWxsYmFjaygpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbiAgICB2YXIgc2hvd0luZm9ybWF0aW9uRGlhbG9nID0gZnVuY3Rpb24gKHRpdGxlLCBtZXNzYWdlLCBwb3B1cFR5cGUpIHtcclxuICAgICAgICB2YXIgJGRpYWxvZyA9ICQoXCIjaW5mb3JtYXRpb25EaWFsb2dcIik7XHJcbiAgICAgICAgaWYgKHBvcHVwVHlwZSkge1xyXG4gICAgICAgICAgICAkZGlhbG9nLmZpbmQoJ3NwYW4ucG9wdXAtdHlwZScpLmFkZENsYXNzKEdyb0NvbW1vbi5nZXRNb2RhbEljb25DbGFzcyhwb3B1cFR5cGUpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgJGRpYWxvZy5maW5kKCcjZGlhbG9nVGl0bGUnKS5odG1sKHRpdGxlKTtcclxuICAgICAgICAkZGlhbG9nLmZpbmQoJyNkaWFsb2dDb250ZW50JykuaHRtbChtZXNzYWdlKTtcclxuICAgICAgICAkZGlhbG9nLnJlbW92ZUNsYXNzKCdoaWRkZW4nKTtcclxuICAgIH07XHJcblxyXG4gICAgdmFyIHNob3dDaGFuZ2VOb3RBdmFpbGFibGVEaWdsb2cgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgJCgnI2NoYW5nZU5vdEF2YWlsYWJsZScpLnJlbW92ZUNsYXNzKCdoaWRkZW4nKTtcclxuICAgIH07XHJcblxyXG4gICAgdmFyIGRlbGV0ZURlbGl2ZXJ5QXNzdXJhbmNlID0gZnVuY3Rpb24gKHNlbGYsIHRvdGFsU2VsZWN0b3IsIGlvTnVtYmVyLCBsaW5lTnVtYmVyKSB7XHJcbiAgICAgICAgY29uZmlybURpYWxvZyhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciBsb2FkZXIgPSAkKHNlbGYpLnBhcmVudHMoJy5kZWxpdmVyeVRhYmxlQ29udGFpbmVyJykuYWRkQ2xhc3MoJ2Rpc2FibGVkJykuZmluZCgnLmxvYWRlci13cmFwcGVyJyk7XHJcbiAgICAgICAgICAgIGxvYWRlci5zaG93KCk7XHJcbiAgICAgICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgICAgICBkYXRhVHlwZTogXCJqc29uXCIsXHJcbiAgICAgICAgICAgICAgICB0eXBlOiAncG9zdCcsXHJcbiAgICAgICAgICAgICAgICB1cmw6ICcvYXBpL2RlbGl2ZXJ5LWFzc3VyYW5jZS9kZWxldGUnLFxyXG4gICAgICAgICAgICAgICAgZGF0YTogeyBpb051bWJlcjogaW9OdW1iZXIsIGxpbmVOdW1iZXI6IGxpbmVOdW1iZXIgfSxcclxuICAgICAgICAgICAgICAgIGNhY2hlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEuc3VjY2Vzcykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdG90YWwgPSBwYXJzZUludCgkKHRvdGFsU2VsZWN0b3IpLnZhbCgpKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFpc05hTih0b3RhbCkgJiYgdG90YWwgPj0gMSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG90YWwgPSB0b3RhbCAtIDE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKHRvdGFsU2VsZWN0b3IpLnZhbCh0b3RhbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgJChzZWxmKS5wYXJlbnRzKCd0cicpLnJlbW92ZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNob3dJbmZvcm1hdGlvbkRpYWxvZygnJywgZGF0YS5tZXNzYWdlLCBwb3B1cFR5cGUuZXJyb3IpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKGpxWEhSLCB0ZXh0U3RhdHVzLCBlcnJvclRocm93bikge1xyXG4gICAgICAgICAgICAgICAgICAgIHNob3dJbmZvcm1hdGlvbkRpYWxvZygnJywgZXJyb3JUaHJvd24udG9TdHJpbmcoKSwgcG9wdXBUeXBlLmVycm9yKTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBjb21wbGV0ZTogZnVuY3Rpb24gKGpxWEhSKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbG9hZGVyLmhpZGUoKS5wYXJlbnRzKCcuZGVsaXZlcnlUYWJsZUNvbnRhaW5lcicpLnJlbW92ZUNsYXNzKCdkaXNhYmxlZCcpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9LCBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbiAgICB2YXIgcHJpbnRNdWx0aUxpbmVzID0gZnVuY3Rpb24gKGNieENsYXNzTmFtZSkge1xyXG4gICAgICAgIHZhciBpb051bWJlcnMgPSBcIlwiO1xyXG4gICAgICAgIHZhciBsaW5lTnVtYmVycyA9IFwiXCI7XHJcbiAgICAgICAgdmFyIHJvd1NlbGVjdGVkID0gMDtcclxuXHJcbiAgICAgICAgJCgnLicgKyBjYnhDbGFzc05hbWUpLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAoJCh0aGlzKS5pcygnOmNoZWNrZWQnKSkge1xyXG4gICAgICAgICAgICAgICAgcm93U2VsZWN0ZWQrKztcclxuICAgICAgICAgICAgICAgIC8vIEdldCB0aGUgdmFsdWUuIFZhbHVlIGNvbnRhaW5zIG9mIHN0cmluZyB3aXRoIHRoaXMgZm9ybWF0IFwiSU9udW1iZXI7bGluZU51bWJlclwiLlxyXG4gICAgICAgICAgICAgICAgdmFyIGNieFZhbHVlID0gJCh0aGlzKS52YWwoKTtcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAoY2J4VmFsdWUpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgdmFsU3BsaXQgPSBjYnhWYWx1ZS5zcGxpdCgnOycpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh2YWxTcGxpdCAhPSBudWxsKSB7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpb051bWJlcnMgKz0gdmFsU3BsaXRbMF0gKyBcInxcIjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGluZU51bWJlcnMgKz0gdmFsU3BsaXRbMV0gKyBcInxcIjtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgaWYgKHJvd1NlbGVjdGVkID09PSAwKSB7XHJcbiAgICAgICAgICAgIGFsZXJ0KFwiRHUgbcOlc3RlIGbDtnJzdCB2w6RsamEgcmFkZXJcIik7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gUmVtb3ZlIHRoZSBsYXN0IHBpcGUgbGluZSB8XHJcbiAgICAgICAgaWYgKGlvTnVtYmVycyAhPT0gXCJcIilcclxuICAgICAgICAgICAgaW9OdW1iZXJzID0gaW9OdW1iZXJzLnNsaWNlKDAsIC0xKTtcclxuXHJcbiAgICAgICAgaWYgKGxpbmVOdW1iZXJzICE9PSBcIlwiKVxyXG4gICAgICAgICAgICBsaW5lTnVtYmVycyA9IGxpbmVOdW1iZXJzLnNsaWNlKDAsIC0xKTtcclxuXHJcbiAgICAgICAgLy8gQ3JlYXRlIGxpbmsgdG8gcGRmSGFuZGxlci5cclxuICAgICAgICB2YXIgaHJlZkxpbmsgPSBcIi9hcGkvcGRmaGFuZGxlci9nZW5lcmF0ZW11bHRpcGRmP2E9e2lvTnVtYmVyfSZsPXtsaW5lTnVtYmVyfSZyZXN5bmM9dHJ1ZVwiO1xyXG5cclxuICAgICAgICBocmVmTGluayA9IGhyZWZMaW5rLnJlcGxhY2UoXCJ7aW9OdW1iZXJ9XCIsIGlvTnVtYmVycyk7IC8vZXg6IGlvTnVtYmVycyA9IFwiNDAyMjMxNnw0MDIzNTEwXCJcclxuICAgICAgICBocmVmTGluayA9IGhyZWZMaW5rLnJlcGxhY2UoXCJ7bGluZU51bWJlcn1cIiwgbGluZU51bWJlcnMpOyAvLyBleDogbGluZU51bWJlciA9ICBcIjN8NVwiXHJcblxyXG4gICAgICAgIC8vIEludm9rZSBub3cgcGRmSGFuZGxlciB0byBjcmVhdGUgdGhlIHBkZiBmaWxlLlxyXG4gICAgICAgIHdpbmRvdy5vcGVuKGhyZWZMaW5rLCAnX2JsYW5rJyk7XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBnZXRXYXJlaG91c2VMaXN0ID0gZnVuY3Rpb24gKGRlbGl2ZXJ5RGF0ZVNlbGVjdG9yLCBhcnRpY2xlKSB7XHJcbiAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgZGF0YVR5cGU6IFwianNvblwiLFxyXG4gICAgICAgICAgICB0eXBlOiAncG9zdCcsXHJcbiAgICAgICAgICAgIHVybDogJy9hcGkvZGVsaXZlcnktYXNzdXJhbmNlL2dldC13YXJlaG91c2UnLFxyXG4gICAgICAgICAgICBkYXRhOiB7IGFjdGlvbjogJCgnI0FjdGlvbicpLnZhbCgpLCBjdXN0b21lck51bWJlcjogJCgnI2RpYWxvZ19DdXN0b21lck51bWJlcicpLnZhbCgpLCBpdGVtTmFtZTogYXJ0aWNsZSwgZGVsaXZlcnlEYXRlU3RyOiAkKGRlbGl2ZXJ5RGF0ZVNlbGVjdG9yKS52YWwoKSwgaXNJbnRlcm5hbDogaXNJbnRlcm5hbCB9LFxyXG4gICAgICAgICAgICBjYWNoZTogZmFsc2UsXHJcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICBhZ3JlZW1lbnRUeXBlSXNDb25maXJtZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIGlmIChkYXRhLndhcmVob3VzZXMpIHtcclxuICAgICAgICAgICAgICAgICAgICAkKCcud2FyZWhvdXNlRHJvcGRvd24nKS5odG1sKCcnKTtcclxuICAgICAgICAgICAgICAgICAgICAkLmVhY2goZGF0YS53YXJlaG91c2VzLCBmdW5jdGlvbiAoaW5kZXgsIGl0ZW0pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJCgnLndhcmVob3VzZURyb3Bkb3duJylcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5hcHBlbmQoJzxsaSBkYXRhLXZhbHVlPVwiJyArIGl0ZW0uS2V5ICsgJ1wiPjxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMClcIj4nICsgaXRlbS5WYWx1ZSArICc8L2E+PC9saT4nKTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgc2V0RHJvcGRvd24oJCgnLndhcmVob3VzZURyb3Bkb3duJykucGFyZW50cygndWwubG1fX2Zvcm0tZHJvcGRvd24nKSwgJ3R5cGUtMycpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAkKCcjd2FyZWhvdXNlTGlzdCcpLmZpbmQoXCIuc2hvd2Nhc2UgLmRyb3Bkb3duIGxpIGFcIikuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgaW5wdXRFbGVtZW50ID0gJCh0aGlzKS5wYXJlbnRzKFwiLnNob3djYXNlXCIpLmZpbmQoXCJpbnB1dC5mb3JtLWVsZW1lbnRcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBpbnB1dFNlbGVjdG9yID0gaW5wdXRFbGVtZW50LmF0dHIoJ2lkJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoXCIjZGVsaXZlcnlBc3N1cmFuY2VGb3JtXCIpLnZhbGlkYXRlKCkuZWxlbWVudCgnIycgKyBpbnB1dFNlbGVjdG9yKTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICQoJy5kZXBhQXZ0YWxzRHJvcERvd24nKS5odG1sKCcnKTtcclxuICAgICAgICAgICAgICAgIGlmIChkYXRhLmRlcGFBdnRhbHMgJiYgZGF0YS5kZXBhQXZ0YWxzLmxlbmd0aCA+IDEpIHtcclxuICAgICAgICAgICAgICAgICAgICAkKCdpbnB1dFtuYW1lPVwiRGVsaXZlcnlUeXBlXCJdOnJhZGlvJykuZWFjaChmdW5jdGlvbiAoaW5kZXgsIGl0ZW0pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHZhbHVlID0gJChpdGVtKS52YWwoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlID09PSBcIkRlcGFcIikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJChpdGVtKS5wcm9wKCdkaXNhYmxlZCcsIGZhbHNlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIGV4aXN0RGVwYUF2dGFsID0gMTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgJC5lYWNoKGRhdGEuZGVwYUF2dGFscywgZnVuY3Rpb24gKGluZGV4LCBpdGVtKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJy5kZXBhQXZ0YWxzRHJvcERvd24nKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLmFwcGVuZCgnPGxpIGRhdGEtdmFsdWU9XCInICsgaXRlbS5LZXkgKyAnXCI+PGEgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiPicgKyBpdGVtLlZhbHVlICsgJzwvYT48L2xpPicpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBzZXREcm9wZG93bigkKCcuZGVwYUF2dGFsc0Ryb3BEb3duJykucGFyZW50cygndWwubG1fX2Zvcm0tZHJvcGRvd24nKSwgJ3R5cGUtMycpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAkKCcjZGVwYUF2dGFsJykuZmluZChcIi5zaG93Y2FzZSAuZHJvcGRvd24gbGkgYVwiKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBpbnB1dEVsZW1lbnQgPSAkKHRoaXMpLnBhcmVudHMoXCIuc2hvd2Nhc2VcIikuZmluZChcImlucHV0LmZvcm0tZWxlbWVudFwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGlucHV0U2VsZWN0b3IgPSBpbnB1dEVsZW1lbnQuYXR0cignaWQnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJChcIiNkZWxpdmVyeUFzc3VyYW5jZUZvcm1cIikudmFsaWRhdGUoKS5lbGVtZW50KCcjJyArIGlucHV0U2VsZWN0b3IpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnaW5wdXRbbmFtZT1cIkRlbGl2ZXJ5VHlwZVwiXTpyYWRpbycpLmVhY2goZnVuY3Rpb24gKGluZGV4LCBpdGVtKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB2YWx1ZSA9ICQoaXRlbSkudmFsKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZSA9PT0gXCJEZXBhXCIgJiYgJChcIiNBcnRpY2xlXCIpLnZhbCgpICE9IFwiXCIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoaXRlbSkucHJvcCgnZGlzYWJsZWQnLCB0cnVlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJyNkZXBhQXZ0YWwnKS5hZGRDbGFzcygnaGlkZGVuJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICBleGlzdERlcGFBdnRhbCA9IDA7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiAoanFYSFIsIHRleHRTdGF0dXMsIGVycm9yVGhyb3duKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZXJyb3JUaHJvd24ubWVzc2FnZSAmJiBlcnJvclRocm93bi5tZXNzYWdlID09PSBcIlVuZXhwZWN0ZWQgdG9rZW4gPCBpbiBKU09OIGF0IHBvc2l0aW9uIDBcIikge1xyXG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gXCIvXCI7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBzaG93SW5mb3JtYXRpb25EaWFsb2coJycsIGVycm9yVGhyb3duLnRvU3RyaW5nKCksIHBvcHVwVHlwZS5lcnJvcik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGNvbXBsZXRlOiBmdW5jdGlvbiAoanFYSFIpIHtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbiAgICB2YXIgdmFsaWRhdGVEZWxpdmVyeUFzc3VyYW5jZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAoJCgpLnZhbGlkYXRlICYmICQoXCIjZGVsaXZlcnlBc3N1cmFuY2VGb3JtXCIpLmxlbmd0aCkge1xyXG4gICAgICAgICAgICAkKFwiI2RlbGl2ZXJ5QXNzdXJhbmNlRm9ybVwiKS52YWxpZGF0ZSh7XHJcbiAgICAgICAgICAgICAgICBpZ25vcmU6IFtdLFxyXG4gICAgICAgICAgICAgICAgZXJyb3JFbGVtZW50Q2xhc3M6ICdlcnJvcicsXHJcbiAgICAgICAgICAgICAgICBlcnJvckNsYXNzOiAnZXJyb3ItaXRlbScsXHJcbiAgICAgICAgICAgICAgICBlcnJvckVsZW1lbnQ6ICdzcGFuJyxcclxuICAgICAgICAgICAgICAgIHJ1bGVzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgUXVhbnRpdHk6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1heDogMzksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1pbjogMVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgVG9ya2F0OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBSZWQ6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIFN0cmFmb3Jrb3J0YXQ6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIEdseWZvc2F0OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBTbGFtOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBIYXJ2ZXN0WWVhcjoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgRGVsaXZlcnlUeXBlOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBEZWxpdmVyeUFkZHJlc3M6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIFRyYW5zcG9ydGF0aW9uOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBEZWxpdmVyeURhdGU6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGU6IHRydWVcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIERlcGFBdnRhbDoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogZnVuY3Rpb24gKGVsZW1lbnQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAkKCdpbnB1dFtuYW1lPVwiRGVsaXZlcnlUeXBlXCJdOmNoZWNrZWQnKS52YWwoKSA9PT0gXCJEZXBhXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIEFydGljbGU6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIFdhcmVob3VzZToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogZnVuY3Rpb24gKGVsZW1lbnQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBlbmFibGVkV2FyZWhvdXNlID09IFwiMVwiICYmICEkKCcjd2FyZWhvdXNlTGlzdCcpLmhhc0NsYXNzKCdoaWRkZW4nKSAmJiAhJCgnI1RyYW5zcG9ydGF0aW9uX0Zhcm0nKS5pcygnOmNoZWNrZWQnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgTG9ycnlUeXBlOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiBmdW5jdGlvbiAoZWxlbWVudCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICQoJyNUcmFuc3BvcnRhdGlvbl9GYXJtOmNoZWNrZWQnKS5sZW5ndGggPT09IDE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgbWVzc2FnZXM6IHtcclxuICAgICAgICAgICAgICAgICAgICBRdWFudGl0eToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogXCJEdSBtw6VzdGUgYW5nZSBLdmFudGl0ZXQgKHRvbilcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWF4OiBcIlbDpG5saWdlbiBhbmdlIGV0dCB2w6RyZGUgbWVsbGFuIDEgb2NoIDM5XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1pbjogXCJWw6RubGlnZW4gYW5nZSBldHQgdsOkcmRlIG1lbGxhbiAxIG9jaCAzOVwiXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBUb3JrYXQ6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IFwiRHUgbcOlc3RlIGFuZ2UgVmFybWx1ZnRzdG9ya2F0XCJcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIFJlZDoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogXCJEdSBtw6VzdGUgYW5nZSBSRURcIlxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgU3RyYWZvcmtvcnRhdDoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogXCJEdSBtw6VzdGUgYW5nZSBTdHLDpWbDtnJrb3J0bmluZ1wiXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBHbHlmb3NhdDoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogXCJEdSBtw6VzdGUgYW5nZSBHbHlmb3NhdFwiXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBTbGFtOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiBcIkR1IG3DpXN0ZSBhbmdlIFNsYW1tYXRcIlxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgSGFydmVzdFllYXI6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IFwiRHUgbcOlc3RlIGFuZ2UgU2vDtnJkZcOlclwiXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBEZWxpdmVyeVR5cGU6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IFwiRHUgbcOlc3RlIGFuZ2Ugw5Z2ZXJsZXZlcmFuc1wiXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBEZWxpdmVyeUFkZHJlc3M6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IFwiRHUgbcOlc3RlIGFuZ2UgTGV2ZXJhbnNhZHJlc3NcIlxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgRGVsaXZlcnlEYXRlOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiBcIkR1IG3DpXN0ZSBhbmdlIExldmVyYW5zZGF0dW1cIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZTogXCJWYXIgdsOkbmxpZyBhbmdlIGV0dCBnaWx0aWd0IGRhdHVtXCJcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIERlcGFBdnRhbDoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogXCJJbmdldCBkZXDDpWF2dGFsIHZhbHQuIE9tIHZhbGQgbGV2ZXJhbnN0eXAgw6RyIERlcMOlYXZ0YWwgYmVow7Z2ZXIgZXR0IGRlcMOlYXZ0YWwgb2Nrc8OlIHbDpGxqYXMgZnLDpW4gbGlzdGFuLlwiXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBBcnRpY2xlOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiBcIkR1IG3DpXN0ZSBhbmdlIEFydGlrZWxcIlxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgVHJhbnNwb3J0YXRpb246IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IFwiRHUgbcOlc3RlIGFuZ2UgVHJhbnNwb3J0c8OkdHRcIlxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgV2FyZWhvdXNlOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiBcIkR1IG3DpXN0ZSBhbmdlIE1vdHRhZ25pbmdzcGxhdHNcIlxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgTG9ycnlUeXBlOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiBcIkR1IG3DpXN0ZSBhbmdlIExldmVyYW5zc8OkdHRcIlxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBoaWdobGlnaHQ6IGZ1bmN0aW9uIChlbGVtZW50LCBlcnJvckNsYXNzLCB2YWxpZENsYXNzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnbGkjcF8nICsgJChlbGVtZW50KS5hdHRyKCduYW1lJykpLnNob3coKTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgZXJyb3JzID0gJCgndWwuZXJyb3JzLWxpc3QgbGknKS5maWx0ZXIoZnVuY3Rpb24gKCkgeyByZXR1cm4gJCh0aGlzKS5jc3MoJ2Rpc3BsYXknKSA9PT0gJ2xpc3QtaXRlbSc7IH0pLmxlbmd0aDtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZXJyb3JzID49IDMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJCgndWwuZXJyb3JzLWxpc3QnKS5zaG93KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICQoZWxlbWVudCkuYWRkQ2xhc3ModGhpcy5zZXR0aW5ncy5lcnJvckVsZW1lbnRDbGFzcykucmVtb3ZlQ2xhc3MoZXJyb3JDbGFzcyk7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgdW5oaWdobGlnaHQ6IGZ1bmN0aW9uIChlbGVtZW50LCBlcnJvckNsYXNzLCB2YWxpZENsYXNzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJChlbGVtZW50KS5yZW1vdmVDbGFzcyh0aGlzLnNldHRpbmdzLmVycm9yRWxlbWVudENsYXNzKS5yZW1vdmVDbGFzcyhlcnJvckNsYXNzKTtcclxuICAgICAgICAgICAgICAgICAgICAkKCdsaSNwXycgKyAkKGVsZW1lbnQpLmF0dHIoJ25hbWUnKSkuaGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBlcnJvcnMgPSAkKCd1bC5lcnJvcnMtbGlzdCBsaScpLmZpbHRlcihmdW5jdGlvbiAoKSB7IHJldHVybiAkKHRoaXMpLmNzcygnZGlzcGxheScpID09PSAnbGlzdC1pdGVtJzsgfSkubGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICgkKCd1bC5lcnJvcnMtbGlzdCcpLmZpbmQoJ2xpW2lkXj1cInBcIl0nKS5pcyhcIjp2aXNpYmxlXCIpID09PSBmYWxzZSB8fCBlcnJvcnMgPCAzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJ3VsLmVycm9ycy1saXN0JykuaGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBlcnJvclBsYWNlbWVudDogZnVuY3Rpb24gKGVycm9yLCBlbGVtZW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHR5cGVFbGVtZW50ID0gJChlbGVtZW50KS5hdHRyKCd0eXBlJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVFbGVtZW50ID09PSAncmFkaW8nKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQucGFyZW50KCdkaXYubG1fX3JhZGlvJykucGFyZW50KCkuYmVmb3JlKGVycm9yKTtcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50LmFmdGVyKGVycm9yKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgc3VibWl0SGFuZGxlcjogZnVuY3Rpb24gKGZvcm0pIHtcclxuICAgICAgICAgICAgICAgICAgICAkKCcjbG9hZGVyJykuc2hvdygpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoJyNsb2FkZXInKS5wYXJlbnQoKS5hZGRDbGFzcygnZGlzYWJsZWQnKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgc3BvbklzU2VsZWN0ZWQgPSAkKCdpbnB1dFtuYW1lPVwiRGVsaXZlcnlUeXBlXCJdW3ZhbHVlPVwiU3BvblwiXTpyYWRpbzpjaGVja2VkJykuc2l6ZSgpID09IDEgPyB0cnVlIDogZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGlnbm9yZURlcGFBdnRhbCA9IChleGlzdERlcGFBdnRhbCA9PT0gMSAgJiYgc3BvbklzU2VsZWN0ZWQpO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBjb25maXJtYXRpb25Jc1JlcXVpcmVkID0gKGlnbm9yZURlcGFBdnRhbCAmJiAhYWdyZWVtZW50VHlwZUlzQ29uZmlybWVkKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoY29uZmlybWF0aW9uSXNSZXF1aXJlZCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKFwiI2NvbmZpcm1EdXBsaWNhdGVBZ3JlZW1lbnRCdG5cIikub25lKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiI2NvbmZpcm1EdXBsaWNhdGlvbk1vZGFsXCIpLmFkZENsYXNzKFwiaGlkZGVuXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWdyZWVtZW50VHlwZUlzQ29uZmlybWVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoXCIjY29uZmlybUR1cGxpY2F0aW9uTW9kYWxcIikucmVtb3ZlQ2xhc3MoXCJoaWRkZW5cIik7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3JtLnN1Ym1pdCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoJCgpLnZhbGlkYXRlICYmICQoXCIjZGVsaXZlcnlBc3N1cmFuY2VGb3JtU3RlcDJcIikubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICQoXCIjZGVsaXZlcnlBc3N1cmFuY2VGb3JtU3RlcDJcIikudmFsaWRhdGUoe1xyXG4gICAgICAgICAgICAgICAgaWdub3JlOiBbXSxcclxuICAgICAgICAgICAgICAgIGVycm9yRWxlbWVudENsYXNzOiAnZXJyb3InLFxyXG4gICAgICAgICAgICAgICAgZXJyb3JDbGFzczogJ2Vycm9yLWl0ZW0nLFxyXG4gICAgICAgICAgICAgICAgZXJyb3JFbGVtZW50OiAnc3BhbicsXHJcbiAgICAgICAgICAgICAgICBydWxlczoge1xyXG4gICAgICAgICAgICAgICAgICAgIG5vT2ZOZXc6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IGZ1bmN0aW9uIChlbGVtZW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJCgnaW5wdXRbbmFtZT1cImNyZWF0ZU5ld1wiXTpjaGVja2VkJykudmFsKCkgPT09IFwiMVwiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBkaWdpdHM6IHRydWVcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgbWVzc2FnZXM6IHtcclxuICAgICAgICAgICAgICAgICAgICBub09mTmV3OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiBcIkR1IG3DpXN0ZSBhbmdlIGVuIHNpZmZyYVwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBkaWdpdHM6IFwiQW5nZSBlbmRhc3Qgc2lmZnJvclwiXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGhpZ2hsaWdodDogZnVuY3Rpb24gKGVsZW1lbnQsIGVycm9yQ2xhc3MsIHZhbGlkQ2xhc3MpIHtcclxuICAgICAgICAgICAgICAgICAgICAkKGVsZW1lbnQpLmFkZENsYXNzKHRoaXMuc2V0dGluZ3MuZXJyb3JFbGVtZW50Q2xhc3MpLnJlbW92ZUNsYXNzKGVycm9yQ2xhc3MpO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHVuaGlnaGxpZ2h0OiBmdW5jdGlvbiAoZWxlbWVudCwgZXJyb3JDbGFzcywgdmFsaWRDbGFzcykge1xyXG4gICAgICAgICAgICAgICAgICAgICQoZWxlbWVudCkucmVtb3ZlQ2xhc3ModGhpcy5zZXR0aW5ncy5lcnJvckVsZW1lbnRDbGFzcykucmVtb3ZlQ2xhc3MoZXJyb3JDbGFzcyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKCQoKS52YWxpZGF0ZSAmJiAkKFwiI2NhbGN1bGF0ZUZvcm1EaWFsb2dcIikubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICQoXCIjY2FsY3VsYXRlRm9ybURpYWxvZ1wiKS52YWxpZGF0ZSh7XHJcbiAgICAgICAgICAgICAgICBpZ25vcmU6IFtdLFxyXG4gICAgICAgICAgICAgICAgZXJyb3JFbGVtZW50Q2xhc3M6ICdlcnJvcicsXHJcbiAgICAgICAgICAgICAgICBlcnJvckNsYXNzOiAnZXJyb3ItaXRlbScsXHJcbiAgICAgICAgICAgICAgICBlcnJvckVsZW1lbnQ6ICdzcGFuJyxcclxuICAgICAgICAgICAgICAgIHJ1bGVzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlhbG9nX0xvcnJ5VHlwZTogXCJyZXF1aXJlZFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIGRpYWxvZ19EZWxpdmVyeUFkZHJlc3M6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIGRpYWxvZ19RdWFudGl0eToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgbnVtYmVyOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBtaW46IDFcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIGRpYWxvZ19EZWxpdmVyeURhdGU6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHN3ZWRpc2hEYXRlOiB0cnVlXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBkaWFsb2dfQXJ0aWNsZToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlczoge1xyXG4gICAgICAgICAgICAgICAgICAgIGRpYWxvZ19Mb3JyeVR5cGU6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IFwiRHUgbcOlc3RlIHbDpGxqYSBsZXZlcmFuc3PDpHR0XCJcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIGRpYWxvZ19EZWxpdmVyeUFkZHJlc3M6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IFwiRHUgbcOlc3RlIHbDpGxqYSBlbiBsZXZlcmFuc2FkcmVzc1wiXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBkaWFsb2dfUXVhbnRpdHk6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IFwiRHUgbcOlc3RlIGFuZ2UgZW4ga3ZhbnRpdGV0IHN0w7ZycmUgw6RuIDBcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgbnVtYmVyOiBcIkFuZ2UgZXR0IG51bWVyaXNrdCB2w6RyZGVcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWluOiBcIkR1IG3DpXN0ZSBhbmdlIGVuIGt2YW50aXRldCBzdMO2cnJlIMOkbiAxXCJcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIGRpYWxvZ19EZWxpdmVyeURhdGU6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IFwiRHUgbcOlc3RlIGFuZ2UgZXR0IGdpbHRpZ3QgZGF0dW1cIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3dlZGlzaERhdGU6IFwiRHUgbcOlc3RlIGFuZ2UgZXR0IGdpbHRpZ3QgZGF0dW1cIlxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgZGlhbG9nX0FydGljbGU6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IFwiRHUgbcOlc3RlIHbDpGxqYSBlbiBhcnRpa2VsXCJcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgaGlnaGxpZ2h0OiBmdW5jdGlvbiAoZWxlbWVudCwgZXJyb3JDbGFzcywgdmFsaWRDbGFzcykge1xyXG4gICAgICAgICAgICAgICAgICAgICQoZWxlbWVudCkuYWRkQ2xhc3ModGhpcy5zZXR0aW5ncy5lcnJvckVsZW1lbnRDbGFzcykucmVtb3ZlQ2xhc3MoZXJyb3JDbGFzcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCQoZWxlbWVudC5wcmV2aW91c0VsZW1lbnRTaWJsaW5nKS5oYXNDbGFzcyhcImRyb3Bkb3duXCIpICYmICFmaXJzdFRpbWVPcGVuKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoZWxlbWVudCkuc2libGluZ3MoXCJhXCIpLmFkZENsYXNzKFwiZXJyb3JcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGZpcnN0VGltZU9wZW4gPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB1bmhpZ2hsaWdodDogZnVuY3Rpb24gKGVsZW1lbnQsIGVycm9yQ2xhc3MsIHZhbGlkQ2xhc3MpIHtcclxuICAgICAgICAgICAgICAgICAgICAkKGVsZW1lbnQpLnJlbW92ZUNsYXNzKHRoaXMuc2V0dGluZ3MuZXJyb3JFbGVtZW50Q2xhc3MpLnJlbW92ZUNsYXNzKGVycm9yQ2xhc3MpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICgkKGVsZW1lbnQucHJldmlvdXNFbGVtZW50U2libGluZykuaGFzQ2xhc3MoXCJkcm9wZG93blwiKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKGVsZW1lbnQpLnNpYmxpbmdzKFwiYVwiKS5yZW1vdmVDbGFzcyhcImVycm9yXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICB2YXIgaW5pdEV2ZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQoJyNUcmFuc3BvcnRhdGlvbl9GYXJtJykuY2hhbmdlKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKCQodGhpcykuaXMoJzpjaGVja2VkJykpIHtcclxuICAgICAgICAgICAgICAgICQoJy5qcy10cmFuc3BvcnRhdGlvbi10ZXJtcy1hbmQtY29uZGl0aW9uczpyYWRpbycpLnByb3AoJ2NoZWNrZWQnLCBmYWxzZSk7XHJcbiAgICAgICAgICAgICAgICAkKCcjbG9ycnlUeXBlJykucmVtb3ZlQ2xhc3MoJ2hpZGRlbicpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGlzSW50ZXJuYWwgIT0gXCIxXCIpIHtcclxuICAgICAgICAgICAgICAgICAgICAkKCcjd2FyZWhvdXNlTGlzdCcpLmFkZENsYXNzKCdoaWRkZW4nKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICQoXCIjZGVsaXZlcnlBc3N1cmFuY2VGb3JtXCIpLnZhbGlkYXRlKCkuZWxlbWVudChcIiNXYXJlaG91c2VcIik7XHJcbiAgICAgICAgICAgICAgICAkKFwiI2RlbGl2ZXJ5QXNzdXJhbmNlRm9ybVwiKS52YWxpZGF0ZSgpLmVsZW1lbnQoXCIjRGVsaXZlcnlEYXRlXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoJy5qcy10cmFuc3BvcnRhdGlvbi10ZXJtcy1hbmQtY29uZGl0aW9uczpyYWRpbycpLmNoYW5nZShmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmICgkKHRoaXMpLmlzKCc6Y2hlY2tlZCcpKSB7XHJcbiAgICAgICAgICAgICAgICAkKCcjVHJhbnNwb3J0YXRpb25fRmFybScpLnByb3AoJ2NoZWNrZWQnLCBmYWxzZSk7XHJcbiAgICAgICAgICAgICAgICAkKCcjYV9Mb3JyeVR5cGUnKS5odG1sKCdWw6RsaiB0cmFuc3BvcnRzw6R0dCcpO1xyXG4gICAgICAgICAgICAgICAgJCgnI0xvcnJ5VHlwZScpLnZhbCgnJyk7XHJcbiAgICAgICAgICAgICAgICAkKCcjbG9ycnlUeXBlJykuYWRkQ2xhc3MoJ2hpZGRlbicpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGlzSW50ZXJuYWwgIT0gXCIxXCIpIHtcclxuICAgICAgICAgICAgICAgICAgICAkKCcjd2FyZWhvdXNlTGlzdCcpLnJlbW92ZUNsYXNzKCdoaWRkZW4nKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICQoXCIjZGVsaXZlcnlBc3N1cmFuY2VGb3JtXCIpLnZhbGlkYXRlKCkuZWxlbWVudCgnI1RyYW5zcG9ydGF0aW9uX0Zhcm0nKTtcclxuICAgICAgICAgICAgICAgICQoXCIjZGVsaXZlcnlBc3N1cmFuY2VGb3JtXCIpLnZhbGlkYXRlKCkuZWxlbWVudChcIiNEZWxpdmVyeURhdGVcIik7XHJcbiAgICAgICAgICAgICAgICAkKFwiI2RlbGl2ZXJ5QXNzdXJhbmNlRm9ybVwiKS52YWxpZGF0ZSgpLmVsZW1lbnQoXCIjV2FyZWhvdXNlXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoJ2lucHV0W25hbWU9XCJEZWxpdmVyeVR5cGVcIl06cmFkaW8nKS5jaGFuZ2UoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgdmFsdWUgPSAkKCdpbnB1dFtuYW1lPVwiRGVsaXZlcnlUeXBlXCJdOmNoZWNrZWQnKS52YWwoKTtcclxuICAgICAgICAgICAgaWYgKHZhbHVlID09PSBcIkRlcGFcIikge1xyXG4gICAgICAgICAgICAgICAgJCgnI2RlcGFBdnRhbCcpLnJlbW92ZUNsYXNzKCdoaWRkZW4nKTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmICh2YWx1ZSA9PT0gXCJTcG9uXCIpIHtcclxuICAgICAgICAgICAgICAgICQoJyNkZXBhQXZ0YWwnKS5hZGRDbGFzcygnaGlkZGVuJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJCgnaW5wdXRbbmFtZT1cImNyZWF0ZU5ld1wiXTpjaGVja2JveCcpLmNoYW5nZShmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICQoJyNub09mTmV3JykudmFsKCcnKTtcclxuICAgICAgICAgICAgaWYgKCQodGhpcykuaXMoJzpjaGVja2VkJykpIHtcclxuICAgICAgICAgICAgICAgICQoJyNub09mTmV3JykucGFyZW50KCkuc2hvdygpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgJCgnI25vT2ZOZXcnKS5wYXJlbnQoKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAkKCcjY3JlYXRlUGRmJykucHJvcCgnZGlzYWJsZWQnLCBmYWxzZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJCgnI2FwcHJvdmVUZXJtJykuY2hhbmdlKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKCQodGhpcykuaXMoJzpjaGVja2VkJykpIHtcclxuICAgICAgICAgICAgICAgICQoJyNidG5TdWJtaXREZWxpdmVyeScpLmFkZENsYXNzKCdyZXZlcnNlLXN0YXRlJykucmVtb3ZlQ2xhc3MoJ2Rpc2FibGVkJyk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAkKCcjYnRuU3VibWl0RGVsaXZlcnknKS5hZGRDbGFzcygnZGlzYWJsZWQnKS5yZW1vdmVDbGFzcygncmV2ZXJzZS1zdGF0ZScpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoJy5jYnhBcHByb3ZlRGVsQXNzJykuY2hhbmdlKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKCQoJy5jYnhBcHByb3ZlRGVsQXNzJykuaXMoJzpjaGVja2VkJykpIHtcclxuICAgICAgICAgICAgICAgICQoJyNidG5BcHByb3ZlJykuYWRkQ2xhc3MoJ3JldmVyc2Utc3RhdGUnKS5yZW1vdmVDbGFzcygnZGlzYWJsZWQnKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICQoJyNidG5BcHByb3ZlJykuYWRkQ2xhc3MoJ2Rpc2FibGVkJykucmVtb3ZlQ2xhc3MoJ3JldmVyc2Utc3RhdGUnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkKCcuY2J4VG9QcmludERlbGl2ZXJpZWQnKS5jaGFuZ2UoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAoJCgnLmNieFRvUHJpbnREZWxpdmVyaWVkJykuaXMoJzpjaGVja2VkJykpIHtcclxuICAgICAgICAgICAgICAgICQoJyNidG5Ub1ByaW50RGVsaXZlcmllZCcpLnJlbW92ZUNsYXNzKCdkaXNhYmxlZCcpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgJCgnI2J0blRvUHJpbnREZWxpdmVyaWVkJykuYWRkQ2xhc3MoJ2Rpc2FibGVkJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJCgnLmNieFRvUHJpbnRDb25maXJtZWQnKS5jaGFuZ2UoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAoJCgnLmNieFRvUHJpbnRDb25maXJtZWQnKS5pcygnOmNoZWNrZWQnKSkge1xyXG4gICAgICAgICAgICAgICAgJCgnI2J0blRvUHJpbnRDb25maXJtZWQnKS5yZW1vdmVDbGFzcygnZGlzYWJsZWQnKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICQoJyNidG5Ub1ByaW50Q29uZmlybWVkJykuYWRkQ2xhc3MoJ2Rpc2FibGVkJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJCgnI25vT2ZOZXcnKS5ibHVyKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIG5vT2ZOZXcgPSBwYXJzZUludCgkKHRoaXMpLnZhbCgpKTtcclxuICAgICAgICAgICAgaWYgKCFpc05hTihub09mTmV3KSAmJiBub09mTmV3ID4gMCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGNiID0gJCgnI2NyZWF0ZVBkZicpO1xyXG4gICAgICAgICAgICAgICAgY2IucHJvcCgnY2hlY2tlZCcsIGZhbHNlKTtcclxuICAgICAgICAgICAgICAgIGNiLnByb3AoJ2Rpc2FibGVkJywgdHJ1ZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJCgnI29wZW5DYWxjdWxhdGVGZWUnKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGZpbGxDYWxjdWxhdGVGb3JtKCk7XHJcbiAgICAgICAgICAgICQoXCIjY2FsY3VsYXRlRm9ybURpYWxvZ1wiKS52YWxpZGF0ZSgpLnJlc2V0Rm9ybSgpO1xyXG4gICAgICAgICAgICAkKCcjY2FsY3VsYXRlRmVlRGlhbG9nJykucmVtb3ZlQ2xhc3MoJ2hpZGRlbicpO1xyXG4gICAgICAgICAgICAkKCcjY2FsY3VsYXRlRmVlRGlhbG9nIGlucHV0I2RpYWxvZ19RdWFudGl0eScpLnJlbW92ZUNsYXNzKCdlcnJvcicpO1xyXG4gICAgICAgICAgICAkKCcjY2FsY3VsYXRlUmVzdWx0JykuaHRtbCgnJyk7XHJcbiAgICAgICAgICAgIC8vIGluY3JlYXNlIHotaW5kZXggZm9yIGRhdGV0aW1lLXBpY2tlclxyXG4gICAgICAgICAgICAkKFwiI3VpLWRhdGVwaWNrZXItZGl2XCIpLmNzcyh7IHpJbmRleDogOTk5OSB9KTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJCgnI2NhbGN1bGF0ZUZyZWUnKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmICghJChcIiNjYWxjdWxhdGVGb3JtRGlhbG9nXCIpLnZhbGlkKCkpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgY2FsY3VsYXRlT2JqZWN0ID0gZ2V0Q2FsY3VsYXRlT2JqZWN0KCk7XHJcbiAgICAgICAgICAgICQoJyNjYWxjdWxhdGVGZWVEaWFsb2cnKS5maW5kKCcubG9hZGVyLXdyYXBwZXInKS5zaG93KCk7XHJcbiAgICAgICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgICAgICB1cmw6ICcvYXBpL2RlbGl2ZXJ5ZmVlL2NhbHVjdWxhdGUnLFxyXG4gICAgICAgICAgICAgICAgdHlwZTogJ1BPU1QnLFxyXG4gICAgICAgICAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgICAgICAgICAgIHN1cHBsaWVyOiBjYWxjdWxhdGVPYmplY3Quc3VwcGxpZXIsXHJcbiAgICAgICAgICAgICAgICAgICAgbG9ycnlUeXBlOiBjYWxjdWxhdGVPYmplY3QubG9ycnlUeXBlLFxyXG4gICAgICAgICAgICAgICAgICAgIGRlbGl2ZXJ5QWRkcmVzc0lkOiBjYWxjdWxhdGVPYmplY3QuZGVsaXZlcnlBZGRyZXNzSWQsXHJcbiAgICAgICAgICAgICAgICAgICAgcXVhbnRpdHk6IGNhbGN1bGF0ZU9iamVjdC5xdWFudGl0eSxcclxuICAgICAgICAgICAgICAgICAgICBkZWxpdmVyeURhdGU6IGNhbGN1bGF0ZU9iamVjdC5kZWxpdmVyeURhdGUsXHJcbiAgICAgICAgICAgICAgICAgICAgaXRlbUlkOiBjYWxjdWxhdGVPYmplY3QuaXRlbUlkLFxyXG4gICAgICAgICAgICAgICAgICAgIGlzSW50ZXJuYWw6IChjYWxjdWxhdGVPYmplY3QuaXNJbnRlcm5hbCA9PSBcIjFcIiA/IFwidHJ1ZVwiIDogXCJmYWxzZVwiKVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnI2NhbGN1bGF0ZVJlc3VsdCcpLmh0bWwoZGF0YSk7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgY29tcGxldGU6IGZ1bmN0aW9uIChqcVhIUikge1xyXG4gICAgICAgICAgICAgICAgICAgICQoJyNjYWxjdWxhdGVGZWVEaWFsb2cnKS5maW5kKCcubG9hZGVyLXdyYXBwZXInKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkKCcjY2xlYXJCdG4nKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIC8vY2xlYXIgZGVsaXZlcnkgYWRkcmVzc1xyXG4gICAgICAgICAgICAkKCcjYV9kZWxpdmVyeUFkZHJlc3MnKS5odG1sKCdWw6RsaiBsZXZlcmFuc2FkcmVzcycpO1xyXG4gICAgICAgICAgICAkKCcjRGVsaXZlcnlBZGRyZXNzJykudmFsKCcnKTtcclxuICAgICAgICAgICAgLy9jbGVhciBkYXRlXHJcbiAgICAgICAgICAgICQoJyNEZWxpdmVyeURhdGUnKS52YWwoJycpO1xyXG4gICAgICAgICAgICAvL2NsZWFyIGFydGljbGVcclxuICAgICAgICAgICAgJCgnI2FfYXJ0aWNsZScpLmh0bWwoJ1bDpGxqIGFydGlrZWwnKTtcclxuICAgICAgICAgICAgJCgnI0FydGljbGUnKS52YWwoJycpO1xyXG4gICAgICAgICAgICAvL2NsZWFyIHF1YW50aXR5XHJcbiAgICAgICAgICAgICQoXCIjUXVhbnRpdHlcIikudmFsKCcnKTtcclxuICAgICAgICAgICAgLy9jbGVhciB5ZWFyXHJcbiAgICAgICAgICAgICQoJyNhX0hhcnZlc3RZZWFyJykuaHRtbCgnJyk7XHJcbiAgICAgICAgICAgICQoJyNIYXJ2ZXN0WWVhcicpLnZhbCgnJyk7XHJcbiAgICAgICAgICAgIC8vY2xlYXIgTW90dGFnbmluZ3NwbGF0c1xyXG4gICAgICAgICAgICAkKCcjYV9XYXJlaG91c2UnKS5odG1sKCdWw6RsaiBtb3R0YWduaW5nc3BsYXRzJyk7XHJcbiAgICAgICAgICAgICQoJyNXYXJlaG91c2UnKS52YWwoJycpO1xyXG4gICAgICAgICAgICAkKCcud2FyZWhvdXNlRHJvcGRvd24nKS5odG1sKCcnKTtcclxuICAgICAgICAgICAgLy9jbGVhciBMZXZlcmFuc3PDpHR0XHJcbiAgICAgICAgICAgICQoJyNhX0xvcnJ5VHlwZScpLmh0bWwoJ1bDpGxqIHRyYW5zcG9ydHPDpHR0Jyk7XHJcbiAgICAgICAgICAgICQoJyNMb3JyeVR5cGUnKS52YWwoJycpO1xyXG5cclxuICAgICAgICAgICAgLy9jbGVhciBkZWxpdmVyeSB0eXBlXHJcbiAgICAgICAgICAgICQoJ2lucHV0W25hbWU9XCJEZWxpdmVyeVR5cGVcIl0nKS5wcm9wKCdjaGVja2VkJywgZmFsc2UpO1xyXG4gICAgICAgICAgICAvL2NsZWFyIFZhcm1sdWZ0c3RvcmthdFxyXG4gICAgICAgICAgICAkKFwiaW5wdXRbbmFtZT0nVG9ya2F0J11cIikucHJvcCgnY2hlY2tlZCcsIGZhbHNlKTtcclxuICAgICAgICAgICAgLy9jbGVhciBSRURcclxuICAgICAgICAgICAgJChcImlucHV0W25hbWU9J1JlZCddXCIpLnByb3AoJ2NoZWNrZWQnLCBmYWxzZSk7XHJcbiAgICAgICAgICAgIC8vY2xlYXIgU3RyYWZvcmtvcnRhdFxyXG4gICAgICAgICAgICAkKFwiaW5wdXRbbmFtZT0nU3RyYWZvcmtvcnRhdCddXCIpLnByb3AoJ2NoZWNrZWQnLCBmYWxzZSk7XHJcbiAgICAgICAgICAgIC8vY2xlYXIgR2x5Zm9zYXRcclxuICAgICAgICAgICAgJChcImlucHV0W25hbWU9J0dseWZvc2F0J11cIikucHJvcCgnY2hlY2tlZCcsIGZhbHNlKTtcclxuICAgICAgICAgICAgLy9jbGVhciBTbGFtXHJcbiAgICAgICAgICAgICQoXCJpbnB1dFtuYW1lPSdTbGFtJ11cIikucHJvcCgnY2hlY2tlZCcsIGZhbHNlKTtcclxuXHJcbiAgICAgICAgICAgICQoXCIuanMtdHJhbnNwb3J0YXRpb24tdGVybXMtYW5kLWNvbmRpdGlvbnNcIikucHJvcCgnY2hlY2tlZCcsIGZhbHNlKTtcclxuICAgICAgICAgICAgJCgnI1RyYW5zcG9ydGF0aW9uX0Zhcm0nKS5wcm9wKCdjaGVja2VkJywgZmFsc2UpO1xyXG5cclxuICAgICAgICAgICAgJChcInRleHRhcmVhW25hbWU9J090aGVySW5mbyddXCIpLnZhbChcIlwiKTtcclxuXHJcbiAgICAgICAgICAgICQoXCIjZGVsaXZlcnlBc3N1cmFuY2VGb3JtXCIpLnZhbGlkYXRlKCkucmVzZXRGb3JtKCk7XHJcbiAgICAgICAgICAgIC8vJCgnI2J0blN1Ym1pdERlbGl2ZXJ5JykuYWRkQ2xhc3MoJ2Rpc2FibGVkJykucmVtb3ZlQ2xhc3MoJ3JldmVyc2Utc3RhdGUnKTtcclxuICAgICAgICAgICAgJCgnI2RlcGFBdnRhbCcpLmFkZENsYXNzKCdoaWRkZW4nKTtcclxuICAgICAgICAgICAgJCgnI2xvcnJ5VHlwZScpLmFkZENsYXNzKCdoaWRkZW4nKTtcclxuICAgICAgICAgICAgaWYgKGlzSW50ZXJuYWwgIT0gXCIxXCIpIHtcclxuICAgICAgICAgICAgICAgICQoJyN3YXJlaG91c2VMaXN0JykuYWRkQ2xhc3MoJ2hpZGRlbicpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoJyNkZWxpdmVyeUFzc3VyYW5jZUZvcm0nKS5maW5kKFwiLnNob3djYXNlIC5kcm9wZG93biBsaSBhXCIpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIGlucHV0RWxlbWVudCA9ICQodGhpcykucGFyZW50cyhcIi5zaG93Y2FzZVwiKS5maW5kKFwiaW5wdXQuZm9ybS1lbGVtZW50XCIpO1xyXG4gICAgICAgICAgICB2YXIgaW5wdXRTZWxlY3RvciA9IGlucHV0RWxlbWVudC5hdHRyKCdpZCcpO1xyXG4gICAgICAgICAgICAkKFwiI2RlbGl2ZXJ5QXNzdXJhbmNlRm9ybVwiKS52YWxpZGF0ZSgpLmVsZW1lbnQoJyMnICsgaW5wdXRTZWxlY3Rvcik7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoJyNjYWxjdWxhdGVGb3JtRGlhbG9nJykuZmluZChcIi5zaG93Y2FzZSAuZHJvcGRvd24gbGkgYVwiKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciBpbnB1dEVsZW1lbnQgPSAkKHRoaXMpLnBhcmVudHMoXCIuc2hvd2Nhc2VcIikuZmluZChcImlucHV0LmZvcm0tZWxlbWVudFwiKTtcclxuICAgICAgICAgICAgdmFyIGlucHV0U2VsZWN0b3IgPSBpbnB1dEVsZW1lbnQuYXR0cignaWQnKTtcclxuICAgICAgICAgICAgJChcIiNjYWxjdWxhdGVGb3JtRGlhbG9nXCIpLnZhbGlkYXRlKCkuZWxlbWVudCgnIycgKyBpbnB1dFNlbGVjdG9yKTtcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcblxyXG4gICAgdmFyIGluaXRWYXIgPSBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICAgIHZhciBwcmVEYXlzRGVsaXZlcnkgPSBwYXJzZUludCgkKCcjcHJlRGF5c0RlbGl2ZXJ5JykudmFsKCkpO1xyXG4gICAgICAgIHZhciBwb3N0RGF5c0RlbGl2ZXJ5ID0gcGFyc2VJbnQoJCgnI3Bvc3REYXlzRGVsaXZlcnknKS52YWwoKSk7XHJcbiAgICAgICAgaWYgKGlzTmFOKHByZURheXNEZWxpdmVyeSkgfHwgaXNOYU4ocG9zdERheXNEZWxpdmVyeSkpIHJldHVybjtcclxuXHJcbiAgICAgICAgcmVxRGF0ZSA9IEdyb0NvbW1vbi5kYXRlRnJvbUlTTygkKCcjcmVxRGF0ZScpLnZhbCgpKTtcclxuICAgICAgICBzdGFydERhdGUgPSBHcm9Db21tb24uZGF0ZUZyb21JU08oJCgnI3JlcURhdGUnKS52YWwoKSk7XHJcbiAgICAgICAgc3RhcnREYXRlLnNldEhvdXJzKDAsIDAsIDAsIDApO1xyXG4gICAgICAgIHN0YXJ0RGF0ZS5zZXREYXRlKHJlcURhdGUuZ2V0RGF0ZSgpICsgcHJlRGF5c0RlbGl2ZXJ5KTtcclxuXHJcbiAgICAgICAgZW5kRGF0ZSA9IEdyb0NvbW1vbi5kYXRlRnJvbUlTTygkKCcjcmVxRGF0ZScpLnZhbCgpKTtcclxuICAgICAgICBlbmREYXRlLnNldEhvdXJzKDIzLCA1OSwgNTksIDk5OSk7XHJcbiAgICAgICAgZW5kRGF0ZS5zZXREYXRlKHJlcURhdGUuZ2V0RGF0ZSgpICsgcG9zdERheXNEZWxpdmVyeSk7XHJcblxyXG4gICAgICAgIGhhcnZlc3RQZXJpb2RTdGFydCA9IEdyb0NvbW1vbi5kYXRlRnJvbUlTTygkKCcjaGFydmVzdFBlcmlvZFN0YXJ0JykudmFsKCkpO1xyXG4gICAgICAgIGhhcnZlc3RQZXJpb2RFbmQgPSBHcm9Db21tb24uZGF0ZUZyb21JU08oJCgnI2hhcnZlc3RQZXJpb2RFbmQnKS52YWwoKSk7XHJcblxyXG4gICAgICAgIGlzSW50ZXJuYWwgPSAkKCcjSXNJbnRlcm5hbCcpLnZhbCgpO1xyXG4gICAgICAgIGVuYWJsZWRXYXJlaG91c2UgPSAkKCcjRW5hYmxlZFdhcmVob3VzZScpLnZhbCgpO1xyXG5cclxuICAgICAgICB2YXIgbnVtYmVyT2ZEZXBhQXZ0YWwgPSBwYXJzZUludCgkKCcjbnVtYmVyT2ZEZXBhQXZ0YWwnKS52YWwoKSk7XHJcbiAgICAgICAgaWYgKCFpc05hTihwcmVEYXlzRGVsaXZlcnkpKSB7XHJcbiAgICAgICAgICAgIGlmIChudW1iZXJPZkRlcGFBdnRhbCA+IDEpIHtcclxuICAgICAgICAgICAgICAgIGV4aXN0RGVwYUF2dGFsID0gMTtcclxuICAgICAgICAgICAgICAgICQoJ2lucHV0W25hbWU9XCJEZWxpdmVyeVR5cGVcIl06cmFkaW8nKS5lYWNoKGZ1bmN0aW9uIChpbmRleCwgaXRlbSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciB2YWx1ZSA9ICQoaXRlbSkudmFsKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlID09PSBcIkRlcGFcIikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKCcjZGVwYUF2dGFsJykucmVtb3ZlQ2xhc3MoJ2hpZGRlbicpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgaWYgKCQoXCIjQXJ0aWNsZVwiKS5zaXplKCkgPT09IDEgJiYgJChcIiNBcnRpY2xlXCIpLnZhbCgpICE9IFwiXCIpIHtcclxuICAgICAgICAgICAgICAgICAgICBnZXRXYXJlaG91c2VMaXN0KFwiI0RlbGl2ZXJ5RGF0ZVwiLCAkKFwiI0FydGljbGVcIikudmFsKCkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZXhpc3REZXBhQXZ0YWwgPSAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAkKCcjZGVsaXZlcnlBc3N1cmFuY2VGb3JtIC5kcm9wZG93biBsaS5zZWxlY3RlZCwgI2NhbGN1bGF0ZUZlZURpYWxvZyAuZHJvcGRvd24gbGkuc2VsZWN0ZWQnKS5lYWNoKGZ1bmN0aW9uIChpbmRleCwgaXRlbSkge1xyXG4gICAgICAgICAgICB2YXIgZGVzY3JpcHRpb24gPSAkKGl0ZW0pLmZpbmQoJ2EnKS5odG1sKCk7XHJcbiAgICAgICAgICAgICQoaXRlbSkucGFyZW50KCd1bCcpLnByZXYoJ2EnKS5odG1sKGRlc2NyaXB0aW9uKTtcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcblxyXG4gICAgdmFyIGluaXREZWxpdmVyeURhdGUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKCQuZm4uZGF0ZXBpY2tlciAmJiAkKFwiLmRlbGl2ZXJ5LWRhdGVwaWNrZXJcIikubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICQoXCIuZGVsaXZlcnktZGF0ZXBpY2tlclwiKS5kYXRlcGlja2VyKHtcclxuICAgICAgICAgICAgICAgIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgpLFxyXG4gICAgICAgICAgICAgICAgZGF0ZUZvcm1hdDogXCJ5eS1tbS1kZFwiLFxyXG4gICAgICAgICAgICAgICAgb25TZWxlY3Q6IGZ1bmN0aW9uIChuZXdUZXh0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gY29tcGFyZSB0aGUgbmV3IHZhbHVlIHRvIHRoZSBwcmV2aW91cyBvbmVcclxuICAgICAgICAgICAgICAgICAgICBpZiAoJCh0aGlzKS5kYXRhKCdwcmV2aW91cycpICE9PSBuZXdUZXh0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkKFwiI2RlbGl2ZXJ5QXNzdXJhbmNlRm9ybVwiKS52YWxpZGF0ZSgpLmVsZW1lbnQoXCIjRGVsaXZlcnlEYXRlXCIpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXRXYXJlaG91c2VMaXN0KHRoaXMsICQoXCIjQXJ0aWNsZVwiKS52YWwoKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgbW9udGhOYW1lczogW1wiSmFudWFyaVwiLCBcIkZlYnJ1YXJpXCIsIFwiTWFyc1wiLCBcIkFwcmlsXCIsIFwiTWFqXCIsIFwiSnVuaVwiLCBcIkp1bGlcIiwgXCJBdWd1c3RpXCIsIFwiU2VwdGVtYmVyXCIsIFwiT2t0b2JlclwiLCBcIk5vdmVtYmVyXCIsIFwiRGVjZW1iZXJcIl0sXHJcbiAgICAgICAgICAgICAgICBkYXlOYW1lc01pbjogW1wiU8O2XCIsIFwiTcOlXCIsIFwiVGlcIiwgXCJPblwiLCBcIlRvXCIsIFwiRnJcIiwgXCJMw7ZcIl0sXHJcbiAgICAgICAgICAgICAgICBmaXJzdERheTogMSxcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLm9uKCdjaGFuZ2UnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgJHRoaXMgPSAkKHRoaXMpO1xyXG4gICAgICAgICAgICAgICAgdmFyIHZhbGlkRGF0ZSA9ICEvSW52YWxpZHxOYU4vLnRlc3QobmV3IERhdGUoJHRoaXMudmFsKCkpLnRvU3RyaW5nKCkpO1xyXG4gICAgICAgICAgICAgICAgdmFyIHZhbGlkRGF0ZVJlZ2V4ID0gL15cXGRcXGRcXGRcXGQtKDA/WzEtOV18MVswLTJdKS0oMD9bMS05XXxbMTJdWzAtOV18M1swMV0pJC9pZy50ZXN0KCR0aGlzLnZhbCgpKTtcclxuXHJcbiAgICAgICAgICAgICAgICAkKFwiI2RlbGl2ZXJ5QXNzdXJhbmNlRm9ybVwiKS52YWxpZGF0ZSgpLmVsZW1lbnQoXCIjRGVsaXZlcnlEYXRlXCIpO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmICghdmFsaWREYXRlUmVnZXggfHwgIXZhbGlkRGF0ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vJHRoaXMuYWRkQ2xhc3MoXCJlcnJvclwiKS5uZXh0KCkuc2hvdygpO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vJHRoaXMubmV4dCgpLnNob3coKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8kdGhpcy5yZW1vdmVDbGFzcyhcImVycm9yXCIpLm5leHQoKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8kdGhpcy5uZXh0KCkuaGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGdldFdhcmVob3VzZUxpc3QodGhpcywgJChcIiNBcnRpY2xlXCIpLnZhbCgpKTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgdmFyIGFkZFZhbGlkYXRpb24gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKGpRdWVyeS52YWxpZGF0b3IpIHtcclxuICAgICAgICAgICAgalF1ZXJ5LnZhbGlkYXRvci5hZGRNZXRob2QoXCJkYXRlSGlnaGVyVGhhblRvZGF5XCIsIGZ1bmN0aW9uICh2YWx1ZSwgZWxlbWVudCkge1xyXG4gICAgICAgICAgICAgICAgLy9JZiBmYWxzZSwgdGhlIHZhbGlkYXRpb24gZmFpbHMgYW5kIHRoZSBtZXNzYWdlIGJlbG93IGlzIGRpc3BsYXllZFxyXG4gICAgICAgICAgICAgICAgdmFyIGN1cnJlbnREYXRlID0gbmV3IERhdGUoKTtcclxuXHJcbiAgICAgICAgICAgICAgICB2YXIgdmFsR2FyZHNoYW10bmluZyA9ICQoJyNUcmFuc3BvcnRhdGlvbl9GYXJtOmNoZWNrZWQnKS52YWwoKTtcclxuICAgICAgICAgICAgICAgIGlmICh2YWxHYXJkc2hhbXRuaW5nID09PSAnMScpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoIWVsZW1lbnQpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNlbGVjdGVkRGF0ZSA9IEdyb0NvbW1vbi5kYXRlRnJvbUlTTyhlbGVtZW50LnZhbHVlKTsgIC8vIG5ldyBEYXRlKGVsZW1lbnQudmFsdWUpOyBmdW5rYXIgYmFyYSBtZWQgSUU5K1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZERhdGUuc2V0SG91cnMoMCwgMCwgMCwgMCk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHZhciBjdXJyZW50SG91cnMgPSBjdXJyZW50RGF0ZS5nZXRIb3VycygpO1xyXG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnREYXRlLnNldEhvdXJzKDAsIDAsIDAsIDApO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBpZiAoc2VsZWN0ZWREYXRlIDwgY3VycmVudERhdGUpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKChzZWxlY3RlZERhdGUuZ2V0RnVsbFllYXIoKSA9PT0gY3VycmVudERhdGUuZ2V0RnVsbFllYXIoKSkgJiZcclxuICAgICAgICAgICAgICAgICAgICAgICAgKHNlbGVjdGVkRGF0ZS5nZXRNb250aCgpID09PSBjdXJyZW50RGF0ZS5nZXRNb250aCgpKSAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAoc2VsZWN0ZWREYXRlLmdldERhdGUoKSA9PT0gY3VycmVudERhdGUuZ2V0RGF0ZSgpKSAmJiAoY3VycmVudEhvdXJzID4gOSkpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgfSwgXCJMZXZlcmFuc2RhdHVtIGthbiBpbnRlIHZhcmEgZGFnZW5zIGRhdHVtIGVsbGVyIHRpZGlnYXJlLlwiKTtcclxuXHJcbiAgICAgICAgICAgIGlmIChzdGFydERhdGUgJiYgcmVxRGF0ZSkge1xyXG4gICAgICAgICAgICAgICAgalF1ZXJ5LnZhbGlkYXRvci5hZGRNZXRob2QoJ2RhdGVIYXJ2ZXN0MjA2JywgZnVuY3Rpb24gKHZhbHVlLCBlbGVtZW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9uYWwoZWxlbWVudCkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHZhciBlbnRlcmVkRGF0ZSA9IEdyb0NvbW1vbi5kYXRlRnJvbUlTTyhlbGVtZW50LnZhbHVlKTsgLy9uZXcgRGF0ZShlbGVtZW50LnZhbHVlKTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgdG9tb3Jyb3cgPSBuZXcgRGF0ZSgpLnNldERhdGUobmV3IERhdGUoKS5nZXREYXRlKCkgKyAxKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICgodG9tb3Jyb3cgPD0gZW50ZXJlZERhdGUpICYmIChlbnRlcmVkRGF0ZSA8PSByZXFEYXRlKSk7XHJcblxyXG4gICAgICAgICAgICAgICAgfSwgJC52YWxpZGF0b3IuZm9ybWF0KFwiVsOkbmxpZ2VuIGFuZ2UgZXR0IGRhdHVtIG1lbGxhbiB7MH0gb2NoIHsxfS5cIiwgc3RhcnREYXRlID8gc3RhcnREYXRlLnRvU2hvcnREYXRlU3RyaW5nKCkgOiBcIlwiLCByZXFEYXRlID8gcmVxRGF0ZS50b1Nob3J0RGF0ZVN0cmluZygpIDogXCJcIikpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAoaGFydmVzdFBlcmlvZFN0YXJ0ICYmIGhhcnZlc3RQZXJpb2RFbmQpIHtcclxuICAgICAgICAgICAgICAgIGpRdWVyeS52YWxpZGF0b3IuYWRkTWV0aG9kKCdkYXRlSGFydmVzdFJhbmdlJywgZnVuY3Rpb24gKHZhbHVlLCBlbGVtZW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9uYWwoZWxlbWVudCkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICB2YXIgZW50ZXJlZERhdGUgPSBHcm9Db21tb24uZGF0ZUZyb21JU08oZWxlbWVudC52YWx1ZSk7IC8vbmV3IERhdGUoZWxlbWVudC52YWx1ZSk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAoKGVudGVyZWREYXRlID49IGhhcnZlc3RQZXJpb2RTdGFydCkgJiYgKGVudGVyZWREYXRlIDw9IGhhcnZlc3RQZXJpb2RFbmQpKTtcclxuXHJcbiAgICAgICAgICAgICAgICB9LCAkLnZhbGlkYXRvci5mb3JtYXQoXCJWw6RubGlnZW4gYW5nZSBldHQgZGF0dW0gaW5vbSBza8O2cmRlcGVyaW9kZW4sIGR2cyB7MH0vezF9IC0gezJ9L3szfS5cIiwgaGFydmVzdFBlcmlvZFN0YXJ0LmdldERhdGUoKS50b1N0cmluZygpLCAoaGFydmVzdFBlcmlvZFN0YXJ0LmdldE1vbnRoKCkgKyAxKS50b1N0cmluZygpLCBoYXJ2ZXN0UGVyaW9kRW5kLmdldERhdGUoKS50b1N0cmluZygpLCAoaGFydmVzdFBlcmlvZEVuZC5nZXRNb250aCgpICsgMSkudG9TdHJpbmcoKSkpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAoc3RhcnREYXRlICYmIGVuZERhdGUpIHtcclxuICAgICAgICAgICAgICAgIGpRdWVyeS52YWxpZGF0b3IuYWRkTWV0aG9kKCdkYXRlcmFuZ2UnLCBmdW5jdGlvbiAodmFsdWUsIGVsZW1lbnQpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5vcHRpb25hbChlbGVtZW50KSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGVudGVyZWREYXRlID0gR3JvQ29tbW9uLmRhdGVGcm9tSVNPKGVsZW1lbnQudmFsdWUpOyAvL25ldyBEYXRlKGVsZW1lbnQudmFsdWUpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gKChzdGFydERhdGUgPD0gZW50ZXJlZERhdGUpICYmIChlbnRlcmVkRGF0ZSA8PSBlbmREYXRlKSk7XHJcblxyXG4gICAgICAgICAgICAgICAgfSwgJC52YWxpZGF0b3IuZm9ybWF0KFwiVsOkbmxpZ2VuIGFuZ2UgZXR0IGRhdHVtIG1lbGxhbiB7MH0gb2NoIHsxfS5cIiwgc3RhcnREYXRlID8gc3RhcnREYXRlLnRvU2hvcnREYXRlU3RyaW5nKCkgOiAnJywgZW5kRGF0ZSA/IGVuZERhdGUudG9TaG9ydERhdGVTdHJpbmcoKSA6ICcnKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBpbml0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGluaXREZWxpdmVyeURhdGUoKTtcclxuICAgICAgICBpbml0VmFyKCk7XHJcbiAgICAgICAgaW5pdEV2ZW50KCk7XHJcbiAgICAgICAgYWRkVmFsaWRhdGlvbigpO1xyXG4gICAgICAgIHZhbGlkYXRlRGVsaXZlcnlBc3N1cmFuY2UoKTtcclxuICAgIH07XHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBpbml0OiBpbml0LFxyXG4gICAgICAgIGRlbGV0ZURlbGl2ZXJ5QXNzdXJhbmNlOiBkZWxldGVEZWxpdmVyeUFzc3VyYW5jZSxcclxuICAgICAgICBzaG93Q2hhbmdlTm90QXZhaWxhYmxlRGlnbG9nOiBzaG93Q2hhbmdlTm90QXZhaWxhYmxlRGlnbG9nLFxyXG4gICAgICAgIHByaW50TXVsdGlMaW5lczogcHJpbnRNdWx0aUxpbmVzLFxyXG4gICAgICAgIGdldFdhcmVob3VzZUxpc3Q6IGdldFdhcmVob3VzZUxpc3QsXHJcbiAgICAgICAgY29uZmlybURpYWxvZzogY29uZmlybURpYWxvZ1xyXG4gICAgfTtcclxufSkoKTsiLCJ2YXIgVmVydGljYWxUYWJsZSA9IFZlcnRpY2FsVGFibGUgfHwgZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIGksIGVsZW1lbnQ7XHJcbiAgICAvL2NyZWF0ZSBoZWFkZXJzIGZvciB0aGUgbW9iaWxlIHZpZXdcclxuICAgIGZ1bmN0aW9uIGNyZWF0ZUhlYWRlcih0YWJsZSkge1xyXG4gICAgICAgIHZhciBoZWFkZXJzID0gdGFibGUucXVlcnlTZWxlY3RvckFsbChcIi5yZXNwb25zaXZlLXRhYmxlIHRoXCIpLFxyXG4gICAgICAgIGluZGV4ID0gMSxcclxuICAgICAgICBjb2x1bW5zID0gdGFibGUucXVlcnlTZWxlY3RvckFsbChcIi5yZXNwb25zaXZlLXRhYmxlIHRkXCIpLFxyXG4gICAgICAgIGhlYWRlckNlbGwsXHJcbiAgICAgICAgaGVhZGVyTmFtZSxcclxuICAgICAgICBoZWFkZXJDbGFzcyxcclxuICAgICAgICByZXNwb25zaXZlSGVhZGVyO1xyXG5cclxuICAgICAgICBpZiAoY29sdW1ucy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBjb2x1bW5zLmxlbmd0aDsgaSArPSAxKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoaW5kZXggPiBoZWFkZXJzLmxlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGluZGV4ID0gMTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAvL21vYmlsZSBoZWFkZXJzIGFyZSBhY3R1YWxseSB0ZFxyXG4gICAgICAgICAgICAgICAgZWxlbWVudCA9IGNvbHVtbnNbaV07XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKGluZGV4ID09PSAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGJ1dHRvbkRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgYnV0dG9uRGl2LmNsYXNzTmFtZSA9IFwidGFibGUtZXhwYW5kLWluZm8gZXhwYW5kLWljb24tcGx1cyByZXNwb25zaXZlLWhlYWRlclwiO1xyXG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYnV0dG9uRGl2LCBlbGVtZW50KTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBoZWFkZXJDZWxsID0gdGFibGUucXVlcnlTZWxlY3RvcignLnJlc3BvbnNpdmUtdGFibGUgdGg6bnRoLW9mLXR5cGUoJyArIGluZGV4ICsgJyknKTtcclxuICAgICAgICAgICAgICAgIGhlYWRlckNsYXNzID0gaGVhZGVyQ2VsbC5jbGFzc05hbWU7XHJcbiAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKGhlYWRlckNsYXNzKTtcclxuICAgICAgICAgICAgICAgIGhlYWRlck5hbWUgPSBoZWFkZXJDZWxsLnRleHRDb250ZW50O1xyXG4gICAgICAgICAgICAgICAgaWYgKGhlYWRlckNsYXNzLmluZGV4T2YoJ2FjdGlvbi1jb250cm9sJykgPj0gMCB8fCBoZWFkZXJDbGFzcy5pbmRleE9mKCdoZWFkZXItZGVza3RvcC1vbmx5JykgPj0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coaGVhZGVyQ2VsbC50ZXh0Q29udGVudCk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHJlc3BvbnNpdmVIZWFkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidGRcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2l2ZUhlYWRlci5jbGFzc05hbWUgPSBcInJlc3BvbnNpdmUtaGVhZGVyIFwiICsgaGVhZGVyQ2xhc3M7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2l2ZUhlYWRlci5pbm5lckhUTUwgPSBoZWFkZXJOYW1lO1xyXG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUocmVzcG9uc2l2ZUhlYWRlciwgZWxlbWVudCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgaW5kZXggKz0gMTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdmFyIGNvbGxhcHNlUm93ID0gJCgnLnJlc3BvbnNpdmUtdGFibGUgLmNvbGxhcHNlZC1yb3cnKTtcclxuICAgICAgICBjb2xsYXBzZVJvdy5hZGRDbGFzcygnaGlkZGVuJyk7XHJcbiAgICB9XHJcblxyXG4gICAgdmFyIGhhc0JlZW5TZXQgPSBmYWxzZTtcclxuXHJcbiAgICAvL2FkZGRzIG1vYmlsZSBjbGFzcyBmb3IgdGFibGUgd2hlbiB0YWJsZSBpcyBsYXJnZXIgdGhhbiBzY3JlZW5cclxuICAgIGZ1bmN0aW9uIHN0eWxlVGFibGUoKSB7XHJcbiAgICAgICAgdmFyIHdpbmRvd1dpZHRoID0gd2luZG93LmlubmVyV2lkdGgsXHJcbiAgICAgICAgICByZXNwb25zaXZlVGFibGVzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgncmVzcG9uc2l2ZS10YWJsZScpLFxyXG4gICAgICAgICAgY29sbGFwc2VSb3cgPSAkKCcucmVzcG9uc2l2ZS10YWJsZSAuY29sbGFwc2VkLXJvdycpO1xyXG5cclxuICAgICAgICBpZiAod2luZG93V2lkdGggPD0gNzY4KSB7XHJcbiAgICAgICAgICAgIGlmICghaGFzQmVlblNldCkge1xyXG4gICAgICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IHJlc3BvbnNpdmVUYWJsZXMubGVuZ3RoOyBpICs9IDEpIHtcclxuICAgICAgICAgICAgICAgICAgICBlbGVtZW50ID0gcmVzcG9uc2l2ZVRhYmxlc1tpXTtcclxuICAgICAgICAgICAgICAgICAgICBlbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJtb2JpbGVcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgY29sbGFwc2VSb3cuYWRkQ2xhc3MoJ2hpZGRlbicpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIudGFibGUtZXhwYW5kLWluZm9cIikucmVtb3ZlQ2xhc3MoJ2V4cGFuZC1pY29uLW1pbnVzJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi50YWJsZS1leHBhbmQtaW5mb1wiKS5hZGRDbGFzcygnZXhwYW5kLWljb24tcGx1cycpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaGFzQmVlblNldCA9IHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgcmVzcG9uc2l2ZVRhYmxlcy5sZW5ndGg7IGkgKz0gMSkge1xyXG4gICAgICAgICAgICAgICAgZWxlbWVudCA9IHJlc3BvbnNpdmVUYWJsZXNbaV07XHJcbiAgICAgICAgICAgICAgICBlbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJtb2JpbGVcIik7XHJcbiAgICAgICAgICAgICAgICBjb2xsYXBzZVJvdy5yZW1vdmVDbGFzcygnaGlkZGVuJyk7XHJcbiAgICAgICAgICAgICAgICAkKFwiLnRhYmxlLWV4cGFuZC1pbmZvXCIpLnJlbW92ZUNsYXNzKCdleHBhbmQtaWNvbi1wbHVzJyk7XHJcbiAgICAgICAgICAgICAgICAkKFwiLnRhYmxlLWV4cGFuZC1pbmZvXCIpLmFkZENsYXNzKCdleHBhbmQtaWNvbi1taW51cycpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGhhc0JlZW5TZXQgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gaW5pdCgpIHtcclxuICAgICAgICB2YXIgdmVydGljYWxUYWJsZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCd0YWJsZS5yZXNwb25zaXZlLXRhYmxlJyk7XHJcbiAgICAgICAgaWYgKHZlcnRpY2FsVGFibGVzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgZm9yICh2YXIgY291bnQgPSAwOyBjb3VudCA8IHZlcnRpY2FsVGFibGVzLmxlbmd0aDsgY291bnQrKykge1xyXG4gICAgICAgICAgICAgICAgY3JlYXRlSGVhZGVyKHZlcnRpY2FsVGFibGVzW2NvdW50XSk7XHJcbiAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKGNvdW50KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgc3R5bGVUYWJsZSgpO1xyXG4gICAgICAgICQod2luZG93KS5vbigncmVzaXplJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBzdHlsZVRhYmxlKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGluaXQ6IGluaXRcclxuICAgIH07XHJcbn0oKTtcclxuXHJcbiQoZnVuY3Rpb24gKCkge1xyXG4gICAgVmVydGljYWxUYWJsZS5pbml0KCk7XHJcbn0pO1xyXG5cclxuJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKGUpIHtcclxuICAgICQoXCIudGFibGUtZXhwYW5kLWluZm9cIikuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBjdXJyZW50Um93ID0gJCgkKHRoaXMpLnBhcmVudCgpKTtcclxuICAgICAgICB2YXIgY29sbGFwc2VSb3cgPSBjdXJyZW50Um93LmZpbmQoJy5jb2xsYXBzZWQtcm93Jyk7XHJcbiAgICAgICAgaWYgKCQodGhpcykuaGFzQ2xhc3MoXCJleHBhbmQtaWNvbi1wbHVzXCIpKSB7XHJcbiAgICAgICAgICAgICQodGhpcykucmVtb3ZlQ2xhc3MoXCJleHBhbmQtaWNvbi1wbHVzXCIpO1xyXG4gICAgICAgICAgICAkKHRoaXMpLmFkZENsYXNzKFwiZXhwYW5kLWljb24tbWludXNcIik7XHJcbiAgICAgICAgICAgIGNvbGxhcHNlUm93LnJlbW92ZUNsYXNzKCdoaWRkZW4nKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICQodGhpcykucmVtb3ZlQ2xhc3MoXCJleHBhbmQtaWNvbi1taW51c1wiKTtcclxuICAgICAgICAgICAgJCh0aGlzKS5hZGRDbGFzcyhcImV4cGFuZC1pY29uLXBsdXNcIik7XHJcbiAgICAgICAgICAgIGNvbGxhcHNlUm93LmFkZENsYXNzKCdoaWRkZW4nKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuICAgICQoXCIudGFibGUtZXhwYW5kLWluZm9cIikubmV4dCgpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgd2luZG93V2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aDtcclxuICAgICAgICAvLyBjdXJyZW50Um93IG1lYW4gdGhlIHJvdyBvZiB0YWJsZVxyXG4gICAgICAgIHZhciBjdXJyZW50Um93ID0gJCgkKHRoaXMpLnBhcmVudCgpKTtcclxuICAgICAgICB2YXIgdGhhdCA9IGN1cnJlbnRSb3cuZmluZCgnLnRhYmxlLWV4cGFuZC1pbmZvJylbMF07XHJcbiAgICAgICAgdmFyIGNvbGxhcHNlUm93ID0gY3VycmVudFJvdy5maW5kKCcuY29sbGFwc2VkLXJvdycpO1xyXG4gICAgICAgIC8vIG9ubHkgdHJpZ2dlciB0aGUgY29sbGFwc2UgYW5kIGV4cG9zZSBvbiB0YWJsZXQvbW9iaWxlXHJcbiAgICAgICAgaWYgKHdpbmRvd1dpZHRoIDw9IDc2OCkge1xyXG4gICAgICAgICAgICBpZiAoJCh0aGF0KS5oYXNDbGFzcyhcImV4cGFuZC1pY29uLXBsdXNcIikpIHtcclxuICAgICAgICAgICAgICAgICQodGhhdCkucmVtb3ZlQ2xhc3MoXCJleHBhbmQtaWNvbi1wbHVzXCIpO1xyXG4gICAgICAgICAgICAgICAgJCh0aGF0KS5hZGRDbGFzcyhcImV4cGFuZC1pY29uLW1pbnVzXCIpO1xyXG4gICAgICAgICAgICAgICAgY29sbGFwc2VSb3cucmVtb3ZlQ2xhc3MoJ2hpZGRlbicpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgJCh0aGF0KS5yZW1vdmVDbGFzcyhcImV4cGFuZC1pY29uLW1pbnVzXCIpO1xyXG4gICAgICAgICAgICAgICAgJCh0aGF0KS5hZGRDbGFzcyhcImV4cGFuZC1pY29uLXBsdXNcIik7XHJcbiAgICAgICAgICAgICAgICBjb2xsYXBzZVJvdy5hZGRDbGFzcygnaGlkZGVuJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9KTtcclxufSk7IiwiJChmdW5jdGlvbiAoKSB7XHJcbiAgICBQdXJjaGFzZUFncmVlbWVudC5pbml0KCk7XHJcbiAgICBQcmljZUFsZXJ0UGFnZS5pbml0KCk7XHJcbiAgICBEcnlpbmdBZ3JlZW1lbnQuaW5pdCgpO1xyXG4gICAgR3JhaW5QcmljZVBhZ2UuaW5pdCgpO1xyXG4gICAgUG9vbEFuZERlcGFBZ3JlZW1lbnQuaW5pdCgpO1xyXG59KTtcclxuXHJcbnZhciBQdXJjaGFzZUFncmVlbWVudCA9IFB1cmNoYXNlQWdyZWVtZW50IHx8IChmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgYWdyZWVtZW50RWxlbWVudHMgPSBbXTtcclxuICAgIHZhciBkaXNhYmxlZENsYXNzID0gXCJkaXNhYmxlZFwiO1xyXG4gICAgdmFyIGZvcm1TZWxlY3RvciA9IFwiI2FncmVlbWVudEZvcm1cIjtcclxuXHJcbiAgICB2YXIgYWRkVmFsaWRhdGlvbiA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAoJC52YWxpZGF0b3IpIHtcclxuICAgICAgICAgICAgJC52YWxpZGF0b3IuYWRkTWV0aG9kKFwiZXhhY3RfZGF0ZVwiLCBmdW5jdGlvbiAodmFsdWUsIGVsZW1lbnQpIHtcclxuICAgICAgICAgICAgICAgIHZhciByZXN1bHQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgdmFyIGRhdGVzID0gdmFsdWUuc3BsaXQoJy0nKTtcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAoZGF0ZXMubGVuZ3RoID09IDMpIHtcclxuICAgICAgICAgICAgICAgICAgICAvL3ZhciBkID0gbmV3IERhdGUoZGF0ZXNbMF0gKyBcIi1cIiArIGRhdGVzWzFdICsgXCItXCIgKyBkYXRlc1syXSArIFwiIDAwOjAwOjAwXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBkID0gbmV3IERhdGUodmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChkLmdldEZ1bGxZZWFyKCkgPT0gZGF0ZXNbMF0gJiYgZC5nZXRNb250aCgpID09IChwYXJzZUludChkYXRlc1sxXSkgLSAxKSAmJiBkLmdldERhdGUoKSA9PSBkYXRlc1syXSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5vcHRpb25hbChlbGVtZW50KSB8fCByZXN1bHQ7XHJcblxyXG4gICAgICAgICAgICB9LCBcIlZhciB2w6RubGlnIGFuZ2UgZXR0IGdpbHRpZ3QgZGF0dW1cIik7XHJcblxyXG4gICAgICAgICAgICAkLnZhbGlkYXRvci5hZGRNZXRob2QoXCJsb3dlclByaWNlTXVzdExlc3NVcHBlclByaWNlXCIsIGZ1bmN0aW9uICh2YWx1ZSwgZWxlbWVudCkge1xyXG4gICAgICAgICAgICAgICAgLy9JZiBmYWxzZSwgdGhlIHZhbGlkYXRpb24gZmFpbHMgYW5kIHRoZSBtZXNzYWdlIGJlbG93IGlzIGRpc3BsYXllZFxyXG4gICAgICAgICAgICAgICAgdmFyIHVwcGVyUHJpY2UgPSBwYXJzZUludCgkKCcjVXBwZXJQcmljZScpLnZhbCgpKTtcclxuICAgICAgICAgICAgICAgIHZhciBsb3dlclByaWNlID0gcGFyc2VJbnQoJCgnI0xvd2VyUHJpY2UnKS52YWwoKSk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5vcHRpb25hbChlbGVtZW50KSB8fCAoIWlzTmFOKHVwcGVyUHJpY2UpICYmICFpc05hTihsb3dlclByaWNlKSAmJiB1cHBlclByaWNlID49IGxvd2VyUHJpY2UpO1xyXG5cclxuICAgICAgICAgICAgfSwgXCJVbmRyZSBwcmlzIG3DpXN0ZSB2YXJhIGzDpGdyZSDDpG4gw5Z2cmUgcHJpc1wiKTtcclxuXHJcbiAgICAgICAgICAgICQudmFsaWRhdG9yLmFkZE1ldGhvZChcImF0TGVhc3RPbmVQcmljZU11c3RCZUlucHV0XCIsIGZ1bmN0aW9uICh2YWx1ZSwgZWxlbWVudCkge1xyXG4gICAgICAgICAgICAgICAgLy9JZiBmYWxzZSwgdGhlIHZhbGlkYXRpb24gZmFpbHMgYW5kIHRoZSBtZXNzYWdlIGJlbG93IGlzIGRpc3BsYXllZFxyXG4gICAgICAgICAgICAgICAgdmFyIHVwcGVyUHJpY2UgPSBwYXJzZUludCgkKCcjVXBwZXJQcmljZScpLnZhbCgpKTtcclxuICAgICAgICAgICAgICAgIHZhciBsb3dlclByaWNlID0gcGFyc2VJbnQoJCgnI0xvd2VyUHJpY2UnKS52YWwoKSk7XHJcbiAgICAgICAgICAgICAgICBpZiAoaXNOYU4obG93ZXJQcmljZSkpIGxvd2VyUHJpY2UgPSAwO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMub3B0aW9uYWwoZWxlbWVudCkgfHwgKCFpc05hTih1cHBlclByaWNlKSAmJiAhaXNOYU4obG93ZXJQcmljZSkgJiYgKHVwcGVyUHJpY2UgIT09IDAgfHwgbG93ZXJQcmljZSAhPT0gMCkpO1xyXG5cclxuICAgICAgICAgICAgfSwgXCJOw6Vnb3QgcHJpcyBrYW5za2Ugc2thIGFuZ2VzP1wiKTtcclxuXHJcbiAgICAgICAgICAgICQudmFsaWRhdG9yLmFkZE1ldGhvZChcIm9wdGluYWxMb3dlclByaWNlTXVzdEJlR3JlYXRNaW5WYWx1ZVwiLCBmdW5jdGlvbiAodmFsdWUsIGVsZW1lbnQpIHtcclxuICAgICAgICAgICAgICAgIC8vSWYgZmFsc2UsIHRoZSB2YWxpZGF0aW9uIGZhaWxzIGFuZCB0aGUgbWVzc2FnZSBiZWxvdyBpcyBkaXNwbGF5ZWRcclxuICAgICAgICAgICAgICAgIHZhciBtaW5WYWx1ZSA9IHBhcnNlSW50KCQoJyNQcmljZUxvdycpLnZhbCgpKTtcclxuICAgICAgICAgICAgICAgIHZhciBsb3dlclByaWNlID0gcGFyc2VJbnQoJCgnI0xvd2VyUHJpY2UnKS52YWwoKSk7XHJcbiAgICAgICAgICAgICAgICBpZiAoJCgnI0FncmVlbWVudFR5cGUnKS52YWwoKSA9PT0gXCJQcmlzc2FrcmluZ0RlcGFhdnRhbFwiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMub3B0aW9uYWwoZWxlbWVudCkgfHwgKCFpc05hTihtaW5WYWx1ZSkgJiYgIWlzTmFOKGxvd2VyUHJpY2UpICYmICEobG93ZXJQcmljZSA+PSAwICYmIGxvd2VyUHJpY2UgPCBtaW5WYWx1ZSkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMub3B0aW9uYWwoZWxlbWVudCkgfHwgKCFpc05hTihtaW5WYWx1ZSkgJiYgIWlzTmFOKGxvd2VyUHJpY2UpICYmICEobG93ZXJQcmljZSA+IDAgJiYgbG93ZXJQcmljZSA8IG1pblZhbHVlKSk7XHJcblxyXG4gICAgICAgICAgICB9LCBcIlVuZHJlIHByaXMgdW5kZXJzdGlnZXIuIFByaXMgYW5nZXMgaSBrci90b25cIik7XHJcblxyXG4gICAgICAgICAgICAkLnZhbGlkYXRvci5hZGRNZXRob2QoXCJhZ3JlZW1lbnREYXRlTWluXCIsIGZ1bmN0aW9uICh2YWx1ZSwgZWxlbWVudCkge1xyXG4gICAgICAgICAgICAgICAgLy9JZiBmYWxzZSwgdGhlIHZhbGlkYXRpb24gZmFpbHMgYW5kIHRoZSBtZXNzYWdlIGJlbG93IGlzIGRpc3BsYXllZFxyXG4gICAgICAgICAgICAgICAgdmFyIG1pbkRhdGUgPSBuZXcgRGF0ZSgpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGVudGVyZWREYXRlID0gR3JvQ29tbW9uLmRhdGVGcm9tSVNPKGVsZW1lbnQudmFsdWUpOyAvL25ldyBEYXRlKGVsZW1lbnQudmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgZW50ZXJlZERhdGUuc2V0SG91cnMoZW50ZXJlZERhdGUuZ2V0SG91cnMoKSArIDIzKTtcclxuXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5vcHRpb25hbChlbGVtZW50KSB8fCAoZW50ZXJlZERhdGUgPj0gbWluRGF0ZSk7XHJcblxyXG4gICAgICAgICAgICB9LCBcIkR1IGthbiBpbnRlIGFuZ2UgZGF0dW0gc29tIMOkciBsw6RncmUgw6RuIGRhZ2VucyBkYXR1bVwiKTtcclxuXHJcbiAgICAgICAgICAgICQudmFsaWRhdG9yLmFkZE1ldGhvZChcImFncmVlbWVudERhdGVNYXhcIiwgZnVuY3Rpb24gKHZhbHVlLCBlbGVtZW50KSB7XHJcbiAgICAgICAgICAgICAgICAvL0lmIGZhbHNlLCB0aGUgdmFsaWRhdGlvbiBmYWlscyBhbmQgdGhlIG1lc3NhZ2UgYmVsb3cgaXMgZGlzcGxheWVkXHJcbiAgICAgICAgICAgICAgICB2YXIgbWluRGF0ZSA9IG5ldyBEYXRlKCk7XHJcbiAgICAgICAgICAgICAgICB2YXIgbWF4RGF0ZSA9IG5ldyBEYXRlKCk7XHJcbiAgICAgICAgICAgICAgICBtYXhEYXRlLnNldERhdGUobmV3IERhdGUoKS5nZXREYXRlKCkgKyA2MCk7XHJcbiAgICAgICAgICAgICAgICB2YXIgZW50ZXJlZERhdGUgPSBHcm9Db21tb24uZGF0ZUZyb21JU08oZWxlbWVudC52YWx1ZSk7IC8vbmV3IERhdGUoZWxlbWVudC52YWx1ZSk7XHJcbiAgICAgICAgICAgICAgICBlbnRlcmVkRGF0ZS5zZXRIb3VycyhlbnRlcmVkRGF0ZS5nZXRIb3VycygpICsgMjMpO1xyXG5cclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLm9wdGlvbmFsKGVsZW1lbnQpIHx8IChlbnRlcmVkRGF0ZSA8PSBtYXhEYXRlKTtcclxuXHJcbiAgICAgICAgICAgIH0sIFwiVXBwZHJhZ2V0IGbDpXIgZWogdmFyYSBnaWx0aWd0IGkgbWVyIMOkbiA2MCBkYWdhclwiKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciB2YWxpZGF0ZVByaWNlSGVkZ2UgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIGxvd1ByaWNlID0gR3JvQ29tbW9uLnBhcnNlSW50KCQoJyNQcmljZUxvdycpLnZhbCgpKTtcclxuICAgICAgICB2YXIgbWluUXVhbnRpdHkgPSBHcm9Db21tb24ucGFyc2VJbnQoJCgnI0NvbW1pdFF1YW50aXR5TWluJykudmFsKCkpO1xyXG5cclxuICAgICAgICBpZiAoJCgpLnZhbGlkYXRlKSAkKGZvcm1TZWxlY3RvcikudmFsaWRhdGUoe1xyXG4gICAgICAgICAgICBpZ25vcmU6IFtdLFxyXG4gICAgICAgICAgICBlcnJvckVsZW1lbnRDbGFzczogJ2Vycm9yJyxcclxuICAgICAgICAgICAgZXJyb3JDbGFzczogJ2Vycm9yLWl0ZW0nLFxyXG4gICAgICAgICAgICBlcnJvckVsZW1lbnQ6ICdzcGFuJyxcclxuICAgICAgICAgICAgb25rZXl1cDogZmFsc2UsXHJcbiAgICAgICAgICAgIHJ1bGVzOiB7XHJcbiAgICAgICAgICAgICAgICBVcHBlclByaWNlOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICgkKFwiI0NhblNlY3VyZVByaWNlXCIpLnZhbCgpICE9IFwiMVwiKTtcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIGRpZ2l0czogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICBhdExlYXN0T25lUHJpY2VNdXN0QmVJbnB1dDogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICBtaW46IGxvd1ByaWNlXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgTG93ZXJQcmljZToge1xyXG4gICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiBmdW5jdGlvbiAoZWxlbWVudCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJCgnI0FncmVlbWVudFR5cGUnKS52YWwoKSA9PT0gXCJQcmlzc2FrcmluZ0RlcGFhdnRhbFwiO1xyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgZGlnaXRzOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgIGxvd2VyUHJpY2VNdXN0TGVzc1VwcGVyUHJpY2U6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgb3B0aW5hbExvd2VyUHJpY2VNdXN0QmVHcmVhdE1pblZhbHVlOiB0cnVlXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgQ29tbWl0UXVhbnRpdHk6IHtcclxuICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICBkaWdpdHM6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgbWluOiBtaW5RdWFudGl0eVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIERlbGl2ZXJ5TW9kZToge1xyXG4gICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgUHJpY2VXYXRjaEVuZERhdGU6IHtcclxuICAgICAgICAgICAgICAgICAgICBkYXRlOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgIGV4YWN0X2RhdGU6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgYWdyZWVtZW50RGF0ZU1pbjogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICBhZ3JlZW1lbnREYXRlTWF4OiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgIC8vcmVxdWlyZWQ6dHJ1ZVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIFRhcmdldEFjdGlvbjoge1xyXG4gICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoJChcIiNDYW5TZWN1cmVQcmljZVwiKS52YWwoKSAhPSBcIjFcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBtZXNzYWdlczoge1xyXG4gICAgICAgICAgICAgICAgVXBwZXJQcmljZToge1xyXG4gICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiBcIkR1IG3DpXN0ZSBhbmdlIGVuIHNpZmZyYVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIGRpZ2l0czogXCJBbmdlIGVuZGFzdCBzaWZmcm9yXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgYXRMZWFzdE9uZVByaWNlTXVzdEJlSW5wdXQ6IFwiTsOlZ290IHByaXMga2Fuc2tlIHNrYSBhbmdlcz9cIixcclxuICAgICAgICAgICAgICAgICAgICBtaW46IFwiw5Z2cmUgcHJpcyB1bmRlcnN0aWdlciBcIiArIGxvd1ByaWNlICsgXCIga3IuIFByaXMgYW5nZXMgaSBrci90b25cIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIExvd2VyUHJpY2U6IHtcclxuICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogXCJEdSBtw6VzdGUgYW5nZSBlbiBzaWZmcmFcIixcclxuICAgICAgICAgICAgICAgICAgICBkaWdpdHM6IFwiQW5nZSBlbmRhc3Qgc2lmZnJvclwiLFxyXG4gICAgICAgICAgICAgICAgICAgIGxvd2VyUHJpY2VNdXN0TGVzc1VwcGVyUHJpY2U6IFwiVW5kcmUgcHJpcyBtw6VzdGUgdmFyYSBsw6RncmUgw6RuIMOWdnJlIHByaXNcIixcclxuICAgICAgICAgICAgICAgICAgICBvcHRpbmFsTG93ZXJQcmljZU11c3RCZUdyZWF0TWluVmFsdWU6IFwiVW5kcmUgcHJpcyB1bmRlcnN0aWdlciBcIiArIGxvd1ByaWNlICsgXCIga3IuIFByaXMgYW5nZXMgaSBrci90b24uXCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBDb21taXRRdWFudGl0eToge1xyXG4gICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiBcIkt2YW50aXRldCB0b24gbcOlc3RlIGFuZ2VzXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgZGlnaXRzOiBcIkt2YW50aXRldCB0b24gYW5nZXMgbnVtZXJpc2t0XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgbWluOiBcIkR1IGthbiBpbnRlIGFuZ2Uga3ZhbnRpdGV0IHNvbSDDpHIgbWluZHJlIMOkbiBcIiArIG1pblF1YW50aXR5XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgRGVsaXZlcnlNb2RlOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IFwiTGV2ZXJhbnNzw6R0dCBtw6VzdGUgdsOkbGphc1wiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgUHJpY2VXYXRjaEVuZERhdGU6IHtcclxuICAgICAgICAgICAgICAgICAgICBkYXRlOiBcIlZhciB2w6RubGlnIGFuZ2UgZXR0IGdpbHRpZ3QgZGF0dW1cIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIFRhcmdldEFjdGlvbjoge1xyXG4gICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiBcIkR1IG3DpXN0ZSBhbmdlIFJlc3VsdGF0IGF2IHByaXNiZXZha25pbmdcIlxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBoaWdobGlnaHQ6IGZ1bmN0aW9uIChlbGVtZW50LCBlcnJvckNsYXNzLCB2YWxpZENsYXNzKSB7XHJcbiAgICAgICAgICAgICAgICAkKCdsaSNwXycgKyAkKGVsZW1lbnQpLmF0dHIoJ25hbWUnKSkuc2hvdygpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGVycm9ycyA9ICQoJ3VsLmVycm9ycy1saXN0IGxpJykuZmlsdGVyKGZ1bmN0aW9uICgpIHsgcmV0dXJuICQodGhpcykuY3NzKCdkaXNwbGF5JykgPT09ICdsaXN0LWl0ZW0nOyB9KS5sZW5ndGg7XHJcbiAgICAgICAgICAgICAgICBpZiAoZXJyb3JzID49IDMpIHtcclxuICAgICAgICAgICAgICAgICAgICAkKCd1bC5lcnJvcnMtbGlzdCcpLnNob3coKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICQoZWxlbWVudCkuYWRkQ2xhc3ModGhpcy5zZXR0aW5ncy5lcnJvckVsZW1lbnRDbGFzcykucmVtb3ZlQ2xhc3MoZXJyb3JDbGFzcyk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHVuaGlnaGxpZ2h0OiBmdW5jdGlvbiAoZWxlbWVudCwgZXJyb3JDbGFzcywgdmFsaWRDbGFzcykge1xyXG4gICAgICAgICAgICAgICAgJChlbGVtZW50KS5yZW1vdmVDbGFzcyh0aGlzLnNldHRpbmdzLmVycm9yRWxlbWVudENsYXNzKS5yZW1vdmVDbGFzcyhlcnJvckNsYXNzKTtcclxuICAgICAgICAgICAgICAgICQoJ2xpI3BfJyArICQoZWxlbWVudCkuYXR0cignbmFtZScpKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICB2YXIgZXJyb3JzID0gJCgndWwuZXJyb3JzLWxpc3QgbGknKS5maWx0ZXIoZnVuY3Rpb24gKCkgeyByZXR1cm4gJCh0aGlzKS5jc3MoJ2Rpc3BsYXknKSA9PT0gJ2xpc3QtaXRlbSc7IH0pLmxlbmd0aDtcclxuICAgICAgICAgICAgICAgIGlmICgkKCd1bC5lcnJvcnMtbGlzdCcpLmZpbmQoJ2xpW2lkXj1cInBcIl0nKS5pcyhcIjp2aXNpYmxlXCIpID09PSBmYWxzZSB8fCBlcnJvcnMgPCAzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgndWwuZXJyb3JzLWxpc3QnKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGVycm9yUGxhY2VtZW50OiBmdW5jdGlvbiAoZXJyb3IsIGVsZW1lbnQpIHtcclxuICAgICAgICAgICAgICAgIHZhciB0eXBlRWxlbWVudCA9ICQoZWxlbWVudCkuYXR0cigndHlwZScpO1xyXG4gICAgICAgICAgICAgICAgaWYgKHR5cGVFbGVtZW50ID09PSAncmFkaW8nKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZWxlbWVudC5wYXJlbnQoJ2Rpdi5sbV9fcmFkaW8nKS5wYXJlbnQoKS5iZWZvcmUoZXJyb3IpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBlbGVtZW50LmFmdGVyKGVycm9yKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgc3VibWl0SGFuZGxlcjogZnVuY3Rpb24gKGZvcm0pIHtcclxuICAgICAgICAgICAgICAgIGlmICgkKCcjYXBwcm92ZUFncmVlbWVudFRlcm0nKS5pcygnOmNoZWNrZWQnKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGZvcm0uc3VibWl0KCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH07XHJcblxyXG4gICAgdmFyIHRvZ2dsZURpc2FibGVOZXh0QnV0dG9uID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBjb21taXRRdWFudGl0eSA9IHBhcnNlSW50KCQoJyNDb21taXRRdWFudGl0eScpLnZhbCgpKTtcclxuICAgICAgICB2YXIgdXBwZXJQcmljZSA9IHBhcnNlSW50KCQoJyNVcHBlclByaWNlJykudmFsKCkpO1xyXG4gICAgICAgIHZhciBsb3dlclByaWNlID0gcGFyc2VJbnQoJCgnI0xvd2VyUHJpY2UnKS52YWwoKSk7XHJcbiAgICAgICAgdmFyIHByaWNlID0gcGFyc2VJbnQoJCgnI1ByaWNlJykudmFsKCkpO1xyXG4gICAgICAgIHZhciBhZ3JlZW1lbnRUeXBlID0gJChcIiNBZ3JlZW1lbnRUeXBlXCIpLnZhbCgpO1xyXG4gICAgICAgIHZhciBjYW5TZWN1cmVQcmljZSA9ICQoXCIjQ2FuU2VjdXJlUHJpY2VcIikudmFsKCkgPT0gXCIxXCI7XHJcblxyXG4gICAgICAgIHZhciBpc1ZhbGlkO1xyXG4gICAgICAgIGlmIChjYW5TZWN1cmVQcmljZSAmJiAkKFwiI1NlY3VyZVByaWNlXCIpLmlzKFwiOmNoZWNrZWRcIikpIHtcclxuXHJcbiAgICAgICAgICAgIGlzVmFsaWQgPSAkKCcjQWdyZWVtZW50QXZ0YWwnKS52YWwoKSAhPSAnJyAmJlxyXG4gICAgICAgICAgICAgICAgKCQoJ2lucHV0W25hbWU9XCJEZWxpdmVyeU1vZGVcIl06Y2hlY2tlZCcpLmxlbmd0aCA+IDAgfHwgJCgnaW5wdXRbbmFtZT1cIkRlbGl2ZXJ5TW9kZVwiXTpyYWRpbycpLmxlbmd0aCA9PT0gMCkgJiZcclxuICAgICAgICAgICAgICAgICgkKCdpbnB1dFtuYW1lPVwiV2F0Y2hUeXBlXCJdOmNoZWNrZWQnKS5sZW5ndGggPiAwIHx8ICQoJ2lucHV0W25hbWU9XCJXYXRjaFR5cGVcIl06cmFkaW8nKS5sZW5ndGggPT09IDApICYmXHJcbiAgICAgICAgICAgICAgICAkKCcjQWdyZWVtZW50UGVyaW9kJykudmFsKCkgIT0gJycgJiZcclxuICAgICAgICAgICAgICAgICgoIWlzTmFOKGNvbW1pdFF1YW50aXR5KSAmJiBjb21taXRRdWFudGl0eSA+PSAxMikgfHwgJCgnI0NvbW1pdFF1YW50aXR5JykubGVuZ3RoID09PSAwKSAmJlxyXG4gICAgICAgICAgICAgICAgIWlzTmFOKHByaWNlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGlzVmFsaWQgPSAkKCcjQWdyZWVtZW50QXZ0YWwnKS52YWwoKSAhPSAnJyAmJlxyXG4gICAgICAgICAgICAgICAgKCQoJ2lucHV0W25hbWU9XCJEZWxpdmVyeU1vZGVcIl06Y2hlY2tlZCcpLmxlbmd0aCA+IDAgfHwgJCgnaW5wdXRbbmFtZT1cIkRlbGl2ZXJ5TW9kZVwiXTpyYWRpbycpLmxlbmd0aCA9PT0gMCkgJiZcclxuICAgICAgICAgICAgICAgICgkKCdpbnB1dFtuYW1lPVwiVGFyZ2V0QWN0aW9uXCJdOmNoZWNrZWQnKS5sZW5ndGggPiAwIHx8ICQoJ2lucHV0W25hbWU9XCJUYXJnZXRBY3Rpb25cIl06cmFkaW8nKS5sZW5ndGggPT09IDApICYmXHJcbiAgICAgICAgICAgICAgICAkKCcjQWdyZWVtZW50UGVyaW9kJykudmFsKCkgIT0gJycgJiZcclxuICAgICAgICAgICAgICAgICQoJyNQcmljZVdhdGNoRW5kRGF0ZScpLnZhbCgpICE9ICcnICYmXHJcbiAgICAgICAgICAgICAgICAoKCFpc05hTihjb21taXRRdWFudGl0eSkgJiYgY29tbWl0UXVhbnRpdHkgPj0gMTIpIHx8ICQoJyNDb21taXRRdWFudGl0eScpLmxlbmd0aCA9PT0gMCkgJiZcclxuICAgICAgICAgICAgICAgICFpc05hTih1cHBlclByaWNlKSAmJiB1cHBlclByaWNlID49IDUwMCAmJlxyXG4gICAgICAgICAgICAgICAgIWlzTmFOKGxvd2VyUHJpY2UpICYmIGxvd2VyUHJpY2UgPD0gdXBwZXJQcmljZSAmJiBsb3dlclByaWNlID49IDUwMDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChhZ3JlZW1lbnRUeXBlID09IFwiUHJpc3Nha3JpbmdEZXBhYXZ0YWxcIiAmJiBjYW5TZWN1cmVQcmljZSkge1xyXG4gICAgICAgICAgICBpc1ZhbGlkID0gJCgnI0FncmVlbWVudFBlcmlvZCcpLnZhbCgpICE9ICcnICYmICFpc05hTihwcmljZSkgJiYgJChcIkFncmVlbWVudEF2dGFsXCIpICE9ICcnO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKGlzVmFsaWQpIHtcclxuICAgICAgICAgICAgJCgnI21vdmUtdG8tc3RlcDInKS5yZW1vdmVDbGFzcygnZGlzYWJsZWQnKTtcclxuICAgICAgICAgICAgJCgnI21vdmUtdG8tc3RlcDInKS5wYXJlbnQoKS5yZW1vdmVDbGFzcygnZGlzYWJsZWQnKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAkKCcjbW92ZS10by1zdGVwMicpLmFkZENsYXNzKCdkaXNhYmxlZCcpO1xyXG4gICAgfTtcclxuXHJcbiAgICB2YXIgdmFsaWRhdGVGb3JEcm9wZG93biA9IGZ1bmN0aW9uIChzZWxmKSB7XHJcbiAgICAgICAgdmFyIGlucHV0RWxlbWVudCA9ICQoc2VsZikucGFyZW50cyhcIi5zaG93Y2FzZVwiKS5maW5kKFwiaW5wdXQuZm9ybS1lbGVtZW50XCIpO1xyXG4gICAgICAgIHZhciBpbnB1dFNlbGVjdG9yID0gaW5wdXRFbGVtZW50LmF0dHIoJ2lkJyk7XHJcbiAgICAgICAgJChmb3JtU2VsZWN0b3IpLnZhbGlkYXRlKCkuZWxlbWVudCgnIycgKyBpbnB1dFNlbGVjdG9yKTtcclxuICAgICAgICB0b2dnbGVEaXNhYmxlTmV4dEJ1dHRvbigpO1xyXG4gICAgfTtcclxuXHJcbiAgICB2YXIgaW5pdFByaWNlV2F0Y2hFbmREYXRlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmICgkLmZuLmRhdGVwaWNrZXIpICQoXCIjUHJpY2VXYXRjaEVuZERhdGVcIikuZGF0ZXBpY2tlcih7XHJcbiAgICAgICAgICAgIGRlZmF1bHREYXRlOiBuZXcgRGF0ZSgpLFxyXG4gICAgICAgICAgICBvblNlbGVjdDogZnVuY3Rpb24gKG5ld1RleHQpIHtcclxuICAgICAgICAgICAgICAgIC8vIGNvbXBhcmUgdGhlIG5ldyB2YWx1ZSB0byB0aGUgcHJldmlvdXMgb25lXHJcbiAgICAgICAgICAgICAgICBpZiAoJCh0aGlzKS5kYXRhKCdwcmV2aW91cycpICE9PSBuZXdUZXh0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJChmb3JtU2VsZWN0b3IpLnZhbGlkYXRlKCkuZWxlbWVudChcIiNQcmljZVdhdGNoRW5kRGF0ZVwiKTtcclxuICAgICAgICAgICAgICAgICAgICB0b2dnbGVEaXNhYmxlTmV4dEJ1dHRvbigpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBtb250aE5hbWVzOiBbXCJKYW51YXJpXCIsIFwiRmVicnVhcmlcIiwgXCJNYXJzXCIsIFwiQXByaWxcIiwgXCJNYWpcIiwgXCJKdW5pXCIsIFwiSnVsaVwiLCBcIkF1Z3VzdGlcIiwgXCJTZXB0ZW1iZXJcIiwgXCJPa3RvYmVyXCIsIFwiTm92ZW1iZXJcIiwgXCJEZWNlbWJlclwiXSxcclxuICAgICAgICAgICAgZGF5TmFtZXNNaW46IFtcIlPDtlwiLCBcIk3DpVwiLCBcIlRpXCIsIFwiT25cIiwgXCJUb1wiLCBcIkZyXCIsIFwiTMO2XCJdLFxyXG4gICAgICAgICAgICBmaXJzdERheTogMSxcclxuICAgICAgICAgICAgc2hvd090aGVyTW9udGhzOiB0cnVlLFxyXG4gICAgICAgICAgICBzZWxlY3RPdGhlck1vbnRoczogdHJ1ZSxcclxuICAgICAgICAgICAgZGF0ZUZvcm1hdDogJ3l5LW1tLWRkJyxcclxuICAgICAgICAgICAgYmVmb3JlU2hvdzogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnLnVpLWRhdGVwaWNrZXInKS5jc3MoJ3otaW5kZXgnLCA1KTtcclxuICAgICAgICAgICAgICAgIH0sIDApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgICAgICAgICAgLm9uKCdjaGFuZ2UnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAkKGZvcm1TZWxlY3RvcikudmFsaWRhdGUoKS5lbGVtZW50KFwiI1ByaWNlV2F0Y2hFbmREYXRlXCIpO1xyXG4gICAgICAgICAgICAgICAgdG9nZ2xlRGlzYWJsZU5leHRCdXR0b24oKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBnZXRQcm90ZWN0QWdyZWVtZW50ID0gZnVuY3Rpb24gKGFncmVlbWVudElkLCBwcm9kdWN0SXRlbUlkLCBwcmljZUFyZWFJZCwgZ3JhaW5UeXBlLCBwcm9kdWN0SXRlbU5hbWUsIGNhbGxiYWNrKSB7XHJcbiAgICAgICAgaWYgKCFhZ3JlZW1lbnRJZCkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAkKCcjYWdyZWVtZW50LWxvYWRlcicpLnNob3coKTtcclxuICAgICAgICAkKFwiI0FncmVlbWVudElkXCIpLnZhbChhZ3JlZW1lbnRJZCk7XHJcbiAgICAgICAgJChcIiNwcm9kdWN0LWl0ZW0tbmFtZVwiKS5odG1sKHByb2R1Y3RJdGVtTmFtZSk7XHJcbiAgICAgICAgJChcIiNncmFpbi10eXBlXCIpLmh0bWwoZ3JhaW5UeXBlKTtcclxuICAgICAgICAkKFwiI0dyYWluVHlwZVwiKS52YWwoZ3JhaW5UeXBlKTtcclxuXHJcbiAgICAgICAgdmFyIGlzSW50ZXJuYWwgPSBOdW1iZXIucGFyc2VJbnQoJCgnI0lzSW50ZXJuYWwnKS52YWwoKSkgPT0gMTtcclxuXHJcbiAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgZGF0YVR5cGU6IFwianNvblwiLFxyXG4gICAgICAgICAgICB0eXBlOiAnZ2V0JyxcclxuICAgICAgICAgICAgdXJsOiAnL2FwaS9hZ3JlZW1lbnQvZ2V0LWdyYWluLXByaWNlLXBlcmlvZHMvJyArIHByaWNlQXJlYUlkICsgJy8nICsgcHJvZHVjdEl0ZW1JZCArICcvJyArIGdyYWluVHlwZSArICcvJyArIGlzSW50ZXJuYWwsXHJcbiAgICAgICAgICAgIGNhY2hlOiBmYWxzZSxcclxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICQoJyNhZ3JlZW1lbnRGb3JtICNBZ3JlZW1lbnRQZXJpb2QnKS52YWwoJycpO1xyXG4gICAgICAgICAgICAgICAgJCgnI2FncmVlbWVudEZvcm0gLnBlcmlvZERyb3Bkb3duIC5kcm9wZG93bicpLmh0bWwoJycpO1xyXG4gICAgICAgICAgICAgICAgJCgnI2FncmVlbWVudEZvcm0gLnBlcmlvZERyb3Bkb3duID4gLnNob3djYXNlID4gYScpLmh0bWwoJ0xldmVyYW5zcGVyaW9kJyk7XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKGRhdGEubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICQuZWFjaChkYXRhLCBmdW5jdGlvbiAoaW5kZXgsIGl0ZW0pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGF0dHJQcmljZSA9IGlzSW50ZXJuYWwgPyBcImRhdGEtcHJpY2U9XCIgKyBpdGVtLlByaWNlIDogXCJkYXRhLXByaWNlPScnXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBhdHRyVmFsdWUgPSBcImRhdGEtdmFsdWU9XCIgKyBpdGVtLlByaWNlVHlwZUlkICsgXCI7XCIgKyBpdGVtLlByaWNlUGVyaW9kO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKCcucGVyaW9kRHJvcGRvd24gLmRyb3Bkb3duJykuYXBwZW5kKFwiPGxpIFwiICsgYXR0clByaWNlICsgXCIgXCIgKyBhdHRyVmFsdWUgKyBcIj48YSBocmVmPSdqYXZhc2NyaXB0OnZvaWQoMCknPlwiICsgaXRlbS5EaXNwbGF5TGFiZWwgKyBcIjwvYT48L2xpPlwiKTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICBzZXREcm9wZG93bigkKCcucGVyaW9kRHJvcGRvd24nKSwgJ3R5cGUtMycpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAkKCcjYWdyZWVtZW50Rm9ybSAucGVyaW9kRHJvcGRvd24nKS5maW5kKFwiLnNob3djYXNlIC5kcm9wZG93biBsaSBhXCIpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRhdGVGb3JEcm9wZG93bih0aGlzKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgR3JvQ29tbW9uLmRpc2FibGVPckVuYWJsZUVsZW1lbnQoJyNhZ3JlZW1lbnRGb3JtIC5hZ3JlZW1lbnQtZWxlbWVudCcsICQodGhpcykpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGVsaXZlcnlQZXJpb2QgPSBnZXREaXNwbGF5VmFsdWVJbkRyb3Bkb3duKCQoJy5wZXJpb2REcm9wZG93biAuZHJvcGRvd24nKSwgJCh0aGlzKS5wYXJlbnQoKS5hdHRyKCdkYXRhLXZhbHVlJykpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKCcjcGVyaW9kLWRldGFpbCcpLmh0bWwoZGVsaXZlcnlQZXJpb2QpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzSW50ZXJuYWwpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJyNQcmljZScpLnZhbCgnJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgcHJpY2UgPSAkKCcucGVyaW9kRHJvcGRvd24gLmRyb3Bkb3duIC5zZWxlY3RlZCcpLmF0dHIoJ2RhdGEtcHJpY2UnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJyNQcmljZScpLnZhbChwcmljZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgdG9nZ2xlRGlzYWJsZU5leHRCdXR0b24oKTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAkKCcjcHJpY2UtcGVyaW9kcycpLmZpbmQoJy5lcnJvci1pdGVtJykuYWRkQ2xhc3MoJ2hpZGRlbicpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoJyNwcmljZS1wZXJpb2RzJykucmVtb3ZlQ2xhc3MoJ2Rpc2FibGVkJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgdG9nZ2xlRGlzYWJsZU5leHRCdXR0b24oKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICQoJyNwcmljZS1wZXJpb2RzJykuZmluZCgnLmVycm9yLWl0ZW0nKS5yZW1vdmVDbGFzcygnaGlkZGVuJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnI3ByaWNlLXBlcmlvZHMnKS5hZGRDbGFzcygnZGlzYWJsZWQnKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uIChqcVhIUiwgdGV4dFN0YXR1cywgZXJyb3JUaHJvd24pIHtcclxuXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGNvbXBsZXRlOiBmdW5jdGlvbiAoanFYSFIpIHtcclxuICAgICAgICAgICAgICAgICQoJyNhZ3JlZW1lbnQtbG9hZGVyJykuaGlkZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBnZXREaXNwbGF5VmFsdWVJbkRyb3Bkb3duID0gZnVuY3Rpb24gKCRkcm9wZG93biwgc2VsZWN0ZWRWYWx1ZSkge1xyXG4gICAgICAgIHZhciByZXN1bHQ7XHJcbiAgICAgICAgJGRyb3Bkb3duLmZpbmQoJ2xpJykuZWFjaChmdW5jdGlvbiAoaW5kZXgsIGl0ZW0pIHtcclxuICAgICAgICAgICAgdmFyIG1hdGNoVmFsdWUgPSAkKGl0ZW0pLmF0dHIoJ2RhdGEtdmFsdWUnKTtcclxuICAgICAgICAgICAgaWYgKG1hdGNoVmFsdWUgPT09IHNlbGVjdGVkVmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHJlc3VsdCA9ICQoaXRlbSkuZmluZCgnYScpLmh0bWwoKTtcclxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBnZXRIYXJ2ZXN0WWVhciA9IGZ1bmN0aW9uIChwZXJpb2RJbmZvKSB7XHJcbiAgICAgICAgdmFyIHN0YXJ0SW5kZXggPSBwZXJpb2RJbmZvLmluZGV4T2YoJzsnKTtcclxuICAgICAgICB2YXIgZGF0ZVBlcmlvZCA9IHBlcmlvZEluZm8uc3Vic3RyaW5nKHN0YXJ0SW5kZXggKyAxLCBzdGFydEluZGV4ICsgOSk7XHJcbiAgICAgICAgdmFyIHllYXIgPSBwYXJzZUludChkYXRlUGVyaW9kLnN1YnN0cmluZygwLCA0KSk7XHJcbiAgICAgICAgdmFyIGRhdGUgPSBwYXJzZUludChkYXRlUGVyaW9kLnN1YnN0cmluZyg0KSk7XHJcbiAgICAgICAgaWYgKGlzTmFOKHllYXIpIHx8IGlzTmFOKGRhdGUpKSByZXR1cm4gXCJcIjtcclxuXHJcbiAgICAgICAgcmV0dXJuIGRhdGUgPCA3MDEgPyB5ZWFyIC0gMSA6IHllYXI7XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBnZXRHcmFpblR5cGVzRm9yU3BvdEFncmVlbWVudCA9IGZ1bmN0aW9uIChwcmljZUFyZWFJZCwgcHJvZHVjdEl0ZW1JZCkge1xyXG4gICAgICAgICQoJyNhZ3JlZW1lbnQtbG9hZGVyJykuc2hvdygpO1xyXG4gICAgICAgICQoJyNwcm9kdWN0LWl0ZW0tbmFtZScpLmh0bWwoZ2V0RGlzcGxheVZhbHVlSW5Ecm9wZG93bigkKCcucHJvZHVjdERyb3Bkb3duIC5kcm9wZG93bicpLCBwcm9kdWN0SXRlbUlkKSk7XHJcbiAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgZGF0YVR5cGU6IFwianNvblwiLFxyXG4gICAgICAgICAgICB0eXBlOiAnZ2V0JyxcclxuICAgICAgICAgICAgdXJsOiAnL2FwaS9hZ3JlZW1lbnQvZ2V0LWdyYWluLXR5cGUtc3BvdC1hZ3JlZW1lbnQnLFxyXG4gICAgICAgICAgICBkYXRhOiB7IHByaWNlQXJlYUlkOiBwcmljZUFyZWFJZCwgcHJvZHVjdEl0ZW1JZDogcHJvZHVjdEl0ZW1JZCB9LFxyXG4gICAgICAgICAgICBjYWNoZTogZmFsc2UsXHJcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAkKCcjYWdyZWVtZW50Rm9ybSAuZ3JhaW5UeXBlRHJvcGRvd24gLmRyb3Bkb3duJykuaHRtbCgnJyk7XHJcbiAgICAgICAgICAgICAgICAkKCcjYWdyZWVtZW50Rm9ybSAuZ3JhaW5UeXBlRHJvcGRvd24gPiAuc2hvd2Nhc2UgPiBhJykuaHRtbCgnVsOkbGogc29ydCcpO1xyXG4gICAgICAgICAgICAgICAgJCgnI2FncmVlbWVudEZvcm0gI0dyYWluVHlwZScpLnZhbCgnJyk7XHJcbiAgICAgICAgICAgICAgICAkKCcjZ3JhaW4tdHlwZScpLmh0bWwoJycpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGRhdGEubGVuZ3RoID4gMCkge1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAkLmVhY2goZGF0YSwgZnVuY3Rpb24gKGluZGV4LCBpdGVtKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJy5ncmFpblR5cGVEcm9wZG93biAuZHJvcGRvd24nKS5hcHBlbmQoJzxsaSBkYXRhLXZhbHVlPVwiJyArIGl0ZW0uR3JhaW5OYW1lICsgJ1wiPjxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMClcIj4nICsgaXRlbS5HcmFpbk5hbWUgKyAnPC9hPjwvbGk+Jyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgc2V0RHJvcGRvd24oJCgnLmdyYWluVHlwZURyb3Bkb3duJyksICd0eXBlLTMnKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgJCgnI2FncmVlbWVudEZvcm0gLmdyYWluVHlwZURyb3Bkb3duJykuZmluZChcIi5zaG93Y2FzZSAuZHJvcGRvd24gbGkgYVwiKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlkYXRlRm9yRHJvcGRvd24odGhpcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIEdyb0NvbW1vbi5kaXNhYmxlT3JFbmFibGVFbGVtZW50KCcjYWdyZWVtZW50Rm9ybSAuYWdyZWVtZW50LWVsZW1lbnQnLCAkKHRoaXMpKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGdyYWluVHlwZSA9IGdldERpc3BsYXlWYWx1ZUluRHJvcGRvd24oJCgnLmdyYWluVHlwZURyb3Bkb3duIC5kcm9wZG93bicpLCAkKHRoaXMpLnBhcmVudCgpLmF0dHIoJ2RhdGEtdmFsdWUnKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJyNncmFpbi10eXBlJykuaHRtbChncmFpblR5cGUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXRTcG90QW5kRm9yd2FyUHJpY2VMaXN0Rm9yR3JhaW5UeXBlKHByaWNlQXJlYUlkLCBwcm9kdWN0SXRlbUlkLCBncmFpblR5cGUpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICQoJyNhZ3JlZW1lbnRGb3JtIC5ncmFpblR5cGVEcm9wZG93bicpLnBhcmVudCgpLnBhcmVudCgpLnJlbW92ZUNsYXNzKCdkaXNhYmxlZCcpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgJCgnI2FncmVlbWVudEZvcm0gLnBlcmlvZERyb3Bkb3duJykucGFyZW50KCkucGFyZW50KCkuYWRkQ2xhc3MoJ2Rpc2FibGVkJyk7XHJcbiAgICAgICAgICAgICAgICAkKCcuYWdyZWVtZW50LWRldGFpbCcpLmFkZENsYXNzKCdoaWRkZW4nKTtcclxuICAgICAgICAgICAgICAgIHRvZ2dsZURpc2FibGVOZXh0QnV0dG9uKCk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiAoanFYSFIsIHRleHRTdGF0dXMsIGVycm9yVGhyb3duKSB7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGNvbXBsZXRlOiBmdW5jdGlvbiAoanFYSFIpIHtcclxuICAgICAgICAgICAgICAgICQoJyNhZ3JlZW1lbnQtbG9hZGVyJykuaGlkZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBnZXRTcG90QW5kRm9yd2FyUHJpY2VMaXN0Rm9yR3JhaW5UeXBlID0gZnVuY3Rpb24gKHByaWNlQXJlYUlkLCBwcm9kdWN0SXRlbUlkLCBncmFpblR5cGUpIHtcclxuICAgICAgICB2YXIgcHJpY2VBcmVhSWQgPSAkKFwiaW5wdXRbbmFtZT0nUHJpY2VBcmVhJ11cIikudmFsKCk7XHJcbiAgICAgICAgdmFyIGlzSW50ZXJuYWwgPSBOdW1iZXIucGFyc2VJbnQoJCgnI0lzSW50ZXJuYWwnKS52YWwoKSkgPT0gMTtcclxuXHJcbiAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgZGF0YVR5cGU6IFwianNvblwiLFxyXG4gICAgICAgICAgICB0eXBlOiAnZ2V0JyxcclxuICAgICAgICAgICAgdXJsOiAnL2FwaS9hZ3JlZW1lbnQvZ2V0LWdyYWluLXByaWNlLXBlcmlvZHMvJyArIHByaWNlQXJlYUlkICsgJy8nICsgcHJvZHVjdEl0ZW1JZCArICcvJyArIGdyYWluVHlwZSArICcvJyArIGlzSW50ZXJuYWwsXHJcbiAgICAgICAgICAgIGNhY2hlOiBmYWxzZSxcclxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgIHZhciBpc0ludGVybmFsUGFnZSA9IE51bWJlci5wYXJzZUludCgkKCcjSXNJbnRlcm5hbCcpLnZhbCgpKSA9PSAxO1xyXG4gICAgICAgICAgICAgICAgJCgnI2FncmVlbWVudEZvcm0gI0FncmVlbWVudFBlcmlvZCcpLnZhbCgnJyk7XHJcbiAgICAgICAgICAgICAgICAkKCcjYWdyZWVtZW50Rm9ybSAucGVyaW9kRHJvcGRvd24gLmRyb3Bkb3duJykuaHRtbCgnJyk7XHJcbiAgICAgICAgICAgICAgICAkKCcjYWdyZWVtZW50Rm9ybSAucGVyaW9kRHJvcGRvd24gPiAuc2hvd2Nhc2UgPiBhJykuaHRtbCgnTGV2ZXJhbnNwZXJpb2QnKTtcclxuICAgICAgICAgICAgICAgIGlmIChpc0ludGVybmFsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnI3ByaWNlLWRldGFpbCcpLmh0bWwoJycpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgJCgnI3BlcmlvZC1kZXRhaWwnKS5odG1sKCcnKTtcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAoZGF0YS5sZW5ndGggPiAwKSB7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICQuZWFjaChkYXRhLCBmdW5jdGlvbiAoaW5kZXgsIGl0ZW0pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGF0dHJQcmljZSA9IGlzSW50ZXJuYWwgPyBcImRhdGEtcHJpY2U9XCIgKyBpdGVtLlByaWNlIDogXCJkYXRhLXByaWNlPScnXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBhdHRyVmFsdWUgPSBcImRhdGEtdmFsdWU9XCIgKyBpdGVtLlByaWNlVHlwZUlkICsgXCI7XCIgKyBpdGVtLlByaWNlUGVyaW9kO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKCcucGVyaW9kRHJvcGRvd24gLmRyb3Bkb3duJykuYXBwZW5kKFwiPGxpIFwiICsgYXR0clByaWNlICsgXCIgXCIgKyBhdHRyVmFsdWUgKyBcIj48YSBocmVmPSdqYXZhc2NyaXB0OnZvaWQoMCknPlwiICsgaXRlbS5EaXNwbGF5TGFiZWwgKyBcIjwvYT48L2xpPlwiKTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICBzZXREcm9wZG93bigkKCcucGVyaW9kRHJvcGRvd24nKSwgJ3R5cGUtMycpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAkKCcjYWdyZWVtZW50Rm9ybSAucGVyaW9kRHJvcGRvd24nKS5maW5kKFwiLnNob3djYXNlIC5kcm9wZG93biBsaSBhXCIpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRhdGVGb3JEcm9wZG93bih0aGlzKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgR3JvQ29tbW9uLmRpc2FibGVPckVuYWJsZUVsZW1lbnQoJyNhZ3JlZW1lbnRGb3JtIC5hZ3JlZW1lbnQtZWxlbWVudCcsICQodGhpcykpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGVsaXZlcnlQZXJpb2QgPSBnZXREaXNwbGF5VmFsdWVJbkRyb3Bkb3duKCQoJy5wZXJpb2REcm9wZG93biAuZHJvcGRvd24nKSwgJCh0aGlzKS5wYXJlbnQoKS5hdHRyKCdkYXRhLXZhbHVlJykpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKCcjcGVyaW9kLWRldGFpbCcpLmh0bWwoZGVsaXZlcnlQZXJpb2QpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzSW50ZXJuYWwpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwcmljZSA9ICQoJy5wZXJpb2REcm9wZG93biAuZHJvcGRvd24gLnNlbGVjdGVkJykuYXR0cignZGF0YS1wcmljZScpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnI3ByaWNlLWRldGFpbCcpLmh0bWwocHJpY2UpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoJCgnI0FncmVlbWVudFBlcmlvZCcpLnZhbCgpICE9ICcnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCcuYWdyZWVtZW50LWRldGFpbCcpLnJlbW92ZUNsYXNzKCdoaWRkZW4nKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKGpxWEhSLCB0ZXh0U3RhdHVzLCBlcnJvclRocm93bikge1xyXG5cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgY29tcGxldGU6IGZ1bmN0aW9uIChqcVhIUikge1xyXG4gICAgICAgICAgICAgICAgJCgnI2FncmVlbWVudC1sb2FkZXInKS5oaWRlKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH07XHJcblxyXG4gICAgdmFyIGluaXRFdmVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKCcjVXBwZXJQcmljZScpLmJsdXIoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAkKGZvcm1TZWxlY3RvcikudmFsaWRhdGUoKS5lbGVtZW50KFwiI0xvd2VyUHJpY2VcIik7XHJcbiAgICAgICAgICAgIHRvZ2dsZURpc2FibGVOZXh0QnV0dG9uKCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoJyNhcHByb3ZlQWdyZWVtZW50VGVybScpLmNoYW5nZShmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmICgkKHRoaXMpLmlzKCc6Y2hlY2tlZCcpKSB7XHJcbiAgICAgICAgICAgICAgICAkKCcjYWdyZWVtZW50U2F2ZUJ0bicpLmFkZENsYXNzKCdyZXZlcnNlLXN0YXRlJykucmVtb3ZlQ2xhc3MoJ2Rpc2FibGVkJyk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAkKCcjYWdyZWVtZW50U2F2ZUJ0bicpLmFkZENsYXNzKCdkaXNhYmxlZCcpLnJlbW92ZUNsYXNzKCdyZXZlcnNlLXN0YXRlJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChcIiNhZ3JlZW1lbnRGb3JtIC5zaG93Y2FzZSAuZHJvcGRvd24gYS5hZ3JlZW1lbnQtaXRlbVwiKS5lYWNoKGZ1bmN0aW9uIChpZHgsIGl0ZW0pIHtcclxuICAgICAgICAgICAgJChpdGVtKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgJGl0ZW0gPSAkKGl0ZW0pO1xyXG4gICAgICAgICAgICAgICAgdmFyIGFncmVlbWVudElkID0gJGl0ZW0uYXR0cihcImRhdGEtYWdyZWVtZW50aWRcIik7XHJcbiAgICAgICAgICAgICAgICB2YXIgcHJvZHVjdEl0ZW1JZCA9ICRpdGVtLmF0dHIoXCJkYXRhLXByb2R1Y3RJdGVtSWRcIik7XHJcbiAgICAgICAgICAgICAgICB2YXIgcHJpY2VBcmVhSWQgPSAkaXRlbS5hdHRyKFwiZGF0YS1wcmljZUFyZWFJZFwiKTtcclxuICAgICAgICAgICAgICAgIHZhciBncmFpblR5cGUgPSAkaXRlbS5hdHRyKFwiZGF0YS1ncmFpblR5cGVcIik7XHJcbiAgICAgICAgICAgICAgICB2YXIgcHJvZHVjdEl0ZW1OYW1lID0gJGl0ZW0uYXR0cihcImRhdGEtcHJvZHVjdEl0ZW1OYW1lXCIpO1xyXG4gICAgICAgICAgICAgICAgZ2V0UHJvdGVjdEFncmVlbWVudChhZ3JlZW1lbnRJZCwgcHJvZHVjdEl0ZW1JZCwgcHJpY2VBcmVhSWQsIGdyYWluVHlwZSwgcHJvZHVjdEl0ZW1OYW1lLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgR3JvQ29tbW9uLmRpc2FibGVPckVuYWJsZUVsZW1lbnQoJyNhZ3JlZW1lbnRGb3JtIC5hZ3JlZW1lbnQtZWxlbWVudCcsICQoaXRlbSkpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRvZ2dsZURpc2FibGVOZXh0QnV0dG9uKCk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIHNob3dPdmVydmlldygpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJCgnI2FncmVlbWVudEZvcm0gaW5wdXRbbmFtZT1cIldhdGNoVHlwZVwiXTpyYWRpbycpLmNoYW5nZShmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICAgICAgICB2YXIgY29udGFpbmVyID0gJChcImRpdltkYXRhLXNlY3VyZS1wcmljZV1cIik7XHJcbiAgICAgICAgICAgIHZhciBzdGF0dXMgPSAkKHRoaXMpLmF0dHIoXCJpZFwiKSA9PSBcIlNlY3VyZVByaWNlXCIgPyBcIm9uXCIgOiBcIm9mZlwiO1xyXG4gICAgICAgICAgICBjb250YWluZXIuYXR0cihcImRhdGEtc2VjdXJlLXByaWNlXCIsIHN0YXR1cyk7XHJcbiAgICAgICAgICAgIGlmIChzdGF0dXMgPT0gXCJvblwiKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgY3VycmVudFByaWNlID0gJChcIiNwcmljZS1kZXRhaWxcIikuaHRtbCgpO1xyXG4gICAgICAgICAgICAgICAgJChcIiNQcmljZVwiKS52YWwoY3VycmVudFByaWNlKTtcclxuICAgICAgICAgICAgICAgICQoXCIjUHJpY2VcIikucGFyZW50KCcuYWdyZWVtZW50LWVsZW1lbnQnKS5yZW1vdmVDbGFzcygnZGlzYWJsZWQnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICQoXCIjUHJpY2VcIikudmFsKCcnKTtcclxuICAgICAgICAgICAgICAgIEdyb0NvbW1vbi5kaXNhYmxlT3JFbmFibGVFbGVtZW50KCcjYWdyZWVtZW50Rm9ybSAuYWdyZWVtZW50LWVsZW1lbnQnLCAkKHRoaXMpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0b2dnbGVEaXNhYmxlTmV4dEJ1dHRvbigpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBmdW5jdGlvbiBzaG93T3ZlcnZpZXcoKSB7XHJcbiAgICAgICAgICAgICQoXCIjYXJlYS1zb3J0LW92ZXJ2aWV3XCIpLnJlbW92ZUNsYXNzKFwiaGlkZGVuXCIpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJChcIiNhZ3JlZW1lbnRGb3JtIC5hZ3JlZW1lbnQtZWxlbWVudCBpbnB1dFwiKS5lYWNoKGZ1bmN0aW9uIChpZHgsIGl0ZW0pIHtcclxuICAgICAgICAgICAgJChpdGVtKS5mb2N1c291dChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoJChcIiNBZ3JlZW1lbnRUeXBlXCIpLnZhbCgpID09IFwiU3BvcnRBbmRGb3J3YXJkQXZ0YWxcIiAmJiAkKHRoaXMpLmF0dHIoXCJpZFwiKSA9PSBcIkxvd2VyUHJpY2VcIikge1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIjQ29tbWl0UXVhbnRpdHlcIikucGFyZW50cyhcIi5hZ3JlZW1lbnQtZWxlbWVudFwiKS5yZW1vdmVDbGFzcyhcImRpc2FibGVkXCIpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgR3JvQ29tbW9uLmRpc2FibGVPckVuYWJsZUVsZW1lbnQoJyNhZ3JlZW1lbnRGb3JtIC5hZ3JlZW1lbnQtZWxlbWVudCcsICQoaXRlbSkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdG9nZ2xlRGlzYWJsZU5leHRCdXR0b24oKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoJyNhZ3JlZW1lbnRGb3JtIGlucHV0W25hbWU9XCJUYXJnZXRBY3Rpb25cIl06cmFkaW8nKS5jaGFuZ2UoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBHcm9Db21tb24uZGlzYWJsZU9yRW5hYmxlRWxlbWVudCgnI2FncmVlbWVudEZvcm0gLmFncmVlbWVudC1lbGVtZW50JywgJCh0aGlzKSk7XHJcbiAgICAgICAgICAgIHRvZ2dsZURpc2FibGVOZXh0QnV0dG9uKCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoJyNhZ3JlZW1lbnRGb3JtIGlucHV0W25hbWU9XCJEZWxpdmVyeU1vZGVcIl06cmFkaW8nKS5jaGFuZ2UoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBHcm9Db21tb24uZGlzYWJsZU9yRW5hYmxlRWxlbWVudCgnI2FncmVlbWVudEZvcm0gLmFncmVlbWVudC1lbGVtZW50JywgJCh0aGlzKSk7XHJcbiAgICAgICAgICAgIHRvZ2dsZURpc2FibGVOZXh0QnV0dG9uKCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoXCIjYWdyZWVtZW50Rm9ybSAuYWdyZWVtZW50LWVsZW1lbnQ6bGFzdCBpbnB1dFt0eXBlPXRleHRdXCIpLmtleXVwKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdG9nZ2xlRGlzYWJsZU5leHRCdXR0b24oKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJCgnI21vdmUtdG8tc3RlcDInKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmICgkKCkudmFsaWRhdGUpIHtcclxuICAgICAgICAgICAgICAgIHZhciBpc1ZhbGlkID0gJChmb3JtU2VsZWN0b3IpLnZhbGlkKCk7XHJcbiAgICAgICAgICAgICAgICBpZiAoaXNWYWxpZCkge1xyXG4gICAgICAgICAgICAgICAgICAgICQoJyNzcGFuX0F2dGFsJykuaHRtbChnZXREaXNwbGF5VmFsdWVJbkRyb3Bkb3duKCQoJy5hdnRhbERyb3Bkb3duIC5kcm9wZG93bicpLCAkKCcjQWdyZWVtZW50QXZ0YWwnKS52YWwoKSkpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoJyNzcGFuX0dyb2RhJykuaHRtbCgkKCcjcHJvZHVjdC1pdGVtLW5hbWUnKS5odG1sKCkpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoJyNzcGFuX1NvcnQnKS5odG1sKCQoJyNncmFpbi10eXBlJykuaHRtbCgpKTtcclxuICAgICAgICAgICAgICAgICAgICAkKCcjc3Bhbl9MZXZlcmFuc3BlcmlvZCcpLmh0bWwoZ2V0RGlzcGxheVZhbHVlSW5Ecm9wZG93bigkKCcucGVyaW9kRHJvcGRvd24gLmRyb3Bkb3duJyksICQoJyNBZ3JlZW1lbnRQZXJpb2QnKS52YWwoKSkgKyBcIiBcIiArIGdldEhhcnZlc3RZZWFyKCQoJyNBZ3JlZW1lbnRQZXJpb2QnKS52YWwoKSkpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoJyNzcGFuX1VwcGVyUHJpY2UnKS5odG1sKCQoJyNVcHBlclByaWNlJykudmFsKCkpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoJyNzcGFuX1VuZGVyUHJpY2UnKS5odG1sKCQoJyNMb3dlclByaWNlJykudmFsKCkpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoJyNzcGFuX1ByaWNlJykuaHRtbCgkKCcjUHJpY2UnKS52YWwoKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnI3NwYW5fUXVhbnRpdHknKS5odG1sKCQoJyNDb21taXRRdWFudGl0eScpLnZhbCgpKTtcclxuICAgICAgICAgICAgICAgICAgICAkKCcjc3Bhbl9UcmFuc3BvcnRUeXBlJykuaHRtbCgkKCdpbnB1dFtuYW1lPVwiRGVsaXZlcnlNb2RlXCJdOmNoZWNrZWQnKS5wcm9wKCdpZCcpKTtcclxuICAgICAgICAgICAgICAgICAgICAkKCcjc3Bhbl9Qcmlzc2FrcmEnKS5odG1sKCQoJ2lucHV0W25hbWU9XCJUYXJnZXRBY3Rpb25cIl06Y2hlY2tlZCcpLnByb3AoJ2lkJykpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoJyNzcGFuX0FncmVlbWVudERhdGUnKS5odG1sKCQoJyNQcmljZVdhdGNoRW5kRGF0ZScpLnZhbCgpKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgJCgnI3BTdGVwMScpLmFkZENsYXNzKCdoaWRkZW4nKTtcclxuICAgICAgICAgICAgICAgICAgICAkKCcjcFN0ZXAyJykucmVtb3ZlQ2xhc3MoJ2hpZGRlbicpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoJyNtb3ZlLXRvLXN0ZXAxJykuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAkKCcjcFN0ZXAyJykuYWRkQ2xhc3MoJ2hpZGRlbicpO1xyXG4gICAgICAgICAgICAkKCcjcFN0ZXAxJykucmVtb3ZlQ2xhc3MoJ2hpZGRlbicpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkKGZvcm1TZWxlY3RvcikuZmluZChcIi5zaG93Y2FzZSAuZHJvcGRvd24gbGkgYVwiKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhbGlkYXRlRm9yRHJvcGRvd24odGhpcyk7XHJcbiAgICAgICAgICAgIC8vZGlzYWJsZU9yRW5hYmxlRWxlbWVudCgkKHRoaXMpKTtcclxuICAgICAgICAgICAgR3JvQ29tbW9uLmRpc2FibGVPckVuYWJsZUVsZW1lbnQoJyNhZ3JlZW1lbnRGb3JtIC5hZ3JlZW1lbnQtZWxlbWVudCcsICQodGhpcykpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkKCcjYWdyZWVtZW50Rm9ybSAucGVyaW9kRHJvcGRvd24gLmRyb3Bkb3duIGEnKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICQoJy5hZ3JlZW1lbnQtZGV0YWlsJykucmVtb3ZlQ2xhc3MoJ2hpZGRlbicpO1xyXG4gICAgICAgICAgICAkKCcjbGFibGVfUGVyaW9kJykuaHRtbChnZXREaXNwbGF5VmFsdWVJbkRyb3Bkb3duKCQoJy5wZXJpb2REcm9wZG93biAuZHJvcGRvd24nKSwgJCh0aGlzKS5wYXJlbnQoKS5hdHRyKCdkYXRhLXZhbHVlJykpKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChcImEjYWdyZW1lbnQtaW5mb1wiKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICQoXCIjYWdyZWVtZW50LWludHJvZHVjZVwiKS5yZW1vdmVDbGFzcyhcImhpZGRlblwiKTtcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcblxyXG4gICAgdmFyIGluaXQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgLy8gaW5pdCB0b3RhbC1mYXZvdXJpdGUtaXRlbXNcclxuICAgICAgICAkKCcjQ29tbWl0UXVhbnRpdHksICNVcHBlclByaWNlLCAjTG93ZXJQcmljZScpLnZhbCgnJyk7XHJcbiAgICAgICAgYWRkVmFsaWRhdGlvbigpO1xyXG4gICAgICAgIHZhbGlkYXRlUHJpY2VIZWRnZSgpO1xyXG4gICAgICAgIGluaXRFdmVudCgpO1xyXG4gICAgICAgIGluaXRQcmljZVdhdGNoRW5kRGF0ZSgpO1xyXG4gICAgICAgIGFncmVlbWVudEVsZW1lbnRzID0gJCgnLmFncmVlbWVudC1lbGVtZW50Jyk7XHJcbiAgICB9O1xyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgaW5pdDogaW5pdCxcclxuICAgICAgICBnZXRQcm90ZWN0QWdyZWVtZW50OiBnZXRQcm90ZWN0QWdyZWVtZW50LFxyXG4gICAgICAgIGdldEdyYWluVHlwZXNGb3JTcG90QWdyZWVtZW50OiBnZXRHcmFpblR5cGVzRm9yU3BvdEFncmVlbWVudFxyXG4gICAgfTtcclxufSkoKTtcclxuXHJcbnZhciBQcmljZUFsZXJ0UGFnZSA9IFByaWNlQWxlcnRQYWdlIHx8IChmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgdmFyIGRlbGV0ZVByaWNlQWxlcnQgPSBmdW5jdGlvbiAocHJpY2VXYXRjaCwgaWQpIHtcclxuICAgICAgICB2YXIgcGFyYW1ldGVycyA9IFwieydpZCc6J1wiICsgaWQgKyBcIid9XCI7XHJcbiAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgdHlwZTogJ1BPU1QnLFxyXG4gICAgICAgICAgICB1cmw6ICcvYXBpL3ByaWNlLWFsZXJ0L0RlbGV0ZVByaWNlV2F0Y2gnLFxyXG4gICAgICAgICAgICBkYXRhVHlwZTogXCJqc29uXCIsXHJcbiAgICAgICAgICAgIGNvbnRlbnRUeXBlOiBcImFwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9dXRmLThcIixcclxuICAgICAgICAgICAgZGF0YTogcGFyYW1ldGVycyxcclxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2UuaXNSZW1vdmVkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJChwcmljZVdhdGNoKS5yZW1vdmUoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGFsZXJ0KFwiRXJyb3JcIik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiAocmVzcG9uc2UpIHsgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbiAgICB2YXIgZGVsZXRlUHJpY2VBbGVydEV2ZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQoXCIucHJpY2VBbGVydERlbGV0ZVwiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgIHZhciAkaXRlbSA9ICQodGhpcyk7XHJcbiAgICAgICAgICAgIERlbGl2ZXJ5QXNzdXJhbmNlTW9kdWxlLmNvbmZpcm1EaWFsb2coZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGlkID0gJGl0ZW0uYXR0cihcImRhdGEtdmFsdWVcIik7XHJcbiAgICAgICAgICAgICAgICB2YXIgaXRlbVByaWNlV2F0Y2ggPSAkaXRlbS5wYXJlbnRzKFwidHJcIik7XHJcbiAgICAgICAgICAgICAgICBkZWxldGVQcmljZUFsZXJ0KGl0ZW1QcmljZVdhdGNoLCBpZCk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBpbml0RXZlbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgZGVsZXRlUHJpY2VBbGVydEV2ZW50KCk7XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBpbml0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGluaXRFdmVudCgpO1xyXG4gICAgfTtcclxuXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGluaXQ6IGluaXRcclxuICAgIH07XHJcbn0pKCk7XHJcblxyXG52YXIgR3JhaW5QcmljZVBhZ2UgPSBHcmFpblByaWNlUGFnZSB8fCAoZnVuY3Rpb24gKCkge1xyXG5cclxuICAgIHZhciBnZXRQcmljZVBlcmlvZGJ5QXJlYSA9IGZ1bmN0aW9uIChpZCkge1xyXG4gICAgICAgIHZhciB0YWJsZVJlc3VsdCA9ICQoXCIjcHJpY2UtcGVyaW9kLXJlc3VsdFwiKTtcclxuICAgICAgICB2YXIgcGFyYW1ldGVycyA9IFwieydwcmljZUFyZWFJZCc6J1wiICsgaWQgKyBcIid9XCI7XHJcbiAgICAgICAgJChcIiNsb2FkZXJcIikuc2hvdygpO1xyXG4gICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgIHR5cGU6ICdQT1NUJyxcclxuICAgICAgICAgICAgdXJsOiAnL2FwaS9wcmljZS1ncmFpbi9HZXRQcmljZVBlcmlvZGJ5QXJlYScsXHJcbiAgICAgICAgICAgIGNvbnRlbnRUeXBlOiBcImFwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9dXRmLThcIixcclxuICAgICAgICAgICAgZGF0YTogcGFyYW1ldGVycyxcclxuXHJcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG4gICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLnJlc3VsdFByaWNlUGVyaW9kcyA9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICB0YWJsZVJlc3VsdC5odG1sKHJlc3BvbnNlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHRhYmxlUmVzdWx0Lmh0bWwoXCI8ZGl2PkluZ2Egc3Bhbm5tw6Vsc3ByaXNlciBmaW5ucyBmw7ZyIG9tcsOlZGU8L2Rpdj5cIik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAkKFwiI2xvYWRlclwiKS5oaWRlKCk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB0YWJsZVJlc3VsdC5lbXB0eSgpO1xyXG4gICAgICAgICAgICAgICAgYWxlcnQoXCJFcnJvclwiKTtcclxuICAgICAgICAgICAgICAgICQoXCIjbG9hZGVyXCIpLmhpZGUoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbiAgICB2YXIgZ2V0UHJpY2VQZXJpb2RieUFyZWFFdmVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgZHJvcGRvd25QcmljZUFyZWFzID0gJCgnI3ByaWNlLWFyZWEtbGlzdCAuZHJvcGRvd24gbGkgYScpO1xyXG4gICAgICAgIGRyb3Bkb3duUHJpY2VBcmVhcy5vbihcImNsaWNrXCIsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgIHZhciBwcmljZUFyZWFJZCA9ICQodGhpcykucGFyZW50KCkuYXR0cignZGF0YS12YWx1ZScpO1xyXG4gICAgICAgICAgICBnZXRQcmljZVBlcmlvZGJ5QXJlYShwcmljZUFyZWFJZCk7XHJcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcblxyXG4gICAgdmFyIGluaXRFdmVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBnZXRQcmljZVBlcmlvZGJ5QXJlYUV2ZW50KCk7XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBpbml0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGluaXRFdmVudCgpO1xyXG4gICAgfTtcclxuXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGluaXQ6IGluaXRcclxuICAgIH07XHJcbn0pKCk7XHJcblxyXG52YXIgRHJ5aW5nQWdyZWVtZW50ID0gRHJ5aW5nQWdyZWVtZW50IHx8IChmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgdmFyIGluaXRFdmVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKCcjYXBwcm92ZURyeWluZ0FncmVlbWVudFRlcm0nKS5jaGFuZ2UoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAoJCh0aGlzKS5pcygnOmNoZWNrZWQnKSkge1xyXG4gICAgICAgICAgICAgICAgJCgnI2FwcHJvdmVEcnlpbmdBZ3JlZW1lbnRUZXJtSW5TdGVwMicpLnByb3AoJ2NoZWNrZWQnLCB0cnVlKTtcclxuICAgICAgICAgICAgICAgICQoJyNkcnlpbmdCdG5Nb3ZlVG9TdGVwMiwgI2RyeWluZ0J0bk1vdmVUb1N0ZXAzJykucmVtb3ZlQ2xhc3MoJ2Rpc2FibGVkJyk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAkKCcjYXBwcm92ZURyeWluZ0FncmVlbWVudFRlcm1JblN0ZXAyJykucHJvcCgnY2hlY2tlZCcsIGZhbHNlKTtcclxuICAgICAgICAgICAgICAgICQoJyNkcnlpbmdCdG5Nb3ZlVG9TdGVwMiwgI2RyeWluZ0J0bk1vdmVUb1N0ZXAzJykuYWRkQ2xhc3MoJ2Rpc2FibGVkJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJCgnI2RyeWluZ0J0bk1vdmVUb1N0ZXAyJykuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAkKCcjZHJ5aW5nU3RlcDEnKS5hZGRDbGFzcygnaGlkZGVuJyk7XHJcbiAgICAgICAgICAgICQoJyNkcnlpbmdTdGVwMicpLnJlbW92ZUNsYXNzKCdoaWRkZW4nKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJCgnI2RyeWluZ0J0bkJhY2tUb1N0ZXAxJykuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAkKCcjZHJ5aW5nU3RlcDInKS5hZGRDbGFzcygnaGlkZGVuJyk7XHJcbiAgICAgICAgICAgICQoJyNkcnlpbmdTdGVwMScpLnJlbW92ZUNsYXNzKCdoaWRkZW4nKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgaWYgKCQoJyNnZW5lcmF0ZURyeWluZ1BkZicpLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgJCgnI2dlbmVyYXRlRHJ5aW5nUGRmJylbMF0uY2xpY2soKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBpbml0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGluaXRFdmVudCgpO1xyXG4gICAgfTtcclxuXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGluaXQ6IGluaXRcclxuICAgIH07XHJcbn0pKCk7XHJcblxyXG52YXIgUG9vbEFuZERlcGFBZ3JlZW1lbnQgPSBQb29sQW5kRGVwYUFncmVlbWVudCB8fCAoZnVuY3Rpb24gKCkge1xyXG5cclxuICAgIHZhciB2YWxpZGF0ZUZvckRyb3Bkb3duID0gZnVuY3Rpb24gKHNlbGYpIHtcclxuICAgICAgICB2YXIgaW5wdXRFbGVtZW50ID0gJChzZWxmKS5wYXJlbnRzKFwiLnNob3djYXNlXCIpLmZpbmQoXCJpbnB1dC5mb3JtLWVsZW1lbnRcIik7XHJcbiAgICAgICAgdmFyIGlucHV0U2VsZWN0b3IgPSBpbnB1dEVsZW1lbnQuYXR0cignaWQnKTtcclxuICAgICAgICAkKFwiI25ld1B1cmNoYXNpbmdBZ3JlZW1lbnRGb3JtXCIpLnZhbGlkYXRlKCkuZWxlbWVudCgnIycgKyBpbnB1dFNlbGVjdG9yKTtcclxuICAgICAgICB0b2dnbGVEaXNhYmxlTmV4dEJ1dHRvbigpO1xyXG4gICAgfTtcclxuXHJcbiAgICB2YXIgZW5hYmxlRGVsaXZlcnlNb2RlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQoJy5kaXYtRGVsaXZlcnlNb2RlJykucmVtb3ZlQ2xhc3MoJ2Rpc2FibGVkJyk7XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBnZXREaXNwbGF5VmFsdWVJbkRyb3Bkb3duID0gZnVuY3Rpb24gKCRkcm9wZG93biwgc2VsZWN0ZWRWYWx1ZSkge1xyXG4gICAgICAgIHZhciByZXN1bHQ7XHJcbiAgICAgICAgJGRyb3Bkb3duLmZpbmQoJ2xpJykuZWFjaChmdW5jdGlvbiAoaW5kZXgsIGl0ZW0pIHtcclxuICAgICAgICAgICAgdmFyIG1hdGNoVmFsdWUgPSAkKGl0ZW0pLmF0dHIoJ2RhdGEtdmFsdWUnKTtcclxuICAgICAgICAgICAgaWYgKG1hdGNoVmFsdWUgPT09IHNlbGVjdGVkVmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHJlc3VsdCA9ICQoaXRlbSkuZmluZCgnYScpLmh0bWwoKTtcclxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfTtcclxuXHJcbiAgICB2YXIgZ2V0SGFydmVzdFllYXIgPSBmdW5jdGlvbiAocGVyaW9kSW5mbykge1xyXG4gICAgICAgIHZhciBzdGFydEluZGV4ID0gcGVyaW9kSW5mby5pbmRleE9mKCc7Jyk7XHJcbiAgICAgICAgdmFyIGRhdGVQZXJpb2QgPSBwZXJpb2RJbmZvLnN1YnN0cmluZyhzdGFydEluZGV4ICsgMSwgc3RhcnRJbmRleCArIDkpO1xyXG4gICAgICAgIHZhciB5ZWFyID0gcGFyc2VJbnQoZGF0ZVBlcmlvZC5zdWJzdHJpbmcoMCwgNCkpO1xyXG4gICAgICAgIHZhciBkYXRlID0gcGFyc2VJbnQoZGF0ZVBlcmlvZC5zdWJzdHJpbmcoNCkpO1xyXG4gICAgICAgIGlmIChpc05hTih5ZWFyKSB8fCBpc05hTihkYXRlKSkgcmV0dXJuIFwiXCI7XHJcblxyXG4gICAgICAgIHJldHVybiBkYXRlIDwgNzAxID8geWVhciAtIDEgOiB5ZWFyO1xyXG4gICAgfTtcclxuXHJcbiAgICB2YXIgdmFsaWRhdGVGb3JtID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmICgkKCkudmFsaWRhdGUpICQoJyNuZXdQdXJjaGFzaW5nQWdyZWVtZW50Rm9ybScpLnZhbGlkYXRlKHtcclxuICAgICAgICAgICAgaWdub3JlOiBbXSxcclxuICAgICAgICAgICAgZXJyb3JFbGVtZW50Q2xhc3M6ICdlcnJvcicsXHJcbiAgICAgICAgICAgIGVycm9yQ2xhc3M6ICdlcnJvci1pdGVtJyxcclxuICAgICAgICAgICAgZXJyb3JFbGVtZW50OiAnc3BhbicsXHJcbiAgICAgICAgICAgIG9ua2V5dXA6IGZhbHNlLFxyXG4gICAgICAgICAgICBydWxlczoge1xyXG4gICAgICAgICAgICAgICAgQ29tbWl0UXVhbnRpdHk6IHtcclxuICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICBkaWdpdHM6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgbWluOiAxMlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIERlbGl2ZXJ5TW9kZToge1xyXG4gICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgUHJvZHVjdEl0ZW1JZDoge1xyXG4gICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgR3JhaW5UeXBlOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBBZ3JlZW1lbnRQZXJpb2Q6IHtcclxuICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBtZXNzYWdlczoge1xyXG4gICAgICAgICAgICAgICAgQ29tbWl0UXVhbnRpdHk6IHtcclxuICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogXCJLdmFudGl0ZXQgdG9uIG3DpXN0ZSBhbmdlc1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIGRpZ2l0czogXCJLdmFudGl0ZXQgdG9uIGFuZ2VzIG51bWVyaXNrdFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIG1pbjogXCJBbmdpdmVuIGt2YW50aXRldCBtw6VzdGUgdmFyYSAxMiB0b24gZWxsZXIgbWVyXCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBEZWxpdmVyeU1vZGU6IHtcclxuICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogXCJUcmFuc3BvcnRzw6R0dCBtw6VzdGUgdsOkbGphc1wiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgUHJvZHVjdEl0ZW1JZDoge1xyXG4gICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiBcIkdyw7ZkYSBtw6VzdGUgdsOkbGphc1wiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgR3JhaW5UeXBlOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IFwiU29ydCBtw6VzdGUgdsOkbGphc1wiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgQWdyZWVtZW50UGVyaW9kOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IFwiTGV2ZXJhbnNzw6R0dCBtw6VzdGUgdsOkbGphc1wiXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGhpZ2hsaWdodDogZnVuY3Rpb24gKGVsZW1lbnQsIGVycm9yQ2xhc3MsIHZhbGlkQ2xhc3MpIHtcclxuICAgICAgICAgICAgICAgICQoZWxlbWVudCkuYWRkQ2xhc3ModGhpcy5zZXR0aW5ncy5lcnJvckVsZW1lbnRDbGFzcykucmVtb3ZlQ2xhc3MoZXJyb3JDbGFzcyk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHVuaGlnaGxpZ2h0OiBmdW5jdGlvbiAoZWxlbWVudCwgZXJyb3JDbGFzcywgdmFsaWRDbGFzcykge1xyXG4gICAgICAgICAgICAgICAgJChlbGVtZW50KS5yZW1vdmVDbGFzcyh0aGlzLnNldHRpbmdzLmVycm9yRWxlbWVudENsYXNzKS5yZW1vdmVDbGFzcyhlcnJvckNsYXNzKTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZXJyb3JQbGFjZW1lbnQ6IGZ1bmN0aW9uIChlcnJvciwgZWxlbWVudCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIHR5cGVFbGVtZW50ID0gJChlbGVtZW50KS5hdHRyKCd0eXBlJyk7XHJcbiAgICAgICAgICAgICAgICBpZiAodHlwZUVsZW1lbnQgPT09ICdyYWRpbycpIHtcclxuICAgICAgICAgICAgICAgICAgICBlbGVtZW50LnBhcmVudCgnZGl2LmxtX19yYWRpbycpLnBhcmVudCgpLmJlZm9yZShlcnJvcik7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQuYWZ0ZXIoZXJyb3IpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBzdWJtaXRIYW5kbGVyOiBmdW5jdGlvbiAoZm9ybSkge1xyXG4gICAgICAgICAgICAgICAgaWYgKCQoJyNhcHByb3ZlUG9vbEFncmVlbWVudFRlcm0nKS5pcygnOmNoZWNrZWQnKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGZvcm0uc3VibWl0KCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciB0b2dnbGVEaXNhYmxlTmV4dEJ1dHRvbiA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgY29tbWl0UXVhbnRpdHkgPSBwYXJzZUludCgkKCcjQ29tbWl0UXVhbnRpdHknKS52YWwoKSk7XHJcbiAgICAgICAgdmFyIGlzVmFsaWQgPSAkKCcjUHJvZHVjdEl0ZW1JZCcpLnZhbCgpICE9ICcnICYmXHJcbiAgICAgICAgICAgICQoJyNHcmFpblR5cGUnKS52YWwoKSAhPSAnJyAmJlxyXG4gICAgICAgICAgICAkKCdpbnB1dFtuYW1lPVwiRGVsaXZlcnlNb2RlXCJdOmNoZWNrZWQnKS5sZW5ndGggPiAwICYmXHJcbiAgICAgICAgICAgICQoJyNBZ3JlZW1lbnRQZXJpb2QnKS52YWwoKSAhPSAnJyAmJlxyXG4gICAgICAgICAgICAhaXNOYU4oY29tbWl0UXVhbnRpdHkpICYmIGNvbW1pdFF1YW50aXR5ID49IDEyO1xyXG4gICAgICAgIGlmIChpc1ZhbGlkKVxyXG4gICAgICAgICAgICAkKCcjYnRuTW92ZVRvU3RlcDInKS5yZW1vdmVDbGFzcygnZGlzYWJsZWQnKTtcclxuICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICQoJyNidG5Nb3ZlVG9TdGVwMicpLmFkZENsYXNzKCdkaXNhYmxlZCcpO1xyXG4gICAgfTtcclxuXHJcbiAgICB2YXIgZ2V0R3JhaW5UeXBlcyA9IGZ1bmN0aW9uIChwcmljZUFyZWFJZCwgcHJvZHVjdEl0ZW1JZCwgYWdyZWVtZW50VHlwZSkge1xyXG4gICAgICAgICQoJyNhZ3JlZW1lbnQtbG9hZGVyJykuc2hvdygpO1xyXG4gICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgIGRhdGFUeXBlOiBcImpzb25cIixcclxuICAgICAgICAgICAgdHlwZTogJ2dldCcsXHJcbiAgICAgICAgICAgIHVybDogJy9hcGkvYWdyZWVtZW50L2dldC1ncmFpbi10eXBlJyxcclxuICAgICAgICAgICAgZGF0YTogeyBwcmljZUFyZWFJZDogcHJpY2VBcmVhSWQsIHByb2R1Y3RJdGVtSWQ6IHByb2R1Y3RJdGVtSWQsIGFncmVlbWVudFR5cGU6IGFncmVlbWVudFR5cGUgfSxcclxuICAgICAgICAgICAgY2FjaGU6IGZhbHNlLFxyXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgJCgnLmdyYWluVHlwZURyb3Bkb3duIC5kcm9wZG93bicpLmh0bWwoJycpO1xyXG4gICAgICAgICAgICAgICAgJCgnLmdyYWluVHlwZURyb3Bkb3duID4gLnNob3djYXNlID4gYScpLmh0bWwoJ1bDpGxqIHNvcnQnKTtcclxuICAgICAgICAgICAgICAgICQoJyNHcmFpblR5cGUnKS52YWwoJycpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGRhdGEubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICQuZWFjaChkYXRhLCBmdW5jdGlvbiAoaW5kZXgsIGl0ZW0pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJCgnLmdyYWluVHlwZURyb3Bkb3duIC5kcm9wZG93bicpLmFwcGVuZCgnPGxpIGRhdGEtdmFsdWU9XCInICsgaXRlbS5HcmFpbk5hbWUgKyAnXCI+PGEgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiIG9uY2xpY2s9XCJQb29sQW5kRGVwYUFncmVlbWVudC5lbmFibGVEZWxpdmVyeU1vZGUoKVwiPicgKyBpdGVtLkdyYWluTmFtZSArICc8L2E+PC9saT4nKTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgc2V0RHJvcGRvd24oJCgnLmdyYWluVHlwZURyb3Bkb3duJyksICd0eXBlLTMnKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgJCgnLmdyYWluVHlwZURyb3Bkb3duJykuZmluZChcIi5zaG93Y2FzZSAuZHJvcGRvd24gbGkgYVwiKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlkYXRlRm9yRHJvcGRvd24odGhpcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICQoJy5ncmFpblR5cGVEcm9wZG93bicpLnBhcmVudCgpLnBhcmVudCgpLnJlbW92ZUNsYXNzKCdkaXNhYmxlZCcpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdG9nZ2xlRGlzYWJsZU5leHRCdXR0b24oKTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uIChqcVhIUiwgdGV4dFN0YXR1cywgZXJyb3JUaHJvd24pIHtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgY29tcGxldGU6IGZ1bmN0aW9uIChqcVhIUikge1xyXG4gICAgICAgICAgICAgICAgJCgnI2FncmVlbWVudC1sb2FkZXInKS5oaWRlKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH07XHJcblxyXG4gICAgdmFyIGluaXRFdmVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKCcjbmV3UHVyY2hhc2luZ0FncmVlbWVudEZvcm0gaW5wdXRbbmFtZT1cIkRlbGl2ZXJ5TW9kZVwiXTpyYWRpbycpLmNoYW5nZShmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIEdyb0NvbW1vbi5kaXNhYmxlT3JFbmFibGVFbGVtZW50KCcjbmV3UHVyY2hhc2luZ0FncmVlbWVudEZvcm0gLmFncmVlbWVudC1lbGVtZW50JywgJCh0aGlzKSk7XHJcbiAgICAgICAgICAgIHRvZ2dsZURpc2FibGVOZXh0QnV0dG9uKCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoJyNuZXdQdXJjaGFzaW5nQWdyZWVtZW50Rm9ybSAucGVyaW9kRHJvcGRvd24gLmRyb3Bkb3duIGEnKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIEdyb0NvbW1vbi5kaXNhYmxlT3JFbmFibGVFbGVtZW50KCcjbmV3UHVyY2hhc2luZ0FncmVlbWVudEZvcm0gLmFncmVlbWVudC1lbGVtZW50JywgJCh0aGlzKSk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoXCIjbmV3UHVyY2hhc2luZ0FncmVlbWVudEZvcm0gLmFncmVlbWVudC1lbGVtZW50Omxhc3QgaW5wdXRbdHlwZT10ZXh0XVwiKS5rZXl1cChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRvZ2dsZURpc2FibGVOZXh0QnV0dG9uKCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoJyNhcHByb3ZlUG9vbEFncmVlbWVudFRlcm0nKS5jaGFuZ2UoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAoJCh0aGlzKS5pcygnOmNoZWNrZWQnKSkge1xyXG4gICAgICAgICAgICAgICAgJCgnI2FncmVlbWVudFNhdmVCdG4nKS5hZGRDbGFzcygncmV2ZXJzZS1zdGF0ZScpLnJlbW92ZUNsYXNzKCdkaXNhYmxlZCcpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgJCgnI2FncmVlbWVudFNhdmVCdG4nKS5hZGRDbGFzcygnZGlzYWJsZWQnKS5yZW1vdmVDbGFzcygncmV2ZXJzZS1zdGF0ZScpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoJyNidG5Nb3ZlVG9TdGVwMicpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKCQoKS52YWxpZGF0ZSkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGlzVmFsaWQgPSAkKFwiI25ld1B1cmNoYXNpbmdBZ3JlZW1lbnRGb3JtXCIpLnZhbGlkKCk7XHJcbiAgICAgICAgICAgICAgICBpZiAoaXNWYWxpZCkge1xyXG4gICAgICAgICAgICAgICAgICAgICQoJyNzcGFuX0dyb2RhJykuaHRtbChnZXREaXNwbGF5VmFsdWVJbkRyb3Bkb3duKCQoJy5wcm9kdWN0RHJvcGRvd24gLmRyb3Bkb3duJyksICQoJyNQcm9kdWN0SXRlbUlkJykudmFsKCkpKTtcclxuICAgICAgICAgICAgICAgICAgICAkKCcjc3Bhbl9Tb3J0JykuaHRtbChnZXREaXNwbGF5VmFsdWVJbkRyb3Bkb3duKCQoJy5ncmFpblR5cGVEcm9wZG93biAuZHJvcGRvd24nKSwgJCgnI0dyYWluVHlwZScpLnZhbCgpKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnI3NwYW5fUGVyaW9kJykuaHRtbChnZXREaXNwbGF5VmFsdWVJbkRyb3Bkb3duKCQoJy5wZXJpb2REcm9wZG93biAuZHJvcGRvd24nKSwgJCgnI0FncmVlbWVudFBlcmlvZCcpLnZhbCgpKSArIFwiIFwiICsgZ2V0SGFydmVzdFllYXIoJCgnI0FncmVlbWVudFBlcmlvZCcpLnZhbCgpKSk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICQoJyNzcGFuX1F1YW50aXR5JykuaHRtbCgkKCcjQ29tbWl0UXVhbnRpdHknKS52YWwoKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnI3NwYW5fVHJhbnNwb3J0VHlwZScpLmh0bWwoJCgnaW5wdXRbbmFtZT1cIkRlbGl2ZXJ5TW9kZVwiXTpjaGVja2VkJykucHJvcCgnaWQnKSk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICQoJyNwU3RlcDEnKS5hZGRDbGFzcygnaGlkZGVuJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnI3BTdGVwMicpLnJlbW92ZUNsYXNzKCdoaWRkZW4nKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkKCcjYnRuQmFja1RvU3RlcDEnKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICQoJyNwU3RlcDInKS5hZGRDbGFzcygnaGlkZGVuJyk7XHJcbiAgICAgICAgICAgICQoJyNwU3RlcDEnKS5yZW1vdmVDbGFzcygnaGlkZGVuJyk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoJyNuZXdQdXJjaGFzaW5nQWdyZWVtZW50Rm9ybScpLmZpbmQoXCIuc2hvd2Nhc2UgLmRyb3Bkb3duIGxpIGFcIikuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YWxpZGF0ZUZvckRyb3Bkb3duKHRoaXMpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkKCcjbmV3UHVyY2hhc2luZ0FncmVlbWVudEZvcm0gI0NvbW1pdFF1YW50aXR5JykuYmx1cihmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRvZ2dsZURpc2FibGVOZXh0QnV0dG9uKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBpbml0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGluaXRFdmVudCgpO1xyXG4gICAgICAgIHZhbGlkYXRlRm9ybSgpO1xyXG4gICAgfTtcclxuXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGluaXQ6IGluaXQsXHJcbiAgICAgICAgZ2V0R3JhaW5UeXBlczogZ2V0R3JhaW5UeXBlcyxcclxuICAgICAgICBlbmFibGVEZWxpdmVyeU1vZGU6IGVuYWJsZURlbGl2ZXJ5TW9kZVxyXG4gICAgfTtcclxufSkoKTtcclxuIiwiJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIG15VGltZUJvb2tpbmcgPSBuZXcgVGltZUJvb2tpbmdQYWdlKCk7XHJcbiAgICBteVRpbWVCb29raW5nLmluaXQoKTtcclxuICAgICQoZG9jdW1lbnQpLnRyaWdnZXIoXCJlbmhhbmNlLnRhYmxlc2F3XCIpO1xyXG59KTtcclxuXHJcbnZhciBUaW1lQm9va2luZ0Z1bmN0aW9uID0gVGltZUJvb2tpbmdGdW5jdGlvbiB8fCAoZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIGJsb2NrVUkgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgJChcIiNsb2FkZXJcIikuc2hvdygpO1xyXG4gICAgfTtcclxuICAgIHZhciB1bkJsb2NrVUkgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgJChcIiNsb2FkZXJcIikuaGlkZSgpO1xyXG4gICAgfTtcclxuICAgIHZhciBmaWxsQ29udGVudFRvTW9kYWwgPSBmdW5jdGlvbiAoZGlhbG9nSWQsIGhlYWRlciwgY29udGVudCwgb3BlbkRpYWxvZywgZGlhbG9nVHlwZSkge1xyXG4gICAgICAgIHZhciAkZGlhbG9nQXJlYSA9ICQoZGlhbG9nSWQpO1xyXG4gICAgICAgIHZhciAkaWNvbkVsZW1lbnQgPSAkZGlhbG9nQXJlYS5maW5kKFwic3Bhbi5wb3B1cC10eXBlXCIpO1xyXG4gICAgICAgIGlmIChkaWFsb2dUeXBlKSB7XHJcbiAgICAgICAgICAgICRpY29uRWxlbWVudC5yZW1vdmVDbGFzcyhcImhpZGRlblwiKTtcclxuICAgICAgICAgICAgJGljb25FbGVtZW50LmFkZENsYXNzKEdyb0NvbW1vbi5nZXRNb2RhbEljb25DbGFzcyhkaWFsb2dUeXBlKSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgJGljb25FbGVtZW50LmFkZENsYXNzKFwiaGlkZGVuXCIpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJGRpYWxvZ0FyZWEuZmluZChcIi5sbV9fd2lkZS1tb2RhbF9fdGl0bGVcIikuaHRtbChoZWFkZXIpO1xyXG4gICAgICAgICRkaWFsb2dBcmVhLmZpbmQoXCJwXCIpLmFwcGVuZChjb250ZW50KTtcclxuICAgICAgICAkZGlhbG9nQXJlYS5maW5kKFwiLmJ0bi1va1wiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgJGRpYWxvZ0FyZWEuYWRkQ2xhc3MoXCJoaWRkZW5cIik7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgaWYgKG9wZW5EaWFsb2cpIHtcclxuICAgICAgICAgICAgJGRpYWxvZ0FyZWEucmVtb3ZlQ2xhc3MoXCJoaWRkZW5cIik7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIHZhciBjbGVhckNvbnRlbnRUb01vZGFsID0gZnVuY3Rpb24gKGRpYWxvZ0lkKSB7XHJcbiAgICAgICAgdmFyIGRpYWxvZ0FyZWEgPSAkKGRpYWxvZ0lkKTtcclxuICAgICAgICBkaWFsb2dBcmVhLmZpbmQoXCIubG1fX3dpZGUtbW9kYWxfX3RpdGxlXCIpLmh0bWwoXCJcIik7XHJcbiAgICAgICAgZGlhbG9nQXJlYS5maW5kKFwicFwiKS5odG1sKFwiXCIpO1xyXG4gICAgICAgIGRpYWxvZ0FyZWEuZmluZChcIi5idG4tb2tcIikudW5iaW5kKFwiY2xpY2tcIik7XHJcbiAgICB9O1xyXG4gICAgdmFyIGZpbGxDb250ZW50VG9EZWxldGVEaWFsb2cgPSBmdW5jdGlvbiAoaGVhZGVyLCBjb250ZW50KSB7XHJcbiAgICAgICAgdmFyIGRpYWxvZ0FyZWEgPSAkKFwiI2RlbGV0ZURpYWxvZ1wiKTtcclxuICAgICAgICBkaWFsb2dBcmVhLmZpbmQoXCIubW9kYWwtaGVhZGVyLXRpdGxlXCIpLmh0bWwoaGVhZGVyKTtcclxuICAgICAgICBkaWFsb2dBcmVhLmZpbmQoXCJwXCIpLmFwcGVuZChjb250ZW50KTtcclxuICAgICAgICBkaWFsb2dBcmVhLmZpbmQoXCIuYnRuLWNhbmNlbFwiKS5vbihcImNsaWNrXCIsXHJcbiAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGRpYWxvZ0FyZWEuaGlkZSgpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICBkaWFsb2dBcmVhLmZpbmQoXCIuYnRuLW9rXCIpLm9uKFwiY2xpY2tcIixcclxuICAgICAgICAgICAgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgZGlhbG9nQXJlYS5oaWRlKCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIGRpYWxvZ0FyZWEuc2hvdygpO1xyXG4gICAgfTtcclxuICAgIHZhciBjbGVhckNvbnRlbnRUb0RlbGV0ZURpYWxvZyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgZGlhbG9nQXJlYSA9ICQoXCIjZGVsZXRlRGlhbG9nXCIpO1xyXG4gICAgICAgIGRpYWxvZ0FyZWEuZmluZChcIi5sbV9fd2lkZS1tb2RhbF9fdGl0bGVcIikuaHRtbChcIlwiKTtcclxuICAgICAgICBkaWFsb2dBcmVhLmZpbmQoXCJwXCIpLmh0bWwoXCJcIik7XHJcbiAgICAgICAgZGlhbG9nQXJlYS5maW5kKFwiLmJ0bi1va1wiKS51bmJpbmQoXCJjbGlja1wiKTtcclxuICAgICAgICBkaWFsb2dBcmVhLmZpbmQoXCIuYnRuLWNhbmNlbFwiKS51bmJpbmQoXCJjbGlja1wiKTtcclxuICAgIH07XHJcbiAgICB2YXIgY29weVZhbHVlc1RvRW5hYmxlRWRpdCA9IGZ1bmN0aW9uIChlZGl0T2JqLCBsaXN0VGltZWJvb2tpbmcpIHtcclxuICAgICAgICAkKFwiI2Rpc3BhbHlNZXNzYWdlSGVhZGVyXCIpLmh0bWwoJ8OEbmRyYSBib2tuaW5nIGdlbm9tIGF0dCDDpG5kcmEgdXBwZ2lmdGVyIG5lZGFuIG9jaCBrbGlja2EgVXBwZGF0ZXJhIGJva25pbmcuJyk7XHJcbiAgICAgICAgJCgnI215RGlzcGxheU1lc3NhZ2UnKS5odG1sKGVkaXRPYmouZGlzcGxheU1lc3NhZ2UpO1xyXG4gICAgICAgICQoJyNJRExldm5yJykudmFsKGVkaXRPYmouaWRMZXZucik7XHJcbiAgICAgICAgJCgnI0lEUmVnJykudmFsKGVkaXRPYmouaWRSZWcpO1xyXG4gICAgICAgICQoJyNJRE92cmlndCcpLnZhbChlZGl0T2JqLmlkT3ZyaWd0KTtcclxuICAgICAgICAkKCcjSURFcG9zdCcpLnZhbChlZGl0T2JqLmlkRXBvc3QpO1xyXG4gICAgICAgICQoJyNJRE1vYmlsJykudmFsKGVkaXRPYmouaWRNb2JpbCk7XHJcbiAgICAgICAgJCgnI3NhdmVBY3Rpb24nKS52YWwoJ1VwZGF0ZScpO1xyXG4gICAgICAgICQoJyNSZXNlcnZhdGlvbklEJykudmFsKGVkaXRPYmoucmVzZXJ2YXRpb25JZCk7XHJcbiAgICAgICAgJCgnI1NwZWRpdG9yTm9fRm9yVXBkYXRlJykudmFsKGVkaXRPYmouc3BlZGl0b3JObyk7XHJcbiAgICAgICAgJCgnI0N1c3RvbWVyTm9fRm9yVXBkYXRlJykudmFsKGVkaXRPYmouY3VzdG9tZXJObyk7XHJcbiAgICAgICAgJCgnI0N1c3RvbWVyTmFtZV9Gb3JVcGRhdGUnKS52YWwoZWRpdE9iai5jdXN0b21lck5hbWUpO1xyXG4gICAgICAgICQoJyNuZXdDdXN0b21lck5vJykudmFsKGVkaXRPYmouY3VzdG9tZXJObyk7XHJcbiAgICAgICAgJCgnI25ld0N1c3RvbWVyTmFtZScpLnZhbChlZGl0T2JqLmN1c3RvbWVyTmFtZSk7XHJcblxyXG4gICAgICAgIHZhciByZW1pbmRlciA9ICQoXCIjSURSZW1pbmRlclwiKTtcclxuICAgICAgICBpZiAoZWRpdE9iai5pZFJlbWluZGVyID09PSBcIjBcIiB8fCBlZGl0T2JqLmlkUmVtaW5kZXIgPT09IFwiXCIpIHtcclxuICAgICAgICAgICAgcmVtaW5kZXIuYXR0cihcImRhdGEtdmFsdWVcIiwgXCJcIik7XHJcbiAgICAgICAgICAgIHJlbWluZGVyLmZpbmQoJ2lucHV0W25hbWU9XCJJRFJlbWluZGVyXCJdJykudmFsKFwiXCIpO1xyXG4gICAgICAgICAgICByZW1pbmRlci5maW5kKFwiPmFcIikuaHRtbChcIkluZ2VuIHDDpW1pbm5lbHNlXCIpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJlbWluZGVyLmF0dHIoXCJkYXRhLXZhbHVlXCIsIGVkaXRPYmouaWRSZW1pbmRlcik7XHJcbiAgICAgICAgICAgIHJlbWluZGVyLmZpbmQoJ2lucHV0W25hbWU9XCJJRFJlbWluZGVyXCJdJykudmFsKGVkaXRPYmouaWRSZW1pbmRlcik7XHJcbiAgICAgICAgICAgIHZhciBzdWJSZW1pbmRlciA9IHJlbWluZGVyLmZpbmQoJ3VsID4gbGlbZGF0YS12YWx1ZT1cIicgKyBlZGl0T2JqLmlkUmVtaW5kZXIgKyAnXCJdJyk7XHJcbiAgICAgICAgICAgIHZhciB2YWx1ZVN1YlJlbWluZGVyID0gc3ViUmVtaW5kZXIuZmluZChcImFcIikuaHRtbCgpO1xyXG4gICAgICAgICAgICBzdWJSZW1pbmRlci5hZGRDbGFzcyhcInNlbGVjdGVkXCIpO1xyXG4gICAgICAgICAgICByZW1pbmRlci5maW5kKFwiPmFcIikuaHRtbCh2YWx1ZVN1YlJlbWluZGVyKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgJCgnI1RyYW5zcG9ydE9yZGVyTm9fRm9yVXBkYXRlJykudmFsKGVkaXRPYmoudHJhbnNwb3J0T3JkZXJObyk7XHJcbiAgICAgICAgJCgnI0NvbnRyYWN0Tm9fRm9yVXBkYXRlJykudmFsKGVkaXRPYmouY29udHJhY3RObyk7XHJcbiAgICAgICAgJCgnI1JlbWluZGVyRW1haWxfRm9yVXBkYXRlJykudmFsKGVkaXRPYmoucmVtaW5kZXJFbWFpbCk7XHJcbiAgICAgICAgJCgnI1JlbWluZGVyU01TX0ZvclVwZGF0ZScpLnZhbChlZGl0T2JqLnJlbWluZGVyU21zKTtcclxuICAgICAgICAkKCcjT3duZXInKS52YWwoZWRpdE9iai5vd25lcik7XHJcbiAgICAgICAgJCgnI1NhdmVUYWJsZScpLnNob3coKTtcclxuICAgICAgICBpZiAobGlzdFRpbWVib29raW5nID09IGZhbHNlKSB7XHJcbiAgICAgICAgICAgICQoXCIjRGF0ZVJlZ2lzdGVyZWRcIikudmFsKGVkaXRPYmouZGF0ZVJlZ2lzdGVyZWQpO1xyXG4gICAgICAgICAgICAkKCcjc2F2ZUJ0bicpLmhpZGUoKTtcclxuICAgICAgICAgICAgJCgnI25ld0N1c3RvbWVyTm8nKS5yZW1vdmVBdHRyKCdkaXNhYmxlZCcpO1xyXG4gICAgICAgICAgICAkKCdpbnB1dDpjaGVja2JveCcpLmF0dHIoJ2NoZWNrZWQnLCBmYWxzZSk7XHJcbiAgICAgICAgICAgICQoJyN1cGRhdGVCdG4nKS5zaG93KCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgJChcIiNEYXRlUmVnaXN0ZXJlZExpc3RcIikudmFsKGVkaXRPYmouZGF0ZVJlZ2lzdGVyZWQpO1xyXG4gICAgICAgICAgICBpZiAoJCgnI0N1c3RvbWVyTmFtZV9Gb3JVcGRhdGUnKS52YWwoKSAhPSBlZGl0T2JqLmN1c3RvbWVyTmFtZSkge1xyXG4gICAgICAgICAgICAgICAgYWxlcnQoJ2ZlbCcpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICQoJyN1cGRhdGVMaXN0QnRuJykuc2hvdygpO1xyXG4gICAgICAgICAgICAkKCdodG1sLCBib2R5JykuYW5pbWF0ZSh7XHJcbiAgICAgICAgICAgICAgICBzY3JvbGxUb3A6ICQoXCIjdXBkYXRlTGlzdEJ0blwiKS5vZmZzZXQoKS50b3BcclxuICAgICAgICAgICAgfSwgMTAwMCk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIHZhciB2YWxpZGF0ZVNhdmVUYWJsZSA9IGZ1bmN0aW9uIChlbWFpbCwgcGhvbmUsIHJlZ25yLCBsZXZucikge1xyXG4gICAgICAgIHZhciByZUVtYWlsID1cclxuICAgICAgICAgICAgL14oKFtePD4oKVxcW1xcXVxcXFwuLDs6XFxzQFwiXSsoXFwuW148PigpXFxbXFxdXFxcXC4sOzpcXHNAXCJdKykqKXwoXCIuK1wiKSlAKChcXFtbMC05XXsxLDN9XFwuWzAtOV17MSwzfVxcLlswLTldezEsM31cXC5bMC05XXsxLDN9XSl8KChbYS16QS1aXFwtMC05XStcXC4pK1thLXpBLVpdezIsfSkpJC87XHJcbiAgICAgICAgdmFyIHJlUGhvbmUgPSAvXlxcKz8oXFxkW1xcZC0uIF0rKT8oXFwoW1xcZC0uIF0rXFwpKT9bXFxkLS4gXStcXGQkLztcclxuICAgICAgICB2YXIgcmVSZWduciA9IC9eKFthLXpBLVpdezN9XFxkezN9KSskLztcclxuICAgICAgICB2YXIgcmVMZXZuciA9IC9eXFxkKyQvO1xyXG4gICAgICAgIHZhciByZXN1bHQgPSB0cnVlO1xyXG4gICAgICAgIFRpbWVCb29raW5nRnVuY3Rpb24uY2xlYXJWYWxpZGF0ZVNhdmVUYWJsZSgpO1xyXG5cclxuICAgICAgICB2YXIgcmVtaW5kZXIgPSAkKCcjSURSZW1pbmRlcicpLmF0dHIoJ2RhdGEtdmFsdWUnKTtcclxuXHJcbiAgICAgICAgaWYgKChlbWFpbCAhPT0gXCJcIiAmJiAhcmVFbWFpbC50ZXN0KGVtYWlsKSkpIHtcclxuICAgICAgICAgICAgcmVzdWx0ID0gZmFsc2U7XHJcbiAgICAgICAgICAgICQoXCIjSURFcG9zdFwiKS5hZGRDbGFzcyhcImVycm9yXCIpO1xyXG4gICAgICAgICAgICAkKFwiI0lERXBvc3QtZXJyb3JcIikuc2hvdygpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKHBob25lICE9PSBcIlwiICYmICFyZVBob25lLnRlc3QocGhvbmUpKSB7XHJcbiAgICAgICAgICAgIHJlc3VsdCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAkKFwiI0lETW9iaWxcIikuYWRkQ2xhc3MoXCJlcnJvclwiKTtcclxuICAgICAgICAgICAgJChcIiNJRE1vYmlsLWVycm9yXCIpLnNob3coKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy9pZiAoJCgnI0lEUmVnJykuaGFzQ2xhc3MoJ3VwZGF0ZVJlcXVpZXJlZCcpKSB7XHJcbiAgICAgICAgICAgIGlmICghcmVnbnIpIHtcclxuICAgICAgICAgICAgICAgIHJlc3VsdCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgJChcIiNJRFJlZ1wiKS5hZGRDbGFzcyhcImVycm9yXCIpO1xyXG4gICAgICAgICAgICAgICAgJChcIiNJRFJlZy1lcnJvclwiKS5zaG93KCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAvL31cclxuICAgICAgICBpZiAoIXJlTGV2bnIudGVzdChsZXZucikpIHtcclxuICAgICAgICAgICAgcmVzdWx0ID0gZmFsc2U7XHJcbiAgICAgICAgICAgICQoXCIjSURMZXZuclwiKS5hZGRDbGFzcyhcImVycm9yXCIpO1xyXG4gICAgICAgICAgICAkKFwiI0lETGV2bnItZXJyb3JcIikuc2hvdygpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKHJlbWluZGVyICYmIHJlbWluZGVyICE9PSBcIjBcIiAmJiBwaG9uZSA9PT0gXCJcIiAmJiBlbWFpbCA9PT0gXCJcIikge1xyXG4gICAgICAgICAgICByZXN1bHQgPSBmYWxzZTtcclxuICAgICAgICAgICAgJCgnI0lERXBvc3QtSURNb2JpbC1lcnJvcicpLnNob3coKTtcclxuICAgICAgICAgICAgJCgnI0lERXBvc3QnKS5hZGRDbGFzcyhcImVycm9yXCIpO1xyXG4gICAgICAgICAgICAkKCcjSURNb2JpbCcpLmFkZENsYXNzKFwiZXJyb3JcIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICB9O1xyXG4gICAgdmFyIGNsZWFyVmFsaWRhdGVTYXZlVGFibGUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgJChcIiNJREVwb3N0LWVycm9yXCIpLmhpZGUoKTtcclxuICAgICAgICAkKFwiI0lETW9iaWwtZXJyb3JcIikuaGlkZSgpO1xyXG4gICAgICAgICQoXCIjSURMZXZuci1lcnJvclwiKS5oaWRlKCk7XHJcbiAgICAgICAgJChcIiNJRFJlZy1lcnJvclwiKS5oaWRlKCk7XHJcbiAgICAgICAgJChcIiNJREVwb3N0XCIpLnJlbW92ZUNsYXNzKFwiZXJyb3JcIik7XHJcbiAgICAgICAgJChcIiNJRE1vYmlsXCIpLnJlbW92ZUNsYXNzKFwiZXJyb3JcIik7XHJcbiAgICAgICAgJChcIiNJRFJlZ1wiKS5yZW1vdmVDbGFzcyhcImVycm9yXCIpO1xyXG4gICAgICAgICQoXCIjSURMZXZuclwiKS5yZW1vdmVDbGFzcyhcImVycm9yXCIpO1xyXG4gICAgICAgICQoJyNJREVwb3N0LUlETW9iaWwtZXJyb3InKS5oaWRlKCk7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBibG9ja1VJOiBibG9ja1VJLFxyXG4gICAgICAgIHVuQmxvY2tVSTogdW5CbG9ja1VJLFxyXG4gICAgICAgIGZpbGxDb250ZW50VG9Nb2RhbDogZmlsbENvbnRlbnRUb01vZGFsLFxyXG4gICAgICAgIGNsZWFyQ29udGVudFRvTW9kYWw6IGNsZWFyQ29udGVudFRvTW9kYWwsXHJcbiAgICAgICAgZmlsbENvbnRlbnRUb0RlbGV0ZURpYWxvZzogZmlsbENvbnRlbnRUb0RlbGV0ZURpYWxvZyxcclxuICAgICAgICBjbGVhckNvbnRlbnRUb0RlbGV0ZURpYWxvZzogY2xlYXJDb250ZW50VG9EZWxldGVEaWFsb2csXHJcbiAgICAgICAgY29weVZhbHVlc1RvRW5hYmxlRWRpdDogY29weVZhbHVlc1RvRW5hYmxlRWRpdCxcclxuICAgICAgICB2YWxpZGF0ZVNhdmVUYWJsZTogdmFsaWRhdGVTYXZlVGFibGUsXHJcbiAgICAgICAgY2xlYXJWYWxpZGF0ZVNhdmVUYWJsZTogY2xlYXJWYWxpZGF0ZVNhdmVUYWJsZVxyXG4gICAgfTtcclxufSkoKTtcclxuXHJcbnZhciBUaW1lQm9va2luZ1BhZ2UgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgZGlhbG9nVHlwZSA9IEdyb0NvbW1vbi5tb2RhbEluZm9DbGFzcztcclxuICAgIHZhciBjbGVhclJlc3VsdFRhYmxlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQoXCIjcmVzdWx0VGFibGVcIikuaHRtbCgnJyk7XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBleHRyYWN0Rm9yRHJvcGRvd24gPSBmdW5jdGlvbiAoZWxJZCwgZXh0cmFjdEZyb20pIHtcclxuICAgICAgICB2YXIgYXJyID0gW10sXHJcbiAgICAgICAgICAgIGV4dHJhY3RGb3JtTGVuID0gZXh0cmFjdEZyb20ubGVuZ3RoO1xyXG5cclxuICAgICAgICBpZiAoZXh0cmFjdEZvcm1MZW4gPT09IDApIHtcclxuICAgICAgICAgICAgdmFyIG5hbWUgPSAkKCcjJyArIGVsSWQpLmNsb3Nlc3QoJ2RpdicpLnNpYmxpbmdzKCdzcGFuJykudGV4dCgpO1xyXG4gICAgICAgICAgICBuYW1lID0gbmFtZS5yZXBsYWNlKCcqJywgJycpO1xyXG4gICAgICAgICAgICAkKCcjJyArIGVsSWQgKyAnPiB1bCA+IGxpJykucmVtb3ZlKCk7XHJcbiAgICAgICAgICAgICQoJyMnICsgZWxJZCkuYXR0cignZGF0YS12YWx1ZScsICcnKTtcclxuICAgICAgICAgICAgJCgnIycgKyBlbElkKS5jbG9zZXN0KCdkaXYnKS5hZGRDbGFzcygnZGlzYWJsZWQnKTtcclxuICAgICAgICAgICAgJCgnIycgKyBlbElkICsgJz4gYScpLmh0bWwobmFtZSArICcgc2FrbmFzJyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgJCgnIycgKyBlbElkKS5jbG9zZXN0KCdkaXYnKS5yZW1vdmVDbGFzcygnZGlzYWJsZWQnKTtcclxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBleHRyYWN0Rm9ybUxlbjsgaSsrKSB7XHJcblxyXG4gICAgICAgICAgICAgICAgYXJyW2Fyci5sZW5ndGhdID0gJzxsaSBkYXRhLXZhbHVlPVwiJyArIGV4dHJhY3RGcm9tW2ldLlZhbHVlICsgJ1wiPjxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMClcIj4nICsgZXh0cmFjdEZyb21baV0uRGlzcGxheSArICc8XFwvYT48XFwvbGk+JztcclxuICAgICAgICAgICAgICAgIGlmIChleHRyYWN0RnJvbVtpXS5Jc1NlbGVjdGVkID09IHRydWUpIHtcclxuICAgICAgICAgICAgICAgICAgICAkKCcjJyArIGVsSWQgKyAnPiBhJykuaHRtbChleHRyYWN0RnJvbVtpXS5EaXNwbGF5KTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZWxJZCA9PSAncmVzb3VyY2VEcnAnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJyMnICsgZWxJZCkuYXR0cigncmVnTm9NYW5kYXRvcnknLCBleHRyYWN0RnJvbVtpXS5SZWdOb01hbmRhdG9yeSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICQoJyMnICsgZWxJZCkuYXR0cignZGF0YS12YWx1ZScsIGV4dHJhY3RGcm9tW2ldLlZhbHVlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gYXJyLmpvaW4oJycpO1xyXG4gICAgfTtcclxuICAgIC8vU2VhcmNoIGN1c3RvbWVyXHJcbiAgICB2YXIgc2VhcmNoQ3VzdG9tZXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgY2xlYXJSZXN1bHRUYWJsZSgpO1xyXG4gICAgICAgICQoJyNhZ3JlbWVudERyaWVkVW5EcmllZCcpLmhpZGUoKTtcclxuICAgICAgICB2YXIgc2VhcmNoU3RyaW5nID0gJCgnI3NlYWNoRmllbGRUeHQnKS52YWwoKTtcclxuICAgICAgICB2YXIgcmVzb3VyY2VWYWx1ZSA9ICQoJyNyZXNvdXJjZURycCcpLmF0dHIoJ2RhdGEtdmFsdWUnKTtcclxuICAgICAgICBpZiAoalF1ZXJ5LnRyaW0oc2VhcmNoU3RyaW5nKSAhPSAnJykge1xyXG4gICAgICAgICAgICB2YXIgc2VhcmNoVHlwZSA9ICQoJyNzZWFyY2gtb3B0aW9uJykuYXR0cignZGF0YS12YWx1ZScpO1xyXG4gICAgICAgICAgICB2YXIgbG9hZE9yVW5sb2RWYWx1ZSA9ICQoXCJpbnB1dFtuYW1lPSdsb2FkT3JVbmxvZFJhZCddOmNoZWNrZWRcIikudmFsKCk7XHJcbiAgICAgICAgICAgIHZhciBjdXN0b21lclNlYXJjVHlwZSA9ICQoXCJpbnB1dFtuYW1lPSdjb21wYW55U2VsZWN0ZWQnXTpjaGVja2VkXCIpLnZhbCgpO1xyXG4gICAgICAgICAgICB2YXIgaXNJbnRlcm5hbCA9ICQoXCIjSXNJbnRlcm5hbFwiKS52YWwoKTtcclxuICAgICAgICAgICAgVGltZUJvb2tpbmdGdW5jdGlvbi5ibG9ja1VJKCk7XHJcbiAgICAgICAgICAgIHZhciBwYXJhbWV0ZXJzID0gXCJ7J3Jlc291cmNlR3JvdXBJZCc6J1wiICsgcmVzb3VyY2VWYWx1ZSArIFwiJywgJ3NlYXJjaFN0cmluZyc6J1wiICsgc2VhcmNoU3RyaW5nICsgXCInLCAnc2VhcmNoVHlwZSc6J1wiICsgc2VhcmNoVHlwZSArIFwiJywgJ2xvYWRPclVubG9kVmFsdWUnOidcIiArIGxvYWRPclVubG9kVmFsdWUgKyBcIicsICdjdXN0b21lclNlYXJjVHlwZSc6J1wiICsgY3VzdG9tZXJTZWFyY1R5cGUgKyBcIicsICdpc0ludGVybmFsJzonXCIgKyBpc0ludGVybmFsICsgXCInfVwiO1xyXG4gICAgICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICAgICAgdHlwZTogJ1BPU1QnLFxyXG4gICAgICAgICAgICAgICAgdXJsOiAnL2FwaS90aW1lLWJvb2tpbmcvQ3VzdG9tZXJTZWFyY2gnLFxyXG4gICAgICAgICAgICAgICAgZGF0YVR5cGU6IFwianNvblwiLFxyXG4gICAgICAgICAgICAgICAgY29udGVudFR5cGU6IFwiYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD11dGYtOFwiLFxyXG4gICAgICAgICAgICAgICAgZGF0YTogcGFyYW1ldGVycyxcclxuXHJcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuICAgICAgICAgICAgICAgICAgICBUaW1lQm9va2luZ0Z1bmN0aW9uLnVuQmxvY2tVSSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHNlYXJjaEN1c3RvbWVyU3VjY2VzcyhyZXNwb25zZS5jdXN0b21lclJlc3VsdCk7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIFRpbWVCb29raW5nRnVuY3Rpb24udW5CbG9ja1VJKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdmFyIHNlYXJjaEN1c3RvbWVyU3VjY2VzcyA9IGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG4gICAgICAgICAgICB2YXIgZGlhbG9nSHRtbDtcclxuICAgICAgICAgICAgaWYgKHJlc3BvbnNlLlN0YXR1cyA9PSA1MDApIHtcclxuICAgICAgICAgICAgICAgIFRpbWVCb29raW5nRnVuY3Rpb24uY2xlYXJDb250ZW50VG9Nb2RhbChcIiNkaWFsb2dBcmVhXCIpO1xyXG4gICAgICAgICAgICAgICAgZGlhbG9nSHRtbCA9IHJlc3BvbnNlLkVycm9yTWVzc2FnZSArICc8YnIvPjxici8+JztcclxuICAgICAgICAgICAgICAgIFRpbWVCb29raW5nRnVuY3Rpb24uZmlsbENvbnRlbnRUb01vZGFsKFwiI2RpYWxvZ0FyZWFcIiwgXCJGZWwgdXBwc3RvZFwiLCBkaWFsb2dIdG1sLCB0cnVlLCBkaWFsb2dUeXBlLmVycm9yKTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgY3VzdG9tZXJzID0gKHR5cGVvZiByZXNwb25zZS5DdXN0b21lcnMpID09ICdzdHJpbmcnID8gZXZhbCgnKCcgKyByZXNwb25zZS5DdXN0b21lcnMgKyAnKScpIDogcmVzcG9uc2UuQ3VzdG9tZXJzO1xyXG4gICAgICAgICAgICBzZXRDdXN0b21lckluZm8oY3VzdG9tZXJzKTtcclxuICAgICAgICAgICAgaWYgKCQoJyNzZWFyY2gtb3B0aW9uJykuYXR0cihcImRhdGEtdmFsdWVcIikgPT09ICc5JyAmJiAocmVzcG9uc2UuSW9zICYmIHJlc3BvbnNlLklvcy5sZW5ndGggPiAwKSkge1xyXG4gICAgICAgICAgICAgICAgVGltZUJvb2tpbmdGdW5jdGlvbi5jbGVhckNvbnRlbnRUb01vZGFsKFwiI2RpYWxvZ0FyZWFcIik7XHJcbiAgICAgICAgICAgICAgICBkaWFsb2dIdG1sID0gJzxwPklua8O2cHNvcmRyYXIga29wcGxhZGUgdGlsbCBrdW5kbnVtbWVyOiAnICsgcmVzcG9uc2UuQ3VzdG9tZXJzWzBdLkN1c3RvbWVyTm8gKyAnPC9wPic7XHJcbiAgICAgICAgICAgICAgICBkaWFsb2dIdG1sICs9ICc8cD5LbGlja2EgcMOlIG7DpWdvbiBhdiBuZWRhbnN0w6VlbmRlIGlua8O2cHNvcmRyYXIgZsO2ciBhdHQgZ8OlIGRpcmVrdCB0aWxsIGRlbjwvcD48YnIvPic7XHJcbiAgICAgICAgICAgICAgICBkaWFsb2dIdG1sICs9ICc8dGFibGUgc3R5bGU9XCJkaXNwbGF5OiBibG9jazsgb3ZlcmZsb3cteTogc2Nyb2xsOyBoZWlnaHQ6IDMwMHB4O1wiPicgK1xyXG4gICAgICAgICAgICAgICAgICAgICc8dGhlYWQ+PHRyPicgK1xyXG4gICAgICAgICAgICAgICAgICAgICc8dGg+SU9OdW1tZXI8L3RoPjx0aD5BcnRpa2VsPC90aD48dGg+S3ZhbnRpdGV0PC90aD48dGg+QW5sw6RnZ25pbmc8L3RoPjwvdHI+PC90aGVhZD4nICtcclxuICAgICAgICAgICAgICAgICAgICAnPHRib2R5Pic7XHJcbiAgICAgICAgICAgICAgICAkLmVhY2gocmVzcG9uc2UuSW9zLCBmdW5jdGlvbiAoaSwgZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGRpYWxvZ0h0bWwgKz0gJzx0cj48dGQ+PGEgaHJlZj1cIj9pb249JyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGQuSU9OdW1iZXIgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAnXCI+JyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGQuSU9OdW1iZXIgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAnPC9hPjwvdGQ+PHRkPicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkLkl0ZW1OYW1lICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJzwvdGQ+PHRkPicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkLlF1YW50aXR5IC8gMTAwMCArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICc8L3RkPjx0ZD4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZC5XYXJlaG91c2VOYW1lICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJzwvdGQ+PC90cj4nO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICBkaWFsb2dIdG1sICs9ICc8L3Rib2R5PicgKyAnPC90YWJsZT4nO1xyXG4gICAgICAgICAgICAgICAgVGltZUJvb2tpbmdGdW5jdGlvbi5maWxsQ29udGVudFRvTW9kYWwoXCIjZGlhbG9nQXJlYVwiLCBcIlbDpGxqIGlua8O2cHNvcmRlciBuZWRhblwiLCBkaWFsb2dIdG1sLCB0cnVlKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYgKHJlc3BvbnNlLkJvb2tpbmdPcmRlciAhPT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLkJvb2tpbmdPcmRlci5RdWFudGl0eSAhPSB1bmRlZmluZWQgJiYgcmVzcG9uc2UuQm9va2luZ09yZGVyLlF1YW50aXR5ICE9PSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnI3F1YW50aXR5VHh0JykudmFsKHJlc3BvbnNlLkJvb2tpbmdPcmRlci5RdWFudGl0eSAvIDEwMDApO1xyXG5cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2UuQm9va2luZ09yZGVyLkRlbGl2ZXJ5RGF0ZSAhPT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgICAgICQoJyNzZWxlY3RlZERhdGUnKS52YWwobmV3IERhdGUocGFyc2VJbnQocmVzcG9uc2UuQm9va2luZ09yZGVyLkRlbGl2ZXJ5RGF0ZS5zdWJzdHIoNikpKS50b1Nob3J0RGF0ZVN0cmluZygpKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoJCgnI3NlbGVjdGVkRGF0ZScpLnZhbCgpLmxlbmd0aCA8IDEwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJyNzZWxlY3RlZERhdGUnKS52YWwobmV3IERhdGUoKS50b1Nob3J0RGF0ZVN0cmluZygpKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAoJCgnI3NlYXJjaC1vcHRpb24nKS5hdHRyKFwiZGF0YS12YWx1ZVwiKSA9PT0gJzUnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLkJvb2tpbmdPcmRlci5TdGF0dXMgPiA0MCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB1bmJsb2NrVUkoKTtcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHJlc3BvbnNlLkJvb2tpbmdPcmRlci5TdGF0dXMgPT0gNDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdW5ibG9ja1VJKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKHJlc3BvbnNlLkJvb2tpbmdPcmRlci5EZWxpdmVyeUFzc3VyYW5jZUNvbmZpcm1lZCA9PSBmYWxzZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBUaW1lQm9va2luZ0Z1bmN0aW9uLmNsZWFyQ29udGVudFRvTW9kYWwoXCIjZGlhbG9nQXJlYVwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgVGltZUJvb2tpbmdGdW5jdGlvbi5maWxsQ29udGVudFRvTW9kYWwoXCIjZGlhbG9nQXJlYVwiLCBcIlJlZGFuIGJva2FkXCIsICdPYnMhIEJva25pbmcgZWogdGlsbMOldGVuIHDDpSBkZW5uYSBpbmvDtnBzb3JkZXIhIExldmVyYW5zZsO2cnPDpGtyYW4gc2FrbmFzJywgdHJ1ZSwgZGlhbG9nVHlwZS5lcnJvcik7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGdldElPUmVzb3VyY2UocmVzcG9uc2UuQm9va2luZ09yZGVyLldhcmVob3VzZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VhcmNoSXRlbXMoJycsICQoJyNyZXNvdXJjZURycCcpLmF0dHIoJ2RhdGEtdmFsdWUnKSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIGlmICgkKCcjc2VhcmNoLW9wdGlvbicpLmF0dHIoXCJkYXRhLXZhbHVlXCIpID09PSAnNycgfHwgJCgnI3NlYXJjaC1vcHRpb24nKS5hdHRyKFwiZGF0YS12YWx1ZVwiKSA9PT0gJzgnIHx8ICQoJyNzZWFyY2gtb3B0aW9uJykuYXR0cihcImRhdGEtdmFsdWVcIikgPT09ICc2Jykge1xyXG4gICAgICAgICAgICAgICAgICAgIGdldElPUmVzb3VyY2UocmVzcG9uc2UuQm9va2luZ09yZGVyLldhcmVob3VzZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VhcmNoSXRlbXMoJycsICQoJyNyZXNvdXJjZURycCcpLmF0dHIoJ2RhdGEtdmFsdWUnKSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLkJvb2tpbmdPcmRlci5JdGVtTnVtYmVyICE9PSBudWxsICYmIHJlc3BvbnNlLkJvb2tpbmdPcmRlci5JdGVtTnVtYmVyICE9ICcnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGRyaWVkID0gJ3RvcmthZCc7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyICRhcnRpY2xlc0RycCA9ICQoJyNhcnRpY2xlc0RycCcpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIjYWdyZW1lbnREcmllZFVuRHJpZWRcIikudmFsKHJlc3BvbnNlLkJvb2tpbmdPcmRlci5Ub3JrYXQgPyAnVG9ya2FkJyA6ICdPdG9ya2FkJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGRyaWVkVW5EcmllZCA9ICQoXCIjYWdyZW1lbnREcmllZFVuRHJpZWRcIikudmFsKCk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGlmICghcmVzcG9uc2UuQm9va2luZ09yZGVyLlRvcmthdCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkcmllZCA9ICdvdG9ya2FkJztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHZhciBzZWFyY2hTdHJpbmcgPSBuZXcgU3RyaW5nKHJlc3BvbnNlLkJvb2tpbmdPcmRlci5JdGVtTnVtYmVyICsgJy0nICsgZHJpZWQgKyAnLScgKyByZXNwb25zZS5Cb29raW5nT3JkZXIuU29ydCk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHNlYXJjaFN0cmluZyA9IHNlYXJjaFN0cmluZy50b0xvd2VyQ2FzZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoJyNhcnRpY2xlc0RycCA+IHVsIGxpJykuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkKHRoaXMpLmF0dHIoXCJkYXRhLXZhbHVlXCIpLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihzZWFyY2hTdHJpbmcpICE9IC0xKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkYXJ0aWNsZXNEcnAuYXR0cihcImRhdGEtdmFsdWVcIiwgJCh0aGlzKS5hdHRyKFwiZGF0YS12YWx1ZVwiKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkYXJ0aWNsZXNEcnAuZmluZChcIj5hXCIpLmh0bWwoJCh0aGlzKS5maW5kKFwiPmFcIikuaHRtbCgpKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICQoXCJkaXZcIikuZGF0YShcIkxpbmVudW1iZXJcIiwgcmVzcG9uc2UuQm9va2luZ09yZGVyLkxpbmVudW1iZXIpO1xyXG4gICAgICAgICAgICAgICAgJChcIiNMaW5lbnVtYmVyXCIpLnZhbChyZXNwb25zZS5Cb29raW5nT3JkZXIuTGluZW51bWJlcik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHJlc3BvbnNlLlJlZ05vICE9PSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICAkKCcjSURSZWcnKS52YWwocmVzcG9uc2UuUmVnTm8pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICh2YWxpZGF0ZVJlcXVpcmVkRmllbGRzRm9yU2VhcmNoKCkpIHtcclxuICAgICAgICAgICAgICAgICQoXCIjc2VhcmNoQXZhaWxibGVTbG90c0J0blwiKS5wYXJlbnQoKS5yZW1vdmVDbGFzcyhcImRpc2FibGVkLWJ0blwiKTtcclxuICAgICAgICAgICAgICAgIHNlYXJjaEF2YWlsYWJsZVNsb3RzKCk7XHJcbiAgICAgICAgICAgICAgICBpZiAoJCgnI3NlYXJjaC1vcHRpb24nKS5hdHRyKCdkYXRhLXZhbHVlJykgPT0gNSkge1xyXG4gICAgICAgICAgICAgICAgICAgICQoJyNJRExldm5yX1N0YXJ0VmFsdWUnKS52YWwoJCgnI3NlYWNoRmllbGRUeHQnKS52YWwoKSk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICQoJyNJRExldm5yX1N0YXJ0VmFsdWUnKS52YWwoJycpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgJCgnI3NlYXJjaEF2YWlsYmxlU2xvdHNCdG4nKS5wYXJlbnQoKS5hZGRDbGFzcyhcImRpc2FibGVkLWJ0blwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHZhciBnZXRJT1Jlc291cmNlID0gZnVuY3Rpb24gKHdhcmVob3VzZSkge1xyXG4gICAgICAgICAgICB2YXIgcmVzb3VyY2VMaXN0TG9hZFN1Y2Nlc3MgPSBmdW5jdGlvbiAocmVzcG9uc2UsIHdhcmVob3VzZUlkKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgcmVzb3VyY2UgPSAkKFwiI3Jlc291cmNlRHJwXCIpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGlzSW50ZXJuYWwgPSAkKCcjSXNJbnRlcm5hbCcpO1xyXG4gICAgICAgICAgICAgICAgY2xlYXJEcm9wRG93bigncmVzb3VyY2VEcnAnLCAnVsOkbGogYW5sw6RnZ25pbmcnKTtcclxuICAgICAgICAgICAgICAgIGNsZWFyRHJvcERvd24oJ2FydGljbGVzRHJwJywgJ1bDpGxqIGFydGlrZWwnKTtcclxuICAgICAgICAgICAgICAgIHZhciByZXNvdXJjZXMgPSAodHlwZW9mIHJlc3BvbnNlKSA9PSAnc3RyaW5nJyA/IGV2YWwoJygnICsgcmVzcG9uc2UgKyAnKScpIDogcmVzcG9uc2U7XHJcbiAgICAgICAgICAgICAgICAkKHJlc291cmNlKS5maW5kKCc+IHVsID4gbGknKS5hcHBlbmQoZXh0cmFjdEZvckRyb3Bkb3duKCdyZXNvdXJjZURycCcsIHJlc291cmNlcykpO1xyXG4gICAgICAgICAgICAgICAgc2V0RHJvcGRvd24oJCgnI3Jlc291cmNlRHJwJykucGFyZW50KCksICd0eXBlMycpO1xyXG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZXNvdXJjZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoKHdhcmVob3VzZUlkICE9PSB1bmRlZmluZWQgJiYgcmVzcG9uc2VbaV0uTTNJZCA9PT0gd2FyZWhvdXNlSWQpIHx8XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICh3YXJlaG91c2VJZCAhPT0gdW5kZWZpbmVkICYmIHJlc3BvbnNlW2ldLlZhbHVlID09PSB3YXJlaG91c2VJZCkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJChyZXNvdXJjZSkuYXR0cihcImRhdGEtdmFsdWVcIiwgcmVzb3VyY2VzW2ldLlZhbHVlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJChyZXNvdXJjZSkuZmluZChcIj5hXCIpLmh0bWwocmVzb3VyY2VzW2ldLkRpc3BsYXkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB2YWxpZGF0ZVJlcXVpcmVkRmllbGRzRXZlbnQoKTtcclxuICAgICAgICAgICAgICAgIHNlYXJjaEl0ZW1FdmVudCgpO1xyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICAgICAgdHlwZTogJ1BPU1QnLFxyXG4gICAgICAgICAgICAgICAgdXJsOiAnL2FwaS90aW1lLWJvb2tpbmcvTG9hZFJlc291cmNlR3JvdXBzT25JTycsXHJcbiAgICAgICAgICAgICAgICBkYXRhVHlwZTogXCJqc29uXCIsXHJcbiAgICAgICAgICAgICAgICBjb250ZW50VHlwZTogXCJhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04XCIsXHJcbiAgICAgICAgICAgICAgICBkYXRhOiBcInsnd2FyZWhvdXNlSWQnOidcIiArIHdhcmVob3VzZSArIFwiJywgJ2lzSW50ZXJuYWwnOidcIiArIGlzSW50ZXJuYWwgKyBcIid9XCIsXHJcbiAgICAgICAgICAgICAgICBhc3luYzogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXNvdXJjZUxpc3RMb2FkU3VjY2VzcyhyZXNwb25zZS5SZXNvdXJjZSwgd2FyZWhvdXNlKTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNsZWFyRHJvcERvd24oJ3Jlc291cmNlRHJwJywgJ1bDpGxqIGFubMOkZ2duaW5nJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgY2xlYXJEcm9wRG93bignYXJ0aWNsZXNEcnAnLCAnVsOkbGogYXJ0aWtlbCcpO1xyXG4gICAgICAgICAgICAgICAgICAgIGNsZWFyRHJvcERvd24oJ3ZlaWNobGVUeXBlRHJwJywgJ1bDpGxqIGZvcmRvbicpO1xyXG4gICAgICAgICAgICAgICAgICAgIGFsZXJ0KCdFcnJvcicpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuXHJcblxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHZhciBzZXRDdXN0b21lckluZm8gPSBmdW5jdGlvbiAoY3VzdG9tZXJzKSB7XHJcbiAgICAgICAgICAgIGlmIChjdXN0b21lcnMgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIG5vT2ZDdXN0b21lcnMgPSBjdXN0b21lcnMubGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgaWYgKG5vT2ZDdXN0b21lcnMgPT0gMSkge1xyXG4gICAgICAgICAgICAgICAgICAgICQoJyNjdXN0b21lck5vJykudmFsKGN1c3RvbWVyc1swXS5DdXN0b21lck5vKTtcclxuICAgICAgICAgICAgICAgICAgICAkKCcjY3VzdG9tZXJOYW1lJykudmFsKGN1c3RvbWVyc1swXS5OYW1lKTtcclxuICAgICAgICAgICAgICAgICAgICAkKCcjSURFcG9zdF9TdGFydFZhbHVlJykudmFsKGN1c3RvbWVyc1swXS5FbWFpbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnI0lETW9iaWxfU3RhcnRWYWx1ZScpLnZhbChjdXN0b21lcnNbMF0uTW9iaWxlTm8pO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAkKCcjSURFcG9zdCcpLnZhbChjdXN0b21lcnNbMF0uRW1haWwpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoJyNJRE1vYmlsJykudmFsKGN1c3RvbWVyc1swXS5Nb2JpbGVObyk7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheVdhcm5pbmdBYm91dERlbW9DdXN0b21lcihjdXN0b21lcnNbMF0uTmFtZSk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIFRpbWVCb29raW5nRnVuY3Rpb24uY2xlYXJDb250ZW50VG9Nb2RhbChcIiNkaWFsb2dBcmVhXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIFRpbWVCb29raW5nRnVuY3Rpb24uZmlsbENvbnRlbnRUb01vZGFsKFwiI2RpYWxvZ0FyZWFcIiwgXCJJbmZvcm1hdGlvbiBzYWtuYXNcIiwgJ0hpdHRhZGUgaW5nZW4ga3VuZCwgYXZ0YWwsIHRyYW5zcG9ydG9yZGVyIGVsbGVyIHPDpG5kbmluZ3NvcmRlciBtZWQgbnIgJyArICQoJyNzZWFjaEZpZWxkVHh0JykudmFsKCkgKyAnLicsIHRydWUsIGRpYWxvZ1R5cGUuaW5mbyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdmFyIGRpc3BsYXlXYXJuaW5nQWJvdXREZW1vQ3VzdG9tZXIgPSBmdW5jdGlvbiAoY3VzdG9tZXJOYW1lKSB7XHJcbiAgICAgICAgICAgIGN1c3RvbWVyTmFtZSA9IGN1c3RvbWVyTmFtZS50b0xvd2VyQ2FzZSgpO1xyXG4gICAgICAgICAgICBpZiAoKGN1c3RvbWVyTmFtZS5pbmRleE9mKCd0ZXN0a3VuZCcpID49IDApIHx8IChjdXN0b21lck5hbWUuaW5kZXhPZignZGVtb2t1bmQnKSA+PSAwKSkge1xyXG4gICAgICAgICAgICAgICAgVGltZUJvb2tpbmdGdW5jdGlvbi5jbGVhckNvbnRlbnRUb01vZGFsKFwiI2RpYWxvZ0FyZWFcIik7XHJcbiAgICAgICAgICAgICAgICBUaW1lQm9va2luZ0Z1bmN0aW9uLmZpbGxDb250ZW50VG9Nb2RhbChcIiNkaWFsb2dBcmVhXCIsIFwiRGVtb2t1bmRcIiwgJ09icyEgRHUgZsO2cnPDtmtlciBib2thIHDDpSBlbiB0ZXN0IGVsbGVyIGRlbW9rdW5kIHZpbGtldCBvcnNha2FyIHByb2JsZW0gaSB2aXNzYSBmYWxsLiBHw7ZyIGTDpHJmw7ZyIGFsbHRpZCBib2tuaW5nZW4gaSByw6R0dCBrdW5kbnVtbWVyIScsIHRydWUsIGRpYWxvZ1R5cGUuZXJyb3IpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgIH07XHJcblxyXG4gICAgLy9VcGRhdGUgcmVzZXJ2YXRpb25cclxuICAgIHZhciBjbGVhckZvcm0gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIHJlbWluZGVyID0gJChcIiNJRFJlbWluZGVyXCIpO1xyXG4gICAgICAgIHJlbWluZGVyLmF0dHIoXCJkYXRhLXZhbHVlXCIsIFwiMFwiKTtcclxuICAgICAgICByZW1pbmRlci5maW5kKFwiPmFcIikuaHRtbChcIkluZ2VuIHDDpW1pbm5lbHNlXCIpO1xyXG4gICAgICAgIHJlbWluZGVyLmZpbmQoJ2lucHV0W25hbWU9XCJJRFJlbWluZGVyXCJdJykudmFsKFwiMFwiKTtcclxuICAgICAgICAkKFwiI0lET3ZyaWd0XCIpLnZhbCgnJyk7XHJcbiAgICAgICAgJChcIiNJRExldm5yXCIpLnZhbCgkKFwiI0lETGV2bnJfU3RhcnRWYWx1ZVwiKS52YWwoKSk7XHJcbiAgICAgICAgJChcIiNJRFJlZ1wiKS52YWwoJycpO1xyXG4gICAgICAgICQoJyNJREVwb3N0JykudmFsKCQoJyNJREVwb3N0X1N0YXJ0VmFsdWUnKS52YWwoKSk7XHJcbiAgICAgICAgJCgnI0lETW9iaWwnKS52YWwoJCgnI0lETW9iaWxfU3RhcnRWYWx1ZScpLnZhbCgpKTtcclxuICAgICAgICAkKCcjc2F2ZUFjdGlvbicpLnZhbCgnTmV3Jyk7XHJcbiAgICAgICAgJCgnI3VwZGF0ZUJ0bicpLmhpZGUoKTtcclxuICAgICAgICAkKCcjc2F2ZUJ0bicpLnNob3coKTtcclxuXHJcbiAgICAgICAgJCgnI215RGlzcGxheU1lc3NhZ2UnKS5odG1sKCcnKTtcclxuICAgICAgICAkKCcjZGlzcGFseU1lc3NhZ2VIZWFkZXInKS5odG1sKCcmbmJzcDsnKTtcclxuICAgICAgICAkKCcjbmV3Q3VzdG9tZXJObycpLmF0dHIoJ2Rpc2FibGVkJywgJ2Rpc2FibGVkJyk7XHJcbiAgICB9O1xyXG4gICAgdmFyIHVwZGF0ZVJlc2VydmF0aW9uID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciB1cGRhdGVSZXNlcnZhdGlvblN1Y2Nlc3MgPSBmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSAkKFwiPHA+PC9wPlwiKTtcclxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZXNwb25zZS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlW2ldLlN0YXR1cyA9PSAyMDApIHtcclxuICAgICAgICAgICAgICAgICAgICBjb250ZW50LmFwcGVuZChyZXNwb25zZVtpXS5NZXNzYWdlKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29udGVudC5hcHBlbmQocmVzcG9uc2VbaV0uRXJyb3JNZXNzYWdlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGNvbnRlbnQuYXBwZW5kKCc8YnIgXFwvPicpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIFRpbWVCb29raW5nRnVuY3Rpb24uY2xlYXJDb250ZW50VG9Nb2RhbChcIiNkaWFsb2dBcmVhXCIpO1xyXG4gICAgICAgICAgICBjbGVhckZvcm0oKTtcclxuICAgICAgICAgICAgVGltZUJvb2tpbmdGdW5jdGlvbi5maWxsQ29udGVudFRvTW9kYWwoXCIjZGlhbG9nQXJlYVwiLCBcIkJva25pbmdlbiB1cHBkYXRlcmFkXCIsIGNvbnRlbnQsIHRydWUsIGRpYWxvZ1R5cGUuc3VjY2Vzcyk7XHJcbiAgICAgICAgICAgIHNlYXJjaEF2YWlsYWJsZVNsb3RzKCk7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdmFyIHVwZGF0ZVJlc2VydmF0aW9uRXJyb3IgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIFRpbWVCb29raW5nRnVuY3Rpb24uY2xlYXJDb250ZW50VG9Nb2RhbChcIiNkaWFsb2dBcmVhXCIpO1xyXG4gICAgICAgICAgICBUaW1lQm9va2luZ0Z1bmN0aW9uLmZpbGxDb250ZW50VG9Nb2RhbChcIiNkaWFsb2dBcmVhXCIsIFwiVXBwZGF0ZXJpbmdzZmVsXCIsIFwiRmVsIHVwcHN0b2QgbsOkciBib2tuaW5nZW4gc2t1bGxlIHVwcGRhdGVyYXMuXCIsIHRydWUsIGRpYWxvZ1R5cGUuZXJyb3IpO1xyXG4gICAgICAgICAgICBzZWFyY2hBdmFpbGFibGVTbG90cygpO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHZhciBlcnJvcnMgPSB2YWxpZGF0ZUZpZWxkc0ZvclJlc2VydmF0aW9uKHRydWUpO1xyXG5cclxuICAgICAgICBpZiAoZXJyb3JzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgVGltZUJvb2tpbmdGdW5jdGlvbi5jbGVhckNvbnRlbnRUb01vZGFsKFwiI2RpYWxvZ0FyZWFcIik7XHJcbiAgICAgICAgICAgIHZhciBlcnJvckNvbnRlbnQgPSAkKFwiPHA+PC9wPlwiKS5hcHBlbmQoJzx1bD4nICsgZXJyb3JzLmpvaW4oJycpICsgJzwvdWw+Jyk7XHJcbiAgICAgICAgICAgIFRpbWVCb29raW5nRnVuY3Rpb24uZmlsbENvbnRlbnRUb01vZGFsKFwiI2RpYWxvZ0FyZWFcIiwgXCJVcHBnaWZ0ZXIgc2FrbmFzXCIsIGVycm9yQ29udGVudCwgdHJ1ZSwgZGlhbG9nVHlwZS5zdWNjZXNzKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB2YXIgZW1haWwgPSAkKCcjSURFcG9zdCcpLnZhbCgpO1xyXG4gICAgICAgICAgICB2YXIgbW9iaWxlTm8gPSAkKCcjSURNb2JpbCcpLnZhbCgpO1xyXG4gICAgICAgICAgICB2YXIgbGljZW5zZVBsYXRlTm8gPSAkKCcjSURSZWcnKS52YWwoKTtcclxuICAgICAgICAgICAgdmFyIGxldmVyYW5zZm9yc2FrcmFuc251bW1lciA9ICQoJyNJRExldm5yJykudmFsKCk7XHJcblxyXG4gICAgICAgICAgICBpZiAoVGltZUJvb2tpbmdGdW5jdGlvbi52YWxpZGF0ZVNhdmVUYWJsZShlbWFpbCwgbW9iaWxlTm8sIGxpY2Vuc2VQbGF0ZU5vLCBsZXZlcmFuc2ZvcnNha3JhbnNudW1tZXIpKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgZm9ybSA9ICQoXCIjZm9ybS10aW1lLWJvb2tpbmdcIik7XHJcbiAgICAgICAgICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIHVybDogJy9hcGkvdGltZS1ib29raW5nL1VwZGF0ZVJlc2VydmF0aW9uJyxcclxuICAgICAgICAgICAgICAgICAgICBkYXRhOiBmb3JtLnNlcmlhbGl6ZSgpLFxyXG4gICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXNwb25zZSkgeyB1cGRhdGVSZXNlcnZhdGlvblN1Y2Nlc3MocmVzcG9uc2UudXBkYXRlUmVzZXJ2YXRpb25zKTsgfSxcclxuICAgICAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKHJlc3BvbnNlKSB7IHVwZGF0ZVJlc2VydmF0aW9uRXJyb3IocmVzcG9uc2UudXBkYXRlUmVzZXJ2YXRpb25zKTsgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgLy9EZWxldGUgcmVzZXJ2YXRpb25cclxuICAgIHZhciBkZWxldGVSZXNlcnZhdGlvbiA9IGZ1bmN0aW9uIChyZXNlcnZhdGlvbklkLCB0aW1lLCBvd25lciwgY3VzdG9tZXJObywgZGF0ZVJlZ2lzdGVyZWQsIGlzSW50ZXJuYWwpIHtcclxuICAgICAgICB2YXIgZGVsZXRSZXNlcnZhdGlvblN1Y2Nlc3MgPSBmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSAkKFwiPHA+PC9wPlwiKTtcclxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZXNwb25zZS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlW2ldLlN0YXR1cyA9PSA1MDApIHtcclxuICAgICAgICAgICAgICAgICAgICBjb250ZW50LmFwcGVuZCgnPHNwYW4gY2xhc3M9XCJ1aS1pY29uIHVpLWljb24tYWxlcnRcIiBzdHlsZT1cImZsb2F0OmxlZnQ7IG1hcmdpbjowIDdweCAyMHB4IDA7XCI+PC9zcGFuPicpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgY29udGVudC5hcHBlbmQocmVzcG9uc2VbaV0uTWVzc2FnZSArICc8YnIgXFwvPicpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBUaW1lQm9va2luZ0Z1bmN0aW9uLmNsZWFyQ29udGVudFRvTW9kYWwoXCIjZGlhbG9nQXJlYVwiKTtcclxuICAgICAgICAgICAgVGltZUJvb2tpbmdGdW5jdGlvbi5maWxsQ29udGVudFRvTW9kYWwoXCIjZGlhbG9nQXJlYVwiLCBcIkJvcnR0YWduaW5nXCIsIGNvbnRlbnQsIHRydWUsIGRpYWxvZ1R5cGUuZXJyb3IpO1xyXG4gICAgICAgICAgICAkKFwiI2RpYWxvZ0FyZWFcIikuZmluZChcIi5idG4tb2tcIikub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBzZWFyY2hBdmFpbGFibGVTbG90cygpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB2YXIgZGVsZXRSZXNlcnZhdGlvbkVycm9yID0gZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgICAgIFRpbWVCb29raW5nRnVuY3Rpb24uY2xlYXJDb250ZW50VG9Nb2RhbChcIiNkaWFsb2dBcmVhXCIpO1xyXG4gICAgICAgICAgICBUaW1lQm9va2luZ0Z1bmN0aW9uLmZpbGxDb250ZW50VG9Nb2RhbChcIiNkaWFsb2dBcmVhXCIsIFwiUmFkZXJpbmdzZmVsXCIsIFwiRmVsIHVwcHN0b2QgbsOkciBib2tuaW5nZW4gc2t1bGxlIHJhZGVyYXMuXCIsIHRydWUsIGRpYWxvZ1R5cGUuZXJyb3IpO1xyXG4gICAgICAgICAgICBzZWFyY2hBdmFpbGFibGVTbG90cygpO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHZhciBkZWxldFJlc2VydmF0aW9uUHJvY2VzcyA9IGZ1bmN0aW9uIChyZXNlcnZhdGlvbklkLCBvd25lciwgY3VzdG9tZXJObywgZGF0ZVJlZ2lzdGVyZWQsIGlzSW50ZXJuYWwpIHtcclxuICAgICAgICAgICAgY2xlYXJGb3JtKCk7XHJcbiAgICAgICAgICAgIHZhciBvID0ge307XHJcbiAgICAgICAgICAgIG8ucmVzZXJ2YXRpb25JZCA9IHJlc2VydmF0aW9uSWQ7XHJcbiAgICAgICAgICAgIG8ub3duZXIgPSBvd25lcjtcclxuICAgICAgICAgICAgby5jdXN0b21lck5vID0gY3VzdG9tZXJObztcclxuICAgICAgICAgICAgby5kYXRlUmVnaXN0ZXJlZCA9IGRhdGVSZWdpc3RlcmVkO1xyXG4gICAgICAgICAgICBvLmlzSW50ZXJuYWwgPSBpc0ludGVybmFsO1xyXG4gICAgICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICAgICAgdHlwZTogJ1BPU1QnLFxyXG4gICAgICAgICAgICAgICAgdXJsOiAnL2FwaS90aW1lLWJvb2tpbmcvRGVsZXRlUmVzZXJ2YXRpb24nLFxyXG4gICAgICAgICAgICAgICAgZGF0YVR5cGU6IFwianNvblwiLFxyXG4gICAgICAgICAgICAgICAgY29udGVudFR5cGU6IFwiYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD11dGYtOFwiLFxyXG4gICAgICAgICAgICAgICAgZGF0YTogSlNPTi5zdHJpbmdpZnkobyksXHJcblxyXG4gICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlc3BvbnNlKSB7IGRlbGV0UmVzZXJ2YXRpb25TdWNjZXNzKHJlc3BvbnNlLmRlbGV0ZVJlc2VydmF0aW9ucyk7IH0sXHJcbiAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKHJlc3BvbnNlKSB7IGRlbGV0UmVzZXJ2YXRpb25FcnJvcihyZXNwb25zZS5kZWxldGVSZXNlcnZhdGlvbnMpOyB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHZhciBjb250ZW50ID0gJChcIjxwPjwvcD5cIikuYXBwZW5kKCdWaWxsIGR1IHZlcmtsaWdlbiByYWRlcmEgYm9rbmluZ2VuPGJyIFxcLz4ga2w6ICcgKyB0aW1lICsgJz8nKTtcclxuICAgICAgICBUaW1lQm9va2luZ0Z1bmN0aW9uLmNsZWFyQ29udGVudFRvRGVsZXRlRGlhbG9nKCk7XHJcbiAgICAgICAgVGltZUJvb2tpbmdGdW5jdGlvbi5maWxsQ29udGVudFRvRGVsZXRlRGlhbG9nKFwiVGEgYm9ydCBib2tuaW5nP1wiLCBjb250ZW50KTtcclxuICAgICAgICAkKFwiI2RlbGV0ZURpYWxvZ1wiKS5maW5kKFwiLmJ0bi1va1wiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgZGVsZXRSZXNlcnZhdGlvblByb2Nlc3MocmVzZXJ2YXRpb25JZCwgb3duZXIsIGN1c3RvbWVyTm8sIGRhdGVSZWdpc3RlcmVkLCBpc0ludGVybmFsKTtcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcbiAgICAvL1NlYXJjaCBpdGVtc1xyXG4gICAgdmFyIHNlYXJjaEl0ZW1zID0gZnVuY3Rpb24gKGN1cnJlbnRBcnRpY2xlSXRlbSwgcmVzb3VyY2UpIHtcclxuICAgICAgICB2YXIgc2VhcmNoSXRlbUNvbXBsZXRlID0gZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgICAgIHZhciB2ZWNoaWNsZXMgPSAodHlwZW9mIHJlc3BvbnNlLlZlaGljbGVzKSA9PSAnc3RyaW5nJyA/IGV2YWwoJygnICsgcmVzcG9uc2UuVmVoaWNsZXMgKyAnKScpIDogcmVzcG9uc2UuVmVoaWNsZXM7XHJcbiAgICAgICAgICAgIHZhciByZXNlcnZhdGlvblN0b3BzID0gKHR5cGVvZiByZXNwb25zZS5SZXNlcnZhdGlvblN0b3BzKSA9PSAnc3RyaW5nJyA/IGV2YWwoJygnICsgcmVzcG9uc2UuUmVzZXJ2YXRpb25TdG9wcyArICcpJykgOiByZXNwb25zZS5SZXNlcnZhdGlvblN0b3BzO1xyXG4gICAgICAgICAgICB2YXIgYXJ0aWNsZXMgPSAodHlwZW9mIHJlc3BvbnNlLkl0ZW1zKSA9PSAnc3RyaW5nJyA/IGV2YWwoJygnICsgcmVzcG9uc2UuSXRlbXMgKyAnKScpIDogcmVzcG9uc2UuSXRlbXM7XHJcbiAgICAgICAgICAgIGNsZWFyRHJvcERvd24oJ2FydGljbGVzRHJwJywgJ1bDpGxqIGFydGlrZWwnKTtcclxuICAgICAgICAgICAgJCgnI2FydGljbGVzRHJwID4gdWwnKS5hcHBlbmQoZXh0cmFjdEZvckRyb3Bkb3duKCdhcnRpY2xlc0RycCcsIGFydGljbGVzKSk7XHJcbiAgICAgICAgICAgICQoJyN2ZWljaGxlVHlwZURycCA+IHVsJykuYXBwZW5kKGV4dHJhY3RGb3JEcm9wZG93bigndmVpY2hsZVR5cGVEcnAnLCB2ZWNoaWNsZXMpKTtcclxuICAgICAgICAgICAgc2V0RHJvcGRvd24oJCgnI2FydGljbGVzRHJwJykucGFyZW50KCksICd0eXBlMycpO1xyXG4gICAgICAgICAgICBzZXREcm9wZG93bigkKCcjdmVpY2hsZVR5cGVEcnAnKS5wYXJlbnQoKSwgJ3R5cGUzJyk7XHJcbiAgICAgICAgICAgIGlmICh2ZWNoaWNsZXMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgJChcIiN2ZWljaGxlVHlwZURycCA+IGFcIikuaHRtbCh2ZWNoaWNsZXNbMF0uRGlzcGxheSk7XHJcbiAgICAgICAgICAgICAgICAkKFwiI3ZlaWNobGVUeXBlRHJwXCIpLmF0dHIoXCJkYXRhLXZhbHVlXCIsIHZlY2hpY2xlc1swXS5WYWx1ZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdmFsaWRhdGVSZXF1aXJlZEZpZWxkc0V2ZW50KCk7XHJcbiAgICAgICAgICAgIGJ1aWxkUmVzZXJ2YXRpb25TdG9wcyhyZXNlcnZhdGlvblN0b3BzKTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB2YXIgYnVpbGRSZXNlcnZhdGlvblN0b3BzID0gZnVuY3Rpb24gKHJlc2VydmF0aW9uU3RvcHMpIHtcclxuICAgICAgICAgICAgdmFyIGkgPSAwO1xyXG4gICAgICAgICAgICB2YXIgYXJyID0gW107XHJcbiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCByZXNlcnZhdGlvblN0b3BzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICBhcnJbYXJyLmxlbmd0aF0gPSAnPGxpPicgKyByZXNlcnZhdGlvblN0b3BzW2ldLlJlc291cmNlTmFtZSArICc8XFwvbGk+JztcclxuICAgICAgICAgICAgICAgIGFyclthcnIubGVuZ3RoXSA9ICc8bGk+JyArIHJlc2VydmF0aW9uU3RvcHNbaV0uRnJvbURhdGUgKyAnICcgKyByZXNlcnZhdGlvblN0b3BzW2ldLkZyb21UaW1lICsgJyAtICc7XHJcbiAgICAgICAgICAgICAgICBpZiAocmVzZXJ2YXRpb25TdG9wc1tpXS5Ub0RhdGUubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGFyclthcnIubGVuZ3RoXSA9IHJlc2VydmF0aW9uU3RvcHNbaV0uVG9EYXRlICsgJyAnICsgcmVzZXJ2YXRpb25TdG9wc1tpXS5Ub1RpbWUgKyAnPFxcL2xpPic7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGFyclthcnIubGVuZ3RoXSA9ICcgdGlsbHN2aWRhcmU8XFwvbGk+JztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGFyclthcnIubGVuZ3RoXSA9ICc8bGkgc3R5bGU9XCJmb250LXN0eWxlOiBpdGFsaWNcIj4nICsgcmVzZXJ2YXRpb25TdG9wc1tpXS5NZXNzYWdlICsgJzxiciBcXC8+PFxcL2xpPic7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJChcIiNzaG93UmVzZXJ2YXRpb25TdG9wcHNcIikuZmluZChcIj4gdWxcIikuaHRtbChhcnIuam9pbignJykpO1xyXG4gICAgICAgICAgICBpZiAoaSA+IDApIHtcclxuICAgICAgICAgICAgICAgICQoJyNzaG93UmVzZXJ2YXRpb25TdG9wcHMnKS5zaG93KCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAkKCcjc2hvd1Jlc2VydmF0aW9uU3RvcHBzJykuaGlkZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdmFyIHJlc291cmNlVmFsdWUgPSByZXNvdXJjZTtcclxuICAgICAgICB2YXIgc2VsZWN0ZWREYXRlVmFsdWUgPSAkKCcjc2VsZWN0ZWREYXRlJykudmFsKCk7XHJcblxyXG4gICAgICAgIGlmICghY3VycmVudEFydGljbGVJdGVtKSB7XHJcbiAgICAgICAgICAgIGN1cnJlbnRBcnRpY2xlSXRlbSA9ICQoJyNhcnRpY2xlc0RycCcpLmF0dHIoXCJkYXRhLXZhbHVlXCIpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdmFyIHNob3dPbmx5VW5sb2FkaW5nSXRlbXMgPSAoJChcImlucHV0OnJhZGlvW25hbWU9J2xvYWRPclVubG9kUmFkJ106Y2hlY2tlZFwiKS52YWwoKSA9PSAnMicpO1xyXG4gICAgICAgIGNsZWFyRHJvcERvd24oJ2FydGljbGVzRHJwJywgJ1bDpGxqIGFydGlrZWwnKTtcclxuICAgICAgICBjbGVhckRyb3BEb3duKCd2ZWljaGxlVHlwZURycCcsICdWw6RsaiBmb3Jkb24nKTtcclxuICAgICAgICAkKCcjc2hvd1Jlc2VydmF0aW9uU3RvcHBzJykuaGlkZSgpO1xyXG4gICAgICAgIGlmIChyZXNvdXJjZVZhbHVlICE9ICcwJyAmJiByZXNvdXJjZVZhbHVlICE9ICcnICYmIHNlbGVjdGVkRGF0ZVZhbHVlICE9ICcnKSB7XHJcbiAgICAgICAgICAgIFRpbWVCb29raW5nRnVuY3Rpb24uYmxvY2tVSSgpO1xyXG4gICAgICAgICAgICB2YXIgcGFyYW1ldGVycyA9IFwieydyZXNvdXJjZUdyb3VwSWQnOidcIiArIHJlc291cmNlVmFsdWUgKyBcIicsICdzZWxlY3RlZERhdGUnOidcIiArIHNlbGVjdGVkRGF0ZVZhbHVlICsgXCInLCAnY3VycmVudEFydGljbGVJdGVtJzonXCIgKyBjdXJyZW50QXJ0aWNsZUl0ZW0gKyBcIicsICdzaG93T25seVVubG9hZGluZ0l0ZW1zJzonXCIgKyBzaG93T25seVVubG9hZGluZ0l0ZW1zICsgXCInfVwiO1xyXG4gICAgICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICAgICAgdHlwZTogJ1BPU1QnLFxyXG4gICAgICAgICAgICAgICAgdXJsOiAnL2FwaS90aW1lLWJvb2tpbmcvbG9hZEl0ZW1zT25yZXNvdXJjZUdyb3VwJyxcclxuICAgICAgICAgICAgICAgIGRhdGFUeXBlOiBcImpzb25cIixcclxuICAgICAgICAgICAgICAgIGNvbnRlbnRUeXBlOiBcImFwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9dXRmLThcIixcclxuICAgICAgICAgICAgICAgIGRhdGE6IHBhcmFtZXRlcnMsXHJcbiAgICAgICAgICAgICAgICBhc3luYzogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuICAgICAgICAgICAgICAgICAgICBzZWFyY2hJdGVtQ29tcGxldGUocmVzcG9uc2UpO1xyXG4gICAgICAgICAgICAgICAgICAgIFRpbWVCb29raW5nRnVuY3Rpb24udW5CbG9ja1VJKCk7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICBUaW1lQm9va2luZ0Z1bmN0aW9uLnVuQmxvY2tVSSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGFsZXJ0KCdFcnJvcicpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgdmFyIGNsZWFyRHJvcERvd24gPSBmdW5jdGlvbiAoZWxJZCwgZGVmYXVsdFRleHQpIHtcclxuXHJcbiAgICAgICAgJCgnIycgKyBlbElkICsgJz4gdWwgPiBsaScpLnJlbW92ZSgpO1xyXG4gICAgICAgIGlmICgkLnRyaW0oZGVmYXVsdFRleHQpICE9ICcnKSB7XHJcbiAgICAgICAgICAgICQoJyMnICsgZWxJZCkuYXR0cignZGF0YS12YWx1ZScsICcnKTtcclxuICAgICAgICAgICAgJCgnIycgKyBlbElkICsgJz4gYScpLmh0bWwoZGVmYXVsdFRleHQpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9O1xyXG4gICAgdmFyIHZhbGlkYXRlUmVxdWlyZWRGaWVsZHNGb3JTZWFyY2ggPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIGFSZXF1aXJlZEZpZWxkSGFzTm9WYWx1ZSA9IGZhbHNlO1xyXG4gICAgICAgICQoJy5zZWFyY2hTbG90UmVxdWlyZWQnKS5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKCQodGhpcykuaXMoJ2lucHV0JykpIHtcclxuICAgICAgICAgICAgICAgIGlmICgkLnRyaW0oJCh0aGlzKS52YWwoKSkubGVuZ3RoID09IDApIHtcclxuICAgICAgICAgICAgICAgICAgICBhUmVxdWlyZWRGaWVsZEhhc05vVmFsdWUgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICgkKHRoaXMpLmlzKCcjcXVhbnRpdHlUeHQnKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKFwiI1F1YW50aXR5LWVycm9yXCIpLmhpZGUoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5yZW1vdmVDbGFzcyhcImVycm9yXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKCQodGhpcykuaXMoJyNxdWFudGl0eVR4dCcpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEkLmlzTnVtZXJpYygkLnRyaW0oJCh0aGlzKS52YWwoKSkpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFSZXF1aXJlZEZpZWxkSGFzTm9WYWx1ZSA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoXCIjUXVhbnRpdHktZXJyb3JcIikuc2hvdygpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmFkZENsYXNzKFwiZXJyb3JcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJChcIiNRdWFudGl0eS1lcnJvclwiKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQodGhpcykucmVtb3ZlQ2xhc3MoXCJlcnJvclwiKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKCQodGhpcykuaXMoJ2xpJykpIHtcclxuICAgICAgICAgICAgICAgIGlmICgkKHRoaXMpLmF0dHIoJ2RhdGEtdmFsdWUnKSA9PSAwIHx8ICQodGhpcykuYXR0cignZGF0YS12YWx1ZScpID09ICcnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYVJlcXVpcmVkRmllbGRIYXNOb1ZhbHVlID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiAhYVJlcXVpcmVkRmllbGRIYXNOb1ZhbHVlO1xyXG4gICAgfTtcclxuICAgIC8vU2VhcmNoYXZhaWxibGUgc2xvdHNcclxuICAgIHZhciBzZWFyY2hBdmFpbGFibGVTbG90cyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgc2hvd0hpZGVUaW1lYm9va2luZ1RhYmxlID0gZnVuY3Rpb24gKGlzU2hvdykge1xyXG4gICAgICAgICAgICBpZiAoaXNTaG93KSB7XHJcbiAgICAgICAgICAgICAgICAkKFwiI3Jlc3VsdFRhYmxlXCIpLnNob3coKTtcclxuICAgICAgICAgICAgICAgICQoXCIucmVzdWx0Q2FwdGlvblwiKS5zaG93KCk7XHJcbiAgICAgICAgICAgICAgICAkKFwiI3Jlc3VsdFRhYmxlLWJveFwiKS5hZGRDbGFzcyhcImhhcy1zZXBhcmF0b3JcIik7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAkKFwiI3Jlc3VsdFRhYmxlXCIpLmhpZGUoKTtcclxuICAgICAgICAgICAgICAgICQoXCIucmVzdWx0Q2FwdGlvblwiKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAkKFwiI3Jlc3VsdFRhYmxlLWJveFwiKS5yZW1vdmVDbGFzcyhcImhhcy1zZXBhcmF0b3JcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJChcIiNTYXZlVGFibGVcIikuaGlkZSgpO1xyXG4gICAgICAgICAgICAkKFwiI3NhdmVCdG5cIikuaGlkZSgpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdmFyIHNlYXJjaEF2YWlsYWJsZVNsb3RzU3VjY2VzcyA9IGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG4gICAgICAgICAgICB2YXIgaG9va3VwRXZlbnRzRm9yVGltZUNoZWNrYm94ZXMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAkKFwiLmJvb2tpbmdSb3dzXCIpLmNoYW5nZShmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGFueUNoZWNrZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiLmJvb2tpbmdSb3dzXCIpLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoJCh0aGlzKS5wcm9wKFwiY2hlY2tlZFwiKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYW55Q2hlY2tlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoYW55Q2hlY2tlZCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKFwiI1NhdmVUYWJsZVwiKS5zaG93KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoXCIjc2F2ZUJ0blwiKS5yZW1vdmVDbGFzcyhcImRpc2FibGVkLWJ0blwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2xlYXJGb3JtKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFRpbWVCb29raW5nRnVuY3Rpb24uY2xlYXJWYWxpZGF0ZVNhdmVUYWJsZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoXCIjU2F2ZVRhYmxlXCIpLmhpZGUoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJChcIiNzYXZlQnRuXCIpLmhpZGUoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJChcIiNzYXZlQnRuXCIpLmFkZENsYXNzKFwiZGlzYWJsZWQtYnRuXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgY2xlYXJSZXN1bHRUYWJsZSgpO1xyXG4gICAgICAgICAgICAkKFwiI3Jlc3VsdFRhYmxlXCIpLmFwcGVuZChyZXNwb25zZSk7XHJcbiAgICAgICAgICAgIGlmIChyZXNwb25zZSAhPT0gXCJcIikge1xyXG4gICAgICAgICAgICAgICAgJChcIi50Yi1kZWxldGVCdG5cIikudW5iaW5kKFwiY2xpY2tcIikuYmluZChcImNsaWNrXCIsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJvdyA9ICQodGhpcykucGFyZW50cyhcIi50Yi1yb3dcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJlc2VydmF0aW9uSWQgPSByb3cuZmluZChcIi50Yi1yZXNlcnZhdGlvbklkXCIpLnZhbCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBmcm9tRGF0ZVRpbWUgPSByb3cuZmluZChcIi50Yi1mcm9tRGF0ZVRpbWVcIikudmFsKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIG93bmVyID0gcm93LmZpbmQoXCIudGItb3duZXJcIikudmFsKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGN1c3RvbWVyTm8gPSByb3cuZmluZChcIi50Yi1jdXN0b21lck5vXCIpLnZhbCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBkYXRlUmVnaXN0ZXJlZCA9IHJvdy5maW5kKFwiLnRiLWRhdGVSZWdpc3RlcmVkXCIpLnZhbCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBpc0ludGVybmFsID0gJChcIiNJc0ludGVybmFsXCIpLnZhbCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGRlbGV0ZVJlc2VydmF0aW9uKHJlc2VydmF0aW9uSWQsIGZyb21EYXRlVGltZSwgb3duZXIsIGN1c3RvbWVyTm8sIGRhdGVSZWdpc3RlcmVkLCBpc0ludGVybmFsKTtcclxuICAgICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICQoXCIudGItZWRpdEJ0blwiKS51bmJpbmQoXCJjbGlja1wiKS5iaW5kKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgcm93ID0gJCh0aGlzKS5wYXJlbnRzKFwiLnRiLXJvd1wiKTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgZWRpdE9iaiA9IHt9O1xyXG4gICAgICAgICAgICAgICAgICAgIGVkaXRPYmouaWRMZXZuciA9IHJvdy5maW5kKFwiLnRiLWlkTGV2bnJcIikudmFsKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgZWRpdE9iai5pZFJlZyA9IHJvdy5maW5kKFwiLnRiLWlkUmVnXCIpLnZhbCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGVkaXRPYmouaWRPdnJpZ3QgPSByb3cuZmluZChcIi50Yi1pZE92cmlndFwiKS52YWwoKTtcclxuICAgICAgICAgICAgICAgICAgICBlZGl0T2JqLmlkUmVtaW5kZXIgPSByb3cuZmluZChcIi50Yi1pZFJlbWluZGVyXCIpLnZhbCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGVkaXRPYmouaWRFcG9zdCA9IHJvdy5maW5kKFwiLnRiLWlkRXBvc3RcIikudmFsKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgZWRpdE9iai5pZE1vYmlsID0gcm93LmZpbmQoXCIudGItaWRNb2JpbFwiKS52YWwoKTtcclxuICAgICAgICAgICAgICAgICAgICBlZGl0T2JqLnJlc2VydmF0aW9uSWQgPSByb3cuZmluZChcIi50Yi1yZXNlcnZhdGlvbklkXCIpLnZhbCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGVkaXRPYmouc3BlZGl0b3JObyA9IHJvdy5maW5kKFwiLnRiLXNwZWRpdG9yTm9cIikudmFsKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgZWRpdE9iai5jdXN0b21lck5vID0gcm93LmZpbmQoXCIudGItY3VzdG9tZXJOb1wiKS52YWwoKTtcclxuICAgICAgICAgICAgICAgICAgICBlZGl0T2JqLmN1c3RvbWVyTmFtZSA9IHJvdy5maW5kKFwiLnRiLWN1c3RvbWVyTmFtZVwiKS52YWwoKTtcclxuICAgICAgICAgICAgICAgICAgICBlZGl0T2JqLnRyYW5zcG9ydE9yZGVyTm8gPSByb3cuZmluZChcIi50Yi10cmFuc3BvcnRPcmRlck5vXCIpLnZhbCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGVkaXRPYmouY29udHJhY3RObyA9IHJvdy5maW5kKFwiLnRiLWNvbnRyYWN0Tm9cIikudmFsKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgZWRpdE9iai5yZW1pbmRlckVtYWlsID0gcm93LmZpbmQoXCIudGItcmVtaW5kZXJFbWFpbFwiKS52YWwoKTtcclxuICAgICAgICAgICAgICAgICAgICBlZGl0T2JqLnJlbWluZGVyU21zID0gcm93LmZpbmQoXCIudGItcmVtaW5kZXJTbXNcIikudmFsKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgZWRpdE9iai5mcm9tRGF0ZVRpbWUgPSByb3cuZmluZChcIi50Yi1mcm9tRGF0ZVRpbWVcIikudmFsKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgZWRpdE9iai5pdGVtSW5mbyA9IHJvdy5maW5kKFwiLnRiLWl0ZW1cIikuaHRtbCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGVkaXRPYmoucXVhbnRpdHkgPSByb3cuZmluZChcIi50Yi1xdWFudGl0eVwiKS5odG1sKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgZWRpdE9iai51bml0ID0gcm93LmZpbmQoXCIudGItdW5pdFwiKS5odG1sKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgZWRpdE9iai5vd25lciA9IHJvdy5maW5kKFwiLnRiLW93bmVyXCIpLnZhbCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGVkaXRPYmoucmVzb3VyY2VOYW1lID0gcm93LmZpbmQoXCIudGItcmVzb3VyY2VOYW1lXCIpLnZhbCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGVkaXRPYmouZGF0ZVJlZ2lzdGVyZWQgPSByb3cuZmluZChcIi50Yi1kYXRlUmVnaXN0ZXJlZFwiKS52YWwoKTtcclxuICAgICAgICAgICAgICAgICAgICBlZGl0T2JqLmRpc3BsYXlNZXNzYWdlID0gXCJUaWQ6IFwiICsgZWRpdE9iai5mcm9tRGF0ZVRpbWUgKyBcIiwgS3VuZDogXCIgKyBlZGl0T2JqLmN1c3RvbWVyTm8gKyAnICcgKyBlZGl0T2JqLmN1c3RvbWVyTmFtZSArICcsIEJva25pbmdzbnI6ICcgKyBlZGl0T2JqLnJlc2VydmF0aW9uSWQgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAnLCBBcnRpa2VsOiAnICsgZWRpdE9iai5pdGVtSW5mbyArICcgJyArIGVkaXRPYmoucXVhbnRpdHkgKyAnICcgKyBlZGl0T2JqLnVuaXQgKyAnPGJyIFxcLz5SZXN1cnM6ICcgKyBlZGl0T2JqLnJlc291cmNlTmFtZTtcclxuICAgICAgICAgICAgICAgICAgICBUaW1lQm9va2luZ0Z1bmN0aW9uLmNvcHlWYWx1ZXNUb0VuYWJsZUVkaXQoZWRpdE9iaiwgZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgJChkb2N1bWVudCkudHJpZ2dlcihcImVuaGFuY2UudGFibGVzYXdcIik7XHJcbiAgICAgICAgICAgICAgICBzaG93SGlkZVRpbWVib29raW5nVGFibGUodHJ1ZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAkKFwiLnRiLWRlbGV0ZUJ0blwiKS51bmJpbmQoXCJjbGlja1wiKTtcclxuICAgICAgICAgICAgICAgICQoXCIudGItZWRpdEJ0blwiKS51bmJpbmQoXCJjbGlja1wiKTtcclxuICAgICAgICAgICAgICAgIHNob3dIaWRlVGltZWJvb2tpbmdUYWJsZShmYWxzZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaG9va3VwRXZlbnRzRm9yVGltZUNoZWNrYm94ZXMoKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIGNsZWFyUmVzdWx0VGFibGUoKTtcclxuICAgICAgICBpZiAodmFsaWRhdGVSZXF1aXJlZEZpZWxkc0ZvclNlYXJjaCgpKSB7XHJcbiAgICAgICAgICAgIFRpbWVCb29raW5nRnVuY3Rpb24uYmxvY2tVSSgpO1xyXG4gICAgICAgICAgICB2YXIgcmVzb3VyY2VWYWx1ZSA9ICQoJyNyZXNvdXJjZURycCcpLmF0dHIoJ2RhdGEtdmFsdWUnKTtcclxuICAgICAgICAgICAgdmFyIHNlbGVjdGVkRGF0ZVZhbHVlID0gJCgnI3NlbGVjdGVkRGF0ZScpLnZhbCgpO1xyXG4gICAgICAgICAgICB2YXIgYWdyZW1lbnREcmllZFVuRHJpZWRWYWx1ZSA9ICQoJyNhZ3JlbWVudERyaWVkVW5EcmllZCcpLnZhbCgpO1xyXG4gICAgICAgICAgICB2YXIgYXJ0aWNsZXNWYWx1ZSA9ICQoJyNhcnRpY2xlc0RycCcpLmF0dHIoJ2RhdGEtdmFsdWUnKTtcclxuICAgICAgICAgICAgdmFyIHF1YW50aXR5VHh0VmFsdWUgPSAkKCcjcXVhbnRpdHlUeHQnKS52YWwoKTtcclxuICAgICAgICAgICAgdmFyIGxvYWRPclVubG9kVmFsdWUgPSAkKFwiaW5wdXRbbmFtZT0nbG9hZE9yVW5sb2RSYWQnXTpjaGVja2VkXCIpLnZhbCgpO1xyXG4gICAgICAgICAgICB2YXIgdmVpY2hsZVR5cGVWYWx1ZSA9ICQoJyN2ZWljaGxlVHlwZURycCcpLmF0dHIoJ2RhdGEtdmFsdWUnKTtcclxuICAgICAgICAgICAgdmFyIHNlYXJjaFR5cGVWYWx1ZSA9ICQoJyNzZWFyY2gtb3B0aW9uJykuYXR0cignZGF0YS12YWx1ZScpO1xyXG4gICAgICAgICAgICB2YXIgY3VzdG9tZXJObyA9ICQoJyNjdXN0b21lck5vJykudmFsKCk7XHJcbiAgICAgICAgICAgIHZhciBpc0ludGVybmFsID0gJCgnI0lzSW50ZXJuYWwnKS52YWwoKTtcclxuXHJcbiAgICAgICAgICAgIGlmIChyZXNvdXJjZVZhbHVlICE9ICcnICYmIHNlbGVjdGVkRGF0ZVZhbHVlICE9ICcnICYmIHF1YW50aXR5VHh0VmFsdWUgIT0gJycgJiYgKGFydGljbGVzVmFsdWUgIT0gJycgfHwgYXJnZW1lbnRWYWx1ZSAhPSAnJykpIHtcclxuICAgICAgICAgICAgICAgIHZhciBwYXJhbWV0ZXJzID0gXCJ7J3Jlc291cmNlR3JvdXBJZCc6J1wiICsgcmVzb3VyY2VWYWx1ZSArIFwiJywgJ3NlbGVjdGVkRGF0ZSc6J1wiICsgc2VsZWN0ZWREYXRlVmFsdWUgKyBcIicsICdhcnRpY2xlJzonXCIgKyBhcnRpY2xlc1ZhbHVlICsgXCInLCAncXR5JzonXCIgKyBxdWFudGl0eVR4dFZhbHVlICsgXCInLCAnbG9hZHVubG9hZCc6J1wiICsgbG9hZE9yVW5sb2RWYWx1ZSArIFwiJywgJ3ZlaWNobGVUeXBlJzonXCIgKyB2ZWljaGxlVHlwZVZhbHVlICsgXCInLCAnZHJpZWRVbkRyaWVkJzonXCIgKyBhZ3JlbWVudERyaWVkVW5EcmllZFZhbHVlICsgXCInLCAnY3VzdG9tZXJObyc6J1wiICsgY3VzdG9tZXJObyArIFwiJywnc2VhcmNoVHlwZSc6J1wiICsgc2VhcmNoVHlwZVZhbHVlICsgXCInLCAnaXNJbnRlcm5hbCc6J1wiICsgaXNJbnRlcm5hbCArIFwiJ31cIjtcclxuICAgICAgICAgICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ1BPU1QnLFxyXG4gICAgICAgICAgICAgICAgICAgIHVybDogJy9hcGkvdGltZS1ib29raW5nL1NlYXJjaEF2YWlsYmxlU2xvdHMnLFxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnRUeXBlOiBcImFwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9dXRmLThcIixcclxuICAgICAgICAgICAgICAgICAgICBkYXRhOiBwYXJhbWV0ZXJzLFxyXG4gICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWFyY2hBdmFpbGFibGVTbG90c1N1Y2Nlc3MocmVzcG9uc2UpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBUaW1lQm9va2luZ0Z1bmN0aW9uLnVuQmxvY2tVSSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgVGltZUJvb2tpbmdGdW5jdGlvbi51bkJsb2NrVUkoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2hvd0hpZGVUaW1lYm9va2luZ1RhYmxlKGZhbHNlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQoXCJFcnJvclwiKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICB2YXIgdmFsaWRhdGVGaWVsZHNGb3JSZXNlcnZhdGlvbiA9IGZ1bmN0aW9uIChpc1VwZGF0ZSkge1xyXG4gICAgICAgIHZhciBhcnIgPSBbXTtcclxuXHJcbiAgICAgICAgaWYgKGpRdWVyeS50cmltKCQoJyNxdWFudGl0eVR4dCcpLnZhbCgpKSA9PSAnJykge1xyXG4gICAgICAgICAgICBhcnJbYXJyLmxlbmd0aF0gPSAnPGxpPkt2YW50aXRldCBzYWtuYXIgdsOkcmRlLjxcXC9saT4nO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdmFyIHF1YW50aXR5VmFsdWUgPSBwYXJzZUludChqUXVlcnkudHJpbSgkKCcjcXVhbnRpdHlUeHQnKS52YWwoKSksIDEwKTtcclxuICAgICAgICBpZiAoaXNOYU4ocXVhbnRpdHlWYWx1ZSkgfHwgcXVhbnRpdHlWYWx1ZSA8PSAwKSB7XHJcbiAgICAgICAgICAgIGFyclthcnIubGVuZ3RoXSA9ICc8bGk+S3ZhbnRpdGV0IG3DpXN0ZSBoYSBldHQgdsOkcmRlIHN0w7ZycmUgw6RuIDAuPFxcL2xpPic7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChqUXVlcnkudHJpbSgkKCcjY3VzdG9tZXJObycpLnZhbCgpKSA9PSAnJykge1xyXG4gICAgICAgICAgICBhcnJbYXJyLmxlbmd0aF0gPSAnPGxpPkluZ2VuIGdpbGx0aWd0IGt1bmQgaGFyIHZhbHRzLjxcXC9saT4nO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoalF1ZXJ5LnRyaW0oJCgnI3ZlaWNobGVUeXBlRHJwJykuYXR0cignZGF0YS12YWx1ZScpKSA9PSAnJykge1xyXG4gICAgICAgICAgICBhcnJbYXJyLmxlbmd0aF0gPSAnPGxpPkZvcmRvbnN0eXAgc2FrbmFzLjxcXC9saT4nO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoalF1ZXJ5LnRyaW0oJCgnI3NlbGVjdGVkRGF0ZScpLnZhbCgpKSA9PSAnJykge1xyXG4gICAgICAgICAgICBhcnJbYXJyLmxlbmd0aF0gPSAnPGxpPkRhdHVtIHNha25hcy48XFwvbGk+JztcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGpRdWVyeS50cmltKCQoJyNhcnRpY2xlc0RycCcpLmF0dHIoJ2RhdGEtdmFsdWUnKSkgPT0gJycpIHtcclxuICAgICAgICAgICAgYXJyW2Fyci5sZW5ndGhdID0gJzxsaT5BcnRpa2VsIHNha25hcy48XFwvbGk+JztcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGpRdWVyeS50cmltKCQoJyNyZXNvdXJjZURycCcpLmF0dHIoJ2RhdGEtdmFsdWUnKSkgPT0gJycpIHtcclxuICAgICAgICAgICAgYXJyW2Fyci5sZW5ndGhdID0gJzxsaT5SZXN1cnMgc2FrbmFzLjxcXC9saT4nO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoIWlzVXBkYXRlKSB7XHJcbiAgICAgICAgICAgIHZhciByZXNvdXJjZVZhbHVlID0gJCgnI3Jlc291cmNlRHJwJykuYXR0cignZGF0YS12YWx1ZScpO1xyXG4gICAgICAgICAgICB2YXIgc2VsZWN0ZWREYXRlVmFsdWUgPSAkKCcjc2VsZWN0ZWREYXRlJykudmFsKCk7XHJcbiAgICAgICAgICAgIHZhciBhZ3JlbWVudERyaWVkVW5EcmllZFZhbHVlID0gJCgnI2FncmVtZW50RHJpZWRVbkRyaWVkJykudmFsKCk7XHJcbiAgICAgICAgICAgIHZhciBhcnRpY2xlc1ZhbHVlID0gJCgnI2FydGljbGVzRHJwJykuYXR0cignZGF0YS12YWx1ZScpO1xyXG4gICAgICAgICAgICB2YXIgcXVhbnRpdHlUeHRWYWx1ZSA9ICQoJyNxdWFudGl0eVR4dCcpLnZhbCgpO1xyXG4gICAgICAgICAgICB2YXIgbG9hZE9yVW5sb2RWYWx1ZSA9ICQoXCJpbnB1dFtuYW1lPSdsb2FkT3JVbmxvZFJhZCddOmNoZWNrZWRcIikudmFsKCk7XHJcbiAgICAgICAgICAgIHZhciB2ZWljaGxlVHlwZVZhbHVlID0gJCgnI3ZlaWNobGVUeXBlRHJwJykuYXR0cignZGF0YS12YWx1ZScpO1xyXG4gICAgICAgICAgICB2YXIgc2VhcmNoVHlwZVZhbHVlID0gJCgnI3NlYXJjaC1vcHRpb24nKS5hdHRyKCdkYXRhLXZhbHVlJyk7XHJcbiAgICAgICAgICAgIHZhciBjdXN0b21lck5vID0gJCgnI2N1c3RvbWVyTm8nKS52YWwoKTtcclxuICAgICAgICAgICAgdmFyIGlvTnVtYmVyID0gJCgnI3NlYWNoRmllbGRUeHQnKS52YWwoKTtcclxuXHJcbiAgICAgICAgICAgIGlmIChyZXNvdXJjZVZhbHVlICE9ICcnICYmIHNlbGVjdGVkRGF0ZVZhbHVlICE9ICcnICYmIHF1YW50aXR5VHh0VmFsdWUgIT0gJycgJiYgKGFydGljbGVzVmFsdWUgIT0gJycgfHwgYXJnZW1lbnRWYWx1ZSAhPSAnJykpIHtcclxuICAgICAgICAgICAgICAgIHZhciBwYXJhbWV0ZXJzID0gXCJ7J3Jlc291cmNlR3JvdXBJZCc6J1wiICsgcmVzb3VyY2VWYWx1ZSArIFwiJywgJ3NlbGVjdGVkRGF0ZSc6J1wiICsgc2VsZWN0ZWREYXRlVmFsdWUgKyBcIicsICdhcnRpY2xlJzonXCIgKyBhcnRpY2xlc1ZhbHVlICsgXCInLCAncXR5JzonXCIgKyBxdWFudGl0eVR4dFZhbHVlICsgXCInLCAnbG9hZHVubG9hZCc6J1wiICsgbG9hZE9yVW5sb2RWYWx1ZSArIFwiJywgJ3ZlaWNobGVUeXBlJzonXCIgKyB2ZWljaGxlVHlwZVZhbHVlICsgXCInLCAnZHJpZWRVbkRyaWVkJzonXCIgKyBhZ3JlbWVudERyaWVkVW5EcmllZFZhbHVlICsgXCInLCAnY3VzdG9tZXJObyc6J1wiICsgY3VzdG9tZXJObyArIFwiJywnc2VhcmNoVHlwZSc6J1wiICsgc2VhcmNoVHlwZVZhbHVlICsgXCInLCAnaU9OdW1iZXInOidcIiArIGlvTnVtYmVyICsgXCInfVwiO1xyXG4gICAgICAgICAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgICAgICAgICB0eXBlOiAnUE9TVCcsXHJcbiAgICAgICAgICAgICAgICAgICAgdXJsOiAnL2FwaS90aW1lLWJvb2tpbmcvRXhpc3RCb29raW5nJyxcclxuICAgICAgICAgICAgICAgICAgICBkYXRhVHlwZTogXCJqc29uXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgY29udGVudFR5cGU6IFwiYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD11dGYtOFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IHBhcmFtZXRlcnMsXHJcbiAgICAgICAgICAgICAgICAgICAgYXN5bmM6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2UuSXNFeGlzdEJvb2tpbmcgPT0gdHJ1ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXJyW2Fyci5sZW5ndGhdID0gXCI8bGk+RGV0IGZpbm5zIHJlZGFuIGVuIGJva25pbmcgcMOlIGlua8O2cHNvcmRlcm4uIFJhZGVyYSBiZWZpbnRsaWcgYm9rbmluZyBpbm5hbiBkdSBrYW4gc2thcGEgZW4gbnkhPFxcL2xpPlwiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBhbGVydCgnRXhpc3RCb29raW5nJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGFycjtcclxuICAgIH07XHJcblxyXG4gICAgLy9NYWtlIHJlc2VydmF0aW9uXHJcbiAgICB2YXIgbWFrZVJlc2VydmF0aW9uID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBtYWtlcmVzZXJ2YXRpb25Db250aW51ZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIHJlc2VydmF0aW9ucyA9IFtdO1xyXG4gICAgICAgICAgICB2YXIgaSA9IDA7XHJcbiAgICAgICAgICAgIHZhciBpbm5lckRUTyA9IHt9O1xyXG4gICAgICAgICAgICBpbm5lckRUT1snQWdyZW1lbnQnXSA9ICcnO1xyXG4gICAgICAgICAgICBpbm5lckRUT1snU2VhcmNoVmFsdWUnXSA9ICQoJyNzZWFjaEZpZWxkVHh0JykudmFsKCk7XHJcbiAgICAgICAgICAgIGlubmVyRFRPWydRdHknXSA9ICQoXCIjcXVhbnRpdHlUeHRcIikudmFsKCk7XHJcbiAgICAgICAgICAgIGlubmVyRFRPWydWZWhpY2xlQXNzb3J0bWVudElEJ10gPSAkKCcjdmVpY2hsZVR5cGVEcnAnKS5hdHRyKCdkYXRhLXZhbHVlJyk7XHJcbiAgICAgICAgICAgIGlubmVyRFRPWydSZXNvdXJjZUlkJ10gPSAkKCcjcmVzb3VyY2VEcnAnKS5hdHRyKCdkYXRhLXZhbHVlJyk7XHJcbiAgICAgICAgICAgIGlubmVyRFRPWydOb3RlJ10gPSAkKCcjSURPdnJpZ3QnKS52YWwoKTtcclxuXHJcbiAgICAgICAgICAgIGlubmVyRFRPWydSZW1pbmRlckluTWludXRlc0JlZm9yZSddID0gJCgnI0lEUmVtaW5kZXInKS5hdHRyKFwiZGF0YS12YWx1ZVwiKTtcclxuICAgICAgICAgICAgaW5uZXJEVE9bJ0VtYWlsQWRkcmVzcyddID0gJCgnI0lERXBvc3QnKS52YWwoKTtcclxuXHJcbiAgICAgICAgICAgIGlubmVyRFRPWydDdXN0b21lck5hbWUnXSA9ICQoXCIjY3VzdG9tZXJOYW1lXCIpLnZhbCgpO1xyXG4gICAgICAgICAgICBpbm5lckRUT1snQ3VzdG9tZXJObyddID0gJChcIiNjdXN0b21lck5vXCIpLnZhbCgpO1xyXG4gICAgICAgICAgICBpbm5lckRUT1snRHJpZWQnXSA9ICQoJyNhZ3JlbWVudERyaWVkVW5EcmllZCcpLnZhbCgpO1xyXG4gICAgICAgICAgICBpbm5lckRUT1snU2VhcmNoVHlwZSddID0gJCgnI3NlYXJjaC1vcHRpb24nKS5hdHRyKCdkYXRhLXZhbHVlJyk7XHJcbiAgICAgICAgICAgIGlubmVyRFRPWydTZWxlY3RlZERhdGUnXSA9ICQoJyNzZWxlY3RlZERhdGUnKS52YWwoKTtcclxuICAgICAgICAgICAgaW5uZXJEVE9bJ0l0ZW0nXSA9ICQoJyNhcnRpY2xlc0RycCcpLmF0dHIoJ2RhdGEtdmFsdWUnKTtcclxuICAgICAgICAgICAgaW5uZXJEVE9bJ0xldmVyYW5zZm9yc2FrcmFuc251bW1lciddID0gJCgnI0lETGV2bnInKS52YWwoKTtcclxuICAgICAgICAgICAgaW5uZXJEVE9bJ0xpY2Vuc2VQbGF0ZU5vJ10gPSAkKCcjSURSZWcnKS52YWwoKSAhPSBudWxsID8gJCgnI0lEUmVnJykudmFsKCkgOiBcIlwiO1xyXG4gICAgICAgICAgICBpbm5lckRUT1snTW9iaWxlUGhvbmUnXSA9ICQoJyNJRE1vYmlsJykudmFsKCk7XHJcbiAgICAgICAgICAgIGlubmVyRFRPWydJc0ludGVybmFsJ10gPSAkKCcjSXNJbnRlcm5hbCcpLnZhbCgpO1xyXG4gICAgICAgICAgICB2YXIgTGluZW51bWJlciA9ICQoXCJkaXZcIikuZGF0YShcIkxpbmVudW1iZXJcIik7XHJcbiAgICAgICAgICAgIGlmIChMaW5lbnVtYmVyID09IG51bGwpIHtcclxuICAgICAgICAgICAgICAgIExpbmVudW1iZXIgPSAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlubmVyRFRPWydMaW5lTnVtYmVyJ10gPSBMaW5lbnVtYmVyO1xyXG4gICAgICAgICAgICB2YXIgcGVyZm9ybVVubG9hZCA9ICgkKFwiaW5wdXQ6cmFkaW9bbmFtZT0nbG9hZE9yVW5sb2RSYWQnXTpjaGVja2VkXCIpLnZhbCgpID09PSBcIjJcIik7XHJcblxyXG4gICAgICAgICAgICBpZiAoVGltZUJvb2tpbmdGdW5jdGlvbi52YWxpZGF0ZVNhdmVUYWJsZShpbm5lckRUT1snRW1haWxBZGRyZXNzJ10sIGlubmVyRFRPWydNb2JpbGVQaG9uZSddLCBpbm5lckRUT1snTGljZW5zZVBsYXRlTm8nXSwgaW5uZXJEVE9bJ0xldmVyYW5zZm9yc2FrcmFuc251bW1lciddKSkge1xyXG4gICAgICAgICAgICAgICAgJCgnLmJvb2tpbmdSb3dzJykuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCQodGhpcykuaXMoJzpjaGVja2VkJykpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaSsrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbyA9IHt9O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBvWydGcm9tVGltZSddID0gJCh0aGlzKS5hdHRyKCdmcm9tdGltZScpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBvWydSZXNvdXJjZUlkJ10gPSAkKHRoaXMpLmF0dHIoJ3Jlc3Vyc2lkJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwZXJmb3JtVW5sb2FkID09IHRydWUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9bJ0xvYWRpbmcnXSA9ICdmYWxzZSc7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvWydVbmxvYWRpbmcnXSA9ICd0cnVlJztcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9bJ0xvYWRpbmcnXSA9ICd0cnVlJztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9bJ1VubG9hZGluZyddID0gJ2ZhbHNlJztcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXNlcnZhdGlvbnMucHVzaChvKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAocmVzZXJ2YXRpb25zLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICBpbm5lckRUT1snUmVzZXJ2YXRpb25zJ10gPSByZXNlcnZhdGlvbnM7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGNvbnRhaW5lckRUTyA9IHt9O1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRhaW5lckRUTy5yZXNlcnZhdGlvblRvTWFrZSA9IGlubmVyRFRPO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnUE9TVCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHVybDogJy9hcGkvdGltZS1ib29raW5nL01ha2VSZXNlcnZhdGlvbicsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFUeXBlOiBcImpzb25cIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudFR5cGU6IFwiYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD11dGYtOFwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeShjb250YWluZXJEVE8pLFxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYWtlUmVzZXJ2YXRpb25TdWNjZXNzKHJlc3BvbnNlLm1ha2VSZXNlcnZhdGlvbnMpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uIChyZXNwb25zZSkgeyBtYWtlUmVzcnZhdGlvbkVycm9yKHJlc3BvbnNlKTsgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBUaW1lQm9va2luZ0Z1bmN0aW9uLmNsZWFyQ29udGVudFRvTW9kYWwoXCIjZGlhbG9nQXJlYVwiKTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgY29udGVudCA9ICQoXCI8cD48L3A+XCIpLmFwcGVuZChcIkluZ2EgdGlkZXIgdmFsZGFcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgVGltZUJvb2tpbmdGdW5jdGlvbi5maWxsQ29udGVudFRvTW9kYWwoXCIjZGlhbG9nQXJlYVwiLCBcIlRpZGVyIHNha25hc1wiLCBjb250ZW50LCB0cnVlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICB9O1xyXG4gICAgICAgIHZhciBtYWtlUmVzZXJ2YXRpb25TdWNjZXNzID0gZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgICAgIHZhciBhcnIgPSBbXTtcclxuICAgICAgICAgICAgdmFyIG1zZ1RpdGxlID0gJyc7XHJcbiAgICAgICAgICAgIHZhciBzdWNjZXNzQ250ID0gMDtcclxuICAgICAgICAgICAgdmFyIGVycm9yQ250ID0gMDtcclxuICAgICAgICAgICAgYXJyW2Fyci5sZW5ndGhdID0gJzxoND5Cb2tuaW5nYXI6PFxcL2g0Pic7XHJcbiAgICAgICAgICAgIGFyclthcnIubGVuZ3RoXSA9ICc8cD4nO1xyXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJlc3BvbnNlLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2VbaV0uU3RhdHVzID09IDIwMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChpID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBhcnJbYXJyLmxlbmd0aF0gPSAnPGJyIFxcLz48YnIgXFwvPic7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGFyclthcnIubGVuZ3RoXSA9IHJlc3BvbnNlW2ldLlN0YXJ0RGF0ZTtcclxuICAgICAgICAgICAgICAgICAgICBhcnJbYXJyLmxlbmd0aF0gPSAnIGtsOiAnO1xyXG4gICAgICAgICAgICAgICAgICAgIGFyclthcnIubGVuZ3RoXSA9IHJlc3BvbnNlW2ldLlN0YXJ0VGltZTtcclxuICAgICAgICAgICAgICAgICAgICBhcnJbYXJyLmxlbmd0aF0gPSAnPGJyIFxcLz4nO1xyXG4gICAgICAgICAgICAgICAgICAgIGFyclthcnIubGVuZ3RoXSA9IHJlc3BvbnNlW2ldLkN1c3RvbWVyTm87XHJcbiAgICAgICAgICAgICAgICAgICAgYXJyW2Fyci5sZW5ndGhdID0gJyAnO1xyXG4gICAgICAgICAgICAgICAgICAgIGFyclthcnIubGVuZ3RoXSA9IHJlc3BvbnNlW2ldLkN1c3RvbWVyTmFtZTtcclxuICAgICAgICAgICAgICAgICAgICBzdWNjZXNzQ250Kys7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGVycm9yQ250Kys7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGFyclthcnIubGVuZ3RoXSA9IHJlc3BvbnNlW2ldLkVycm9yTWVzc2FnZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBhcnJbYXJyLmxlbmd0aF0gPSBcIjxiciBcXC8+XCI7XHJcbiAgICAgICAgICAgIGFyclthcnIubGVuZ3RoXSA9IFwiPFxcL3A+XCI7XHJcbiAgICAgICAgICAgIGlmIChlcnJvckNudCA+IDAgJiYgc3VjY2Vzc0NudCA9PT0gMCkge1xyXG4gICAgICAgICAgICAgICAgbXNnVGl0bGUgPSBcIkZlbCB1cHBzdG9kIHZpZCBib2tuaW5nZW5cIjtcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChlcnJvckNudCA+IDAgJiYgc3VjY2Vzc0NudCA+IDApIHtcclxuICAgICAgICAgICAgICAgIG1zZ1RpdGxlID0gXCJBbGxhIGJva25pbmdhciBnaWNrIGludGUgaWdlbm9tXCI7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoZXJyb3JDbnQgPT0gMCAmJiBzdWNjZXNzQ250ID4gMCkge1xyXG4gICAgICAgICAgICAgICAgbXNnVGl0bGUgPSBcIkJva25pbmdhciBzcGFyYWRlXCI7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIFRpbWVCb29raW5nRnVuY3Rpb24uY2xlYXJDb250ZW50VG9Nb2RhbChcIiNkaWFsb2dBcmVhXCIpO1xyXG4gICAgICAgICAgICBUaW1lQm9va2luZ0Z1bmN0aW9uLmZpbGxDb250ZW50VG9Nb2RhbChcIiNkaWFsb2dBcmVhXCIsIG1zZ1RpdGxlLCBhcnIuam9pbihcIlwiKSwgdHJ1ZSwgZGlhbG9nVHlwZS5zdWNjZXNzKTtcclxuICAgICAgICAgICAgJChcIiNzYXZlQnRuXCIpLmFkZENsYXNzKFwiZGlzYWJsZWQtYnRuXCIpO1xyXG4gICAgICAgICAgICBjbGVhckZvcm0oKTtcclxuICAgICAgICAgICAgc2VhcmNoQXZhaWxhYmxlU2xvdHMoKTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB2YXIgbWFrZVJlc3J2YXRpb25FcnJvciA9IGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG4gICAgICAgICAgICBUaW1lQm9va2luZ0Z1bmN0aW9uLmNsZWFyQ29udGVudFRvTW9kYWwoXCIjZGlhbG9nQXJlYVwiKTtcclxuICAgICAgICAgICAgVGltZUJvb2tpbmdGdW5jdGlvbi5maWxsQ29udGVudFRvTW9kYWwoXCIjZGlhbG9nQXJlYVwiLCBcIkJva25pbmdzZmVsXCIsIFwiRmVsIHVwcHN0b2QgbsOkciBib2tpbmcgc2t1bGxlIHJlZ2lzdHJlcmFzLlwiLCB0cnVlLCBkaWFsb2dUeXBlLmVycm9yKTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB2YXIgZXJyb3JzID0gdmFsaWRhdGVGaWVsZHNGb3JSZXNlcnZhdGlvbihmYWxzZSk7XHJcbiAgICAgICAgaWYgKGVycm9ycy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIFRpbWVCb29raW5nRnVuY3Rpb24uY2xlYXJDb250ZW50VG9Nb2RhbChcIiNkaWFsb2dBcmVhXCIpO1xyXG4gICAgICAgICAgICB2YXIgY29udGVudCA9ICQoXCI8cD48L3A+XCIpLmFwcGVuZChcclxuICAgICAgICAgICAgICAgICQoXCI8dWw+PC91bD5cIikuYXBwZW5kKGVycm9ycy5qb2luKCcnKSkpO1xyXG4gICAgICAgICAgICBUaW1lQm9va2luZ0Z1bmN0aW9uLmZpbGxDb250ZW50VG9Nb2RhbChcIiNkaWFsb2dBcmVhXCIsIFwiVXBwZ2lmdGVyIHNha25hc1wiLCBjb250ZW50LCB0cnVlLCBkaWFsb2dUeXBlLmVycm9yKTtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIG1ha2VyZXNlcnZhdGlvbkNvbnRpbnVlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICB2YXIgc2VhcmNoQXZhbGlibGVTbG90QWN0aW9uID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGNsZWFyRm9ybSgpO1xyXG4gICAgICAgICQoXCIjcmVzdWx0VGFibGVcIikuaGlkZSgpO1xyXG4gICAgICAgICQoXCIucmVzdWx0Q2FwdGlvblwiKS5oaWRlKCk7XHJcbiAgICAgICAgJChcIiNyZXN1bHRUYWJsZS1ib3hcIikucmVtb3ZlQ2xhc3MoXCJoYXMtc2VwYXJhdG9yXCIpO1xyXG4gICAgICAgICQoXCIjU2F2ZVRhYmxlXCIpLmhpZGUoKTtcclxuICAgICAgICAkKFwiI3NhdmVCdG5cIikuaGlkZSgpO1xyXG4gICAgICAgIHNlYXJjaEF2YWlsYWJsZVNsb3RzKCk7XHJcbiAgICB9O1xyXG4gICAgLy9FdmVudFxyXG4gICAgdmFyIHZhbGlkYXRlQnV0dG9uU2VhcmNoRXZlbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgJChcIiNzZWFjaEZpZWxkVHh0XCIpLnVuYmluZCgna2V5dXAnKS5rZXl1cChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmICgkKHRoaXMpLnZhbCgpICE9PSBcIlwiKSB7XHJcbiAgICAgICAgICAgICAgICAkKFwiI3NlYXJjRmllbGRoQnRuXCIpLnJlbW92ZUNsYXNzKFwiZGlzYWJsZWQtYnRuXCIpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgJChcIiNzZWFyY0ZpZWxkaEJ0blwiKS5hZGRDbGFzcyhcImRpc2FibGVkLWJ0blwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgICQoXCIjc2VhY2hGaWVsZFR4dFwiKS51bmJpbmQoJ2NoYW5nZScpLmNoYW5nZShmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmICgkKHRoaXMpLnZhbCgpICE9PSBcIlwiKSB7XHJcbiAgICAgICAgICAgICAgICAkKFwiI3NlYXJjRmllbGRoQnRuXCIpLnJlbW92ZUNsYXNzKFwiZGlzYWJsZWQtYnRuXCIpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgJChcIiNzZWFyY0ZpZWxkaEJ0blwiKS5hZGRDbGFzcyhcImRpc2FibGVkLWJ0blwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbiAgICB2YXIgbWFrZVJlc2VydmF0aW9uRXZlbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgJChcIiNzYXZlQnRuXCIpLmNsaWNrKGZ1bmN0aW9uICgpIHsgbWFrZVJlc2VydmF0aW9uKCk7IH0pO1xyXG4gICAgfTtcclxuXHJcbiAgICB2YXIgdXBkYXRlUmVzZXJ2YXRpb25FdmVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKFwiI3VwZGF0ZUJ0blwiKS5jbGljayhmdW5jdGlvbiAoKSB7IHVwZGF0ZVJlc2VydmF0aW9uKCk7IH0pO1xyXG4gICAgfTtcclxuXHJcbiAgICB2YXIgdmFsaWRhdGVSZXF1aXJlZEZpZWxkc0V2ZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQoXCIjZm9ybS10aW1lLWJvb2tpbmdcIikudW5iaW5kKCdjaGFuZ2UnKS5jaGFuZ2UoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAodmFsaWRhdGVSZXF1aXJlZEZpZWxkc0ZvclNlYXJjaCgpKSB7XHJcbiAgICAgICAgICAgICAgICAkKFwiI3NlYXJjaEF2YWlsYmxlU2xvdHNCdG5cIikucGFyZW50KCkucmVtb3ZlQ2xhc3MoXCJkaXNhYmxlZC1idG5cIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAkKCcjc2VhcmNoQXZhaWxibGVTbG90c0J0bicpLnBhcmVudCgpLmFkZENsYXNzKFwiZGlzYWJsZWQtYnRuXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgJChcIiNxdWFudGl0eVR4dFwiKS51bmJpbmQoJ2tleXVwJykua2V5dXAoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAodmFsaWRhdGVSZXF1aXJlZEZpZWxkc0ZvclNlYXJjaCgpKSB7XHJcbiAgICAgICAgICAgICAgICAkKFwiI3NlYXJjaEF2YWlsYmxlU2xvdHNCdG5cIikucGFyZW50KCkucmVtb3ZlQ2xhc3MoXCJkaXNhYmxlZC1idG5cIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAkKCcjc2VhcmNoQXZhaWxibGVTbG90c0J0bicpLnBhcmVudCgpLmFkZENsYXNzKFwiZGlzYWJsZWQtYnRuXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgc2V0RHJvcGRvd24oJCgnI3Jlc291cmNlRHJwJykucGFyZW50KCksICd0eXBlMycpO1xyXG4gICAgICAgICQoXCIuc2VhcmNoU2xvdFJlcXVpcmVkIC5kcm9wZG93biBsaSBhXCIpLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKHZhbGlkYXRlUmVxdWlyZWRGaWVsZHNGb3JTZWFyY2goKSkge1xyXG4gICAgICAgICAgICAgICAgJCgnI3NlYXJjaEF2YWlsYmxlU2xvdHNCdG4nKS5wYXJlbnQoKS5yZW1vdmVDbGFzcyhcImRpc2FibGVkLWJ0blwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICQoJyNzZWFyY2hBdmFpbGJsZVNsb3RzQnRuJykucGFyZW50KCkuYWRkQ2xhc3MoXCJkaXNhYmxlZC1idG5cIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICBpZiAodmFsaWRhdGVSZXF1aXJlZEZpZWxkc0ZvclNlYXJjaCgpKSB7XHJcbiAgICAgICAgICAgICQoJyNzZWFyY2hBdmFpbGJsZVNsb3RzQnRuJykucGFyZW50KCkucmVtb3ZlQ2xhc3MoXCJkaXNhYmxlZC1idG5cIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAkKCcjc2VhcmNoQXZhaWxibGVTbG90c0J0bicpLnBhcmVudCgpLmFkZENsYXNzKFwiZGlzYWJsZWQtYnRuXCIpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgdmFyIHNlYXJjaEl0ZW1FdmVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgZHJvcGRvd25SZXNvdXJjZSA9ICQoJyNyZXNvdXJjZURycCAuZHJvcGRvd24gbGkgYScpO1xyXG4gICAgICAgIGRyb3Bkb3duUmVzb3VyY2Uub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgcmVzb3VyY2VWYWx1ZSA9ICQodGhpcykucGFyZW50KCkuYXR0cignZGF0YS12YWx1ZScpO1xyXG4gICAgICAgICAgICBzZWFyY2hJdGVtcygnJywgcmVzb3VyY2VWYWx1ZSk7XHJcbiAgICAgICAgICAgIHZhciByZWdOb01hbmRhdG9yeSA9ICQodGhpcykucGFyZW50KCkuYXR0cigncmVnTm9NYW5kYXRvcnknKTtcclxuICAgICAgICAgICAgaWYgKHJlZ05vTWFuZGF0b3J5ICE9IG51bGwpIHtcclxuICAgICAgICAgICAgICAgIGlmIChyZWdOb01hbmRhdG9yeS50b0xvd2VyQ2FzZSgpID09ICd0cnVlJykge1xyXG4gICAgICAgICAgICAgICAgICAgICQoJyNJRFJlZycpLmFkZENsYXNzKCd1cGRhdGVSZXF1aWVyZWQnKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnI0lEUmVnJykucmVtb3ZlQ2xhc3MoJ3VwZGF0ZVJlcXVpZXJlZCcpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgJCgnI0lEUmVnJykucmVtb3ZlQ2xhc3MoJ3VwZGF0ZVJlcXVpZXJlZCcpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHZhciBkcm9wZG93bkFydGljbGUgPSAkKCcjYXJ0aWNsZXNEcnAgLmRyb3Bkb3duIGxpIGEnKTtcclxuICAgICAgICBkcm9wZG93bkFydGljbGUub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgYXJ0aWNsZVZhbHVlID0gJCh0aGlzKS5wYXJlbnQoKS5hdHRyKCdkYXRhLXZhbHVlJyk7XHJcbiAgICAgICAgICAgIGlmIChhcnRpY2xlVmFsdWUgIT0gbnVsbCAmJiBhcnRpY2xlVmFsdWUgIT0gXCJcIikge1xyXG4gICAgICAgICAgICAgICAgdmFyIGFydGljbGVBcnIgPSBhcnRpY2xlVmFsdWUuc3BsaXQoJy0nKTtcclxuICAgICAgICAgICAgICAgIGlmIChhcnRpY2xlQXJyLmxlbmd0aCA9PSAzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGFydE5vID0gYXJ0aWNsZUFyclswXTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgZHJpZWRVbmRyaWVkID0gYXJ0aWNsZUFyclsxXTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZHJpZWRVbmRyaWVkLmxlbmd0aCA+PSAyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRyaWVkVW5kcmllZCA9IGRyaWVkVW5kcmllZC5zdWJzdHJpbmcoMCwgMSkudG9VcHBlckNhc2UoKSArIGRyaWVkVW5kcmllZC5zdWJzdHJpbmcoMSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAkKCcjYWdyZW1lbnREcmllZFVuRHJpZWQnKS52YWwoZHJpZWRVbmRyaWVkKTtcclxuXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICAkKFwiI2xvYWRSYWRpb1wiKS51bmJpbmQoXCJjaGFuZ2VcIikuY2hhbmdlKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgc2VhcmNoSXRlbXMoXCJcIiwgJChcIiNyZXNvdXJjZURycFwiKS5hdHRyKFwiZGF0YS12YWx1ZVwiKSk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoXCIjdW5sb2FkcmFkaW9cIikudW5iaW5kKFwiY2hhbmdlXCIpLmNoYW5nZShmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHNlYXJjaEl0ZW1zKFwiXCIsICQoXCIjcmVzb3VyY2VEcnBcIikuYXR0cihcImRhdGEtdmFsdWVcIikpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkKFwiI3NlbGVjdGVkRGF0ZVwiKS5jaGFuZ2UoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBzZWFyY2hJdGVtcyhcIlwiLCAkKFwiI3Jlc291cmNlRHJwXCIpLmF0dHIoXCJkYXRhLXZhbHVlXCIpKTtcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcblxyXG4gICAgdmFyIHNlYXJjaEF2YWlsYWJsZVNsb3RzRXZlbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgJCgnI3NlYXJjaEF2YWlsYmxlU2xvdHNCdG4nKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHNlYXJjaEF2YWxpYmxlU2xvdEFjdGlvbigpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbiAgICB2YXIgc2VhcmNoQ3VzdG9tZXJFdmVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKCcjc2VhcmNGaWVsZGhCdG4nKS5jbGljayhmdW5jdGlvbiAoKSB7IHNlYXJjaEN1c3RvbWVyKCk7IH0pO1xyXG4gICAgfTtcclxuXHJcbiAgICB2YXIgYm9rYVNlYXJjaFR5cGVDaGFuZ2VFdmVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKFwiI3NlYXJjaC1vcHRpb24gPiB1bCA+IGxpID4gYVwiKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciBwbGFjZWhvbGRlckRhdGEgPSAkKHRoaXMpLmh0bWwoKTtcclxuICAgICAgICAgICAgJChcIiNzZWFjaEZpZWxkVHh0XCIpLmF0dHIoJ3BsYWNlaG9sZGVyJywgXCJBbmdlIFwiICsgcGxhY2Vob2xkZXJEYXRhLnRvTG93ZXJDYXNlKCkpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbiAgICB2YXIgc2VhcmNoQ3VzdG9tZXJXaGVuTG9hZFBhZ2VFdmVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAoJCgnI3NlYWNoRmllbGRUeHQnKS52YWwoKSAhPSAnJykge1xyXG4gICAgICAgICAgICAkKFwiI3NlYXJjRmllbGRoQnRuXCIpLnJlbW92ZUNsYXNzKFwiZGlzYWJsZWQtYnRuXCIpO1xyXG4gICAgICAgICAgICBzZWFyY2hDdXN0b21lcigpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICQoXCIjc2VhcmNGaWVsZGhCdG5cIikuYWRkQ2xhc3MoXCJkaXNhYmxlZC1idG5cIik7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICB2YXIgaW5pdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBzZWFyY2hJdGVtRXZlbnQoKTtcclxuICAgICAgICB2YWxpZGF0ZVJlcXVpcmVkRmllbGRzRXZlbnQoKTtcclxuICAgICAgICBzZWFyY2hBdmFpbGFibGVTbG90c0V2ZW50KCk7XHJcbiAgICAgICAgbWFrZVJlc2VydmF0aW9uRXZlbnQoKTtcclxuICAgICAgICB1cGRhdGVSZXNlcnZhdGlvbkV2ZW50KCk7XHJcbiAgICAgICAgc2VhcmNoQ3VzdG9tZXJFdmVudCgpO1xyXG4gICAgICAgIGJva2FTZWFyY2hUeXBlQ2hhbmdlRXZlbnQoKTtcclxuICAgICAgICBzZWFyY2hDdXN0b21lcldoZW5Mb2FkUGFnZUV2ZW50KCk7XHJcbiAgICAgICAgdmFsaWRhdGVCdXR0b25TZWFyY2hFdmVudCgpO1xyXG5cclxuICAgICAgICBpZiAoJCgnI0lETGV2bnInKSAmJiAhJCgnI0lETGV2bnInKS52YWwoKSkge1xyXG4gICAgICAgICAgICAkKCcjSURMZXZucicpLnZhbCgkKCcjc2VhY2hGaWVsZFR4dCcpLnZhbCgpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8kKFwiI3Jlc3VsdFRhYmxlLWJveFwiKS5oaWRlKCk7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBpbml0OiBpbml0LFxyXG4gICAgICAgIHNlYXJjaEl0ZW1zOiBzZWFyY2hJdGVtcyxcclxuICAgICAgICBzZWFyY2hBdmFsaWJsZVNsb3RBY3Rpb246IHNlYXJjaEF2YWxpYmxlU2xvdEFjdGlvblxyXG4gICAgfTtcclxufTtcclxuIiwiJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIG15TGlzdGluZ0Jvb2tpbmcgPSBuZXcgTGlzdGluZ0Jvb2tpbmdQYWdlKCk7XHJcbiAgICBteUxpc3RpbmdCb29raW5nLmluaXQoKTtcclxuICAgICQoZG9jdW1lbnQpLnRyaWdnZXIoXCJlbmhhbmNlLnRhYmxlc2F3XCIpO1xyXG59KTtcclxuXHJcbnZhciBMaXN0aW5nQm9va2luZ1BhZ2UgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgZGlhbG9nVHlwZSA9IEdyb0NvbW1vbi5tb2RhbEluZm9DbGFzcztcclxuICAgIHZhciBsYXN0U2VhcmNoUXVlcnkgPSB7fTtcclxuICAgIC8vc2VhcmNoXHJcbiAgICB2YXIgZG9TZWFyY2ggPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgVGltZUJvb2tpbmdGdW5jdGlvbi5ibG9ja1VJKCk7XHJcbiAgICAgICAgJCgnI1NhdmVUYWJsZScpLmhpZGUoKTtcclxuICAgICAgICAkKCcjdXBkYXRlTGlzdEJ0bicpLmhpZGUoKTtcclxuXHJcbiAgICAgICAgdmFyIG9iaiA9IHt9O1xyXG4gICAgICAgIG9iai5SZXNvdXJjZUdyb3VwSWQgPSAkKCcjYmwtcmVzb3VyY2VEcnAnKS5hdHRyKFwiZGF0YS12YWx1ZVwiKTtcclxuICAgICAgICBvYmouRnJvbURhdGUgPSAkKCcjZnJvbURhdGVUeHQnKS52YWwoKTtcclxuICAgICAgICBvYmouVG9EYXRlID0gJCgnI3RvRGF0ZVR4dCcpLnZhbCgpO1xyXG4gICAgICAgIG9iai5SZWdObyA9ICQoJyNSZWdObycpLnZhbCgpO1xyXG4gICAgICAgIG9iai5DdXN0b21lck5vID0gJCgnI2N1c3RvbWVyTm8nKS52YWwoKTtcclxuICAgICAgICBvYmouSXNJbnRlcm5hbCA9ICQoJyNpc0ludGVybmFsJykudmFsKCk7XHJcbiAgICAgICAgb2JqLlJlZmVyZW5jZVR5cGUgPSAnJztcclxuICAgICAgICBvYmouUmVmZXJlbmNlTnVtYmVyID0gJyc7XHJcbiAgICAgICAgb2JqLlB1cmNoc2VPcmRlckxpbmUgPSAnJztcclxuICAgICAgICB2YXIgY29udGFpbmVyRHRvID0ge307XHJcbiAgICAgICAgY29udGFpbmVyRHRvLnJlcXVlc3QgPSBvYmo7XHJcbiAgICAgICAgbGFzdFNlYXJjaFF1ZXJ5ID0gb2JqO1xyXG5cclxuICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICB0eXBlOiAnUE9TVCcsXHJcbiAgICAgICAgICAgIHVybDogJy9hcGkvbGlzdGluZy1ib29raW5nL1NlYXJjaEJvb2tpbmdzJyxcclxuICAgICAgICAgICAgY29udGVudFR5cGU6IFwiYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD11dGYtOFwiLFxyXG4gICAgICAgICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeShjb250YWluZXJEdG8pLFxyXG5cclxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgICAgICAgICBzZWFyY2hDb21wbGV0ZShyZXNwb25zZSk7XHJcbiAgICAgICAgICAgICAgICBUaW1lQm9va2luZ0Z1bmN0aW9uLnVuQmxvY2tVSSgpO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgICAgICAgICBhbGVydCgnRXJyb3I6ICcgKyByZXNwb25zZSk7XHJcbiAgICAgICAgICAgICAgICAkKFwiI3NlYXJjaC1yZXN1bHQtYm9vay1saXN0aW5nXCIpLmhpZGUoKTtcclxuICAgICAgICAgICAgICAgIFRpbWVCb29raW5nRnVuY3Rpb24udW5CbG9ja1VJKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdmFyIHNlYXJjaENvbXBsZXRlID0gZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgICAgICQoXCIjc2VhcmNoLXJlc3VsdC1ib29rLWxpc3RpbmdcIikuaHRtbChyZXNwb25zZSk7XHJcbiAgICAgICAgICAgIGlmIChyZXNwb25zZS5yZXN1bHRTZWFyY2hCb29raW5ncyA9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICAgICQoXCIjc2VhcmNoLXJlc3VsdC1ib29rLWxpc3RpbmdcIikuc2hvdygpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgJChcIiNzZWFyY2gtcmVzdWx0LWJvb2stbGlzdGluZ1wiKS5oaWRlKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZGVsZXRlQm9va2luZ0V2ZW50cygpO1xyXG4gICAgICAgICAgICBlZGl0Qm9va2luZ0V2ZW50KCk7XHJcbiAgICAgICAgICAgIHByaW50UGFnZUV2ZW50cygpO1xyXG4gICAgICAgICAgICAkKGRvY3VtZW50KS50cmlnZ2VyKFwiZW5oYW5jZS50YWJsZXNhd1wiKTtcclxuICAgICAgICB9O1xyXG4gICAgfTtcclxuICAgIC8vZGVsZXRlXHJcbiAgICB2YXIgZGVsZXRlQm9va2luZyA9IGZ1bmN0aW9uIChkZWxldGVCdXR0b24pIHtcclxuICAgICAgICB2YXIgZGF0YVZhbHVlcyA9ICQoZGVsZXRlQnV0dG9uKS5wYXJlbnQoKS5wYXJlbnQoKTtcclxuXHJcbiAgICAgICAgdmFyIHJlc2VydmF0aW9uSWQgPSBkYXRhVmFsdWVzLmZpbmQoXCI+ICNyZXNlcnZhdGlvbklkXCIpLmh0bWwoKTtcclxuICAgICAgICB2YXIgcmVzZXJ2YXRpb25EYXRlID0gZGF0YVZhbHVlcy5maW5kKFwiI2Zyb20tZGF0ZVwiKS52YWwoKTtcclxuICAgICAgICB2YXIgdGltZSA9IGRhdGFWYWx1ZXMuZmluZChcIiNmcm9tLXRpbWVcIikudmFsKCk7XHJcbiAgICAgICAgdmFyIG93bmVyID0gZGF0YVZhbHVlcy5maW5kKFwiPiAjb3duZXJcIikuaHRtbCgpO1xyXG4gICAgICAgIHZhciBjdXN0b21lck5vID0gZGF0YVZhbHVlcy5maW5kKFwiPiAjY3VzdG9tZXItbnVtYmVyXCIpLmh0bWwoKTtcclxuXHJcbiAgICAgICAgdmFyIGNvbnRlbnQgPSAkKFwiPHA+PC9wPlwiKTtcclxuICAgICAgICBjb250ZW50LmFwcGVuZCgnPHNwYW4gY2xhc3M9XCJ1aS1pY29uIHVpLWljb24tYWxlcnRcIiBzdHlsZT1cImZsb2F0OmxlZnQ7IG1hcmdpbjowIDdweCAyMHB4IDA7XCI+PC9zcGFuPicpO1xyXG4gICAgICAgIGNvbnRlbnQuYXBwZW5kKCdWaWxsIGR1IHZlcmtsaWdlbiByYWRlcmEgYm9rbmluZ2VuPGJyIFxcLz4ga2w6ICcgKyB0aW1lICsgJz8nKTtcclxuICAgICAgICBUaW1lQm9va2luZ0Z1bmN0aW9uLmNsZWFyQ29udGVudFRvRGVsZXRlRGlhbG9nKCk7XHJcbiAgICAgICAgVGltZUJvb2tpbmdGdW5jdGlvbi5maWxsQ29udGVudFRvRGVsZXRlRGlhbG9nKFwiVGEgYm9ydCBib2tuaW5nP1wiLCBjb250ZW50KTtcclxuICAgICAgICAkKFwiI2RlbGV0ZURpYWxvZ1wiKS5maW5kKFwiLmJ0bi1va1wiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgZGVsZXRSZXNlcnZhdGlvblByb2Nlc3NMaXN0KHJlc2VydmF0aW9uSWQsIG93bmVyLCBjdXN0b21lck5vLCByZXNlcnZhdGlvbkRhdGUsIHRpbWUpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB2YXIgZGVsZXRSZXNlcnZhdGlvblByb2Nlc3NMaXN0ID0gZnVuY3Rpb24gKHJlc2VydmF0aW9uSWQsIG93bmVyLCBjdXN0b21lck5vLCByZXNlcnZhdGlvbkRhdGUsIHRpbWUpIHtcclxuICAgICAgICAgICAgY2xlYXJGb3JtTGlzdCgpO1xyXG4gICAgICAgICAgICB2YXIgbyA9IHt9O1xyXG4gICAgICAgICAgICBvLnJlc2VydmF0aW9uSWQgPSByZXNlcnZhdGlvbklkO1xyXG4gICAgICAgICAgICBvLm93bmVyID0gb3duZXI7XHJcbiAgICAgICAgICAgIG8uY3VzdG9tZXJObyA9IGN1c3RvbWVyTm87XHJcbiAgICAgICAgICAgIG8uZGF0ZVJlZ2lzdGVyZWQgPSByZXNlcnZhdGlvbkRhdGUgKyBcIiBcIiArIHRpbWU7XHJcbiAgICAgICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgICAgICB0eXBlOiAnUE9TVCcsXHJcbiAgICAgICAgICAgICAgICB1cmw6ICcvYXBpL3RpbWUtYm9va2luZy9EZWxldGVSZXNlcnZhdGlvbicsXHJcbiAgICAgICAgICAgICAgICBkYXRhVHlwZTogXCJqc29uXCIsXHJcbiAgICAgICAgICAgICAgICBjb250ZW50VHlwZTogXCJhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04XCIsXHJcbiAgICAgICAgICAgICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeShvKSxcclxuXHJcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzcG9uc2UpIHsgZGVsZXRSZXNlcnZhdGlvblN1Y2Nlc3NMaXN0KHJlc3BvbnNlLmRlbGV0ZVJlc2VydmF0aW9ucyk7IH0sXHJcbiAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKHJlc3BvbnNlKSB7IGRlbGV0UmVzZXJ2YXRpb25FcnJvckxpc3QoKTsgfVxyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIHZhciBkZWxldFJlc2VydmF0aW9uU3VjY2Vzc0xpc3QgPSBmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuICAgICAgICAgICAgICAgIHZhciBjb250ZW50ID0gJChcIjxwPjwvcD5cIik7XHJcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJlc3BvbnNlLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlW2ldLlN0YXR1cyA9PSA1MDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudC5hcHBlbmQoJzxzcGFuIGNsYXNzPVwidWktaWNvbiB1aS1pY29uLWFsZXJ0XCIgc3R5bGU9XCJmbG9hdDpsZWZ0OyBtYXJnaW46MCA3cHggMjBweCAwO1wiPjwvc3Bhbj4nKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgY29udGVudC5hcHBlbmQocmVzcG9uc2VbaV0uTWVzc2FnZSArICc8YnIgXFwvPicpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgVGltZUJvb2tpbmdGdW5jdGlvbi5jbGVhckNvbnRlbnRUb01vZGFsKFwiI2RpYWxvZ0FyZWFcIik7XHJcbiAgICAgICAgICAgICAgICBUaW1lQm9va2luZ0Z1bmN0aW9uLmZpbGxDb250ZW50VG9Nb2RhbChcIiNkaWFsb2dBcmVhXCIsIFwiQm9ydHRhZ25pbmdcIiwgY29udGVudCwgZGlhbG9nVHlwZS5lcnJvcik7XHJcblxyXG4gICAgICAgICAgICAgICAgZG9TZWFyY2goKTtcclxuICAgICAgICAgICAgICAgICQoJyNTYXZlVGFibGUnKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAkKCcjdXBkYXRlTGlzdEJ0bicpLmhpZGUoKTtcclxuICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgIHZhciBkZWxldFJlc2VydmF0aW9uRXJyb3JMaXN0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgJCgnI1NhdmVUYWJsZScpLmhpZGUoKTtcclxuICAgICAgICAgICAgICAgICQoJyN1cGRhdGVMaXN0QnRuJykuaGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgYWxlcnQoJ0ZlbCB1cHBzdG9kIHZpZCBhbnJvcGV0IHRpbGwgdGrDpG5zdGVuLicpO1xyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH07XHJcbiAgICB9O1xyXG4gICAgLy9lZGl0IGJ1dHRvblxyXG4gICAgdmFyIGVkaXRCb29raW5nID0gZnVuY3Rpb24gKGVkaXRCdXR0b24pIHtcclxuICAgICAgICB2YXIgZWRpdE9iaiA9IHt9O1xyXG4gICAgICAgIHZhciBkYXRhVmFsdWVzID0gJChlZGl0QnV0dG9uKS5wYXJlbnQoKS5wYXJlbnQoKTtcclxuICAgICAgICBlZGl0T2JqLnJlc291cmNlTmFtZSA9IGRhdGFWYWx1ZXMuZmluZChcIiNyZXNvdXJjZU5hbWVcIikudmFsKCk7XHJcbiAgICAgICAgZWRpdE9iai5pdGVtTmFtZSA9IGRhdGFWYWx1ZXMuZmluZChcIiNpdGVtTmFtZVwiKS52YWwoKTtcclxuICAgICAgICBlZGl0T2JqLndlaWdodCA9IGRhdGFWYWx1ZXMuZmluZChcIj4jd2VpZ2h0XCIpLmh0bWwoKTtcclxuICAgICAgICBlZGl0T2JqLmZyb21UaW1lID0gZGF0YVZhbHVlcy5maW5kKFwiI2Zyb20tdGltZVwiKS52YWwoKTtcclxuICAgICAgICBlZGl0T2JqLml0ZW1ObyA9IGRhdGFWYWx1ZXMuZmluZChcIj4jaXRlbU5vXCIpLmh0bWwoKTtcclxuICAgICAgICBlZGl0T2JqLmlkTGV2bnIgPSBkYXRhVmFsdWVzLmZpbmQoXCI+I2xldmVyYW5zZm9yc2FrcmFuc25yXCIpLmh0bWwoKTtcclxuICAgICAgICBlZGl0T2JqLmlkUmVnID0gZGF0YVZhbHVlcy5maW5kKFwiPiNsaWNlbnNlUGxhdGVOb1wiKS5odG1sKCk7XHJcbiAgICAgICAgZWRpdE9iai5pZE92cmlndCA9IGRhdGFWYWx1ZXMuZmluZChcIiNub3RlXCIpLnZhbCgpO1xyXG4gICAgICAgIGVkaXRPYmouaWRSZW1pbmRlciA9IGRhdGFWYWx1ZXMuZmluZChcIiNyZW1pbmRlck1pbnV0ZXNCZWZvcmVcIikudmFsKCk7XHJcbiAgICAgICAgZWRpdE9iai5pZEVwb3N0ID0gZGF0YVZhbHVlcy5maW5kKFwiI2VtYWlsQWRkcmVzc1wiKS52YWwoKTtcclxuICAgICAgICBlZGl0T2JqLmlkTW9iaWwgPSBkYXRhVmFsdWVzLmZpbmQoXCIjbW9iaWxlTm9cIikudmFsKCk7XHJcbiAgICAgICAgZWRpdE9iai5yZXNlcnZhdGlvbklkID0gZGF0YVZhbHVlcy5maW5kKFwiPiNyZXNlcnZhdGlvbklkXCIpLmh0bWwoKTtcclxuICAgICAgICBlZGl0T2JqLnNwZWRpdG9yTm8gPSBkYXRhVmFsdWVzLmZpbmQoXCIjc3BlZGl0b3JOb1wiKS52YWwoKTtcclxuICAgICAgICBlZGl0T2JqLmN1c3RvbWVyTm8gPSBkYXRhVmFsdWVzLmZpbmQoXCI+I2N1c3RvbWVyLW51bWJlclwiKS5odG1sKCk7XHJcbiAgICAgICAgZWRpdE9iai5jdXN0b21lck5hbWUgPSBkYXRhVmFsdWVzLmZpbmQoXCIjY3VzdG9tZXItbmFtZVwiKS52YWwoKTtcclxuICAgICAgICBlZGl0T2JqLnRyYW5zcG9ydE9yZGVyTm8gPSBkYXRhVmFsdWVzLmZpbmQoXCIjdHJhbnNwb3J0T3JkZXJOb1wiKS52YWwoKTtcclxuICAgICAgICBlZGl0T2JqLmNvbnRyYWN0Tm8gPSBkYXRhVmFsdWVzLmZpbmQoXCIjY29udHJhY3ROb1wiKS52YWwoKTtcclxuICAgICAgICBlZGl0T2JqLnJlbWluZGVyRW1haWwgPSBkYXRhVmFsdWVzLmZpbmQoXCIjcmVtaW5kZXJFbWFpbFwiKS52YWwoKTtcclxuICAgICAgICBlZGl0T2JqLnJlbWluZGVyU21zID0gZGF0YVZhbHVlcy5maW5kKFwiI3JlbWluZGVyU21zXCIpLnZhbCgpO1xyXG4gICAgICAgIGVkaXRPYmoub3duZXIgPSBkYXRhVmFsdWVzLmZpbmQoXCI+I293bmVyXCIpLmh0bWwoKTtcclxuICAgICAgICBlZGl0T2JqLmRhdGVSZWdpc3RlcmVkID0gZGF0YVZhbHVlcy5maW5kKFwiI2RhdGVSZWdpc3RlcmVkXCIpLnZhbCgpO1xyXG4gICAgICAgIGVkaXRPYmouZGlzcGxheU1lc3NhZ2UgPSAnVGlkOiAnICsgZWRpdE9iai5mcm9tVGltZSArICcsIEt1bmQ6ICcgKyBlZGl0T2JqLmN1c3RvbWVyTm8gKyAnICcgKyBlZGl0T2JqLmN1c3RvbWVyTmFtZSArICcsIEJva25pbmdzbnI6ICcgKyBlZGl0T2JqLnJlc2VydmF0aW9uSWQgKyAnLCBBcnRpa2VsOiAnICsgZWRpdE9iai5pdGVtTm8gKyAnICcgKyBlZGl0T2JqLml0ZW1OYW1lICsgZWRpdE9iai53ZWlnaHQgKyAnPGJyIFxcLz5SZXN1cnM6ICcgKyBlZGl0T2JqLnJlc291cmNlTmFtZTtcclxuICAgICAgICBUaW1lQm9va2luZ0Z1bmN0aW9uLmNvcHlWYWx1ZXNUb0VuYWJsZUVkaXQoZWRpdE9iaiwgdHJ1ZSk7XHJcbiAgICB9O1xyXG4gICAgLy91cGRhdGVcclxuICAgIHZhciB1cGRhdGVSZXNlcnZhdGlvbkxpc3QgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIGVtYWlsID0gJCgnI0lERXBvc3QnKS52YWwoKTtcclxuICAgICAgICB2YXIgbW9iaWxlTm8gPSAkKCcjSURNb2JpbCcpLnZhbCgpO1xyXG4gICAgICAgIHZhciBsaWNlbnNlUGxhdGVObyA9ICQoJyNJRFJlZycpLnZhbCgpO1xyXG4gICAgICAgIHZhciBsZXZlcmFuc2ZvcnNha3JhbnNudW1tZXIgPSAkKCcjSURMZXZucicpLnZhbCgpO1xyXG4gICAgICAgIGlmIChUaW1lQm9va2luZ0Z1bmN0aW9uLnZhbGlkYXRlU2F2ZVRhYmxlKGVtYWlsLCBtb2JpbGVObywgbGljZW5zZVBsYXRlTm8sIGxldmVyYW5zZm9yc2FrcmFuc251bW1lcikpIHtcclxuICAgICAgICAgICAgdmFyIGZvcm0gPSAkKCcjZm9ybS1saXN0LWJvb2tpbmcnKTtcclxuICAgICAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxyXG4gICAgICAgICAgICAgICAgdXJsOiAnL2FwaS90aW1lLWJvb2tpbmcvVXBkYXRlUmVzZXJ2YXRpb24nLFxyXG4gICAgICAgICAgICAgICAgZGF0YTogZm9ybS5zZXJpYWxpemUoKSxcclxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZVJlc2VydmF0aW9uTGlzdFN1Y2Nlc3MocmVzcG9uc2UudXBkYXRlUmVzZXJ2YXRpb25zKTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKHJlc3BvbnNlKSB7IHVwZGF0ZVJlc2VydmF0aW9uTGlzdEVycm9yKHJlc3BvbnNlLnVwZGF0ZVJlc2VydmF0aW9ucyk7IH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciB1cGRhdGVSZXNlcnZhdGlvbkxpc3RTdWNjZXNzID0gZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gJChcIjxwPjwvcD5cIik7XHJcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVzcG9uc2UubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZVtpXS5TdGF0dXMgPT0gMjAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29udGVudC5hcHBlbmQocmVzcG9uc2VbaV0uTWVzc2FnZSk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQuYXBwZW5kKHJlc3BvbnNlW2ldLkVycm9yTWVzc2FnZSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBjb250ZW50LmFwcGVuZCgnPGJyIFxcLz4nKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBUaW1lQm9va2luZ0Z1bmN0aW9uLmNsZWFyQ29udGVudFRvTW9kYWwoXCIjZGlhbG9nQXJlYVwiKTtcclxuICAgICAgICAgICAgVGltZUJvb2tpbmdGdW5jdGlvbi5maWxsQ29udGVudFRvTW9kYWwoXCIjZGlhbG9nQXJlYVwiLCBcIkJva25pbmdlbiB1cHBkYXRlcmFkXCIsIGNvbnRlbnQsIGRpYWxvZ1R5cGUuZXJyb3IpO1xyXG4gICAgICAgICAgICBjbGVhckZvcm1MaXN0KCk7XHJcblxyXG4gICAgICAgICAgICAkKCcjU2F2ZVRhYmxlJykuaGlkZSgpO1xyXG4gICAgICAgICAgICAkKCcjdXBkYXRlTGlzdEJ0bicpLmhpZGUoKTtcclxuICAgICAgICAgICAgZG9TZWFyY2goKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHZhciB1cGRhdGVSZXNlcnZhdGlvbkxpc3RFcnJvciA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgJCgnI1NhdmVUYWJsZScpLmhpZGUoKTtcclxuICAgICAgICAgICAgYWxlcnQoJ3VwZGF0ZVJlc2VydmF0aW9uRXJyb3InKTtcclxuICAgICAgICAgICAgZG9TZWFyY2goKTtcclxuICAgICAgICB9O1xyXG4gICAgfTtcclxuXHJcbiAgICB2YXIgY2xlYXJGb3JtTGlzdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKCcuZmllbGRUb0NsZWFyV2l0aENsZWFyRm9ybScpLnZhbCgnJyk7XHJcbiAgICAgICAgJCgnI1NhdmVUYWJsZScpLmhpZGUoKTtcclxuICAgICAgICAkKCcjdXBkYXRlTGlzdEJ0bicpLmhpZGUoKTtcclxuXHJcbiAgICAgICAgJCgnI0lERXBvc3QnKS52YWwoJCgnI0lERXBvc3RfU3RhcnRWYWx1ZScpLnZhbCgpKTtcclxuICAgICAgICAkKCcjSURNb2JpbCcpLnZhbCgkKCcjSURNb2JpbF9TdGFydFZhbHVlJykudmFsKCkpO1xyXG4gICAgICAgICQoJyNzYXZlQWN0aW9uJykudmFsKCdOZXcnKTtcclxuXHJcbiAgICAgICAgJCgnI3NhdmVBY3Rpb24nKS52YWwoJ05ldycpO1xyXG4gICAgICAgICQoJyNteURpc3BsYXlNZXNzYWdlJykuaHRtbCgnJyk7XHJcbiAgICAgICAgJCgnI2Rpc3BhbHlNZXNzYWdlSGVhZGVyJykuaHRtbCgnJm5ic3A7Jyk7XHJcbiAgICB9O1xyXG4gICAgdmFyIHByaW50UGFnZUV2ZW50cyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgcHJpbnRCdG4gPSAkKCcjcHJpbnRMaW5rJyk7XHJcbiAgICAgICAgJChwcmludEJ0bikudW5iaW5kKFwiY2xpY2tcIik7XHJcbiAgICAgICAgJChwcmludEJ0bikuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgcXVlcnlTdHJpbmcgPSBcIi9hcGkvcGRmaGFuZGxlci90aW1lLWJvb2tpbmctbGlzdD9Gcm9tRGF0ZT1cIjtcclxuICAgICAgICAgICAgcXVlcnlTdHJpbmcgKz0gbGFzdFNlYXJjaFF1ZXJ5LkZyb21EYXRlO1xyXG4gICAgICAgICAgICBxdWVyeVN0cmluZyArPSBcIiZUb0RhdGU9XCI7XHJcbiAgICAgICAgICAgIHF1ZXJ5U3RyaW5nICs9IGxhc3RTZWFyY2hRdWVyeS5Ub0RhdGU7XHJcbiAgICAgICAgICAgIHF1ZXJ5U3RyaW5nICs9IFwiJkN1c3RvbWVyTm89XCI7XHJcbiAgICAgICAgICAgIHF1ZXJ5U3RyaW5nICs9IGxhc3RTZWFyY2hRdWVyeS5DdXN0b21lck5vO1xyXG4gICAgICAgICAgICBxdWVyeVN0cmluZyArPSBcIiZSZXNvdXJjZUdyb3VwSWQ9XCI7XHJcbiAgICAgICAgICAgIHF1ZXJ5U3RyaW5nICs9IGxhc3RTZWFyY2hRdWVyeS5SZXNvdXJjZUdyb3VwSWQ7XHJcbiAgICAgICAgICAgIHF1ZXJ5U3RyaW5nICs9IFwiJmxpc3RpbmdVcmw9XCI7XHJcbiAgICAgICAgICAgIHZhciByZWxhdGl2ZVBhdGggPSB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWU7XHJcbiAgICAgICAgICAgIGlmICh3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUuc3RhcnRzV2l0aCgnL2xtLycpKSB7XHJcbiAgICAgICAgICAgICAgICByZWxhdGl2ZVBhdGggPSB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUuc3Vic3RyaW5nKDMpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHF1ZXJ5U3RyaW5nICs9IHJlbGF0aXZlUGF0aDtcclxuICAgICAgICAgICAgcXVlcnlTdHJpbmcgKz0gXCImcGRmVXJsU2VnbWVudD0vYm9rYWxpc3RpbmdwZGZcIjtcclxuICAgICAgICAgICAgd2luZG93Lm9wZW4ocXVlcnlTdHJpbmcpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuICAgIHZhciBzZWFyY2hCb29raW5nRXZlbnRzID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQoJyNzZWFyY2gtYm9va2luZy1idXR0b24nKS5jbGljayhmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICAvL3ZhciByZVJlZ25yID0gL14oW2EtekEtWl17M31cXGR7M30pKyQvO1xyXG4gICAgICAgICAgICB2YXIgcmVnbnIgPSAkKFwiI1JlZ05vXCIpLnZhbCgpO1xyXG4gICAgICAgICAgICB2YXIgcmVzdWx0ID0gdHJ1ZTtcclxuXHJcbiAgICAgICAgICAgIC8vaWYgKHJlZ25yICYmICFyZVJlZ25yLnRlc3QocmVnbnIpKSB7XHJcbiAgICAgICAgICAgIC8vICAgIHJlc3VsdCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAvLyAgICAkKFwiI1JlZ05vXCIpLmFkZENsYXNzKFwiZXJyb3JcIik7XHJcbiAgICAgICAgICAgIC8vICAgICQoXCIjUmVnTm8tZXJyb3JcIikuc2hvdygpO1xyXG4gICAgICAgICAgICAvL31cclxuXHJcbiAgICAgICAgICAgIGlmIChyZXN1bHQpIHtcclxuICAgICAgICAgICAgICAgICQoXCIjUmVnTm9cIikucmVtb3ZlQ2xhc3MoXCJlcnJvclwiKTtcclxuICAgICAgICAgICAgICAgICQoXCIjUmVnTm8tZXJyb3JcIikuaGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgZG9TZWFyY2goKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG4gICAgdmFyIGRlbGV0ZUJvb2tpbmdFdmVudHMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIGRlbGV0ZUJ0biA9ICQoXCIuYm9rYS1saXN0aW5nLWRlbGV0ZUJ0blwiKTtcclxuICAgICAgICAkKGRlbGV0ZUJ0bikudW5iaW5kKFwiY2xpY2tcIik7XHJcbiAgICAgICAgJChkZWxldGVCdG4pLmNsaWNrKGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgIGRlbGV0ZUJvb2tpbmcoJCh0aGlzKSk7XHJcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcbiAgICB2YXIgZWRpdEJvb2tpbmdFdmVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgZWRpdEJ0biA9ICQoXCIuYm9rYS1saXN0aW5nLWVkaXRCdG5cIik7XHJcbiAgICAgICAgJChlZGl0QnRuKS51bmJpbmQoXCJjbGlja1wiKTtcclxuICAgICAgICAkKGVkaXRCdG4pLmNsaWNrKGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgIGVkaXRCb29raW5nKCQodGhpcykpO1xyXG4gICAgICAgICAgICBUaW1lQm9va2luZ0Z1bmN0aW9uLmNsZWFyVmFsaWRhdGVTYXZlVGFibGUoKTtcclxuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuICAgIHZhciB1cGRhdGVSZXNlcnZhdGlvbkxpc3RFdmVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKCcjdXBkYXRlTGlzdEJ0bicpLnVuYmluZCgnY2xpY2snKTtcclxuICAgICAgICAkKCcjdXBkYXRlTGlzdEJ0bicpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdXBkYXRlUmVzZXJ2YXRpb25MaXN0KCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG4gICAgdmFyIGluaXQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgc2VhcmNoQm9va2luZ0V2ZW50cygpO1xyXG4gICAgICAgIHVwZGF0ZVJlc2VydmF0aW9uTGlzdEV2ZW50KCk7XHJcbiAgICB9O1xyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgaW5pdDogaW5pdFxyXG4gICAgfTtcclxufTtcclxuIiwialF1ZXJ5KGZ1bmN0aW9uICgpIHtcclxuICAgIEN1c3RvbWVyQ2FyZC5pbml0KCk7XHJcbn0pO1xyXG5cclxudmFyIEN1c3RvbWVyQ2FyZCA9IEN1c3RvbWVyQ2FyZCB8fCAoZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIGN1c3RvbWVyTnVtYmVyID0gXCJcIjtcclxuICAgIHZhciBvcmdhbml6YXRpb25OdW1iZXIgPSBcIlwiO1xyXG4gICAgdmFyIGVycm9yTWVzc2FnZXMgPSB7XHJcbiAgICAgICAgZGVsRXJyb3I6IFwiXCIsXHJcbiAgICAgICAgdXBkYXRlRXJyb3I6IFwiXCJcclxuICAgIH07XHJcblxyXG5cclxuICAgIGZ1bmN0aW9uIHNob3dBZGRPd25lckxvYWRlcigpIHtcclxuICAgICAgICAkKFwiLmpzLWFkZC1vd25lci1sb2FkZXJcIikuc2hvdygpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGhpZGVBZGRPd25lckxvYWRlcigpIHtcclxuICAgICAgICAkKFwiLmpzLWFkZC1vd25lci1sb2FkZXJcIikuaGlkZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGFkZE93bmVyKHVzZXJOYW1lKSB7XHJcbiAgICAgICAgc2hvd0FkZE93bmVyTG9hZGVyKCk7XHJcbiAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgdXJsOiBcIi9hcGkvY3VzdG9tZXItY2FyZC9hZGQtb3duZXJcIixcclxuICAgICAgICAgICAgdHlwZTogXCJQT1NUXCIsXHJcbiAgICAgICAgICAgIGRhdGE6IHsgdXNlcm5hbWU6IHVzZXJOYW1lLCBjdXN0b21lcm51bWJlcjogY3VzdG9tZXJOdW1iZXIsIG9yZ2FuaXphdGlvbm51bWJlcjogb3JnYW5pemF0aW9uTnVtYmVyIH0sXHJcbiAgICAgICAgICAgIGRhdGFUeXBlOiBcImpzb25cIixcclxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgIGhpZGVBZGRPd25lckxvYWRlcigpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5lcnJvcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKFwiLmpzLWFkZC1vd25lci1lcnJvclwiKS5odG1sKGRhdGEuZXJyb3IpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJChcIi5qcy1hZGQtb3duZXJcIikuYWRkQ2xhc3MoXCJoaWRkZW5cIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoXCIjanMtYWN0aXZhdGVkLWNvbmZpcm1hdGlvblwiKS5yZW1vdmVDbGFzcyhcImhpZGRlblwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2NhdGlvbi5ocmVmID0gd2luZG93LmxvY2F0aW9uO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCAyMDAwKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIuanMtYWRkLW93bmVyLWVycm9yXCIpLmh0bWwoXCJLdW5kZSBpbnRlIGzDpGdnYSB0aWxsIMOkZ2FyZVwiKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGhpZGVBZGRPd25lckxvYWRlcigpO1xyXG4gICAgICAgICAgICAgICAgJChcIi5qcy1hZGQtb3duZXItZXJyb3JcIikuaHRtbChcIkV0dCBmZWwgaW50csOkZmZhZGVcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBjaGVja1VzZXIodXNlck5hbWUpIHtcclxuICAgICAgICBzaG93QWRkT3duZXJMb2FkZXIoKTtcclxuICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICB1cmw6IFwiL2FwaS9jdXN0b21lci1jYXJkL2NoZWNrLW93bmVyXCIsXHJcbiAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxyXG4gICAgICAgICAgICBkYXRhOiB7IHVzZXJuYW1lOiB1c2VyTmFtZSwgY3VzdG9tZXJudW1iZXI6IGN1c3RvbWVyTnVtYmVyIH0sXHJcbiAgICAgICAgICAgIGRhdGFUeXBlOiBcImpzb25cIixcclxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgIGhpZGVBZGRPd25lckxvYWRlcigpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5lcnJvcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKFwiLmpzLWFkZC1vd25lci1lcnJvclwiKS5odG1sKGRhdGEuZXJyb3IpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKFwiLmpzLWFkZC1vd25lci1pbmZvcm1hdGlvblwiKS5odG1sKFwiXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKFwiLmpzLWFkZC1vd25lci1zYXZlXCIpLmFkZENsYXNzKFwiaGlkZGVuXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJChcIi5qcy1hZGQtb3duZXItaW5mb3JtYXRpb25cIikuaHRtbChcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiPGRpdiBjbGFzcz1cXFwiZXhpc3RpbmctdXNlciBqcy1hZGQtb3duZXItaW5mb3JtYXRpb25cXFwiPjxoMyBjbGFzcz1cXFwiaGVhZGluZy10aXRsZS0zXFxcIj4gQW52w6RuZGFyZW4gZmlubnMgaSBMTTI8L2gzPjxwPiA8c3Ryb25nPk5hbW46PC9zdHJvbmc+IFwiICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEuZmlyc3ROYW1lICsgXCIgXCIgKyBkYXRhLmxhc3ROYW1lICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiPC9wPjxwPiA8c3Ryb25nPlRlbGVmb246PC9zdHJvbmc+IFwiICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEudGVsZXBob25lICsgXCI8L3A+PHA+IDxzdHJvbmc+TW9iaWw6PC9zdHJvbmc+IFwiICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEubW9iaWxlICsgXCI8L3A+PHA+IDxzdHJvbmc+RS1wb3N0Ojwvc3Ryb25nPiBcIiArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLmVtYWlsICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiPC9wPjwvZGl2PlwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJChcIi5qcy1hZGQtb3duZXItc2F2ZVwiKS5yZW1vdmVDbGFzcyhcImhpZGRlblwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJChcIi5qcy1hZGQtb3duZXItZXJyb3JcIikuaHRtbCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi5qcy1hZGQtb3duZXItc2F2ZVwiKS5hZGRDbGFzcyhcImhpZGRlblwiKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGhpZGVBZGRPd25lckxvYWRlcigpO1xyXG4gICAgICAgICAgICAgICAgJChcIi5qcy1hZGQtb3duZXItZXJyb3JcIikuaHRtbChcIkV0dCBmZWwgaW50csOkZmZhZGVcIik7XHJcbiAgICAgICAgICAgICAgICAkKFwiLmpzLWFkZC1vd25lci1pbmZvcm1hdGlvblwiKS5odG1sKFwiXCIpO1xyXG4gICAgICAgICAgICAgICAgJChcIi5qcy1hZGQtb3duZXItc2F2ZVwiKS5hZGRDbGFzcyhcImhpZGRlblwiKTtcclxuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBhZGRPd25lckV2ZW50cygpIHtcclxuICAgICAgICAkKFwiI2pzLWFkZC1vd25lci1jaGVja2JveFwiKS5jaGFuZ2UoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAoJCh0aGlzKS5pcyhcIjpjaGVja2VkXCIpKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoISQoXCIjanMtaGFzLW93bmVyXCIpLnZhbCgpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi5qcy1hZGQtb3duZXJcIikucmVtb3ZlQ2xhc3MoXCJoaWRkZW5cIik7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgJChcIi5qcy1hZGQtb3duZXJcIikuYWRkQ2xhc3MoXCJoaWRkZW5cIik7XHJcbiAgICAgICAgICAgICAgICAkKFwiLmpzLWFkZC1vd25lci1tb2RhbFwiKS5zaG93KCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChcIi5qcy1hZGQtb3duZXItY2hlY2stdXNlclwiKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciBlbWFpbCA9ICQoXCIuanMtYWRkLW93bmVyLWVwb3N0XCIpLnZhbCgpO1xyXG4gICAgICAgICAgICBpZiAoZW1haWwpIHtcclxuICAgICAgICAgICAgICAgIGNoZWNrVXNlcihlbWFpbCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChcIi5qcy1hZGQtb3duZXItaW5hY3RpdmF0ZVwiKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGFsZXJ0KFwiTm90IGltcGxlbWVudGVkIHlldFwiKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChcIi5qcy1hZGQtb3duZXItc2F2ZVwiKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciBlbWFpbCA9ICQoXCIuanMtYWRkLW93bmVyLWVwb3N0XCIpLnZhbCgpO1xyXG4gICAgICAgICAgICBpZiAoZW1haWwgJiYgY3VzdG9tZXJOdW1iZXIgJiYgb3JnYW5pemF0aW9uTnVtYmVyKSB7XHJcbiAgICAgICAgICAgICAgICBhZGRPd25lcihlbWFpbCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChcIi5qcy1hZGQtb3duZXItY2FuY2VsLCAuanMtYWRkLW93bmVyLWNsb3NlXCIpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgJChcIi5qcy1hZGQtb3duZXJcIikuYWRkQ2xhc3MoXCJoaWRkZW5cIik7XHJcbiAgICAgICAgICAgIHZhciBjaGVja2JveCA9ICQoXCIjanMtYWRkLW93bmVyLWNoZWNrYm94XCIpO1xyXG4gICAgICAgICAgICBjaGVja2JveC5wcm9wKFwiY2hlY2tlZFwiLCBmYWxzZSk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoXCIuanMtYWRkLW93bmVyLWVwb3N0XCIpLmtleWRvd24oZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAkKFwiLmpzLWFkZC1vd25lci1pbmZvcm1hdGlvblwiKS5odG1sKFwiXCIpO1xyXG4gICAgICAgICAgICAkKFwiLmpzLWFkZC1vd25lci1zYXZlXCIpLmFkZENsYXNzKFwiaGlkZGVuXCIpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGxvYWRTY3JpcHRzKCkge1xyXG4gICAgICAgIGlmICgkKFwiLmpzLXBhZ2UtaWRlbnRpZmllci1jdXN0b21lci1jYXJkLXVzZXItbGlzdFwiKS5sZW5ndGgpIHtcclxuICAgICAgICAgICAgdmFyIGlzRGVidWcgPSAkKFwiLmpzLXBhZ2UtaWRlbnRpZmllci1jdXN0b21lci1jYXJkLXVzZXItbGlzdFwiKS5kYXRhKFwiZGVidWdcIik7XHJcblxyXG4gICAgICAgICAgICBpZiAoaXNEZWJ1Zykge1xyXG4gICAgICAgICAgICAgICAgJC5nZXRTY3JpcHQoXCIvU3RhdGljL2Rpc3Qvc2NyaXB0cy9jdXN0b21lckNhcmRVc2VyTGlzdC5qc1wiKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICQuZ2V0U2NyaXB0KFwiL1N0YXRpYy9kaXN0L3NjcmlwdHMvY3VzdG9tZXJDYXJkVXNlckxpc3QucHJvZHVjdGlvbi5qc1wiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBhZGRQcm9maWxlSGFuZGxlcigpIHtcclxuICAgICAgICB2YXIgJHVzZXJQcm9maWxlID0gJChcImEudXNlci1wcm9maWxlXCIpO1xyXG4gICAgICAgICR1c2VyUHJvZmlsZS5lYWNoKGZ1bmN0aW9uIChpZHgsIGl0ZW0pIHtcclxuICAgICAgICAgICAgJChpdGVtKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgc2VsZWN0ZWRQcm9maWxlSWQgPSAkKGl0ZW0pLmNsb3Nlc3QoXCJsaS5zaG93Y2FzZVwiKS5hdHRyKFwiZGF0YS12YWx1ZVwiKTtcclxuICAgICAgICAgICAgICAgIHZhciB1c2VyTmFtZSA9ICQoaXRlbSkuYXR0cihcImRhdGEtdXNlck5hbWVcIik7XHJcbiAgICAgICAgICAgICAgICB2YXIgbG9hZGVyID0gJChpdGVtKS5jbG9zZXN0KFwidGRcIikuZmluZChcIi5sb2FkZXItd3JhcHBlclwiKTtcclxuICAgICAgICAgICAgICAgIHZhciBjb25maXJtUGFuZWwgPSAkKGl0ZW0pLmNsb3Nlc3QoXCJ0ZFwiKS5maW5kKFwiLmNvbmZpcm0tcGFuZWwgLmNvbmZpcm0tYm94XCIpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGNvbmZpcm1QYW5lbC5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyICRjb25maXJtUGFuZWwgPSAkKGNvbmZpcm1QYW5lbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgJGNvbmZpcm1QYW5lbC5zaG93KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgJChcImlucHV0W3R5cGU9cmVzZXRdXCIsICRjb25maXJtUGFuZWwpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJGNvbmZpcm1QYW5lbC5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgJChcImlucHV0W3R5cGU9YnV0dG9uXVwiLCAkY29uZmlybVBhbmVsKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNob3dMb2FkZXIobG9hZGVyKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2hhbmdlUHJvZmlsZUZvclVzZXIodXNlck5hbWUsIHNlbGVjdGVkUHJvZmlsZUlkLCBjdXN0b21lck51bWJlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uICgpIHsgJGNvbmZpcm1QYW5lbC5oaWRlKCk7IH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvd0Vycm9yRGlhbG9nKGVycm9yTWVzc2FnZXMudXBkYXRlRXJyb3IpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoaWRlTG9hZGVyKGxvYWRlcik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGNvbmZpcm1QYW5lbC5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoXCIuanMtZGlzY29ubmVjdC11c2VyLWZyb20tY3VzdG9tZXJcIikuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgdXNlck5hbWUgPSAkKHRoaXMpLmF0dHIoXCJkYXRhLXVzZXJOYW1lXCIpO1xyXG4gICAgICAgICAgICB2YXIgdXNlcklkID0gJCh0aGlzKS5hdHRyKFwiZGF0YS11c2VySWRcIik7XHJcbiAgICAgICAgICAgIHZhciB1c2VyRWxlbWVudCA9ICQodGhpcykuY2xvc2VzdChcInRyXCIpO1xyXG4gICAgICAgICAgICB2YXIgbG9hZGVyID0gJCh1c2VyRWxlbWVudCkuZmluZChcIi5sb2FkZXItd3JhcHBlclwiKTtcclxuICAgICAgICAgICAgdmFyICRjb25maXJtRGlhbG9nID0gJChcIiNkZy1kZWwtdXNlci1jb25maXJtYXRpb25cIik7XHJcbiAgICAgICAgICAgIGlmICgkY29uZmlybURpYWxvZy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAkY29uZmlybURpYWxvZy5mYWRlSW4oKTtcclxuICAgICAgICAgICAgICAgIC8vIGV2ZW50IGZvciBjb25maXJtYXRpb24gZGlhbG9nXHJcbiAgICAgICAgICAgICAgICAkKFwiYnV0dG9uLnllc1wiKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgc2hvd0xvYWRlcihsb2FkZXIpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJlbW92ZVVzZXJGcm9tQ3VzdG9tZXIodXNlck5hbWUsIHVzZXJJZCwgY3VzdG9tZXJOdW1iZXIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQodXNlckVsZW1lbnQpLnJlbW92ZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiAoKSB7IHNob3dFcnJvckRpYWxvZyhlcnJvck1lc3NhZ2VzLmRlbEVycm9yKTsgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlkZUxvYWRlcihsb2FkZXIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIGZ1bmN0aW9uIHJlbW92ZVVzZXJGcm9tQ3VzdG9tZXIodXNlck5hbWUsIHVzZXJJZCwgY3VzdG9tZXJOdW1iZXIsIHN1Y2Nlc3NDYWxsQmFjaywgZmFpbENhbGxCYWNrLCBjb21wbGV0ZUNhbGxCYWNrKSB7XHJcbiAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgdXJsOiAnL2FwaS9jdXN0b21lci1jYXJkL3JlbW92ZS11c2VyP3VzZXJOYW1lPScgKyB1c2VyTmFtZSArIFwiJnVzZXJJZD1cIiArIHVzZXJJZCArIFwiJmN1c3RvbWVyTm89XCIgKyBjdXN0b21lck51bWJlcixcclxuICAgICAgICAgICAgdHlwZTogXCJHRVRcIixcclxuICAgICAgICAgICAgZGF0YVR5cGU6IFwianNvblwiLFxyXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgaWYgKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICBzdWNjZXNzQ2FsbEJhY2soKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZmFpbENhbGxCYWNrKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiAoanFYSFIsIHRleHRTdGF0dXMsIGVycm9yVGhyb3duKSB7XHJcbiAgICAgICAgICAgICAgICBmYWlsQ2FsbEJhY2soKTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgY29tcGxldGU6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGNvbXBsZXRlQ2FsbEJhY2soKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gc2hvd0xvYWRlcihsb2FkZXIpIHtcclxuICAgICAgICBpZiAobG9hZGVyICE9IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICAkKGxvYWRlcikuc2hvdygpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBoaWRlTG9hZGVyKGxvYWRlcikge1xyXG4gICAgICAgIGlmIChsb2FkZXIgIT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgICQobG9hZGVyKS5oaWRlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGNoYW5nZVByb2ZpbGVGb3JVc2VyKHVzZXJOYW1lLCBwcm9maWxlSWQsIGN1c3RvbWVyTm8sIHN1Y2Nlc3NDYWxsQmFjaywgZmFpbENhbGxCYWNrLCBjb21wbGV0ZUNhbGxCYWNrKSB7XHJcbiAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgdXJsOiAnL2FwaS9jdXN0b21lci1jYXJkL2NoYW5nZS1wcm9maWxlP3VzZXJOYW1lPScgKyB1c2VyTmFtZSArIFwiJnByb2ZpbGVJZD1cIiArIHByb2ZpbGVJZCArIFwiJmN1c3RvbWVyTm89XCIgKyBjdXN0b21lck5vLFxyXG4gICAgICAgICAgICB0eXBlOiBcIkdFVFwiLFxyXG4gICAgICAgICAgICBkYXRhVHlwZTogXCJqc29uXCIsXHJcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3NDYWxsQmFjaygpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBmYWlsQ2FsbEJhY2soKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uIChqcVhIUiwgdGV4dFN0YXR1cywgZXJyb3JUaHJvd24pIHtcclxuICAgICAgICAgICAgICAgIGZhaWxDYWxsQmFjaygpO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBjb21wbGV0ZTogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgY29tcGxldGVDYWxsQmFjaygpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gc2hvd0Vycm9yRGlhbG9nKGVycm9yTWVzcykge1xyXG5cclxuICAgIH1cclxuXHJcbiAgICB2YXIgaW5pdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBjdXN0b21lck51bWJlciA9ICQoXCJpbnB1dCNjdXN0b21lci1ub1wiKSA/ICQoXCJpbnB1dCNjdXN0b21lci1ub1wiKS52YWwoKSA6IFwiXCI7XHJcbiAgICAgICAgb3JnYW5pemF0aW9uTnVtYmVyID0gJChcImlucHV0I29yZy1ub1wiKSA/ICQoXCJpbnB1dCNvcmctbm9cIikudmFsKCkgOiBcIlwiO1xyXG4gICAgICAgIGFkZFByb2ZpbGVIYW5kbGVyKCk7XHJcbiAgICAgICAgYWRkT3duZXJFdmVudHMoKTtcclxuICAgICAgICBsb2FkU2NyaXB0cygpO1xyXG4gICAgfTtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgaW5pdDogaW5pdFxyXG4gICAgfTtcclxufSkoKTtcclxuIiwiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcclxuICAgICNJTlRFUk5BTC1OQVZJR0FUSU9OXHJcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcblxyXG5cclxud2luZG93LmdybyA9IHdpbmRvdy5ncm8gfHwge307XHJcbmdyby5tb2R1bGVzID0gZ3JvLm1vZHVsZXMgfHwge307XHJcblxyXG5cclxuZ3JvLm1vZHVsZXMuaW50ZXJuYWxOYXZpZ2F0aW9uID0gKGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBwcml2ID0ge307XHJcblxyXG4gICAgcHJpdi50b2dnbGVOYXZpZ2F0aW9uID0gZnVuY3Rpb24gKHBhcmVudE5hdiwgaXNUb2dnbGVDbGlja2VkKSB7XHJcbiAgICAgICAgdmFyIGlzVG9nZ2xlQ2xpY2tlZCA9IGZhbHNlIHx8IGlzVG9nZ2xlQ2xpY2tlZDtcclxuICAgICAgICAvLyBjaGVjayBuYXZpZ2F0aW9uIGV4cGFuZGVkIG9yIG5vdFxyXG4gICAgICAgIGlmICghcGFyZW50TmF2Lmhhc0NsYXNzKFwiZXhwYW5kZWRcIikpIHtcclxuICAgICAgICAgICAgcGFyZW50TmF2LmFkZENsYXNzKFwiZXhwYW5kZWRcIik7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgaWYgKCFpc1RvZ2dsZUNsaWNrZWQpIHBhcmVudE5hdi5yZW1vdmVDbGFzcyhcImV4cGFuZGVkXCIpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBQcml2YXRlIGluaXRpYWxpemF0aW9uIG1ldGhvZFxyXG4gICAgICovXHJcbiAgICBwcml2LmluaXQgPSBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIENsaWNrIG9uIGNhdGVnb3J5IGxpbmtcclxuICAgICAgICAgKiBMaW5rIHNob3VsZCBvbmx5IGV4cGFuZCBjaGlsZCBsaXN0LCBub3QgYmUgZm9sbG93ZWRcclxuICAgICAgICAgKiBGYWxsYmFjayAoaHJlZiBvbiB0aGUgPGE+IHRhZykgc2hvdWxkIGJlIHRoZSBmaXJzdCBwYWdlIGluIHRoZSBjaGlsZCBsaXN0XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgJChcIi5qcy1pbnRlcm5hbC1uYXZpZ2F0aW9uLWNhdGVnb3J5XCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICB2YXIgY29udHJvbCA9IHRoaXM7XHJcbiAgICAgICAgICAgIHZhciB0YXJnZXQgPSAkKGNvbnRyb2wpLm5leHQoXCIuaW50ZXJuYWwtbmF2aWdhdGlvbl9fbGlzdC0tc3ViLWxldmVsXCIpO1xyXG4gICAgICAgICAgICB2YXIgcGFyZW50TmF2ID0gJChjb250cm9sKS5wYXJlbnRzKFwiLmludGVybmFsLW5hdmlnYXRpb25cIik7XHJcblxyXG4gICAgICAgICAgICBpZiAoJChjb250cm9sKS5oYXNDbGFzcyhcImlzLWV4cGFuZGVkXCIpKSB7XHJcbiAgICAgICAgICAgICAgICAkKHRhcmdldCkuc2xpZGVVcChcImZhc3RcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICQoY29udHJvbCkucmVtb3ZlQ2xhc3MoXCJpcy1leHBhbmRlZFwiKTtcclxuICAgICAgICAgICAgICAgICAgICAkKHRhcmdldClcclxuICAgICAgICAgICAgICAgICAgICAgICAgLnJlbW92ZUNsYXNzKFwiaXMtZXhwYW5kZWRcIilcclxuICAgICAgICAgICAgICAgICAgICAgICAgLnJlbW92ZUF0dHIoXCJzdHlsZVwiKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgJChjb250cm9sKVxyXG4gICAgICAgICAgICAgICAgICAgIC5hZGRDbGFzcyhcImlzLWV4cGFuZGVkXCIpO1xyXG4gICAgICAgICAgICAgICAgJCh0YXJnZXQpLnNsaWRlRG93bihcImZhc3RcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICQodGFyZ2V0KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAuYWRkQ2xhc3MoXCJpcy1leHBhbmRlZFwiKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAucmVtb3ZlQXR0cihcInN0eWxlXCIpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8qXHJcbiAgICAgICAgICAgICAqIEV4cGFuZCBuYXZpZ2F0aW9uIGlmIGVuZCB1c2VycyBjbGljayBhbnkgbGlua3Mgd2hpY2ggaGF2ZSBzdWItbmF2aWdhdGlvbiBpbnNpZGVcclxuICAgICAgICAgICAgICovXHJcbiAgICAgICAgICAgIHByaXYudG9nZ2xlTmF2aWdhdGlvbihwYXJlbnROYXYsIHRydWUpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBDbGljayBvbiB0b2dnbGUgbGlua1xyXG4gICAgICAgICAqIExpbmsgc2hvdWxkIHRvZ2dsZSB3aG9sZSBuYXZpZ2F0aW9uXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgJChcIi5pbnRlcm5hbC1uYXZpZ2F0aW9uX190b2dnbGUtYnRuXCIpLm9uKFwiY2xpY2tcIixcclxuICAgICAgICAgICAgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgICAgIHZhciBjb250cm9sID0gdGhpcztcclxuICAgICAgICAgICAgICAgIHZhciB0YXJnZXQgPSAkKGNvbnRyb2wpLnBhcmVudCgpLmZpbmQoXCIuaW50ZXJuYWwtbmF2aWdhdGlvbl9fbGlzdC0tc3ViLWxldmVsXCIpO1xyXG4gICAgICAgICAgICAgICAgdmFyIHBhcmVudE5hdiA9ICQoY29udHJvbCkucGFyZW50cyhcIi5pbnRlcm5hbC1uYXZpZ2F0aW9uXCIpO1xyXG5cclxuICAgICAgICAgICAgICAgIC8qXHJcbiAgICAgICAgICAgICAgICAgKiBUb2dnbGUgbmF2aWdhdGlvbiBpZiBlbmQgdXNlcnMgY2xpY2sgb24gdG9nZ2xlIGJ0blxyXG4gICAgICAgICAgICAgICAgICovXHJcbiAgICAgICAgICAgICAgICBwcml2LnRvZ2dsZU5hdmlnYXRpb24ocGFyZW50TmF2KTtcclxuXHJcbiAgICAgICAgICAgICAgICAvKlxyXG4gICAgICAgICAgICAgICAgICogQ29sbGFwc2UgYWxsIG9wZW5lZCBzdWItbmF2aWdhdGlvbiB3aGVuIG5hdmlnYXRpb24gY29sbGFwc2VkXHJcbiAgICAgICAgICAgICAgICAgKi9cclxuICAgICAgICAgICAgICAgICQodGFyZ2V0KS5zbGlkZVVwKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLnByZXYoKS5yZW1vdmVDbGFzcyhcImlzLWV4cGFuZGVkXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICQodGhpcylcclxuICAgICAgICAgICAgICAgICAgICAgICAgLnJlbW92ZUNsYXNzKFwiaXMtZXhwYW5kZWRcIilcclxuICAgICAgICAgICAgICAgICAgICAgICAgLnJlbW92ZUF0dHIoXCJzdHlsZVwiKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgIH07XHJcblxyXG4gICAgLy8gSW5pdGlhbGl6ZSBtb2R1bGVcclxuICAgICQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHByaXYuaW5pdCgpO1xyXG4gICAgfSk7XHJcblxyXG59KSgpO1xyXG4iLCIkKGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICB2YXIgQWNjZXB0Y29va2llcyA9IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICAgICAgZnVuY3Rpb24gc2V0Q29va2llKGNuYW1lLCBjdmFsdWUsIGV4ZGF5cykge1xyXG4gICAgICAgICAgICB2YXIgZCA9IG5ldyBEYXRlKCk7XHJcbiAgICAgICAgICAgIGQuc2V0VGltZShkLmdldFRpbWUoKSArIChleGRheXMgKiAyNCAqIDYwICogNjAgKiAxMDAwKSk7XHJcbiAgICAgICAgICAgIHZhciBleHBpcmVzID0gXCJleHBpcmVzPVwiICsgZC50b1VUQ1N0cmluZygpO1xyXG4gICAgICAgICAgICBkb2N1bWVudC5jb29raWUgPSBjbmFtZSArIFwiPVwiICsgY3ZhbHVlICsgXCI7XCIgKyBleHBpcmVzICsgXCI7cGF0aD0vXCI7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBmdW5jdGlvbiBnZXRDb29raWUoY25hbWUpIHtcclxuICAgICAgICAgICAgdmFyIG5hbWUgPSBjbmFtZSArIFwiPVwiO1xyXG4gICAgICAgICAgICB2YXIgY2EgPSBkb2N1bWVudC5jb29raWUuc3BsaXQoXCI7XCIpO1xyXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNhLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgYyA9IGNhW2ldO1xyXG4gICAgICAgICAgICAgICAgd2hpbGUgKGMuY2hhckF0KDApID09PSBcIiBcIikge1xyXG4gICAgICAgICAgICAgICAgICAgIGMgPSBjLnN1YnN0cmluZygxKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmIChjLmluZGV4T2YobmFtZSkgPT09IDApIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gYy5zdWJzdHJpbmcobmFtZS5sZW5ndGgsIGMubGVuZ3RoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gXCJcIjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHZhciBzaG93Q29va2llRGl2ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgdXNlcmNvb2tpZSA9ICQoXCIuY29va2llLWluZm9ybWF0aW9uXCIpO1xyXG4gICAgICAgICAgICBpZiAoIWdldENvb2tpZShcIl9hY2NlcHRDb29raWVzXCIpKVxyXG4gICAgICAgICAgICAgICAgdXNlcmNvb2tpZS5yZW1vdmVDbGFzcyhcImlzLWhpZGRlblwiKTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICAkKFwiLmpzLWFjY2VwdC1jb29raWVzXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBzZXRDb29raWUoXCJfYWNjZXB0Q29va2llc1wiLCBcInllc1wiLCAzNjUpO1xyXG4gICAgICAgICAgICB2YXIgdXNlcmNvb2tpZSA9ICQoXCIuY29va2llLWluZm9ybWF0aW9uXCIpO1xyXG4gICAgICAgICAgICB1c2VyY29va2llLmZhZGVPdXQoXCIyMDBcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5hZGRDbGFzcyhcImlzLWhpZGRlblwiKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGluaXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHNob3dDb29raWVEaXYoKTtcclxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICB9O1xyXG5cclxuICAgICQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgYWNjZXB0Y29va2llcyA9IG5ldyBBY2NlcHRjb29raWVzKCk7XHJcbiAgICAgICAgYWNjZXB0Y29va2llcy5pbml0KCk7XHJcbiAgICB9KTtcclxuXHJcbn0pOyIsIiQoZnVuY3Rpb24gKCkge1xyXG5cclxuICAgIHZhciBHcmFpbmJhbGFuY2UgPSBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICAgIHZhciB0b3RhbFByaWNlID0gMDtcclxuICAgICAgICB2YXIgdG90YWxUb25hZ2UgPSAwO1xyXG4gICAgICAgIHZhciBwcm9kdWN0aW9uQ29zdCA9IDA7XHJcbiAgICAgICAgdmFyIHRvdGFsRm9yZWNhc3RUb25hZ2UgPSAwO1xyXG4gICAgICAgIHZhciBwcmljZVRvbmFnZSA9IDA7XHJcbiAgICAgICAgdmFyIG5vUHJpY2VUb25hZ2UgPSAwO1xyXG4gICAgICAgIHZhciBsZWZ0VG9TZWxsVG9uYWdlID0gMDtcclxuICAgICAgICB2YXIgb3RoZXJUb25hZ2UgPSAwO1xyXG4gICAgICAgIHZhciBvdGhlclByaWNlID0gMDtcclxuICAgICAgICB2YXIgb3duVXNhZ2VUb25hZ2UgPSAwO1xyXG4gICAgICAgIHZhciBhbGxUb3RhbFRvbmFnZSA9IDA7XHJcbiAgICAgICAgdmFyIGNyb3BQcmljZSA9IDA7XHJcblxyXG4gICAgICAgIHZhciBzZXRDaGFydERhdGEgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGFsbFRvdGFsVG9uYWdlID0gdG90YWxUb25hZ2UgKyBvdGhlclRvbmFnZTsgLy8oQXZ0YWxhZCBrdmFudGl0ZXQpIGFsbCB3ZWlnaHQgZm9yIHByaXNzYXR0L2VqL290aGVyXHJcbiAgICAgICAgICAgIHZhciBhbGxUb3RhbFByaWNlID0gdG90YWxQcmljZSArIG90aGVyUHJpY2U7IC8vYWxsIHRvdGFsIHByaWNlICh3ZWlnaHQqc2VrL3RvbikgZm9yIHByaXNhdHQvZWovb3RoZXJcclxuXHJcbiAgICAgICAgICAgIHZhciBmb3JlY2FzdE1pbnVzVXNhZ2UgPSB0b3RhbEZvcmVjYXN0VG9uYWdlIC0gb3duVXNhZ2VUb25hZ2U7IC8vXCJGw7ZydsOkbnRhdCB1dGZhbGwodG9uKVwiIEFyZWEoaGEpKmZvcmVjYXN0KHQvaGEpIC0gb3duIHVzYWdlXHJcbiAgICAgICAgICAgIGxlZnRUb1NlbGxUb25hZ2UgPSBmb3JlY2FzdE1pbnVzVXNhZ2UgLSAoYWxsVG90YWxUb25hZ2UpOyAvL1wiS3ZhciBhdHQgc8OkbGphKHRvbilcIiBmb3JlY2FzdCBtaW51cyB1c2FnZSAtIGFsbCB3ZWlnaHRcclxuXHJcbiAgICAgICAgICAgIHZhciBhZ3JlZW1lbnRBbmRMZWZ0VG9uYWdlID0gbGVmdFRvU2VsbFRvbmFnZSA+IDAgPyBhbGxUb3RhbFRvbmFnZSArIGxlZnRUb1NlbGxUb25hZ2UgOiBhbGxUb3RhbFRvbmFnZTsgLy9PbSBtYW4gaGFyIGt2YXIgYXR0IHPDpGxqYSBsw6RnZyBww6UgZGV0XHJcblxyXG4gICAgICAgICAgICB2YXIgbGVmdFRvU2VsbFZhbHVlID0gbGVmdFRvU2VsbFRvbmFnZSA+IDAgPyBjcm9wUHJpY2UgKiBsZWZ0VG9TZWxsVG9uYWdlIDogMDsgLy92w6RyZGV0IHDDpSBkZXQgbWFuIGhhciBrdmFyIGF0dCBzw6RsamFcclxuICAgICAgICAgICAgYWxsVG90YWxQcmljZSA9IGxlZnRUb1NlbGxWYWx1ZSA+IDAgPyBhbGxUb3RhbFByaWNlICsgbGVmdFRvU2VsbFZhbHVlIDogYWxsVG90YWxQcmljZTsgLy9sw6RnZyB0aWxsIHbDpHJkZXQgdGlsbCB0b3RhbGEgcHJpc2V0XHJcblxyXG4gICAgICAgICAgICB2YXIgYXZnUmVzdWx0ID0gYWdyZWVtZW50QW5kTGVmdFRvbmFnZSA+IDAgPyAoKGFsbFRvdGFsUHJpY2UgLyBhZ3JlZW1lbnRBbmRMZWZ0VG9uYWdlKSAtIHByb2R1Y3Rpb25Db3N0KSA6IDA7IC8vXCJSZXN1bHRhdC90b24oU0VLL3RvbilcIiAodG90YWwgcHJpY2UvdG90YWwgdG9uYWdlKSAtIHByb2R1Y3Rpb25jb3N0XHJcbiAgICAgICAgICAgIHZhciB0b3RhbFJlc3VsdCA9IGFncmVlbWVudEFuZExlZnRUb25hZ2UgKiBhdmdSZXN1bHQ7IC8vXCJSZXN1bHRhdChTRUspXCI6IGFsbCB3ZWlnaHQodG9uKSAqIHJlc3VsdC90b24oU0VLKVxyXG5cclxuXHJcbiAgICAgICAgICAgIC8vQmVow7Z2ZXIgZsOlIGluIGt2YXIgYXR0IHPDpGxqYSh0b24pKmRhZ3NwcmlzIHRpbGwgYWxsIHRvdGFscHJpY2VcclxuICAgICAgICAgICAgLy9hdnJlc3VsdCBkZWxhIGludGUgcMOlIHRvdGFsdG9uYWdlIHV0YW4gaXN0w6RsbGV0IHDDpSBmw7ZydsOkbnRhdCB1dGZhbGwgKHRvbilcclxuXHJcbiAgICAgICAgICAgICQoXCIuanMtZ3JhaW4tYmFsYW5jZS1hdmctcmVzdWx0XCIpLnRleHQoTWF0aC5yb3VuZChhdmdSZXN1bHQpKTtcclxuICAgICAgICAgICAgJChcIi5qcy1ncmFpbi1iYWxhbmNlLXRvdGFsLXJlc3VsdFwiKS50ZXh0KE1hdGgucm91bmQodG90YWxSZXN1bHQpKTtcclxuICAgICAgICAgICAgJChcIi5qcy1ncmFpbi1iYWxhbmNlLXRvdGFsLXRvbmFnZVwiKS50ZXh0KE1hdGgucm91bmQoYWxsVG90YWxUb25hZ2UpICsgXCIgdG9uXCIpO1xyXG4gICAgICAgICAgICAkKFwiLmpzLWdyYWluLWJhbGFuY2UtdG90YWwtZm9yZWNhc3QtdG9uYWdlXCIpLnRleHQoTWF0aC5yb3VuZChmb3JlY2FzdE1pbnVzVXNhZ2UpICsgXCIgdG9uXCIpO1xyXG4gICAgICAgICAgICBpZiAobGVmdFRvU2VsbFRvbmFnZSA+PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAkKFwiLmpzLWdyYWluLWJhbGFuY2UtbGFiZWwtbGVmdC10by1zZWxsXCIpLnRleHQoXCJLdmFyIGF0dCBzw6RsamFcIik7XHJcbiAgICAgICAgICAgICAgICAkKFwiLmdyYWluLWJhbGFuY2VfX2xlZ2VuZC1pY29uLS1sZWZ0LXRvLXNlbGxcIikuY3NzKFwiYmFja2dyb3VuZC1jb2xvclwiLCBcIiMwMDg4MzRcIik7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAkKFwiLmpzLWdyYWluLWJhbGFuY2UtbGFiZWwtbGVmdC10by1zZWxsXCIpLnRleHQoXCLDlnZlcnNrcmlkZXIgZsO2cnbDpG50YXQgdXRmYWxsXCIpO1xyXG4gICAgICAgICAgICAgICAgJChcIi5ncmFpbi1iYWxhbmNlX19sZWdlbmQtaWNvbi0tbGVmdC10by1zZWxsXCIpLmNzcyhcImJhY2tncm91bmQtY29sb3JcIiwgXCIjZjU5YzAwXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICQoXCIuanMtZ3JhaW4tYmFsYW5jZS1sZWZ0LXRvLXNlbGxcIikudGV4dChNYXRoLnJvdW5kKGxlZnRUb1NlbGxUb25hZ2UpICsgXCIgdG9uXCIpO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHZhciBzZXRDcm9wc0RhdGEgPSBmdW5jdGlvbiAoY3JvcHNJZCwgZGF0YSkge1xyXG4gICAgICAgICAgICBpZiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgLy9pZiAoZGF0YS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAkKFwiLmdyYWluLWJhbGFuY2VfX2VkaXQtZGF0YS5hcmVhbCAgLmdyYWluLWJhbGFuY2VfX2xhYmVsXCIpLmh0bWwoZGF0YS5BcmVhLnRvRml4ZWQoMikgKyBcIiBoYVwiKTtcclxuICAgICAgICAgICAgICAgICQoXCIuZ3JhaW4tYmFsYW5jZV9fZWRpdC1kYXRhLmFyZWFsICAuZ3JhaW4tYmFsYW5jZV9faW5wdXRcIikudmFsKGRhdGEuQXJlYSk7XHJcblxyXG4gICAgICAgICAgICAgICAgJChcIi5ncmFpbi1iYWxhbmNlX19lZGl0LWRhdGEucHJvZHVjdGlvbi1jb3N0ICAuZ3JhaW4tYmFsYW5jZV9fbGFiZWxcIikuaHRtbChNYXRoLnJvdW5kKGRhdGEuUHJvZHVjdGlvbkNvc3QpICsgXCIgU0VLL3RvblwiKTtcclxuICAgICAgICAgICAgICAgICQoXCIuZ3JhaW4tYmFsYW5jZV9fZWRpdC1kYXRhLnByb2R1Y3Rpb24tY29zdCAgLmdyYWluLWJhbGFuY2VfX2lucHV0XCIpLnZhbChkYXRhLlByb2R1Y3Rpb25Db3N0KTtcclxuXHJcbiAgICAgICAgICAgICAgICAkKFwiLmdyYWluLWJhbGFuY2VfX2VkaXQtZGF0YS5leHBlY3RlZC1vdXRjb21lICAuZ3JhaW4tYmFsYW5jZV9fbGFiZWxcIikuaHRtbChkYXRhLkhhcnZlc3RGb3JlY2FzdC50b0ZpeGVkKDIpICsgXCIgdG9uL2hhXCIpO1xyXG4gICAgICAgICAgICAgICAgJChcIi5ncmFpbi1iYWxhbmNlX19lZGl0LWRhdGEuZXhwZWN0ZWQtb3V0Y29tZSAgLmdyYWluLWJhbGFuY2VfX2lucHV0XCIpLnZhbChkYXRhLkhhcnZlc3RGb3JlY2FzdCk7XHJcblxyXG4gICAgICAgICAgICAgICAgJChcIi5ncmFpbi1iYWxhbmNlX19lZGl0LWRhdGEub3duLWNvbnN1bXB0aW9uICAuZ3JhaW4tYmFsYW5jZV9fbGFiZWxcIikuaHRtbChNYXRoLnJvdW5kKGRhdGEuSGFydmVzdEZvclByaXZhdGVVc2UpICsgXCIgdG9uXCIpO1xyXG4gICAgICAgICAgICAgICAgJChcIi5ncmFpbi1iYWxhbmNlX19lZGl0LWRhdGEub3duLWNvbnN1bXB0aW9uICAuZ3JhaW4tYmFsYW5jZV9faW5wdXRcIikudmFsKGRhdGEuSGFydmVzdEZvclByaXZhdGVVc2UpO1xyXG5cclxuICAgICAgICAgICAgICAgICQoXCIuZ3JhaW4tYmFsYW5jZV9faW5wdXQuaWRcIikudmFsKGRhdGEuSWQpO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmIChjcm9wc0lkICYmIGNyb3BzSWQgIT0gMCkgeyAvL0ZvciBhbGwgY3JvcHMsIDAgYXMgc3RyaW5nXHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi5ncmFpbi1iYWxhbmNlX19lZGl0LWNvbHVtblwiKS5yZW1vdmVDbGFzcyhcImhpZGRlblwiKTtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiI2pzLWdyYWluLWJhbGFuY2UtcmVzdWx0XCIpLnJlbW92ZUNsYXNzKFwiaGlkZGVuXCIpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiLmdyYWluLWJhbGFuY2VfX2VkaXQtY29sdW1uXCIpLmFkZENsYXNzKFwiaGlkZGVuXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIjanMtZ3JhaW4tYmFsYW5jZS1yZXN1bHRcIikuYWRkQ2xhc3MoXCJoaWRkZW5cIik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAvL31cclxuXHJcbiAgICAgICAgICAgICAgICBwcm9kdWN0aW9uQ29zdCA9IGRhdGEuUHJvZHVjdGlvbkNvc3Q7XHJcbiAgICAgICAgICAgICAgICB0b3RhbEZvcmVjYXN0VG9uYWdlID0gKGRhdGEuQXJlYSAqIGRhdGEuSGFydmVzdEZvcmVjYXN0KTtcclxuICAgICAgICAgICAgICAgIG93blVzYWdlVG9uYWdlID0gZGF0YS5IYXJ2ZXN0Rm9yUHJpdmF0ZVVzZTtcclxuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAkKFwiLmdyYWluLWJhbGFuY2VfX2VkaXQtZGF0YS5hcmVhbCAgLmdyYWluLWJhbGFuY2VfX2xhYmVsXCIpLmh0bWwoXCItXCIpO1xyXG4gICAgICAgICAgICAgICAgJChcIi5ncmFpbi1iYWxhbmNlX19lZGl0LWRhdGEuYXJlYWwgIC5ncmFpbi1iYWxhbmNlX19pbnB1dFwiKS52YWwoXCJcIik7XHJcblxyXG4gICAgICAgICAgICAgICAgJChcIi5ncmFpbi1iYWxhbmNlX19lZGl0LWRhdGEucHJvZHVjdGlvbi1jb3N0ICAuZ3JhaW4tYmFsYW5jZV9fbGFiZWxcIikuaHRtbChcIi1cIik7XHJcbiAgICAgICAgICAgICAgICAkKFwiLmdyYWluLWJhbGFuY2VfX2VkaXQtZGF0YS5wcm9kdWN0aW9uLWNvc3QgIC5ncmFpbi1iYWxhbmNlX19pbnB1dFwiKS52YWwoXCJcIik7XHJcblxyXG4gICAgICAgICAgICAgICAgJChcIi5ncmFpbi1iYWxhbmNlX19lZGl0LWRhdGEuZXhwZWN0ZWQtb3V0Y29tZSAgLmdyYWluLWJhbGFuY2VfX2xhYmVsXCIpLmh0bWwoXCItXCIpO1xyXG4gICAgICAgICAgICAgICAgJChcIi5ncmFpbi1iYWxhbmNlX19lZGl0LWRhdGEuZXhwZWN0ZWQtb3V0Y29tZSAgLmdyYWluLWJhbGFuY2VfX2lucHV0XCIpLnZhbChcIlwiKTtcclxuXHJcbiAgICAgICAgICAgICAgICAkKFwiLmdyYWluLWJhbGFuY2VfX2VkaXQtZGF0YS5vd24tY29uc3VtcHRpb24gIC5ncmFpbi1iYWxhbmNlX19sYWJlbFwiKS5odG1sKFwiLVwiKTtcclxuICAgICAgICAgICAgICAgICQoXCIuZ3JhaW4tYmFsYW5jZV9fZWRpdC1kYXRhLm93bi1jb25zdW1wdGlvbiAgLmdyYWluLWJhbGFuY2VfX2lucHV0XCIpLnZhbChcIlwiKTtcclxuXHJcbiAgICAgICAgICAgICAgICAkKFwiLmdyYWluLWJhbGFuY2VfX2VkaXQtY29sdW1uXCIpLmFkZENsYXNzKFwiaGlkZGVuXCIpO1xyXG5cclxuICAgICAgICAgICAgICAgIHByb2R1Y3Rpb25Db3N0ID0gMDtcclxuICAgICAgICAgICAgICAgIHRvdGFsRm9yZWNhc3RUb25hZ2UgPSAwO1xyXG4gICAgICAgICAgICAgICAgb3duVXNhZ2VUb25hZ2UgPSAwO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHZhciBsb2FkSW50cm9QYWdlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAoJChcIi5qcy1ncmFpbi1iYWxhbmNlLWludHJvXCIpLmxlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgICAgICAgICBkYXRhVHlwZTogXCJqc29uXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgdXJsOiBcIi9hcGkvZ3JhaW5iYWxhbmNlL2lzZmlyc3R2aXNpdFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiZ2V0XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YToge30sXHJcbiAgICAgICAgICAgICAgICAgICAgY2FjaGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiLmpzLWdyYWluLWJhbGFuY2UtaW50cm9cIikucmVtb3ZlQ2xhc3MoXCJoaWRkZW5cIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiLmpzLWdyYWluLWJhbGFuY2Utd3JhcHBlclwiKS5hZGRDbGFzcyhcImhpZGRlblwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCIuanMtZ3JhaW4tYmFsYW5jZS13cmFwcGVyXCIpLnJlbW92ZUNsYXNzKFwiaGlkZGVuXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJChcIi5qcy1ncmFpbi1iYWxhbmNlLWludHJvXCIpLmFkZENsYXNzKFwiaGlkZGVuXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgICAgICB2YXIgbG9hZENyb3BMaXN0ID0gZnVuY3Rpb24gKHllYXIsIHVzZXJjcm9wcykge1xyXG4gICAgICAgICAgICByZXR1cm4gJC5hamF4KHtcclxuICAgICAgICAgICAgICAgIGRhdGFUeXBlOiBcImpzb25cIixcclxuICAgICAgICAgICAgICAgIHVybDogXCIvYXBpL2dyYWluYmFsYW5jZS9nZXRjcm9wbGlzdFwiLFxyXG4gICAgICAgICAgICAgICAgdHlwZTogXCJnZXRcIixcclxuICAgICAgICAgICAgICAgIGRhdGE6IHtcclxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiB5ZWFyLFxyXG4gICAgICAgICAgICAgICAgICAgIHVzZXJzQ3JvcHM6IHVzZXJjcm9wc1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGNhY2hlOiBmYWxzZVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHZhciBsb2FkTXlDcm9wTGlzdCA9IGZ1bmN0aW9uICh5ZWFyLCBjcm9wSWQpIHtcclxuICAgICAgICAgICAgJChcIi5ncmFpbi1iYWxhbmNlX19lZGl0LWNyb3BcIikuZmluZChcIi5sb2FkZXItd3JhcHBlclwiKS5yZW1vdmVDbGFzcyhcImhpZGRlblwiKTtcclxuICAgICAgICAgICAgJChcIiNqcy1teS1jcm9wLXR5cGVcIikuZW1wdHkoKTtcclxuICAgICAgICAgICAgaWYgKHllYXIpIHtcclxuICAgICAgICAgICAgICAgICQoXCIuanMtaGFydmVzdC15ZWFyXCIpLnZhbCh5ZWFyKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgbXlIYXJ2ZXN0WWVhckRyb3AgPSAkKFwiLmpzLWhhcnZlc3QteWVhclwiKS52YWwoKTtcclxuICAgICAgICAgICAgJC53aGVuKGxvYWRDcm9wTGlzdChteUhhcnZlc3RZZWFyRHJvcCwgdHJ1ZSkpLmRvbmUoZnVuY3Rpb24gKG15Y3JvcHMpIHtcclxuICAgICAgICAgICAgICAgICQoXCIuZ3JhaW4tYmFsYW5jZV9fZWRpdC1jcm9wXCIpLmZpbmQoXCIubG9hZGVyLXdyYXBwZXJcIikuYWRkQ2xhc3MoXCJoaWRkZW5cIik7XHJcbiAgICAgICAgICAgICAgICBpZiAobXljcm9wcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIiNqcy1teS1jcm9wLXR5cGVcIikuYXBwZW5kKCQoXCI8b3B0aW9uIHZhbHVlPVxcXCJcIiArIDAgKyBcIlxcXCI+QWxsYSBncsO2ZG9yPC9vcHRpb24+XCIpKTtcclxuICAgICAgICAgICAgICAgICAgICAkLmVhY2gobXljcm9wcywgZnVuY3Rpb24gKGksIHQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHNlbGVjdGVkID0gY3JvcElkICYmIHQuQ3JvcElkID09PSBjcm9wSWQgPyBcInNlbGVjdGVkXCIgOiBcIlwiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodC5Dcm9wSWQgIT0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJChcIiNqcy1teS1jcm9wLXR5cGVcIikuYXBwZW5kKCQoXCI8b3B0aW9uIHZhbHVlPVxcXCJcIiArIHQuQ3JvcElkICsgXCJcXFwiIFwiICsgc2VsZWN0ZWQgKyBcIj5cIiArIHQuQ3JvcE5hbWUgKyBcIjwvb3B0aW9uPlwiKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICB9O1xyXG4gICAgICAgIHZhciBsb2FkQWxsQ3JvcExpc3QgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICQoXCIuZ3JhaW4tYmFsYW5jZV9fZWRpdC1jcm9wXCIpLmZpbmQoXCIubG9hZGVyLXdyYXBwZXJcIikucmVtb3ZlQ2xhc3MoXCJoaWRkZW5cIik7XHJcbiAgICAgICAgICAgICQoXCIjanMtY3JvcC10eXBlLWFkZFwiKS5lbXB0eSgpO1xyXG4gICAgICAgICAgICB2YXIgaGFydmVzdFllYXJEcm9wID0gJChcIiNjcm9wLXllYXJcIikudmFsKCk7XHJcbiAgICAgICAgICAgICQud2hlbihsb2FkQ3JvcExpc3QoaGFydmVzdFllYXJEcm9wLCB0cnVlKSwgbG9hZENyb3BMaXN0KGhhcnZlc3RZZWFyRHJvcCwgZmFsc2UpKS5kb25lKGZ1bmN0aW9uIChteWNyb3BzLCBhbGxjcm9wcykge1xyXG4gICAgICAgICAgICAgICAgJChcIi5ncmFpbi1iYWxhbmNlX19lZGl0LWNyb3BcIikuZmluZChcIi5sb2FkZXItd3JhcHBlclwiKS5hZGRDbGFzcyhcImhpZGRlblwiKTtcclxuICAgICAgICAgICAgICAgICQuZWFjaChhbGxjcm9wc1swXSwgZnVuY3Rpb24gKGksIHQpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAodC5Dcm9wTmFtZSA9PT0gXCJBbGxhIGdyw7Zkb3JcIikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGFkZENyb3AgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICQuZWFjaChteWNyb3BzWzBdLCBmdW5jdGlvbiAoaTIsIHQyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0LkNyb3BJZCA9PT0gdDIuQ3JvcElkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGRDcm9wID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoYWRkQ3JvcCA9PT0gdHJ1ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKFwiI2pzLWNyb3AtdHlwZS1hZGRcIikuYXBwZW5kKCQoXCI8b3B0aW9uPlwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiB0LkNyb3BJZCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0OiB0LkNyb3BOYW1lXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICkpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB2YXIgbG9hZEFncmVlbWVudHNBbmREYXRhID0gZnVuY3Rpb24gKGNyb3BJZCwgZXhwYW5kKSB7XHJcbiAgICAgICAgICAgIHZhciBoYXJ2ZXN0WWVhckRyb3AgPSAkKFwiLmpzLWhhcnZlc3QteWVhclwiKS52YWwoKTtcclxuICAgICAgICAgICAgdmFyIGNyb3BJZERyb3AgPSAkKFwiLmpzLWNyb3BpZFwiKS52YWwoKTtcclxuICAgICAgICAgICAgaWYgKGNyb3BJZCkge1xyXG4gICAgICAgICAgICAgICAgY3JvcElkRHJvcCA9IGNyb3BJZDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAkKFwiLmdyYWluLWJhbGFuY2VfX2VkaXQtY3JvcFwiKS5maW5kKFwiLmxvYWRlci13cmFwcGVyXCIpLnJlbW92ZUNsYXNzKFwiaGlkZGVuXCIpO1xyXG4gICAgICAgICAgICAkLndoZW4obG9hZEFncmVlbWVudHNBamF4KGNyb3BJZERyb3AsIGhhcnZlc3RZZWFyRHJvcCksXHJcbiAgICAgICAgICAgICAgICBsb2FkT3RoZXJBZ3JlZW1lbnRzQWpheChjcm9wSWREcm9wLCBoYXJ2ZXN0WWVhckRyb3ApLFxyXG4gICAgICAgICAgICAgICAgbG9hZENyb3BzRGF0YUFqYXgoY3JvcElkRHJvcCwgaGFydmVzdFllYXJEcm9wKSxcclxuICAgICAgICAgICAgICAgIGxvYWRDcm9wUHJpY2VBamF4KGNyb3BJZERyb3AsIGhhcnZlc3RZZWFyRHJvcClcclxuICAgICAgICAgICAgKS5kb25lKGZ1bmN0aW9uIChhZ3JlZW1lbnRzRGF0YSwgb3RoZXJEYXRhLCBjcm9wc0RhdGEsIGNyb3BQcmljZURhdGEpIHtcclxuICAgICAgICAgICAgICAgIGNyb3BQcmljZSA9IGNyb3BQcmljZURhdGFbMF07XHJcbiAgICAgICAgICAgICAgICBzZXRBZ3JlZW1lbnRzKGNyb3BJZERyb3AsIGFncmVlbWVudHNEYXRhWzBdKTsgLy9wcmljZVRvbmFnZSwgbm9QcmljZVRvbmFnZSwgdG90YWxUb25hZ2UsIHRvdGFsUHJpY2VcclxuICAgICAgICAgICAgICAgIHNldE90aGVyQWdyZWVtZW50cyhjcm9wSWREcm9wLCBleHBhbmQsIG90aGVyRGF0YVswXSk7IC8vb3RoZXJUb25hZ2UsIG90aGVyUHJpY2VcclxuICAgICAgICAgICAgICAgIHNldENyb3BzRGF0YShjcm9wSWREcm9wLCBjcm9wc0RhdGFbMF0pOyAvLyBwcm9kdWN0aW9uQ29zdCwgdG90YWxGb3JlY2FzdFRvbmFnZSwgb3duVXNhZ2VUb25hZ2VcclxuICAgICAgICAgICAgICAgIHNldENoYXJ0RGF0YSgpO1xyXG4gICAgICAgICAgICAgICAgbG9hZENoYXJ0cygpOyAvLy0+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmljZVRvbmFnZSwgbm9QcmljZVRvbmFnZSwgb3RoZXJUb25hZ2UsIG93blVzYWdlVG9uYWdlLCBhbGxUb3RhbFRvbmFnZSwgbGVmdFRvU2VsbFRvbmFnZVxyXG4gICAgICAgICAgICAgICAgJChcIi5ncmFpbi1iYWxhbmNlX19lZGl0LWNyb3BcIikuZmluZChcIi5sb2FkZXItd3JhcHBlclwiKS5hZGRDbGFzcyhcImhpZGRlblwiKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdmFyIHNldE90aGVyQWdyZWVtZW50cyA9IGZ1bmN0aW9uIChjcm9wSWQsIGV4cGFuZCwgZGF0YSkge1xyXG4gICAgICAgICAgICAkKFwiLmpzLWdyYWluLWJhbGFuY2UtYWdyZWVtZW50cy1vdGhlclwiKS5odG1sKFwiXCIpO1xyXG4gICAgICAgICAgICBpZiAoZGF0YSAmJiBkYXRhLmNyb3BBZ3JlZW1lbnRzICYmIGRhdGEuY3JvcEFncmVlbWVudHMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgJChcIi5qcy1ncmFpbi1iYWxhbmNlLW90aGVyLW5vLWFncmVlbWVudHNcIikuYWRkQ2xhc3MoXCJoaWRkZW5cIik7XHJcbiAgICAgICAgICAgICAgICBvdGhlclRvbmFnZSA9IGRhdGEudG90YWxRdWFudGl0eTtcclxuICAgICAgICAgICAgICAgIG90aGVyUHJpY2UgPSBkYXRhLnRvdGFsUHJpY2U7XHJcbiAgICAgICAgICAgICAgICAkLmVhY2goZGF0YS5jcm9wQWdyZWVtZW50cywgZnVuY3Rpb24gKGksIHYpIHtcclxuICAgICAgICAgICAgICAgICAgICB2LmluZGV4ID0gaTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgdmFyIHRlbXBsYXRlID0gJC50ZW1wbGF0ZXMoXCIjZ3JhaW4tYmFsYW5jZS1hZ3JlZW1lbnRzLW90aGVyLXRlbXBsYXRlXCIpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGNyb3BJZCAmJiBjcm9wSWQgIT0gMCkgLy9Gb3IgYWxsIGNyb3BzXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi5qcy1ncmFpbi1iYWxhbmNlLWFncmVlbWVudHMtb3RoZXJcIikuaHRtbCh0ZW1wbGF0ZS5yZW5kZXIoZGF0YSkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKGV4cGFuZCkge1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIjanMtb3JkZXItb3RoZXJcIikudHJpZ2dlcihcImNsaWNrXCIpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIG90aGVyVG9uYWdlID0gMDtcclxuICAgICAgICAgICAgICAgIG90aGVyUHJpY2UgPSAwO1xyXG4gICAgICAgICAgICAgICAgJChcIi5qcy1ncmFpbi1iYWxhbmNlLW90aGVyLW5vLWFncmVlbWVudHNcIikucmVtb3ZlQ2xhc3MoXCJoaWRkZW5cIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB2YXIgbG9hZE90aGVyQWdyZWVtZW50c0FqYXggPSBmdW5jdGlvbiAoY3JvcElkLCB5ZWFyKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAkLmFqYXgoe1xyXG4gICAgICAgICAgICAgICAgZGF0YVR5cGU6IFwianNvblwiLFxyXG4gICAgICAgICAgICAgICAgdXJsOiBcIi9hcGkvZ3JhaW5iYWxhbmNlL2dldG90aGVyZ3JlZW1lbnRzXCIsXHJcbiAgICAgICAgICAgICAgICB0eXBlOiBcImdldFwiLFxyXG4gICAgICAgICAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgICAgICAgICAgIHllYXI6IHllYXIsXHJcbiAgICAgICAgICAgICAgICAgICAgY3JvcElkOiBjcm9wSWRcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBjYWNoZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHZhciBsb2FkQWdyZWVtZW50c0FqYXggPSBmdW5jdGlvbiAoY3JvcElkLCB5ZWFyKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAkLmFqYXgoe1xyXG4gICAgICAgICAgICAgICAgZGF0YVR5cGU6IFwianNvblwiLFxyXG4gICAgICAgICAgICAgICAgdXJsOiBcIi9hcGkvZ3JhaW5iYWxhbmNlL2dldGFncmVlbWVudHNcIixcclxuICAgICAgICAgICAgICAgIHR5cGU6IFwiZ2V0XCIsXHJcbiAgICAgICAgICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgeWVhcjogeWVhcixcclxuICAgICAgICAgICAgICAgICAgICBjcm9wSWQ6IGNyb3BJZFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGNhY2hlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdmFyIGxvYWRDcm9wc0RhdGFBamF4ID0gZnVuY3Rpb24gKGNyb3BJZCwgeWVhcikge1xyXG4gICAgICAgICAgICByZXR1cm4gJC5hamF4KHtcclxuICAgICAgICAgICAgICAgIGRhdGFUeXBlOiBcImpzb25cIixcclxuICAgICAgICAgICAgICAgIHVybDogXCIvYXBpL2dyYWluYmFsYW5jZS9nZXRjcm9wZGF0YVwiLFxyXG4gICAgICAgICAgICAgICAgdHlwZTogXCJnZXRcIixcclxuICAgICAgICAgICAgICAgIGRhdGE6IHtcclxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiB5ZWFyLFxyXG4gICAgICAgICAgICAgICAgICAgIGNyb3BJZDogY3JvcElkXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgY2FjaGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB2YXIgbG9hZENyb3BQcmljZUFqYXggPSBmdW5jdGlvbiAoY3JvcElkLCB5ZWFyKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAkLmFqYXgoe1xyXG4gICAgICAgICAgICAgICAgZGF0YVR5cGU6IFwianNvblwiLFxyXG4gICAgICAgICAgICAgICAgdXJsOiBcIi9hcGkvZ3JhaW5iYWxhbmNlL2dldGNyb3BwcmljZVwiLFxyXG4gICAgICAgICAgICAgICAgdHlwZTogXCJnZXRcIixcclxuICAgICAgICAgICAgICAgIGRhdGE6IHtcclxuICAgICAgICAgICAgICAgICAgICB5ZWFyOiB5ZWFyLFxyXG4gICAgICAgICAgICAgICAgICAgIGNyb3BJZDogY3JvcElkXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgY2FjaGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9O1xyXG5cclxuXHJcbiAgICAgICAgdmFyIHNldEFncmVlbWVudHMgPSBmdW5jdGlvbiAoY3JvcElkLCBkYXRhKSB7XHJcbiAgICAgICAgICAgICQoXCIuanMtZ3JhaW4tYmFsYW5jZS1hZ3JlZW1lbnRzLXdpdGgtcHJpY2VcIikuaHRtbChcIlwiKTtcclxuICAgICAgICAgICAgJChcIi5qcy1ncmFpbi1iYWxhbmNlLWFncmVlbWVudHMtbm8tcHJpY2VcIikuaHRtbChcIlwiKTtcclxuICAgICAgICAgICAgdmFyIHByaWNlSGVhZGluZ1RleHQgPSBcIlByaXNzYXR0YSBhdnRhbFwiO1xyXG4gICAgICAgICAgICB2YXIgbm9QcmljZUhlYWRpbmdUZXh0ID0gXCJFaiBwcmlzc2F0dGEgYXZ0YWxcIjtcclxuICAgICAgICAgICAgaWYgKGRhdGEgJiYgZGF0YS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgdGVtcGxhdGUgPSAkLnRlbXBsYXRlcyhcIiNncmFpbi1iYWxhbmNlLWFncmVlbWVudHMtbGFudG1hbm5lbi10ZW1wbGF0ZVwiKTtcclxuICAgICAgICAgICAgICAgIHByaWNlVG9uYWdlID0gMDtcclxuICAgICAgICAgICAgICAgIG5vUHJpY2VUb25hZ2UgPSAwO1xyXG4gICAgICAgICAgICAgICAgdmFyIHByaWNlQWdyZWVtZW50UHJpY2UgPSAwO1xyXG4gICAgICAgICAgICAgICAgdmFyIG5vUHJpY2VBZ3JlZW1lbnRQcmljZSA9IDA7XHJcblxyXG4gICAgICAgICAgICAgICAgJC5lYWNoKGRhdGEsIGZ1bmN0aW9uIChpLCB2KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdi5pbmRleCA9IGk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICAgICB2YXIgd2l0aFByaWNlID0gJC5ncmVwKGRhdGEsIGZ1bmN0aW9uIChkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGQuR3JvdXAgPT09IDE7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICAgICB2YXIgbm9QcmljZSA9ICQuZ3JlcChkYXRhLCBmdW5jdGlvbiAoZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBkLkdyb3VwID09PSAyO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcblxyXG5cclxuICAgICAgICAgICAgICAgICQuZWFjaCh3aXRoUHJpY2UsIGZ1bmN0aW9uIChpLCB0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcHJpY2VUb25hZ2UgPSBwcmljZVRvbmFnZSArIHQuVG90YWxRdWFudGl0eTtcclxuICAgICAgICAgICAgICAgICAgICBwcmljZUFncmVlbWVudFByaWNlID0gcHJpY2VBZ3JlZW1lbnRQcmljZSArIHQuVG90YWxQcmljZTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmICh3aXRoUHJpY2UubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIuanMtZ3JhaW4tYmFsYW5jZS1uby1hZ3JlZW1lbnRzLXdpdGgtcHJpY2VcIikuYWRkQ2xhc3MoXCJoaWRkZW5cIik7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHByaWNlQXZnUHJpY2UgPSBwcmljZVRvbmFnZSA+IDAgPyBNYXRoLnJvdW5kKHByaWNlQWdyZWVtZW50UHJpY2UgLyBwcmljZVRvbmFnZSkgOiAwO1xyXG4gICAgICAgICAgICAgICAgICAgIHByaWNlSGVhZGluZ1RleHQgPSBwcmljZUhlYWRpbmdUZXh0ICsgXCIgKFwiICsgcHJpY2VUb25hZ2UgKyBcIiB0b24sIFwiICsgcHJpY2VBdmdQcmljZSArIFwiIFNFSy90b24pXCI7XHJcblxyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiLmpzLWdyYWluLWJhbGFuY2Utbm8tYWdyZWVtZW50cy13aXRoLXByaWNlXCIpLnJlbW92ZUNsYXNzKFwiaGlkZGVuXCIpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICQuZWFjaChub1ByaWNlLCBmdW5jdGlvbiAoaSwgdCkge1xyXG4gICAgICAgICAgICAgICAgICAgIG5vUHJpY2VUb25hZ2UgPSBub1ByaWNlVG9uYWdlICsgdC5Ub3RhbFF1YW50aXR5O1xyXG4gICAgICAgICAgICAgICAgICAgIG5vUHJpY2VBZ3JlZW1lbnRQcmljZSA9IG5vUHJpY2VBZ3JlZW1lbnRQcmljZSArIHQuVG90YWxQcmljZTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmIChub1ByaWNlLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiLmpzLWdyYWluLWJhbGFuY2Utbm8tYWdyZWVtZW50cy13aXRoLW5vLXByaWNlXCIpLmFkZENsYXNzKFwiaGlkZGVuXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBub1ByaWNlQXZnUHJpY2UgPSBub1ByaWNlVG9uYWdlID4gMCA/IE1hdGgucm91bmQobm9QcmljZUFncmVlbWVudFByaWNlIC8gbm9QcmljZVRvbmFnZSkgOiAwO1xyXG4gICAgICAgICAgICAgICAgICAgIG5vUHJpY2VIZWFkaW5nVGV4dCA9IG5vUHJpY2VIZWFkaW5nVGV4dCArIFwiIChcIiArIG5vUHJpY2VUb25hZ2UgKyBcIiB0b24sIFwiICsgbm9QcmljZUF2Z1ByaWNlICsgXCIgU0VLL3RvbilcIjtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi5qcy1ncmFpbi1iYWxhbmNlLW5vLWFncmVlbWVudHMtd2l0aC1uby1wcmljZVwiKS5yZW1vdmVDbGFzcyhcImhpZGRlblwiKTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICB0b3RhbFByaWNlID0gcHJpY2VBZ3JlZW1lbnRQcmljZSArIG5vUHJpY2VBZ3JlZW1lbnRQcmljZTtcclxuICAgICAgICAgICAgICAgIHRvdGFsVG9uYWdlID0gcHJpY2VUb25hZ2UgKyBub1ByaWNlVG9uYWdlO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmIChjcm9wSWQgJiYgY3JvcElkICE9IDApIHsgLy9jaGVjayBpZiBhbGwgY3JvcHNcclxuICAgICAgICAgICAgICAgICAgICAkKFwiLmpzLWdyYWluLWJhbGFuY2UtYWdyZWVtZW50cy13aXRoLXByaWNlXCIpLmh0bWwodGVtcGxhdGUucmVuZGVyKHdpdGhQcmljZSkpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIuanMtZ3JhaW4tYmFsYW5jZS1hZ3JlZW1lbnRzLW5vLXByaWNlXCIpLmh0bWwodGVtcGxhdGUucmVuZGVyKG5vUHJpY2UpKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICQoXCIuanMtZ3JhaW4tYmFsYW5jZS1uby1hZ3JlZW1lbnRzLXdpdGgtcHJpY2VcIikucmVtb3ZlQ2xhc3MoXCJoaWRkZW5cIik7XHJcbiAgICAgICAgICAgICAgICAkKFwiLmpzLWdyYWluLWJhbGFuY2Utbm8tYWdyZWVtZW50cy13aXRoLW5vLXByaWNlXCIpLnJlbW92ZUNsYXNzKFwiaGlkZGVuXCIpO1xyXG4gICAgICAgICAgICAgICAgdG90YWxQcmljZSA9IDA7XHJcbiAgICAgICAgICAgICAgICB0b3RhbFRvbmFnZSA9IDA7XHJcbiAgICAgICAgICAgICAgICBwcmljZVRvbmFnZSA9IDA7XHJcbiAgICAgICAgICAgICAgICBub1ByaWNlVG9uYWdlID0gMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoY3JvcElkICYmIGNyb3BJZCAhPSAwKSB7IC8vY2hlY2sgaWYgYWxsIGNyb3BzXHJcbiAgICAgICAgICAgICAgICAkKFwiI2pzLWdyYWluLWJhbGFuY2Utd3JhcHBlci1vcmRlclwiKS5yZW1vdmVDbGFzcyhcImhpZGRlblwiKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICQoXCIjanMtZ3JhaW4tYmFsYW5jZS13cmFwcGVyLW9yZGVyXCIpLmFkZENsYXNzKFwiaGlkZGVuXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICQoXCIuanMtYWRkLW93bmVyLXByaWNlLWhlYWRpbmdcIikudGV4dChwcmljZUhlYWRpbmdUZXh0KTtcclxuICAgICAgICAgICAgJChcIi5qcy1hZGQtb3duZXItbm9wcmljZS1oZWFkaW5nXCIpLnRleHQobm9QcmljZUhlYWRpbmdUZXh0KTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB2YXIgc3VibWl0R3JhaW4gPSBmdW5jdGlvbiAoZ3JhaW5mb3JtLCBhZGQpIHtcclxuICAgICAgICAgICAgdmFyIGhhcnZlc3RZZWFyID0gXCJcIjtcclxuICAgICAgICAgICAgZ3JhaW5mb3JtLmZvckVhY2goZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgICAgIGlmIChlLm5hbWUgPT09IFwiSGFydmVzdFllYXJcIikge1xyXG4gICAgICAgICAgICAgICAgICAgIGhhcnZlc3RZZWFyID0gZS52YWx1ZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgICAgICBkYXRhVHlwZTogXCJqc29uXCIsXHJcbiAgICAgICAgICAgICAgICB1cmw6IFwiL2FwaS9ncmFpbmJhbGFuY2Uvc2F2ZWNyb3BkYXRhXCIsXHJcbiAgICAgICAgICAgICAgICB0eXBlOiBcInBvc3RcIixcclxuICAgICAgICAgICAgICAgIGRhdGE6IGdyYWluZm9ybSxcclxuICAgICAgICAgICAgICAgIGNhY2hlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi5qcy1ncmFpbi1iYWxhbmNlLWFncmVlbWVudHMtd2l0aC1wcmljZVwiKS5odG1sKFwiXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhZGQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvYWRNeUNyb3BMaXN0KGhhcnZlc3RZZWFyLCBkYXRhKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAvL2xvYWRPdGhlckFncmVlbWVudHMoZGF0YSwgZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvL2xvYWRBZ3JlZW1lbnRzKGRhdGEpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsb2FkQWdyZWVtZW50c0FuZERhdGEoZGF0YSwgZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB2YXIgc3VibWl0QWdyZWVtZW50ID0gZnVuY3Rpb24gKGFncmVlbWVudEZvcm0pIHtcclxuICAgICAgICAgICAgdmFyIGhhcnZlc3RZZWFyID0gXCJcIjtcclxuICAgICAgICAgICAgYWdyZWVtZW50Rm9ybS5mb3JFYWNoKGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZS5uYW1lID09PSBcIkhhcnZlc3RZZWFyXCIpIHtcclxuICAgICAgICAgICAgICAgICAgICBoYXJ2ZXN0WWVhciA9IGUudmFsdWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICByZXR1cm4gJC5hamF4KHtcclxuICAgICAgICAgICAgICAgIGRhdGFUeXBlOiBcImpzb25cIixcclxuICAgICAgICAgICAgICAgIHVybDogXCIvYXBpL2dyYWluYmFsYW5jZS9zYXZlb3RoZXJhZ3JlZW1lbnRcIixcclxuICAgICAgICAgICAgICAgIHR5cGU6IFwicG9zdFwiLFxyXG4gICAgICAgICAgICAgICAgZGF0YTogYWdyZWVtZW50Rm9ybSxcclxuICAgICAgICAgICAgICAgIGNhY2hlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdmFyIGRlbGV0ZU90aGVyQWdyZWVtZW50ID0gZnVuY3Rpb24gKGlkLCBjcm9waWQsIGhhcnZlc3RZZWFyKSB7XHJcbiAgICAgICAgICAgIC8vdmFyIGhhcnZlc3RZZWFyID0gXCJcIjtcclxuICAgICAgICAgICAgLy9hZ3JlZW1lbnRGb3JtLmZvckVhY2goZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgLy8gICAgaWYgKGUubmFtZSA9PT0gXCJIYXJ2ZXN0WWVhclwiKSB7XHJcbiAgICAgICAgICAgIC8vICAgICAgICBoYXJ2ZXN0WWVhciA9IGUudmFsdWU7XHJcbiAgICAgICAgICAgIC8vICAgIH1cclxuICAgICAgICAgICAgLy99KTtcclxuICAgICAgICAgICAgcmV0dXJuICQuYWpheCh7XHJcbiAgICAgICAgICAgICAgICBkYXRhVHlwZTogXCJqc29uXCIsXHJcbiAgICAgICAgICAgICAgICB1cmw6IFwiL2FwaS9ncmFpbmJhbGFuY2UvZGVsZXRlb3RoZXJhZ3JlZW1lbnRcIixcclxuICAgICAgICAgICAgICAgIHR5cGU6IFwicG9zdFwiLFxyXG4gICAgICAgICAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgICAgICAgICAgIGlkOiBpZCxcclxuICAgICAgICAgICAgICAgICAgICBjcm9waWQ6IGNyb3BpZCxcclxuICAgICAgICAgICAgICAgICAgICBoYXJ2ZXN0WWVhcjogaGFydmVzdFllYXJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBjYWNoZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHZhciBhZGRDcm9wVmFsaWRhdGlvbiA9IGZ1bmN0aW9uIChmb3JtKSB7XHJcbiAgICAgICAgICAgIGlmICgkKCkudmFsaWRhdGUpIHtcclxuICAgICAgICAgICAgICAgICQoZm9ybSkudmFsaWRhdGUoe1xyXG4gICAgICAgICAgICAgICAgICAgIGVycm9yRWxlbWVudENsYXNzOiBcImVycm9yXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgZXJyb3JDbGFzczogXCJlcnJvci1pdGVtXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgZXJyb3JFbGVtZW50OiBcInNwYW5cIixcclxuICAgICAgICAgICAgICAgICAgICAvL2Vycm9yTGFiZWxDb250YWluZXI6IFwiLmpzLXZhbGlkYXRlLWVycm9yXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgLy93cmFwcGVyOiBcImxpXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgcnVsZXM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgQXJlYToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBudW1iZXI6IHRydWVcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUHJvZHVjdGlvbkNvc3Q6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlnaXRzOiB0cnVlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIEhhcnZlc3RGb3JlY2FzdDoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBudW1iZXI6IHRydWVcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgSGFydmVzdEZvclByaXZhdGVVc2U6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpZ2l0czogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBBcmVhOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogXCJEdSBtw6VzdGUgYW5nZSBhcmVhbFwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbnVtYmVyOiBcIkFuZ2UgZXR0IG51bWVyaXNrIHbDpHJkZVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFByb2R1Y3Rpb25Db3N0OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogXCJEdSBtw6VzdGUgYW5nZSBwcm9kdWt0aW9uc2tvc3RuYWQgXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaWdpdHM6IFwiQW5nZSBldHQgbnVtZXJpc2sgaGVsdGFsXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgSGFydmVzdEZvcmVjYXN0OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogXCJEdSBtw6VzdGUgYW5nZSBmw7ZydsOkbnRhdCB1dGZhbGxcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG51bWJlcjogXCJBbmdlIGV0dCBudW1lcmlzayB2w6RyZGVcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBIYXJ2ZXN0Rm9yUHJpdmF0ZVVzZToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlnaXRzOiBcIkFuZ2UgZXR0IG51bWVyaXNrIGhlbHRhbFwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNyb3BUZXh0OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogXCJEdSBtw6VzdGUgYW5nZSBuYW1uIHDDpSBncsO2ZGFcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB2YXIgYWRkT3RoZXJWYWxpZGF0aW9uID0gZnVuY3Rpb24gKGZvcm0pIHtcclxuICAgICAgICAgICAgaWYgKCQoKS52YWxpZGF0ZSkge1xyXG4gICAgICAgICAgICAgICAgJChmb3JtKS52YWxpZGF0ZSh7XHJcbiAgICAgICAgICAgICAgICAgICAgZXJyb3JFbGVtZW50Q2xhc3M6IFwiZXJyb3JcIixcclxuICAgICAgICAgICAgICAgICAgICBlcnJvckNsYXNzOiBcImVycm9yLWl0ZW1cIixcclxuICAgICAgICAgICAgICAgICAgICBlcnJvckVsZW1lbnQ6IFwic3BhblwiLFxyXG4gICAgICAgICAgICAgICAgICAgIC8vZXJyb3JMYWJlbENvbnRhaW5lcjogXCIuanMtdmFsaWRhdGUtZXJyb3JcIixcclxuICAgICAgICAgICAgICAgICAgICAvL3dyYXBwZXI6IFwibGlcIixcclxuICAgICAgICAgICAgICAgICAgICBydWxlczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBEYXRlOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGU6IHRydWVcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUXVhbnRpdHk6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlnaXRzOiB0cnVlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFByaWNlOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpZ2l0czogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBEYXRlOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogXCJEdSBtw6VzdGUgYW5nZSBEYXR1bVwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZTogXCJBbmdlIGV0dCBkYXR1bVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFF1YW50aXR5OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogXCJEdSBtw6VzdGUgYW5nZSBLdmFudGl0ZXQgXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaWdpdHM6IFwiQW5nZSBldHQgbnVtZXJpc2sgaGVsdGFsXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgUHJpY2U6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiBcIkR1IG3DpXN0ZSBhbmdlIFByaXNcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpZ2l0czogXCJBbmdlIGV0dCBudW1lcmlzayBoZWx0YWxcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB2YXIgYWRkRm9ybVZhbGlkYXRpb24gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGFkZENyb3BWYWxpZGF0aW9uKFwiI2pzLWFkZC1mb3JtXCIpO1xyXG4gICAgICAgICAgICBhZGRDcm9wVmFsaWRhdGlvbihcIiNqcy1lZGl0LWZvcm1cIik7XHJcbiAgICAgICAgICAgIGFkZE90aGVyVmFsaWRhdGlvbihcIi5qcy1lZGl0LW90aGVyXCIpO1xyXG4gICAgICAgICAgICBhZGRPdGhlclZhbGlkYXRpb24oXCIjanMtYWRkLW90aGVyXCIpO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgICQoZG9jdW1lbnQpLm9uKFwiY2xpY2tcIiwgXCIuanMtZ3JhaW4tc3RhcnRcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICAgICAgZGF0YVR5cGU6IFwianNvblwiLFxyXG4gICAgICAgICAgICAgICAgdXJsOiBcIi9hcGkvZ3JhaW5iYWxhbmNlL3JlZ2lzdGVyZmlyc3R2aXNpdFwiLFxyXG4gICAgICAgICAgICAgICAgdHlwZTogXCJnZXRcIixcclxuICAgICAgICAgICAgICAgIGRhdGE6IHt9LFxyXG4gICAgICAgICAgICAgICAgY2FjaGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIuanMtZ3JhaW4tYmFsYW5jZS13cmFwcGVyXCIpLnJlbW92ZUNsYXNzKFwiaGlkZGVuXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIuanMtZ3JhaW4tYmFsYW5jZS1pbnRyb1wiKS5hZGRDbGFzcyhcImhpZGRlblwiKTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChkb2N1bWVudCkub24oXCJjbGlja1wiLCBcIi5qcy1hZGQtY3JvcC1zdWJtaXRcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgZm9ybSA9ICQodGhpcykuY2xvc2VzdChcImZvcm1cIik7XHJcbiAgICAgICAgICAgIGlmIChmb3JtLnZhbGlkKCkpIHtcclxuICAgICAgICAgICAgICAgIHZhciBmb3JtQXJyYXkgPSBmb3JtLnNlcmlhbGl6ZUFycmF5KCk7XHJcbiAgICAgICAgICAgICAgICB2YXIgZHJvcERvd25PcHRpb24gPSAkKFwiI2pzLWNyb3AtdHlwZS1hZGQgb3B0aW9uOnNlbGVjdGVkXCIpO1xyXG4gICAgICAgICAgICAgICAgZm9ybUFycmF5LnB1c2goe1xyXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiSXRlbU5yXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGRyb3BEb3duT3B0aW9uLnZhbCgpXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIGZvcm1BcnJheS5wdXNoKHtcclxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkNyb3BcIixcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZHJvcERvd25PcHRpb24udGV4dCgpXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIHN1Ym1pdEdyYWluKGZvcm1BcnJheSwgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICAkKFwiI2dyYWluLWJhbGFuY2UtYWRkLWNyb3BcIikucmVtb3ZlQ2xhc3MoXCJpcy1hY3RpdmVcIik7XHJcbiAgICAgICAgICAgICAgICAkKFwiI2dyYWluLWJhbGFuY2UtZWRpdC1jcm9wXCIpLmFkZENsYXNzKFwiaXMtYWN0aXZlXCIpO1xyXG4gICAgICAgICAgICAgICAgJChmb3JtKS50cmlnZ2VyKFwicmVzZXRcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChkb2N1bWVudCkub24oXCJjbGlja1wiLCBcIi5qcy1lZGl0LWNyb3Atc3VibWl0XCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIGZvcm0gPSAkKHRoaXMpLmNsb3Nlc3QoXCJmb3JtXCIpO1xyXG4gICAgICAgICAgICBpZiAoZm9ybS52YWxpZCgpKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgZm9ybUFycmF5ID0gZm9ybS5zZXJpYWxpemVBcnJheSgpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGNyb3BUeXBlT3B0aW9uID0gJChcIiNqcy1teS1jcm9wLXR5cGUgb3B0aW9uOnNlbGVjdGVkXCIpO1xyXG4gICAgICAgICAgICAgICAgZm9ybUFycmF5LnB1c2goe1xyXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiSXRlbU5yXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGNyb3BUeXBlT3B0aW9uLnZhbCgpXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIGZvcm1BcnJheS5wdXNoKHtcclxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkNyb3BcIixcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogY3JvcFR5cGVPcHRpb24udGV4dCgpXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIHZhciBoYXJ2ZXN0WWVhck9wdGlvbiA9ICQoXCIuanMtaGFydmVzdC15ZWFyIG9wdGlvbjpzZWxlY3RlZFwiKTtcclxuICAgICAgICAgICAgICAgIGZvcm1BcnJheS5wdXNoKHtcclxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkhhcnZlc3RZZWFyXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGhhcnZlc3RZZWFyT3B0aW9uLnZhbCgpXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIHN1Ym1pdEdyYWluKGZvcm1BcnJheSwgZmFsc2UpO1xyXG5cclxuICAgICAgICAgICAgICAgIGZvcm0ucmVtb3ZlQ2xhc3MoXCJlZGl0XCIpO1xyXG4gICAgICAgICAgICAgICAgZm9ybS5maW5kKFwiLmdyYWluLWJhbGFuY2VfX2Nyb3Atc2VsZWN0XCIpLnJlbW92ZUF0dHIoXCJkaXNhYmxlZFwiKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChkb2N1bWVudCkub24oXCJjbGlja1wiLCBcIi5qcy1hZGQtb3RoZXItYWdyZWVtZW50XCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIGZvcm0gPSAkKHRoaXMpLmNsb3Nlc3QoXCJmb3JtXCIpO1xyXG4gICAgICAgICAgICBpZiAoZm9ybS52YWxpZCgpKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgZm9ybUFycmF5ID0gZm9ybS5zZXJpYWxpemVBcnJheSgpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGNyb3BUeXBlT3B0aW9uID0gJChcIiNqcy1teS1jcm9wLXR5cGUgb3B0aW9uOnNlbGVjdGVkXCIpO1xyXG4gICAgICAgICAgICAgICAgZm9ybUFycmF5LnB1c2goe1xyXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiSXRlbU5yXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGNyb3BUeXBlT3B0aW9uLnZhbCgpXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIGZvcm1BcnJheS5wdXNoKHtcclxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkNyb3BcIixcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogY3JvcFR5cGVPcHRpb24udGV4dCgpXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIHZhciBoYXJ2ZXN0WWVhck9wdGlvbiA9ICQoXCIuanMtaGFydmVzdC15ZWFyIG9wdGlvbjpzZWxlY3RlZFwiKTtcclxuICAgICAgICAgICAgICAgIGZvcm1BcnJheS5wdXNoKHtcclxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkhhcnZlc3RZZWFyXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGhhcnZlc3RZZWFyT3B0aW9uLnZhbCgpXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICQud2hlbihzdWJtaXRBZ3JlZW1lbnQoZm9ybUFycmF5KSkuZG9uZShmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNsb3NlQWRkQWdyZWVtZW50KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgJChmb3JtKS50cmlnZ2VyKFwicmVzZXRcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8kKGZvcm0pLmRhdGEoXCJ2YWxpZGF0b3JcIikucmVzZXRGb3JtKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgLy9sb2FkT3RoZXJBZ3JlZW1lbnRzKG51bGwsIHRydWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vbG9hZEFncmVlbWVudHMoKTtcclxuICAgICAgICAgICAgICAgICAgICBsb2FkQWdyZWVtZW50c0FuZERhdGEobnVsbCwgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkKGRvY3VtZW50KS5vbihcInN1Ym1pdFwiLCBcIi5qcy1lZGl0LW90aGVyXCIsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgdmFyIGZvcm0gPSAkKHRoaXMpLmNsb3Nlc3QoXCJmb3JtXCIpO1xyXG4gICAgICAgICAgICBpZiAoZm9ybS52YWxpZCgpKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgZm9ybUFycmF5ID0gZm9ybS5zZXJpYWxpemVBcnJheSgpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGNyb3BUeXBlT3B0aW9uID0gJChcIiNqcy1teS1jcm9wLXR5cGUgb3B0aW9uOnNlbGVjdGVkXCIpO1xyXG4gICAgICAgICAgICAgICAgZm9ybUFycmF5LnB1c2goe1xyXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiSXRlbU5yXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGNyb3BUeXBlT3B0aW9uLnZhbCgpXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIGZvcm1BcnJheS5wdXNoKHtcclxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkNyb3BcIixcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogY3JvcFR5cGVPcHRpb24udGV4dCgpXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIHZhciBoYXJ2ZXN0WWVhck9wdGlvbiA9ICQoXCIuanMtaGFydmVzdC15ZWFyIG9wdGlvbjpzZWxlY3RlZFwiKTtcclxuICAgICAgICAgICAgICAgIGZvcm1BcnJheS5wdXNoKHtcclxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkhhcnZlc3RZZWFyXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGhhcnZlc3RZZWFyT3B0aW9uLnZhbCgpXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICQodGhpcykucmVtb3ZlQ2xhc3MoXCJlZGl0XCIpO1xyXG4gICAgICAgICAgICAgICAgJC53aGVuKHN1Ym1pdEFncmVlbWVudChmb3JtQXJyYXkpKS5kb25lKGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy9jbG9zZUFkZEFncmVlbWVudCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vJChmb3JtKS50cmlnZ2VyKFwicmVzZXRcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8kKGZvcm0pLmRhdGEoXCJ2YWxpZGF0b3JcIikucmVzZXRGb3JtKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgLy9sb2FkT3RoZXJBZ3JlZW1lbnRzKG51bGwsIHRydWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vbG9hZEFncmVlbWVudHMoKTtcclxuICAgICAgICAgICAgICAgICAgICBsb2FkQWdyZWVtZW50c0FuZERhdGEobnVsbCwgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuXHJcbiAgICAgICAgJChkb2N1bWVudCkub24oXCJjbGlja1wiLCBcIi5qcy1kZWxldGUtYWdyZWVtZW50XCIsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgIHZhciBjcm9wVHlwZU9wdGlvbiA9ICQoXCIjanMtbXktY3JvcC10eXBlIG9wdGlvbjpzZWxlY3RlZFwiKS52YWwoKTtcclxuICAgICAgICAgICAgdmFyIGhhcnZlc3RZZWFyT3B0aW9uID0gJChcIi5qcy1oYXJ2ZXN0LXllYXIgb3B0aW9uOnNlbGVjdGVkXCIpLnZhbCgpO1xyXG4gICAgICAgICAgICB2YXIgaWQgPSAkKHRoaXMpLnZhbCgpO1xyXG4gICAgICAgICAgICAkKFwiLmdyYWluLWJhbGFuY2VfX2VkaXQtY3JvcFwiKS5maW5kKFwiLmxvYWRlci13cmFwcGVyXCIpLnJlbW92ZUNsYXNzKFwiaGlkZGVuXCIpO1xyXG4gICAgICAgICAgICAkLndoZW4oZGVsZXRlT3RoZXJBZ3JlZW1lbnQoaWQsIGNyb3BUeXBlT3B0aW9uLCBoYXJ2ZXN0WWVhck9wdGlvbikpLmRvbmUoZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICQoXCIuZ3JhaW4tYmFsYW5jZV9fZWRpdC1jcm9wXCIpLmZpbmQoXCIubG9hZGVyLXdyYXBwZXJcIikuYWRkQ2xhc3MoXCJoaWRkZW5cIik7XHJcbiAgICAgICAgICAgICAgICBsb2FkQWdyZWVtZW50c0FuZERhdGEobnVsbCwgdHJ1ZSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkKGRvY3VtZW50KS5vbihcImNoYW5nZVwiLCBcIi5qcy1jcm9wLXR5cGVcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAoJChcIi5qcy1jcm9wLXR5cGUtbG1cIikuaXMoXCI6Y2hlY2tlZFwiKSkge1xyXG4gICAgICAgICAgICAgICAgJChcIiNqcy1jcm9wLXR5cGUtYWRkXCIpLnJlbW92ZUNsYXNzKFwiaGlkZGVuXCIpO1xyXG4gICAgICAgICAgICAgICAgJChcIiNqcy1jcm9wLXR5cGUtdGV4dFwiKS5hZGRDbGFzcyhcImhpZGRlblwiKTtcclxuICAgICAgICAgICAgICAgICQoXCIjanMtY3JvcC10eXBlLXRleHRcIikucnVsZXMoXCJyZW1vdmVcIiwgXCJyZXF1aXJlZFwiKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYgKCQoXCIuanMtY3JvcC10eXBlLW90aGVyXCIpLmlzKFwiOmNoZWNrZWRcIikpIHtcclxuICAgICAgICAgICAgICAgICQoXCIjanMtY3JvcC10eXBlLWFkZFwiKS5hZGRDbGFzcyhcImhpZGRlblwiKTtcclxuICAgICAgICAgICAgICAgICQoXCIjanMtY3JvcC10eXBlLXRleHRcIikucmVtb3ZlQ2xhc3MoXCJoaWRkZW5cIik7XHJcbiAgICAgICAgICAgICAgICAkKFwiI2pzLWNyb3AtdHlwZS10ZXh0XCIpLnJ1bGVzKFwiYWRkXCIsIFwicmVxdWlyZWRcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChkb2N1bWVudCkub24oXCJjaGFuZ2VcIiwgXCIjY3JvcC15ZWFyXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgbG9hZEFsbENyb3BMaXN0KCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHZhciBsb2FkQ2hhcnRzID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAoJChcIi5ncmFpbi1iYWxhbmNlX19jaGFydC1hcmVhXCIpLmxlbmd0aCkge1xyXG5cclxuICAgICAgICAgICAgICAgIC8vIERlZmluZSBhIHBsdWdpbiB0byBwcm92aWRlIGRhdGEgbGFiZWxzXHJcbiAgICAgICAgICAgICAgICBDaGFydC5wbHVnaW5zLnJlZ2lzdGVyKHtcclxuICAgICAgICAgICAgICAgICAgICBhZnRlckRhdGFzZXRzRHJhdzogZnVuY3Rpb24gKGNoYXJ0LCBlYXNpbmcpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gVG8gb25seSBkcmF3IGF0IHRoZSBlbmQgb2YgYW5pbWF0aW9uLCBjaGVjayBmb3IgZWFzaW5nID09PSAxXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjdHggPSBjaGFydC5jdHg7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjaGFydC5kYXRhLmRhdGFzZXRzLmZvckVhY2goZnVuY3Rpb24gKGRhdGFzZXQsIGkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBtZXRhID0gY2hhcnQuZ2V0RGF0YXNldE1ldGEoaSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIW1ldGEuaGlkZGVuKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0YS5kYXRhLmZvckVhY2goZnVuY3Rpb24gKGVsZW1lbnQsIGluZGV4KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBmb250U2l6ZSA9IDE0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZm9udFN0eWxlID0gXCJib2xkXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBmb250RmFtaWx5ID0gXCJjbGFyZW5kb24tdXJ3LCBzZXJpZlwiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdHguZm9udCA9IENoYXJ0LmhlbHBlcnMuZm9udFN0cmluZyhmb250U2l6ZSwgZm9udFN0eWxlLCBmb250RmFtaWx5KTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEp1c3QgbmFpdmVseSBjb252ZXJ0IHRvIHN0cmluZyBmb3Igbm93XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkYXRhU3RyaW5nID0gZGF0YXNldC5kYXRhW2luZGV4XS50b1N0cmluZygpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gTWFrZSBzdXJlIGFsaWdubWVudCBzZXR0aW5ncyBhcmUgY29ycmVjdFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdHgudGV4dEFsaWduID0gXCJjZW50ZXJcIjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3R4LnRleHRCYXNlbGluZSA9IFwibWlkZGxlXCI7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBTZXQgY29sb3JcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3R4LmZpbGxTdHlsZSA9IFwiIzQ0NFwiO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHBhZGRpbmcgPSAxMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHBvc2l0aW9uID0gZWxlbWVudC50b29sdGlwUG9zaXRpb24oKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGJhclRoaWNrbmVzcyA9IGNoYXJ0LmNvbmZpZy5vcHRpb25zLnNjYWxlcy54QXhlc1swXS5iYXJUaGlja25lc3M7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2hhcnQuY29uZmlnLm9wdGlvbnMuZGlyZWN0aW9uID09PSBcImhvcml6b250YWxcIiAmJiBjaGFydC5jb25maWcub3B0aW9ucy5sYWJlbHMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhU3RyaW5nIDwgMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN0eC5maWxsVGV4dChkYXRhU3RyaW5nLCBwb3NpdGlvbi54IC0gKGZvbnRTaXplIC8gMikgLSBwYWRkaW5nLCBwb3NpdGlvbi55KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoZGF0YVN0cmluZyA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdHguZmlsbFRleHQoZGF0YVN0cmluZywgcG9zaXRpb24ueCArIChmb250U2l6ZSAvIDIpICsgcGFkZGluZywgcG9zaXRpb24ueSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoY2hhcnQuY29uZmlnLm9wdGlvbnMuZGlyZWN0aW9uID09PSBcInZlcnRpY2FsXCIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhU3RyaW5nIDwgMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN0eC5maWxsVGV4dChkYXRhU3RyaW5nLCBwb3NpdGlvbi54LCBwb3NpdGlvbi55ICsgZGF0YVN0cmluZyAtIChmb250U2l6ZSAvIDIpIC0gcGFkZGluZyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGRhdGFTdHJpbmcgPj0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN0eC5maWxsVGV4dChkYXRhU3RyaW5nLCBwb3NpdGlvbi54LCBwb3NpdGlvbi55IC0gKGZvbnRTaXplIC8gMikgLSBwYWRkaW5nKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuXHJcblxyXG4gICAgICAgICAgICAgICAgLy8gRGVmYXVsdCBmb250IHNldHRpbmdzXHJcbiAgICAgICAgICAgICAgICBDaGFydC5kZWZhdWx0cy5nbG9iYWwuZGVmYXVsdEZvbnRGYW1pbHkgPSBcImFremlkZW56LWdyb3Rlc2stbjQsIGFremlkZW56LWdyb3Rlc2ssIHNhbnMtc2VyaWZcIjtcclxuICAgICAgICAgICAgICAgIENoYXJ0LmRlZmF1bHRzLmdsb2JhbC5kZWZhdWx0Rm9udENvbG9yID0gXCIjOTA5MDkwXCI7XHJcbiAgICAgICAgICAgICAgICBDaGFydC5kZWZhdWx0cy5nbG9iYWwuZGVmYXVsdEZvbnRTaXplID0gXCIxM1wiO1xyXG4gICAgICAgICAgICAgICAgQ2hhcnQuZGVmYXVsdHMuZ2xvYmFsLmRlZmF1bHRGb250U3R5bGUgPSBcIm5vcm1hbFwiO1xyXG5cclxuXHJcbiAgICAgICAgICAgICAgICAvLyBFeHBlY3RlZCBvdXRjb21lIGRldGFpbHNcclxuICAgICAgICAgICAgICAgIHZhciBjdHhFeHBlY3RlZE91dGNvbWVEZXRhaWxzID0gJChcIi5qcy1ncmFpbi1iYWxhbmNlLWNoYXJ0LWV4cGVjdGVkLW91dGNvbWUtZGV0YWlsc1wiKTtcclxuICAgICAgICAgICAgICAgIHZhciBkYXRhRXhwZWN0ZWRPdXRjb21lRGV0YWlscyA9IHtcclxuICAgICAgICAgICAgICAgICAgICBsYWJlbHM6IFtcclxuICAgICAgICAgICAgICAgICAgICAgICAgXCJQcmlzc2F0dGEgYXZ0YWxcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgXCJFaiBwcmlzc2F0dGEgYXZ0YWxcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgXCJBbm5hbiBha3TDtnJcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgXCJFZ2VuIGbDtnJicnVrbmluZ1wiXHJcbiAgICAgICAgICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgICAgICAgICBkYXRhc2V0czogW1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogXCJUZXJtaW5zYXZ0YWxcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogW1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiIzUyYTgzM1wiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiI2FkY2Q1M1wiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiIzAwNjkyN1wiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiIzc2Yjg0M1wiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBbXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpY2VUb25hZ2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9QcmljZVRvbmFnZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdGhlclRvbmFnZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvd25Vc2FnZVRvbmFnZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XVxyXG4gICAgICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgICAgICB2YXIgb3B0aW9uc0V4cGVjdGVkT3V0Y29tZURldGFpbHMgPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlyZWN0aW9uOiBcInZlcnRpY2FsXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgbGFiZWxzOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgIHJlc3BvbnNpdmU6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgbWFpbnRhaW5Bc3BlY3RSYXRpbzogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgdG9vbHRpcHM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZW5hYmxlZDogZmFsc2VcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIGV2ZW50czogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgaG92ZXI6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYW5pbWF0aW9uRHVyYXRpb246IDBcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIGxlZ2VuZDpcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBsYXlvdXQ6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDogMCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAwLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9wOiAzMCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvdHRvbTogMFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBzY2FsZXM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgeEF4ZXM6IFt7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYXJQZXJjZW50YWdlOiAwLjUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBncmlkTGluZXM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmYWxzZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpY2tzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXV0b1NraXA6IGZhbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1dLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB5QXhlczogW3tcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhclBlcmNlbnRhZ2U6IDAuNSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpY2tzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmVnaW5BdFplcm86IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXV0b1NraXA6IGZhbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ3JpZExpbmVzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6IFwiI2VmZWZlZlwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHplcm9MaW5lQ29sb3I6IFwiI2VmZWZlZlwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2NhbGVMYWJlbDoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWxTdHJpbmc6IFwiVG9uXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfV1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgICAgIHZhciBjaGFydEV4cGVjdGVkT3V0Y29tZURldGFpbHMgPSBuZXcgQ2hhcnQoY3R4RXhwZWN0ZWRPdXRjb21lRGV0YWlscywge1xyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiYmFyXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YTogZGF0YUV4cGVjdGVkT3V0Y29tZURldGFpbHMsXHJcbiAgICAgICAgICAgICAgICAgICAgb3B0aW9uczogb3B0aW9uc0V4cGVjdGVkT3V0Y29tZURldGFpbHNcclxuICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuXHJcbiAgICAgICAgICAgICAgICAvLyBFeHBlY3RlZCBvdXRjb21lXHJcbiAgICAgICAgICAgICAgICB2YXIgY3R4RXhwZWN0ZWRPdXRjb21lID0gJChcIi5qcy1ncmFpbi1iYWxhbmNlLWNoYXJ0LWV4cGVjdGVkLW91dGNvbWVcIik7XHJcblxyXG4gICAgICAgICAgICAgICAgdmFyIGRhdGFFeHBlY3RlZE91dGNvbWUgPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGFiZWxzOiBbXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiRsO2cnbDpG50YXQgdXRmYWxsXCJcclxuICAgICAgICAgICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICAgICAgICAgIGRhdGFzZXRzOiBbe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogXCJBdnRhbGFkIGt2YW50aXRldFwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiI2RiZTI4M1wiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlcldpZHRoOiAwLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBbXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbGxUb3RhbFRvbmFnZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBdXHJcbiAgICAgICAgICAgICAgICAgICAgfSwge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogXCJLdmFyIGF0dCBzw6RsamFcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBbXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZWZ0VG9TZWxsVG9uYWdlID49IDAgPyBcIiMwMDg4MzRcIiA6IFwiI2Y1OWMwMFwiXHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJXaWR0aDogMCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogW1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVmdFRvU2VsbFRvbmFnZSA+IDAgPyBsZWZ0VG9TZWxsVG9uYWdlIDogMFxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgXVxyXG4gICAgICAgICAgICAgICAgICAgIH1dXHJcbiAgICAgICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgICAgIHZhciBvcHRpb25zRXhwZWN0ZWRPdXRjb21lID0ge1xyXG4gICAgICAgICAgICAgICAgICAgIGRpcmVjdGlvbjogXCJob3Jpem9udGFsXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgbGFiZWxzOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICByZXNwb25zaXZlOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgIG1haW50YWluQXNwZWN0UmF0aW86IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIHRvb2x0aXBzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVuYWJsZWQ6IGZhbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBldmVudHM6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIGhvdmVyOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFuaW1hdGlvbkR1cmF0aW9uOiAwXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBsZWdlbmQ6XHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmYWxzZVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgbGF5b3V0OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByaWdodDogMCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogMCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvdHRvbTogMFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBzY2FsZXM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgeEF4ZXM6IFt7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYXJUaGlja25lc3M6IDMwLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhY2tlZDogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdyaWRMaW5lczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiBcInRyYW5zcGFyZW50XCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzY2FsZUxhYmVsOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmFsc2VcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aWNrczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1dLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB5QXhlczogW3tcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhclRoaWNrbmVzczogMzAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBncmlkTGluZXM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogXCJ0cmFuc3BhcmVudFwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGlja3M6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZWdpbkF0WmVybzogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YWNrZWQ6IHRydWVcclxuICAgICAgICAgICAgICAgICAgICAgICAgfV1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgICAgIHZhciBjaGFydEV4cGVjdGVkT3V0Y29tZSA9IG5ldyBDaGFydChjdHhFeHBlY3RlZE91dGNvbWUsIHtcclxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImhvcml6b250YWxCYXJcIixcclxuICAgICAgICAgICAgICAgICAgICBkYXRhOiBkYXRhRXhwZWN0ZWRPdXRjb21lLFxyXG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbnM6IG9wdGlvbnNFeHBlY3RlZE91dGNvbWVcclxuICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuXHJcbiAgICAgICAgICAgICAgICAvLyBFeHBlY3RlZCBvdXRjb21lIGRldGFpbHNcclxuICAgICAgICAgICAgICAgIC8vdmFyIGN0eEZpbmFuY2lhbENvbnRyYWN0cyA9ICQoXCIuanMtZ3JhaW4tYmFsYW5jZS1jaGFydC1maW5hbmNpYWwtY29udHJhY3RzXCIpO1xyXG5cclxuICAgICAgICAgICAgICAgIC8vdmFyIGRhdGFGaW5hbmNpYWxDb250cmFjdHMgPSB7XHJcbiAgICAgICAgICAgICAgICAvLyAgICBsYWJlbHM6IFtcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICBcIkvDtnB0XCIsXHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgXCJTw6VsdFwiXHJcbiAgICAgICAgICAgICAgICAvLyAgICBdLFxyXG4gICAgICAgICAgICAgICAgLy8gICAgZGF0YXNldHM6IFt7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgYmFja2dyb3VuZENvbG9yOiBbXHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgIFwiIzhiYjY2MlwiLFxyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICBcIiNmNTljMDBcIlxyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgIF0sXHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgYm9yZGVyV2lkdGg6IDAsXHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgZGF0YTogW1xyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICA1MCxcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgLTMwXHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgXVxyXG4gICAgICAgICAgICAgICAgLy8gICAgfV1cclxuICAgICAgICAgICAgICAgIC8vfTtcclxuXHJcbiAgICAgICAgICAgICAgICAvL3ZhciBvcHRpb25zRmluYW5jaWFsQ29udHJhY3RzID0ge1xyXG4gICAgICAgICAgICAgICAgLy8gICAgZGlyZWN0aW9uOiBcImhvcml6b250YWxcIixcclxuICAgICAgICAgICAgICAgIC8vICAgIGxhYmVsczogdHJ1ZSxcclxuICAgICAgICAgICAgICAgIC8vICAgIHJlc3BvbnNpdmU6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAvLyAgICBtYWludGFpbkFzcGVjdFJhdGlvOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgIC8vICAgIHRvb2x0aXBzOiB7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgZW5hYmxlZDogZmFsc2VcclxuICAgICAgICAgICAgICAgIC8vICAgIH0sXHJcbiAgICAgICAgICAgICAgICAvLyAgICBldmVudHM6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgLy8gICAgaG92ZXI6IHtcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICBhbmltYXRpb25EdXJhdGlvbjogMFxyXG4gICAgICAgICAgICAgICAgLy8gICAgfSxcclxuICAgICAgICAgICAgICAgIC8vICAgIGxlZ2VuZDpcclxuICAgICAgICAgICAgICAgIC8vICAgIHtcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICBkaXNwbGF5OiBmYWxzZVxyXG4gICAgICAgICAgICAgICAgLy8gICAgfSxcclxuICAgICAgICAgICAgICAgIC8vICAgIGxheW91dDoge1xyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgIHBhZGRpbmc6IHtcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgbGVmdDogMCxcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgcmlnaHQ6IDMwLFxyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICB0b3A6IDAsXHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgIGJvdHRvbTogMFxyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgIH1cclxuICAgICAgICAgICAgICAgIC8vICAgIH0sXHJcbiAgICAgICAgICAgICAgICAvLyAgICBzY2FsZXM6IHtcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICB4QXhlczogW3tcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgYmFyVGhpY2tuZXNzOiAzMCxcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgZ3JpZExpbmVzOiB7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICBjb2xvcjogXCIjZWZlZmVmXCIsXHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICB6ZXJvTGluZUNvbG9yOiBcIiNkMmQyZDJcIlxyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICBzY2FsZUxhYmVsOiB7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICBkaXNwbGF5OiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgbGFiZWxTdHJpbmc6IFwiVG9uXCJcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgIH1dLFxyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgIHlBeGVzOiBbe1xyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICB0aWNrczoge1xyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgYmVnaW5BdFplcm86IHRydWUsXHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICBwYWRkaW5nOiA1MFxyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICBncmlkTGluZXM6IHtcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlXHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgIGJhclRoaWNrbmVzczogMzBcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICB9XVxyXG4gICAgICAgICAgICAgICAgLy8gICAgfVxyXG4gICAgICAgICAgICAgICAgLy99XHJcblxyXG4gICAgICAgICAgICAgICAgLy92YXIgY2hhcnRGaW5hbmNpYWxDb250cmFjdHMgPSBuZXcgQ2hhcnQoY3R4RmluYW5jaWFsQ29udHJhY3RzLCB7XHJcbiAgICAgICAgICAgICAgICAvLyAgICB0eXBlOiBcImhvcml6b250YWxCYXJcIixcclxuICAgICAgICAgICAgICAgIC8vICAgIGRhdGE6IGRhdGFGaW5hbmNpYWxDb250cmFjdHMsXHJcbiAgICAgICAgICAgICAgICAvLyAgICBvcHRpb25zOiBvcHRpb25zRmluYW5jaWFsQ29udHJhY3RzXHJcbiAgICAgICAgICAgICAgICAvL30pO1xyXG5cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgICQoZG9jdW1lbnQpLm9uKFwiY2hhbmdlXCIsIFwiLmpzLWhhcnZlc3QteWVhclwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGxvYWRNeUNyb3BMaXN0KCk7XHJcbiAgICAgICAgICAgIC8vbG9hZEFncmVlbWVudHMoKTtcclxuICAgICAgICAgICAgLy9sb2FkT3RoZXJBZ3JlZW1lbnRzKCk7XHJcbiAgICAgICAgICAgIGxvYWRBZ3JlZW1lbnRzQW5kRGF0YSgpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkKGRvY3VtZW50KS5vbihcImNoYW5nZVwiLCBcIi5qcy1jcm9waWRcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAvL2xvYWRBZ3JlZW1lbnRzKCk7XHJcbiAgICAgICAgICAgIC8vbG9hZE90aGVyQWdyZWVtZW50cygpO1xyXG4gICAgICAgICAgICBsb2FkQWdyZWVtZW50c0FuZERhdGEoKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChkb2N1bWVudCkub24oXCJjbGlja1wiLCBcIi5qcy1hZGQtY3JvcFwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGxvYWRBbGxDcm9wTGlzdCgpO1xyXG4gICAgICAgICAgICAkKFwiI2dyYWluLWJhbGFuY2UtZWRpdC1jcm9wXCIpLnJlbW92ZUNsYXNzKFwiaXMtYWN0aXZlXCIpO1xyXG4gICAgICAgICAgICAkKFwiI2dyYWluLWJhbGFuY2UtYWRkLWNyb3BcIikuYWRkQ2xhc3MoXCJpcy1hY3RpdmVcIik7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoZG9jdW1lbnQpLm9uKFwiY2xpY2tcIiwgXCIuanMtY2xvc2UtYWRkLWNyb3BcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAkKFwiI2pzLWFkZC1mb3JtXCIpLmRhdGEoXCJ2YWxpZGF0b3JcIikucmVzZXRGb3JtKCk7XHJcbiAgICAgICAgICAgICQoXCIjZ3JhaW4tYmFsYW5jZS1hZGQtY3JvcFwiKS5yZW1vdmVDbGFzcyhcImlzLWFjdGl2ZVwiKTtcclxuICAgICAgICAgICAgJChcIiNncmFpbi1iYWxhbmNlLWVkaXQtY3JvcFwiKS5hZGRDbGFzcyhcImlzLWFjdGl2ZVwiKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdmFyIGNsb3NlQWRkQWdyZWVtZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAkKFwiI2dyYWluLWJhbGFuY2UtYWRkLWFncmVlbWVudFwiKVxyXG4gICAgICAgICAgICAgICAgLnNsaWRlVXAoMTUwLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJCh0aGlzKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAucmVtb3ZlQ2xhc3MoXCJpcy1hY3RpdmVcIilcclxuICAgICAgICAgICAgICAgICAgICAgICAgLnJlbW92ZUF0dHIoXCJzdHlsZVwiKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgICQoZG9jdW1lbnQpLm9uKFwiY2xpY2tcIiwgXCIuanMtYWRkLWFncmVlbWVudFwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmICgkKFwiI2dyYWluLWJhbGFuY2UtYWRkLWFncmVlbWVudFwiKS5oYXNDbGFzcyhcImlzLWFjdGl2ZVwiKSkge1xyXG4gICAgICAgICAgICAgICAgY2xvc2VBZGRBZ3JlZW1lbnQoKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICQoXCIjZ3JhaW4tYmFsYW5jZS1hZGQtYWdyZWVtZW50XCIpXHJcbiAgICAgICAgICAgICAgICAgICAgLnNsaWRlRG93bigyMDAsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLmFkZENsYXNzKFwiaXMtYWN0aXZlXCIpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAucmVtb3ZlQXR0cihcInN0eWxlXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoZG9jdW1lbnQpLm9uKFwiY2xpY2tcIiwgXCIuanMtY2xvc2UtYWRkLWFncmVlbWVudFwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICQoXCIjanMtYWRkLW90aGVyXCIpLmRhdGEoXCJ2YWxpZGF0b3JcIikucmVzZXRGb3JtKCk7XHJcbiAgICAgICAgICAgIGNsb3NlQWRkQWdyZWVtZW50KCk7XHJcblxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkKGRvY3VtZW50KS5vbihcImNsaWNrXCIsIFwiLmpzLWVkaXQtY3JvcFwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciBmb3JtID0gJCh0aGlzKS5jbG9zZXN0KFwiZm9ybVwiKTtcclxuICAgICAgICAgICAgZm9ybS5hZGRDbGFzcyhcImVkaXRcIik7XHJcbiAgICAgICAgICAgIGZvcm0uZmluZChcIi5ncmFpbi1iYWxhbmNlX19jcm9wLXNlbGVjdFwiKS5hdHRyKFwiZGlzYWJsZWRcIiwgXCJkaXNhYmxlZFwiKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChkb2N1bWVudCkub24oXCJjbGlja1wiLCBcIi5qcy1lZGl0LWFncmVlbWVudFwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICQodGhpcykuY2xvc2VzdChcImZvcm1cIikuYWRkQ2xhc3MoXCJlZGl0XCIpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkKGRvY3VtZW50KS5vbihcImNsaWNrXCIsIFwiLmpzLWNsb3NlLWVkaXQtY3JvcFwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciBmb3JtID0gJCh0aGlzKS5jbG9zZXN0KFwiZm9ybVwiKTtcclxuICAgICAgICAgICAgZm9ybS5yZW1vdmVDbGFzcyhcImVkaXRcIik7XHJcbiAgICAgICAgICAgIGZvcm0uZGF0YShcInZhbGlkYXRvclwiKS5yZXNldEZvcm0oKTtcclxuICAgICAgICAgICAgZm9ybS5maW5kKFwiLmdyYWluLWJhbGFuY2VfX2Nyb3Atc2VsZWN0XCIpLnJlbW92ZUF0dHIoXCJkaXNhYmxlZFwiKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChkb2N1bWVudCkub24oXCJjbGlja1wiLCBcIi5qcy1jYW5jZWwtZWRpdC1hZ3JlZW1lbnRcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgZm9ybSA9ICQodGhpcykuY2xvc2VzdChcImZvcm1cIik7XHJcbiAgICAgICAgICAgIGZvcm0ucmVtb3ZlQ2xhc3MoXCJlZGl0XCIpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkKGRvY3VtZW50KS5vbihcInN1Ym1pdFwiLCBcIi5ncmFpbi1iYWxhbmNlX19lZGl0LWNyb3AtZm9ybVwiLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgICQodGhpcykucmVtb3ZlQ2xhc3MoXCJlZGl0XCIpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvLyQoZG9jdW1lbnQpLm9uKFwic3VibWl0XCIsIFwiLmpzLWVkaXQtb3RoZXJcIiwgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAvLyAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgLy8gICAgJCh0aGlzKS5yZW1vdmVDbGFzcyhcImVkaXRcIik7XHJcbiAgICAgICAgLy99KTtcclxuXHJcbiAgICAgICAgJChkb2N1bWVudCkub24oXCJzdWJtaXRcIiwgXCIuZ3JhaW4tYmFsYW5jZV9fYWRkLWNyb3AtZm9ybVwiLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgICQoXCIjZ3JhaW4tYmFsYW5jZS1hZGQtY3JvcFwiKS5yZW1vdmVDbGFzcyhcImlzLWFjdGl2ZVwiKTtcclxuICAgICAgICAgICAgJChcIiNncmFpbi1iYWxhbmNlLWVkaXQtY3JvcFwiKS5hZGRDbGFzcyhcImlzLWFjdGl2ZVwiKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChcIi5qcy1tb2RhbC1vcmRlcnMtd2l0aC1wcmljZVwiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgICQoXCIjbW9kYWwtb3JkZXJzLXdpdGgtcHJpY2VcIikuZmFkZUluKCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoXCIuanMtbW9kYWwtb3JkZXJzLXdpdGhvdXQtcHJpY2VcIikub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICAkKFwiI21vZGFsLW9yZGVycy13aXRob3V0LXByaWNlXCIpLmZhZGVJbigpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBpbml0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoJChcIi5qcy1ncmFpbi1iYWxhbmNlLWFncmVlbWVudHMtd2l0aC1wcmljZVwiKS5sZW5ndGgpIHtcclxuICAgICAgICAgICAgICAgICAgICBhZGRGb3JtVmFsaWRhdGlvbigpO1xyXG4gICAgICAgICAgICAgICAgICAgIGxvYWRJbnRyb1BhZ2UoKTtcclxuICAgICAgICAgICAgICAgICAgICBsb2FkTXlDcm9wTGlzdCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vbG9hZEFncmVlbWVudHMoKTtcclxuICAgICAgICAgICAgICAgICAgICAvL2xvYWRPdGhlckFncmVlbWVudHMoKTtcclxuICAgICAgICAgICAgICAgICAgICBsb2FkQWdyZWVtZW50c0FuZERhdGEoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICB9O1xyXG5cclxuICAgICQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgZ3JhaW5iYWxhbmNlID0gbmV3IEdyYWluYmFsYW5jZSgpO1xyXG4gICAgICAgIGdyYWluYmFsYW5jZS5pbml0KCk7XHJcbiAgICB9KTtcclxuXHJcbn0pOyIsImpRdWVyeShmdW5jdGlvbiAoKSB7XHJcbiAgICBVc2VyQ2FyZC5pbml0KCk7XHJcbn0pO1xyXG5cclxudmFyIFVzZXJDYXJkID0gVXNlckNhcmQgfHwgZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gYWRkRXZlbnRIYW5kZXJzKCkge1xyXG4gICAgICAgICQoXCIuanMtZGVsZXRlLXVzZXJcIikuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAvLyBzaG93IGNvbmZpcm1hdGlvbiBkaWFsb2dcclxuICAgICAgICAgICAgdmFyICRjb25maXJtRGlhbG9nID0gJChcIiNkZWxldGUtdXNlci1jb25maXJtXCIpO1xyXG4gICAgICAgICAgICAkY29uZmlybURpYWxvZy5mYWRlSW4oKTtcclxuICAgICAgICAgICAgJChcIi5jYW5jZWxcIiwgJGNvbmZpcm1EaWFsb2cpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICRjb25maXJtRGlhbG9nLmZhZGVPdXQoKTtcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAkKFwiLmNvbmZpcm1cIiwgJGNvbmZpcm1EaWFsb2cpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICRjb25maXJtRGlhbG9nLmZhZGVPdXQoKTtcclxuICAgICAgICAgICAgICAgICQoXCIjZGVsZXRlLXVzZXItZm9ybVwiKS5zdWJtaXQoKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoXCIuanMtZGlzY29ubmVjdC11c2VyXCIpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgLy8gc2hvdyBjb25maXJtYXRpb24gZGlhbG9nXHJcbiAgICAgICAgICAgIHZhciBmb3JtID0gJCh0aGlzKS5jbG9zZXN0KFwiZm9ybVwiKTtcclxuICAgICAgICAgICAgdmFyICRjb25maXJtRGlhbG9nID0gJChcIiNkaXNjb25uZWN0LXVzZXItY29uZmlybVwiKTtcclxuICAgICAgICAgICAgJGNvbmZpcm1EaWFsb2cuZmFkZUluKCk7XHJcbiAgICAgICAgICAgICQoXCIuY2FuY2VsXCIsICRjb25maXJtRGlhbG9nKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAkY29uZmlybURpYWxvZy5mYWRlT3V0KCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgJChcIi5jb25maXJtXCIsICRjb25maXJtRGlhbG9nKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBmb3JtLnN1Ym1pdCgpO1xyXG4gICAgICAgICAgICAgICAgJGNvbmZpcm1EaWFsb2cuZmFkZU91dCgpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChkb2N1bWVudCkub24oXCJjaGFuZ2VcIiwgXCIuanMtcm93LWNoZWNrYm94XCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIGlzQ2hlY2tlZCA9ICQodGhpcykuaXMoXCI6Y2hlY2tlZFwiKTtcclxuICAgICAgICAgICAgdmFyIHJhZGlvQ29udGFpbmVyID0gJCh0aGlzKS5jbG9zZXN0KFwiLmpzLXJvbGUtcm93XCIpLmZpbmQoXCIuanMtcmFkaW8tY29udGFpbmVyXCIpO1xyXG5cclxuICAgICAgICAgICAgaWYgKGlzQ2hlY2tlZCkge1xyXG4gICAgICAgICAgICAgICAgcmFkaW9Db250YWluZXIucmVtb3ZlQ2xhc3MoXCJoaWRkZW5cIik7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICByYWRpb0NvbnRhaW5lci5hZGRDbGFzcyhcImhpZGRlblwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkKFwiLmpzLWN1c3RvbS1wcm9maWxlXCIpLnN1Ym1pdChmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIHZhciBmb3JtID0gJCh0aGlzKS5jbG9zZXN0KFwiZm9ybVwiKTtcclxuICAgICAgICAgICAgdmFyIGN1c3RvbWVyTm8gPSAkKHRoaXMpLmRhdGEoXCJjdXN0b21lcm5vXCIpO1xyXG4gICAgICAgICAgICB2YXIgdXNlck5hbWUgPSAkKHRoaXMpLmRhdGEoXCJ1c2VybmFtZVwiKTtcclxuICAgICAgICAgICAgdmFyIHJvbGVzID0gW107XHJcbiAgICAgICAgICAgIHZhciByb3dzID0gJChmb3JtKS5maW5kKFwiLmpzLXJvbGUtcm93XCIpO1xyXG4gICAgICAgICAgICAkLmVhY2gocm93cywgZnVuY3Rpb24gKGksIHJvdykge1xyXG4gICAgICAgICAgICAgICAgdmFyIGNoZWNrYm94ID0gJChyb3cpLmZpbmQoXCIuanMtcm93LWNoZWNrYm94OmNoZWNrZWRcIik7XHJcbiAgICAgICAgICAgICAgICBpZiAoY2hlY2tib3ggJiYgY2hlY2tib3gubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciByYWRpb3MgPSAkKHJvdykuZmluZChcIi5qcy1yb3ctcmFkaW9cIik7XHJcbiAgICAgICAgICAgICAgICAgICAgLy9pZiB0aGVyZXMgcmFkaW8gaW5wdXRzXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJhZGlvcyAmJiByYWRpb3MubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgY2hlY2tlZFJhZGlvID0gJChyb3cpLmZpbmQoXCIuanMtcm93LXJhZGlvOmNoZWNrZWRcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vaWYgb25lIHJhZGlvIGlzIGNoZWNrZWRcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNoZWNrZWRSYWRpbyAmJiBjaGVja2VkUmFkaW8ubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcm9sZXMucHVzaChjaGVja2VkUmFkaW8udmFsKCkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvL2lmIG5vIHJhZGlvcyBwdXNoIHZhbHVlIGZyb20gY2hlY2tib3hcclxuICAgICAgICAgICAgICAgICAgICAgICAgcm9sZXMucHVzaChjaGVja2JveC52YWwoKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIHZhciAkY29uZmlybURpYWxvZyA9ICQoXCIjanMtY2hhbmdlLWN1c3RvbS1yb2xlcy1jb25maXJtXCIpO1xyXG4gICAgICAgICAgICAkY29uZmlybURpYWxvZy5mYWRlSW4oKTtcclxuICAgICAgICAgICAgJChcIi5jYW5jZWxcIiwgJGNvbmZpcm1EaWFsb2cpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICRjb25maXJtRGlhbG9nLmZhZGVPdXQoKTtcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICB2YXIgY29uZmlybUJ1dHRvbiA9ICQoXCIuY29uZmlybVwiLCAkY29uZmlybURpYWxvZyk7XHJcbiAgICAgICAgICAgIGNvbmZpcm1CdXR0b24udW5iaW5kKFwiY2xpY2tcIik7XHJcbiAgICAgICAgICAgICQoY29uZmlybUJ1dHRvbikuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgICAgICAgICBkYXRhVHlwZTogXCJqc29uXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgdXJsOiBcIi9hcGkvdXNlcmNhcmQvc2F2ZS1yb2xlc1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwicG9zdFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIGNhY2hlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VyTmFtZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgY3VzdG9tZXJOdW1iZXI6IGN1c3RvbWVyTm8sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJvbGVzOiByb2xlc1xyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoZm9ybSkuY2xvc2VzdChcIi5qcy11c2VyLWNvbXBhbnktcm93XCIpLmZpbmQoXCIuanMtc2hvdy1jdXN0b20tcm9sZXNcIikudHJpZ2dlcihcImNsaWNrXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAvL3NhdmVSb2xlcyh1c2VyTmFtZSwgY3VzdG9tZXJObywgcm9sZXMpO1xyXG4gICAgICAgICAgICAgICAgLy9mb3JtLnN1Ym1pdCgpO1xyXG4gICAgICAgICAgICAgICAgJGNvbmZpcm1EaWFsb2cuZmFkZU91dCgpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChcIiNqcy1wcm9maWxlLWRyb3Bkb3duXCIpLmNoYW5nZShmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICB2YXIgY3VzdG9tZXJObyA9ICQodGhpcykuZGF0YShcImN1c3RvbWVybm9cIik7XHJcbiAgICAgICAgICAgIHZhciB1c2VyTmFtZSA9ICQodGhpcykuZGF0YShcInVzZXJuYW1lXCIpO1xyXG4gICAgICAgICAgICB2YXIgb3B0aW9uU2VsZWN0ZWQgPSAkKFwib3B0aW9uOnNlbGVjdGVkXCIsIHRoaXMpLnZhbCgpO1xyXG4gICAgICAgICAgICB2YXIgY3VzdG9tUm9sZXNCdXR0b25Db250YWluZXIgPSAkKHRoaXMpLmNsb3Nlc3QoXCIudXNlcmNhcmQtYWNjb3VudC1kZXRhaWxzXCIpLmZpbmQoXCIuanMtY3VzdG9tLXJvbGVzLWJ1dHRvbi1jb250YWluZXJcIik7XHJcbiAgICAgICAgICAgIGlmIChvcHRpb25TZWxlY3RlZCA9PSBcIkFucGFzc2FkXCIpIHtcclxuICAgICAgICAgICAgICAgIGN1c3RvbVJvbGVzQnV0dG9uQ29udGFpbmVyLnJlbW92ZUNsYXNzKFwiaGlkZGVuXCIpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgY3VzdG9tUm9sZXNCdXR0b25Db250YWluZXIuYWRkQ2xhc3MoXCJoaWRkZW5cIik7XHJcbiAgICAgICAgICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICAgICAgICAgIGRhdGFUeXBlOiBcImpzb25cIixcclxuICAgICAgICAgICAgICAgICAgICB1cmw6IFwiL2FwaS91c2VyY2FyZC9zYXZlLXByb2ZpbGVcIixcclxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcInBvc3RcIixcclxuICAgICAgICAgICAgICAgICAgICBjYWNoZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlck5hbWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1c3RvbWVyTnVtYmVyOiBjdXN0b21lck5vLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9maWxlSWQ6IG9wdGlvblNlbGVjdGVkXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoZG9jdW1lbnQpLm9uKFwiY2xpY2tcIiwgXCIuanMtc2hvdy1jdXN0b20tcm9sZXNcIiwgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICB2YXIgY29udHJvbCA9IHRoaXM7XHJcblxyXG4gICAgICAgICAgICBpZiAoISQoY29udHJvbCkuY2xvc2VzdChcIi5zZXR0aW5nLWxpbmtcIikuaGFzQ2xhc3MoXCJpcy1hY3RpdmVcIikpIHtcclxuICAgICAgICAgICAgICAgICQoY29udHJvbClcclxuICAgICAgICAgICAgICAgICAgICAuY2xvc2VzdChcIi5zZXR0aW5nLWxpbmtcIilcclxuICAgICAgICAgICAgICAgICAgICAuYWRkQ2xhc3MoXCJpcy1hY3RpdmVcIik7XHJcblxyXG4gICAgICAgICAgICAgICAgJChjb250cm9sKVxyXG4gICAgICAgICAgICAgICAgICAgIC5jbG9zZXN0KFwiLmpzLXVzZXItY29tcGFueS1yb3dcIilcclxuICAgICAgICAgICAgICAgICAgICAubmV4dChcIi5sbV9fbGlzdGluZy1ibG9ja19faXRlbV9fb3B0aW9uc1wiKVxyXG4gICAgICAgICAgICAgICAgICAgIC5zbGlkZURvd24oXCIxNTBcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKHRoaXMpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuYWRkQ2xhc3MoXCJpcy1leHBhbmRlZFwiKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLnJlbW92ZUF0dHIoXCJzdHlsZVwiKTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICQoY29udHJvbClcclxuICAgICAgICAgICAgICAgICAgICAuY2xvc2VzdChcIi5qcy11c2VyLWNvbXBhbnktcm93XCIpXHJcbiAgICAgICAgICAgICAgICAgICAgLm5leHQoXCIubG1fX2xpc3RpbmctYmxvY2tfX2l0ZW1fX29wdGlvbnNcIilcclxuICAgICAgICAgICAgICAgICAgICAuc2xpZGVVcChcIjE1MFwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoY29udHJvbClcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5jbG9zZXN0KFwiLnNldHRpbmctbGlua1wiKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLnJlbW92ZUNsYXNzKFwiaXMtYWN0aXZlXCIpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLnJlbW92ZUNsYXNzKFwiaXMtZXhwYW5kZWRcIilcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5yZW1vdmVBdHRyKFwic3R5bGVcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChkb2N1bWVudCkub24oXCJjbGlja1wiLCBcIi5qcy1jbG9zZS1jdXN0b20tcm9sZXNcIiwgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICB2YXIgY29udHJvbCA9IHRoaXM7XHJcblxyXG4gICAgICAgICAgICAkKGNvbnRyb2wpXHJcbiAgICAgICAgICAgICAgICAuY2xvc2VzdChcIi5qcy11c2VyLWNvbXBhbnktcm93XCIpXHJcbiAgICAgICAgICAgICAgICAuZmluZChcIi5qcy1zaG93LWN1c3RvbS1yb2xlc1wiKVxyXG4gICAgICAgICAgICAgICAgLnRyaWdnZXIoXCJjbGlja1wiKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChcIi5qcy11cGRhdGUtdXNlcnNldHRpbmdzXCIpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIGlucHV0c2V0dGluZ3MgPSBbXTtcclxuICAgICAgICAgICAgdmFyIGlucHV0cyA9ICQodGhpcykuY2xvc2VzdChcIi5tZXNzYWdlLXNldHRpbmdzLWNvbnRlbnRcIikuZmluZChcIi5qcy1zZXR0aW5nLWlucHV0XCIpO1xyXG4gICAgICAgICAgICBpbnB1dHMuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBpbnB1dHNldHRpbmdzLnB1c2goXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBDdXN0b21lck9yZ0lkOiAkKHRoaXMpLmRhdGEoXCJjdXN0b21lcm9yZ2lkXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBNZXNzYWdlU2V0dGluZ3NJZDogJCh0aGlzKS5kYXRhKFwibWVzc2FnZXNldHRpbmdpZFwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgTW9kZU9mRGVsaXZlcnlJZDogJCh0aGlzKS5kYXRhKFwibW9kZW9mZGVsaXZlcnlpZFwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgTXNnQXJlYUlkOiAkKHRoaXMpLmRhdGEoXCJhcmVhaWRcIiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE1zZ1R5cGVJZDogJCh0aGlzKS5kYXRhKFwibXNndHlwZWlkXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBVc2VySUQ6ICQodGhpcykuZGF0YShcInVzZXJpZFwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgVmFsdWU6ICQodGhpcykuaXMoXCI6Y2hlY2tlZFwiKSA/IHRydWUgOiBmYWxzZVxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgaWYgKGlucHV0c2V0dGluZ3MubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgICAgICAgICBkYXRhVHlwZTogXCJqc29uXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgdXJsOiAnL2FwaS91c2VyY2FyZC9zYXZlLW1lc3NhZ2Utc2V0dGluZ3MnLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdwb3N0JyxcclxuICAgICAgICAgICAgICAgICAgICBjYWNoZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YTogeyBzZXR0aW5nczogaW5wdXRzZXR0aW5ncyB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhID09PSB0cnVlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiI2NvbmZpcm0tc2F2ZS1tZXNzYWdlLXNldHRpbmdzXCIpLmZhZGVJbigpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICB2YXIgaW5pdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBhZGRFdmVudEhhbmRlcnMoKTtcclxuICAgIH07XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGluaXQ6IGluaXRcclxuICAgIH07XHJcbn0oKTsiLCIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxyXG4gICAgI1RBQi1OQVZJR0FUSU9OXHJcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcblxyXG5cclxud2luZG93LmdybyA9IHdpbmRvdy5ncm8gfHwge307XHJcbmdyby5tb2R1bGVzID0gZ3JvLm1vZHVsZXMgfHwge307XHJcblxyXG5cclxuZ3JvLm1vZHVsZXMudGFiTmF2aWdhdGlvbiA9IChmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgcHJpdiA9IHt9O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogUHJpdmF0ZSBpbml0aWFsaXphdGlvbiBtZXRob2RcclxuICAgICAqL1xyXG4gICAgcHJpdi5pbml0ID0gZnVuY3Rpb24gKCkge1xyXG5cclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBOYXZpZ2F0ZSB0byBjb3JyZWN0IHRhYiBpZiBwcm92aWRlZCBpbiB1cmwgKGUuZy4gP3RhYj1uYW1lKVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIGlmICgkKFwiLmpzLXRhYlwiKS5sZW5ndGgpIHtcclxuICAgICAgICAgICAgdmFyIHRhYiA9IGdyby5tb2R1bGVzLnVybC5nZXRVcmxQYXJhbShcInRhYlwiKTtcclxuXHJcbiAgICAgICAgICAgIGlmICh0YWIpIHtcclxuICAgICAgICAgICAgICAgIC8vIFN3aXRjaCB0byB0YWIgcHJvdmlkZWQgaW4gcXVlcnlzdHJpbmdcclxuICAgICAgICAgICAgICAgIHByaXYuc3dpdGNoVGFiKHRhYik7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAvLyBTd2l0Y2ggdG8gZmlyc3QgdGFiXHJcbiAgICAgICAgICAgICAgICB2YXIgZmlyc3RUYWIgPSAkKFwiLmpzLXRhYlwiKS5maXJzdCgpLmRhdGEoXCJ0YWJcIik7XHJcbiAgICAgICAgICAgICAgICBwcml2LnN3aXRjaFRhYihmaXJzdFRhYik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIENsaWNrIG9uIHRhYlxyXG4gICAgICAgICAqL1xyXG4gICAgICAgICQoZG9jdW1lbnQpLm9uKFwiY2xpY2tcIiwgXCIuanMtdGFiXCIsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgdmFyIHRhYk5hbWUgPSAkKHRoaXMpLmRhdGEoXCJ0YWJcIik7XHJcbiAgICAgICAgICAgIHZhciB1cGRhdGVVcmwgPSAkKHRoaXMpLmRhdGEoXCJ0YWItdXJsXCIpO1xyXG5cclxuICAgICAgICAgICAgaWYgKHVwZGF0ZVVybCkge1xyXG4gICAgICAgICAgICAgICAgLy8gQWRkIHRhYiB0byBxdWVyeXN0cmluZ1xyXG4gICAgICAgICAgICAgICAgZ3JvLm1vZHVsZXMudXJsLmFkZFVybFBhcmFtKG51bGwsIFwidGFiXCIsIHRhYk5hbWUpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAvLyBTd2l0Y2ggdGFiXHJcbiAgICAgICAgICAgIHByaXYuc3dpdGNoVGFiKHRhYk5hbWUpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFN3aXRjaCB0byB0YWJcclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0YWIgLSBUaGUgbmFtZSBvZiB0aGUgdGFiIHRoYXQgd2FzIGNsaWNrZWRcclxuICAgICAqL1xyXG4gICAgcHJpdi5zd2l0Y2hUYWIgPSBmdW5jdGlvbiAodGFiKSB7XHJcbiAgICAgICAgdmFyIGNvbnRyb2wgPSAkKFwiW2RhdGEtdGFiPSdcIiArIHRhYiArIFwiJ11cIik7XHJcbiAgICAgICAgdmFyIHRhcmdldCA9ICQoY29udHJvbCkuZGF0YShcInRhYlwiKTtcclxuXHJcbiAgICAgICAgaWYgKGNvbnRyb2wubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgIGlmICghJChjb250cm9sKS5oYXNDbGFzcyhcImlzLWFjdGl2ZVwiKSkge1xyXG4gICAgICAgICAgICAgICAgJChjb250cm9sKVxyXG4gICAgICAgICAgICAgICAgICAgIC5hZGRDbGFzcyhcImlzLWFjdGl2ZVwiKVxyXG4gICAgICAgICAgICAgICAgICAgIC5zaWJsaW5ncyhcIi50YWItbmF2aWdhdGlvbl9fdGFiXCIpXHJcbiAgICAgICAgICAgICAgICAgICAgLnJlbW92ZUNsYXNzKFwiaXMtYWN0aXZlXCIpO1xyXG5cclxuICAgICAgICAgICAgICAgICQoY29udHJvbClcclxuICAgICAgICAgICAgICAgICAgICAuY2xvc2VzdChcIi50YWItbmF2aWdhdGlvbl9fdGFiLWNvbnRhaW5lclwiKVxyXG4gICAgICAgICAgICAgICAgICAgIC5uZXh0KFwiLnRhYi1uYXZpZ2F0aW9uX190YWItY29udGVudC1jb250YWluZXJcIilcclxuICAgICAgICAgICAgICAgICAgICAuZmluZChcIi50YWItbmF2aWdhdGlvbl9fdGFiLWNvbnRlbnRcIilcclxuICAgICAgICAgICAgICAgICAgICAucmVtb3ZlQ2xhc3MoXCJpcy1hY3RpdmVcIilcclxuICAgICAgICAgICAgICAgICAgICAuZmlsdGVyKFwiW2RhdGEtdGFiPSdcIiArIHRhcmdldCArIFwiJ11cIilcclxuICAgICAgICAgICAgICAgICAgICAuYWRkQ2xhc3MoXCJpcy1hY3RpdmVcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIC8vIEluaXRpYWxpemUgbW9kdWxlXHJcbiAgICAkKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBwcml2LmluaXQoKTtcclxuICAgIH0pO1xyXG5cclxufSkoKTtcclxuIiwiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcclxuICAgICNJTlRFUk5BTC1NRVNTQUdFLVNFVFRJTkdTXHJcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcblxyXG5cclxud2luZG93LmdybyA9IHdpbmRvdy5ncm8gfHwge307XHJcbmdyby5tb2R1bGVzID0gZ3JvLm1vZHVsZXMgfHwge307XHJcblxyXG5cclxuZ3JvLm1vZHVsZXMuaW50ZXJuYWxNZXNzYWdlU2V0dGluZ3MgPSAoZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIHByaXYgPSB7fTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFByaXZhdGUgaW5pdGlhbGl6YXRpb24gbWV0aG9kXHJcbiAgICAgKi9cclxuICAgIHByaXYuaW5pdCA9IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICAgICAgJChkb2N1bWVudCkub24oXCJjbGlja1wiLCBcIi5qcy1tZXNzYWdlLXNldHRpbmdzLXRhYlwiLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIHZhciBjb250cm9sID0gdGhpcztcclxuICAgICAgICAgICAgdmFyIHRhcmdldCA9ICQoY29udHJvbCkuZGF0YShcInRhYlwiKTtcclxuXHJcbiAgICAgICAgICAgIGlmICghJChjb250cm9sKS5oYXNDbGFzcyhcImlzLWFjdGl2ZVwiKSkge1xyXG4gICAgICAgICAgICAgICAgJChjb250cm9sKVxyXG4gICAgICAgICAgICAgICAgICAgIC5hZGRDbGFzcyhcImlzLWFjdGl2ZVwiKVxyXG4gICAgICAgICAgICAgICAgICAgIC5zaWJsaW5ncyhcIi5tZXNzYWdlLXNldHRpbmdzLXRhYlwiKVxyXG4gICAgICAgICAgICAgICAgICAgIC5yZW1vdmVDbGFzcyhcImlzLWFjdGl2ZVwiKTtcclxuXHJcbiAgICAgICAgICAgICAgICAkKGNvbnRyb2wpXHJcbiAgICAgICAgICAgICAgICAgICAgLmNsb3Nlc3QoXCIubWVzc2FnZS1zZXR0aW5ncy10YWItY29udGFpbmVyXCIpXHJcbiAgICAgICAgICAgICAgICAgICAgLm5leHQoXCIubWVzc2FnZS1zZXR0aW5ncy1jb250ZW50LWNvbnRhaW5lclwiKVxyXG4gICAgICAgICAgICAgICAgICAgIC5maW5kKFwiLm1lc3NhZ2Utc2V0dGluZ3MtY29udGVudFwiKVxyXG4gICAgICAgICAgICAgICAgICAgIC5yZW1vdmVDbGFzcyhcImlzLWFjdGl2ZVwiKVxyXG4gICAgICAgICAgICAgICAgICAgIC5maWx0ZXIoXCJbZGF0YS10YWI9J1wiICsgdGFyZ2V0ICsgXCInXVwiKVxyXG4gICAgICAgICAgICAgICAgICAgIC5hZGRDbGFzcyhcImlzLWFjdGl2ZVwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkKGRvY3VtZW50KS5vbihcImNsaWNrXCIsIFwiLmpzLW9wZW4tbWVzc2FnZS1zZXR0aW5nc1wiLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIHZhciBjb250cm9sID0gdGhpcztcclxuXHJcbiAgICAgICAgICAgIGlmICghJChjb250cm9sKS5jbG9zZXN0KFwiLnNldHRpbmctbGlua1wiKS5oYXNDbGFzcyhcImlzLWFjdGl2ZVwiKSkge1xyXG4gICAgICAgICAgICAgICAgJChjb250cm9sKVxyXG4gICAgICAgICAgICAgICAgICAgIC5jbG9zZXN0KFwiLnNldHRpbmctbGlua1wiKVxyXG4gICAgICAgICAgICAgICAgICAgIC5hZGRDbGFzcyhcImlzLWFjdGl2ZVwiKTtcclxuXHJcbiAgICAgICAgICAgICAgICAkKGNvbnRyb2wpXHJcbiAgICAgICAgICAgICAgICAgICAgLmNsb3Nlc3QoXCIuanMtdXNlci1jb21wYW55LXJvd1wiKVxyXG4gICAgICAgICAgICAgICAgICAgIC5maW5kKFwiLmpzLXVzZXItY2FyZC1tZXNzYWdlLXNldHRpbmdzXCIpXHJcbiAgICAgICAgICAgICAgICAgICAgLnNsaWRlRG93bihcIjE1MFwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQodGhpcylcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5hZGRDbGFzcyhcImlzLWV4cGFuZGVkXCIpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAucmVtb3ZlQXR0cihcInN0eWxlXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgJChjb250cm9sKVxyXG4gICAgICAgICAgICAgICAgICAgIC5jbG9zZXN0KFwiLmpzLXVzZXItY29tcGFueS1yb3dcIilcclxuICAgICAgICAgICAgICAgICAgICAuZmluZChcIi5qcy11c2VyLWNhcmQtbWVzc2FnZS1zZXR0aW5nc1wiKVxyXG4gICAgICAgICAgICAgICAgICAgIC5zbGlkZVVwKFwiMTUwXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJChjb250cm9sKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLmNsb3Nlc3QoXCIuc2V0dGluZy1saW5rXCIpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAucmVtb3ZlQ2xhc3MoXCJpcy1hY3RpdmVcIik7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKHRoaXMpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAucmVtb3ZlQ2xhc3MoXCJpcy1leHBhbmRlZFwiKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLnJlbW92ZUF0dHIoXCJzdHlsZVwiKTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkKGRvY3VtZW50KS5vbihcImNsaWNrXCIsIFwiLmpzLWNsb3NlLW1lc3NhZ2Utc2V0dGluZ3NcIiwgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICB2YXIgY29udHJvbCA9IHRoaXM7XHJcblxyXG4gICAgICAgICAgICAkKGNvbnRyb2wpXHJcbiAgICAgICAgICAgICAgICAuY2xvc2VzdChcIi5qcy11c2VyLWNvbXBhbnktcm93XCIpXHJcbiAgICAgICAgICAgICAgICAuZmluZChcIi5qcy1vcGVuLW1lc3NhZ2Utc2V0dGluZ3NcIilcclxuICAgICAgICAgICAgICAgIC50cmlnZ2VyKFwiY2xpY2tcIik7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIC8vIEluaXRpYWxpemUgbW9kdWxlXHJcbiAgICAkKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBwcml2LmluaXQoKTtcclxuICAgIH0pO1xyXG5cclxufSkoKTtcclxuIiwiLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAvL1xyXG4vLyAjVE9HR0xFXHJcbi8vXHJcbi8vIFRvIHVzZSB0aGUgdG9nZ2xlIG1vZHVsZSwgYWRkIHRoZSBjbGFzcyBgLmpzLXRvZ2dsZWAgdG8gYW4gZWxlbWVudCBhbmRcclxuLy8gcGFzcyBpbiB0aGUgZm9sbG93aW5nIGRhdGEgcGFyYW1ldGVyczpcclxuLy9cclxuLy8gZGF0YS10b2dnbGUtdGFyZ2V0ICAgLSBDbGFzcyBvciBJRCBvZiB0aGUgdG9nZ2xlIHRhcmdldCBlbGVtZW50XHJcbi8vIGRhdGEtdG9nZ2xlLWVmZmVjdCAgIC0gQW5pbWF0aW9uIGVmZmVjdCB0byB1c2UgKGZhZGUgb3Igc2xpZGUpXHJcbi8vIGRhdGEtdG9nZ2xlLWR1cmF0aW9uIC0gQW5pbWF0aW9uIGR1cmF0aW9uIGZvciB0aGUgdG9nZ2xlIGVmZmVjdFxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIC8vXHJcblxyXG5cclxud2luZG93LmZhcm1kYXkgPSB3aW5kb3cuZmFybWRheSB8fCB7fTtcclxuZmFybWRheS5tb2R1bGVzID0gZmFybWRheS5tb2R1bGVzIHx8IHt9O1xyXG5cclxuXHJcbmZhcm1kYXkubW9kdWxlcy50b2dnbGUgPSAoZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIHByaXYgPSB7fTtcclxuICAgIHZhciBwdWIgPSB7fTtcclxuXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUb2dnbGUgZWZmZWN0c1xyXG4gICAgICovXHJcbiAgICBwcml2LmVmZmVjdCA9IHtcclxuICAgICAgICBGQURFOiBcImZhZGVcIixcclxuICAgICAgICBTTElERTogXCJzbGlkZVwiXHJcbiAgICB9O1xyXG5cclxuXHJcbiAgICAvKipcclxuICAgICAqIFRvZ2dsZSBmdW5jdGlvblxyXG4gICAgICovXHJcbiAgICBwcml2LmZ1bmN0aW9uID0ge1xyXG4gICAgICAgIEFDQ09SRElPTjogXCJhY2NvcmRpb25cIlxyXG4gICAgfTtcclxuXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBQcml2YXRlIGluaXRpYWxpemF0aW9uIG1ldGhvZFxyXG4gICAgICovXHJcbiAgICBwcml2LmluaXQgPSBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEV4cGFuZCBjb3JyZWN0IHRvZ2dsZSBpZiBwcm92aWRlZCBpbiB1cmwgKGUuZy4gP3RvZ2dsZT1hYmMxMjMpXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgaWYgKCQoXCIuanMtdG9nZ2xlXCIpLmxlbmd0aCkge1xyXG4gICAgICAgICAgICB2YXIgdG9nZ2xlSWQgPSBncm8ubW9kdWxlcy51cmwuZ2V0VXJsUGFyYW0oXCJ0b2dnbGVcIik7XHJcblxyXG4gICAgICAgICAgICBpZiAodG9nZ2xlSWQpIHtcclxuICAgICAgICAgICAgICAgIHZhciB0b2dnbGUgPSAkKFwiW2FyaWEtY29udHJvbHM9J1wiICsgdG9nZ2xlSWQgKyBcIiddXCIpO1xyXG4gICAgICAgICAgICAgICAgcHViLnNob3codG9nZ2xlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogVG9nZ2xlIGNvbnRlbnRcclxuICAgICAgICAgKi9cclxuICAgICAgICAkKGRvY3VtZW50KS5vbihcImNsaWNrXCIsIFwiLmpzLXRvZ2dsZVwiLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICB2YXIgY29udHJvbCA9IHRoaXM7XHJcbiAgICAgICAgICAgIHZhciB0YXJnZXQgPSAkKHRoaXMpLmRhdGEoXCJ0b2dnbGUtdGFyZ2V0XCIpO1xyXG4gICAgICAgICAgICB2YXIgZWZmZWN0ID0gJCh0aGlzKS5kYXRhKFwidG9nZ2xlLWVmZmVjdFwiKTtcclxuICAgICAgICAgICAgdmFyIGR1cmF0aW9uID0gJCh0aGlzKS5kYXRhKFwidG9nZ2xlLWR1cmF0aW9uXCIpO1xyXG4gICAgICAgICAgICB2YXIgdG9nZ2xlRnVuY3Rpb24gPSAkKHRoaXMpLmRhdGEoXCJ0b2dnbGUtZnVuY3Rpb25cIik7XHJcblxyXG4gICAgICAgICAgICB2YXIgaXNWaXNpYmxlID0gcHJpdi5pc1Zpc2libGUodGFyZ2V0KTtcclxuXHJcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcclxuXHJcbiAgICAgICAgICAgIGlmIChpc1Zpc2libGUpXHJcbiAgICAgICAgICAgICAgICBwcml2LmhpZGUoY29udHJvbCwgdGFyZ2V0LCBlZmZlY3QsIGR1cmF0aW9uKTtcclxuICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAgcHJpdi5zaG93KGNvbnRyb2wsIHRhcmdldCwgZWZmZWN0LCBkdXJhdGlvbiwgdG9nZ2xlRnVuY3Rpb24pO1xyXG4gICAgICAgIH0pO1xyXG5cclxuXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogVHJpZ2dlciB0b2dnbGUgZnJvbSBhIGRpZmZlcmVudCBlbGVtZW50IHRoYW4gdGhlIHRvZ2dsZSBjb250cm9sIGl0c2VsZlxyXG4gICAgICAgICAqL1xyXG4gICAgICAgICQoZG9jdW1lbnQpLm9uKFwiY2xpY2tcIiwgXCIuanMtdHJpZ2dlci10b2dnbGVcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgdGFyZ2V0ID0gJCh0aGlzKS5kYXRhKFwidGFyZ2V0XCIpO1xyXG4gICAgICAgICAgICAvLyBGaW5kIGFsbCBjb250cm9scyBmb3IgdG9nZ2xlIHRhcmdldCAoY291bGQgYmUgbXVsdGlwbGUpXHJcbiAgICAgICAgICAgIHZhciBjb250cm9scyA9ICQoXCIuanMtdG9nZ2xlW2RhdGEtdGFyZ2V0PSdcIiArIHRhcmdldCArIFwiJ1wiKTtcclxuXHJcbiAgICAgICAgICAgIGNvbnRyb2xzLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGlzVmlzaWJsZSA9IHByaXYuaXNWaXNpYmxlKHRhcmdldCk7XHJcbiAgICAgICAgICAgICAgICB2YXIgZWZmZWN0ID0gJCh0aGlzKS5kYXRhKFwidG9nZ2xlLWVmZmVjdFwiKTtcclxuICAgICAgICAgICAgICAgIHZhciBkdXJhdGlvbiA9ICQodGhpcykuZGF0YShcInRvZ2dsZS1kdXJhdGlvblwiKTtcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAoaXNWaXNpYmxlKVxyXG4gICAgICAgICAgICAgICAgICAgIHByaXYuaGlkZSh0aGlzLCB0YXJnZXQsIGVmZmVjdCwgZHVyYXRpb24pO1xyXG4gICAgICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAgICAgIHByaXYuc2hvdyh0aGlzLCB0YXJnZXQsIGVmZmVjdCwgZHVyYXRpb24pO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcblxyXG5cclxuICAgIC8qKlxyXG4gICAgICogU2hvdyBjb250ZW50XHJcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gY29udHJvbCAtIFRvZ2dsZSBjb250cm9sXHJcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gdGFyZ2V0IC0gVG9nZ2xlIHRhcmdldFxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGVmZmVjdCAtIEFuaW1hdGlvbiBlZmZlY3RcclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBbZHVyYXRpb249MF0gLSBBbmltYXRpb24gZHVyYXRpb25cclxuICAgICAqL1xyXG4gICAgcHJpdi5zaG93ID0gZnVuY3Rpb24gKGNvbnRyb2wsIHRhcmdldCwgZWZmZWN0LCBkdXJhdGlvbiwgdG9nZ2xlRnVuY3Rpb24pIHtcclxuICAgICAgICB2YXIgdmFsdWUgPSAkKGNvbnRyb2wpLmF0dHIoXCJhcmlhLWNvbnRyb2xzXCIpO1xyXG4gICAgICAgIHZhciB1cGRhdGVVcmwgPSAkKGNvbnRyb2wpLmRhdGEoXCJ0b2dnbGUtdXJsXCIpO1xyXG5cclxuICAgICAgICAvLyBTZXQgZGVmYXVsdCBkdXJhdGlvbiBpZiBub3QgcHJvdmlkZWRcclxuICAgICAgICBpZiAoZHVyYXRpb24gPT09IHVuZGVmaW5lZClcclxuICAgICAgICAgICAgZHVyYXRpb24gPSAwO1xyXG5cclxuICAgICAgICAvLyBJZiBmdW5jdGlvbiBpcyBhY2NvcmRpb24sIGhpZGUgYWxsIHNpYmxpbmdzIHRoYXQgaXMgZXhwYW5kZWRcclxuICAgICAgICBpZiAodG9nZ2xlRnVuY3Rpb24gPT09IHByaXYuZnVuY3Rpb24uQUNDT1JESU9OKSB7XHJcbiAgICAgICAgICAgICQoY29udHJvbCkuc2libGluZ3MoXCIuY29sbGFwc2VfX2NvbnRyb2wuaXMtYWN0aXZlXCIpLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIHRhcmdldCA9ICQodGhpcykuZGF0YShcInRvZ2dsZS10YXJnZXRcIik7XHJcbiAgICAgICAgICAgICAgICB2YXIgZWZmZWN0ID0gJCh0aGlzKS5kYXRhKFwidG9nZ2xlLWVmZmVjdFwiKTtcclxuICAgICAgICAgICAgICAgIHZhciBkdXJhdGlvbiA9ICQodGhpcykuZGF0YShcInRvZ2dsZS1kdXJhdGlvblwiKTtcclxuXHJcbiAgICAgICAgICAgICAgICBwcml2LmhpZGUodGhpcywgdGFyZ2V0LCBlZmZlY3QsIGR1cmF0aW9uKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBBZGQgY2xhc3NlcyB0byBjb250cm9sIGJlZm9yZSBhbmltYXRpbmcgdGFyZ2V0IHRvIHN5bmMgYW5pbWF0aW9uc1xyXG4gICAgICAgICQoY29udHJvbClcclxuICAgICAgICAgICAgLmFkZENsYXNzKFwiaXMtYWN0aXZlXCIpXHJcbiAgICAgICAgICAgIC5hdHRyKFwiYXJpYS1leHBhbmRlZFwiLCB0cnVlKTtcclxuXHJcbiAgICAgICAgLy8gQW5pbWF0aW9uIGVmZmVjdHNcclxuICAgICAgICBpZiAoZWZmZWN0ID09PSBwcml2LmVmZmVjdC5GQURFKSB7XHJcbiAgICAgICAgICAgICQodGFyZ2V0KS5mYWRlSW4oZHVyYXRpb24sIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICQodGFyZ2V0KVxyXG4gICAgICAgICAgICAgICAgICAgIC5hZGRDbGFzcyhcImlzLWFjdGl2ZVwiKVxyXG4gICAgICAgICAgICAgICAgICAgIC5hdHRyKFwiYXJpYS1oaWRkZW5cIiwgZmFsc2UpXHJcbiAgICAgICAgICAgICAgICAgICAgLnJlbW92ZUF0dHIoXCJzdHlsZVwiKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSBlbHNlIGlmIChlZmZlY3QgPT09IHByaXYuZWZmZWN0LlNMSURFKSB7XHJcbiAgICAgICAgICAgICQodGFyZ2V0KS5zbGlkZURvd24oZHVyYXRpb24sIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICQodGFyZ2V0KVxyXG4gICAgICAgICAgICAgICAgICAgIC5hZGRDbGFzcyhcImlzLWFjdGl2ZVwiKVxyXG4gICAgICAgICAgICAgICAgICAgIC5hdHRyKFwiYXJpYS1oaWRkZW5cIiwgZmFsc2UpXHJcbiAgICAgICAgICAgICAgICAgICAgLnJlbW92ZUF0dHIoXCJzdHlsZVwiKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAodXBkYXRlVXJsKSB7XHJcbiAgICAgICAgICAgIC8vIEFkZCB0b2dnbGUgaWQgdG8gcXVlcnlzdHJpbmdcclxuICAgICAgICAgICAgZ3JvLm1vZHVsZXMudXJsLmFkZFVybFBhcmFtKGRvY3VtZW50LmxvY2F0aW9uLnNlYXJjaCwgXCJ0b2dnbGVcIiwgdmFsdWUpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcblxyXG5cclxuICAgIC8qKlxyXG4gICAgICogSGlkZSBjb250ZW50XHJcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gY29udHJvbCAtIFRvZ2dsZSBjb250cm9sXHJcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gdGFyZ2V0IC0gVG9nZ2xlIHRhcmdldFxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGVmZmVjdCAtIEFuaW1hdGlvbiBlZmZlY3RcclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBbZHVyYXRpb249MF0gLSBBbmltYXRpb24gZHVyYXRpb25cclxuICAgICAqL1xyXG4gICAgcHJpdi5oaWRlID0gZnVuY3Rpb24gKGNvbnRyb2wsIHRhcmdldCwgZWZmZWN0LCBkdXJhdGlvbikge1xyXG4gICAgICAgIC8vIFNldCBkZWZhdWx0IGR1cmF0aW9uIGlmIG5vdCBwcm92aWRlZFxyXG4gICAgICAgIGlmIChkdXJhdGlvbiA9PT0gdW5kZWZpbmVkKVxyXG4gICAgICAgICAgICBkdXJhdGlvbiA9IDA7XHJcblxyXG4gICAgICAgIC8vIEFuaW1hdGlvbiBlZmZlY3RcclxuICAgICAgICBpZiAoZWZmZWN0ID09PSBwcml2LmVmZmVjdC5GQURFKSB7XHJcbiAgICAgICAgICAgICQodGFyZ2V0KS5mYWRlT3V0KGR1cmF0aW9uLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAkKGNvbnRyb2wpXHJcbiAgICAgICAgICAgICAgICAgICAgLnJlbW92ZUNsYXNzKFwiaXMtYWN0aXZlXCIpXHJcbiAgICAgICAgICAgICAgICAgICAgLmF0dHIoXCJhcmlhLWV4cGFuZGVkXCIsIGZhbHNlKTtcclxuXHJcbiAgICAgICAgICAgICAgICAkKHRhcmdldClcclxuICAgICAgICAgICAgICAgICAgICAucmVtb3ZlQ2xhc3MoXCJpcy1hY3RpdmVcIilcclxuICAgICAgICAgICAgICAgICAgICAuYXR0cihcImFyaWEtaGlkZGVuXCIsIHRydWUpXHJcbiAgICAgICAgICAgICAgICAgICAgLnJlbW92ZUF0dHIoXCJzdHlsZVwiKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSBlbHNlIGlmIChlZmZlY3QgPT09IHByaXYuZWZmZWN0LlNMSURFKSB7XHJcbiAgICAgICAgICAgICQodGFyZ2V0KS5zbGlkZVVwKGR1cmF0aW9uLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAkKGNvbnRyb2wpXHJcbiAgICAgICAgICAgICAgICAgICAgLnJlbW92ZUNsYXNzKFwiaXMtYWN0aXZlXCIpXHJcbiAgICAgICAgICAgICAgICAgICAgLmF0dHIoXCJhcmlhLWV4cGFuZGVkXCIsIGZhbHNlKTtcclxuXHJcbiAgICAgICAgICAgICAgICAkKHRhcmdldClcclxuICAgICAgICAgICAgICAgICAgICAucmVtb3ZlQ2xhc3MoXCJpcy1hY3RpdmVcIilcclxuICAgICAgICAgICAgICAgICAgICAuYXR0cihcImFyaWEtaGlkZGVuXCIsIHRydWUpXHJcbiAgICAgICAgICAgICAgICAgICAgLnJlbW92ZUF0dHIoXCJzdHlsZVwiKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDaGVjayBpZiBhbiBlbGVtZW50IGlzIHZpc2libGVcclxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBlbGVtZW50IC0gVGhlIGVsZW1lbnRcclxuICAgICAqIEByZXR1cm5zIHtib29sZWFufVxyXG4gICAgICovXHJcbiAgICBwcml2LmlzVmlzaWJsZSA9IGZ1bmN0aW9uIChlbGVtZW50KSB7XHJcbiAgICAgICAgcmV0dXJuICQoZWxlbWVudCkuaGFzQ2xhc3MoXCJpcy1hY3RpdmVcIik7XHJcbiAgICB9O1xyXG5cclxuXHJcbiAgICAvKipcclxuICAgICAqIENvbGxhcHNlIGFsbFxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbGxhcHNlQ29udGFpbmVyIC0gVGhlIHBhcmVudCBlbGVtZW50IG9mIGFsbCBhY2NvcmRpb24gZWxlbWVudHNcclxuICAgICAqL1xyXG4gICAgcHViLmNvbGxhcHNlQWxsID0gZnVuY3Rpb24gKGNvbGxhcHNlQ29udGFpbmVyKSB7XHJcbiAgICAgICAgJChjb2xsYXBzZUNvbnRhaW5lcikuZmluZChcIi5jb2xsYXBzZV9fY29udHJvbFwiKS5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIGNvbnRyb2wgPSB0aGlzO1xyXG4gICAgICAgICAgICB2YXIgdGFyZ2V0ID0gJChjb250cm9sKS5kYXRhKFwidG9nZ2xlLXRhcmdldFwiKTtcclxuXHJcbiAgICAgICAgICAgIHByaXYuaGlkZShjb250cm9sLCB0YXJnZXQsIFwic2xpZGVcIiwgMCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuXHJcbiAgICAvKipcclxuICAgICAqIFB1YmxpYyBzaG93XHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gY29udHJvbCAtIFRoZSBjb2xsYXBzZSBjb250cm9sIGVsZW1lbnRcclxuICAgICAqL1xyXG4gICAgcHViLnNob3cgPSBmdW5jdGlvbiAoY29udHJvbCkge1xyXG4gICAgICAgIHZhciB0YXJnZXQgPSAkKGNvbnRyb2wpLmRhdGEoXCJ0b2dnbGUtdGFyZ2V0XCIpO1xyXG4gICAgICAgIHZhciBlZmZlY3QgPSAkKGNvbnRyb2wpLmRhdGEoXCJ0b2dnbGUtZWZmZWN0XCIpO1xyXG4gICAgICAgIHZhciBkdXJhdGlvbiA9ICQoY29udHJvbCkuZGF0YShcInRvZ2dsZS1kdXJhdGlvblwiKTtcclxuICAgICAgICB2YXIgdG9nZ2xlRnVuY3Rpb24gPSAkKGNvbnRyb2wpLmRhdGEoXCJ0b2dnbGUtZnVuY3Rpb25cIik7XHJcblxyXG4gICAgICAgIHZhciBpc1Zpc2libGUgPSBwcml2LmlzVmlzaWJsZSh0YXJnZXQpO1xyXG5cclxuICAgICAgICBpZiAoIWlzVmlzaWJsZSlcclxuICAgICAgICAgICAgcHJpdi5zaG93KGNvbnRyb2wsIHRhcmdldCwgZWZmZWN0LCBkdXJhdGlvbiwgdG9nZ2xlRnVuY3Rpb24pO1xyXG4gICAgfTtcclxuXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBQdWJsaWMgaGlkZVxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbnRyb2wgLSBUaGUgY29sbGFwc2UgY29udHJvbCBlbGVtZW50XHJcbiAgICAgKi9cclxuICAgIHB1Yi5oaWRlID0gZnVuY3Rpb24gKGNvbnRyb2wpIHtcclxuICAgICAgICB2YXIgdGFyZ2V0ID0gJChjb250cm9sKS5kYXRhKFwidG9nZ2xlLXRhcmdldFwiKTtcclxuICAgICAgICB2YXIgZWZmZWN0ID0gJChjb250cm9sKS5kYXRhKFwidG9nZ2xlLWVmZmVjdFwiKTtcclxuICAgICAgICB2YXIgZHVyYXRpb24gPSAkKGNvbnRyb2wpLmRhdGEoXCJ0b2dnbGUtZHVyYXRpb25cIik7XHJcblxyXG4gICAgICAgIHZhciBpc1Zpc2libGUgPSBwcml2LmlzVmlzaWJsZSh0YXJnZXQpO1xyXG5cclxuICAgICAgICBpZiAoaXNWaXNpYmxlKVxyXG4gICAgICAgICAgICBwcml2LmhpZGUoY29udHJvbCwgdGFyZ2V0LCBlZmZlY3QsIGR1cmF0aW9uKTtcclxuICAgIH07XHJcblxyXG5cclxuICAgIC8vIEluaXRpYWxpemUgbW9kdWxlXHJcbiAgICAkKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBwcml2LmluaXQoKTtcclxuICAgIH0pO1xyXG5cclxuXHJcbiAgICAvLyBFeHBvc2UgcHVibGljIG1ldGhvZHNcclxuICAgIHJldHVybiBwdWI7XHJcblxyXG59KSgpO1xyXG4iLCIkKGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICB2YXIgTXlPcmRlcnMgPSBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICAgIHZhciBvcmRlclBhZ2VzID0gMDtcclxuICAgICAgICB2YXIgbXlPcmRlcnNQYWdlID0gMDtcclxuXHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIGhpZGVMb2FkZXIoKSB7XHJcbiAgICAgICAgICAgICQoJy5sb2FkZXItd3JhcHBlcicpLmhpZGUoKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIHNob3dMb2FkZXIoKSB7XHJcbiAgICAgICAgICAgICQoJy5sb2FkZXItd3JhcHBlcicpLnNob3coKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHZhciBsb2FkTXlPcmRlcnMgPSBmdW5jdGlvbiAoaW5kZXgpIHtcclxuICAgICAgICAgICAgc2hvd0xvYWRlcigpO1xyXG4gICAgICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICAgICAgZGF0YVR5cGU6IFwianNvblwiLFxyXG4gICAgICAgICAgICAgICAgdXJsOiBcIi9hcGkvbXlvcmRlcnMvZ2V0bXlvcmRlcnNcIixcclxuICAgICAgICAgICAgICAgIHR5cGU6IFwiZ2V0XCIsXHJcbiAgICAgICAgICAgICAgICBkYXRhOiB7IGluZGV4OiBpbmRleCB9LFxyXG4gICAgICAgICAgICAgICAgY2FjaGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICBoaWRlTG9hZGVyKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRlbXBsYXRlID0gJC50ZW1wbGF0ZXMoXCIjbXktb3JkZXJzLXRlbXBsYXRlXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGh0bWxPdXRwdXQgPSB0ZW1wbGF0ZS5yZW5kZXIoZGF0YSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiLmpzLW15LW9yZGVyc1wiKS5hcHBlbmQoaHRtbE91dHB1dCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiLmpzLW15LW9yZGVycy10ZXh0XCIpLnJlbW92ZUNsYXNzKFwiaGlkZGVuXCIpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vaW5kZXggc3RhcnRzIGF0IDBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpbmRleCA8IG9yZGVyUGFnZXMgLSAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJChcIi5qcy1zaG93LW1vcmUtb3JkZXJzXCIpLnJlbW92ZUNsYXNzKFwiaGlkZGVuXCIpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJChcIi5qcy1zaG93LW1vcmUtb3JkZXJzXCIpLmFkZENsYXNzKFwiaGlkZGVuXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHZhciBsb2FkUGFnZXNDb3VudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgc2hvd0xvYWRlcigpO1xyXG4gICAgICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICAgICAgZGF0YVR5cGU6IFwianNvblwiLFxyXG4gICAgICAgICAgICAgICAgdXJsOiBcIi9hcGkvbXlvcmRlcnMvZ2V0bXlvcmRlcnNwYWdlc1wiLFxyXG4gICAgICAgICAgICAgICAgdHlwZTogXCJnZXRcIixcclxuICAgICAgICAgICAgICAgIGRhdGE6IHt9LFxyXG4gICAgICAgICAgICAgICAgY2FjaGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICBoaWRlTG9hZGVyKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgb3JkZXJQYWdlcyA9IGRhdGE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9hZE15T3JkZXJzKDApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgICQoXCIuanMtc2hvdy1tb3JlLW9yZGVyc1wiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgbXlPcmRlcnNQYWdlID0gbXlPcmRlcnNQYWdlICsgMTtcclxuICAgICAgICAgICAgbG9hZE15T3JkZXJzKG15T3JkZXJzUGFnZSk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGluaXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGlmICgkKFwiLmpzLW15LW9yZGVyc1wiKS5sZW5ndGgpIHtcclxuICAgICAgICAgICAgICAgICAgICBsb2FkUGFnZXNDb3VudCgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgIH07XHJcblxyXG4gICAgJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBteW9yZGVycyA9IG5ldyBNeU9yZGVycygpO1xyXG4gICAgICAgIG15b3JkZXJzLmluaXQoKTtcclxuICAgIH0pO1xyXG5cclxufSk7IiwiLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAvL1xyXG4vLyAjTUFDSElORVxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIC8vXHJcblxyXG5cclxud2luZG93LmZhcm1kYXkgPSB3aW5kb3cuZmFybWRheSB8fCB7fTtcclxuZmFybWRheS5tb2R1bGVzID0gZmFybWRheS5tb2R1bGVzIHx8IHt9O1xyXG5cclxuXHJcbmZhcm1kYXkubW9kdWxlcy5tYWNoaW5lID0gKGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBwcml2ID0ge307XHJcblxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUHJpdmF0ZSBpbml0aWFsaXphdGlvbiBtZXRob2RcclxuICAgICAqL1xyXG4gICAgcHJpdi5pbml0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmICgkKFwiLmpzLXBhZ2UtaWRlbnRpZmllci1tYWNoaW5lXCIpLmxlbmd0aCkge1xyXG4gICAgICAgICAgICAkKFwiLm1vZGFsLXRyaWdnZXJcIikuY2xpY2soZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgbW9kYWxJZCA9IGV2ZW50LnRhcmdldC5kYXRhc2V0LnRyaWdnZXJNb2RhbDtcclxuICAgICAgICAgICAgICAgICQoXCIjXCIgKyBtb2RhbElkKS5yZW1vdmVDbGFzcyhcImhpZGRlblwiKTtcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAkKFwiI2FkZC1tYWNoaW5lLWNhbmNlbFwiKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgdXJsID0gJChcIi5qcy1wYWdlLWlkZW50aWZpZXItbWFjaGluZVwiKS5kYXRhKFwidXJsXCIpO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmICh1cmwgIT09IFwiXCIgJiYgdXJsICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICBsb2NhdGlvbi5ocmVmID0gdXJsO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuXHJcbiAgICAvLyBJbml0aWFsaXplIG1vZHVsZVxyXG4gICAgJChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcHJpdi5pbml0KCk7XHJcbiAgICB9KTtcclxuXHJcbn0pKCk7XHJcbiIsIi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gLy9cclxuLy8gI0NPTlRBQ1RcclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAvL1xyXG5cclxuXHJcbndpbmRvdy5mYXJtZGF5ID0gd2luZG93LmZhcm1kYXkgfHwge307XHJcbmZhcm1kYXkubW9kdWxlcyA9IGZhcm1kYXkubW9kdWxlcyB8fCB7fTtcclxuXHJcblxyXG5mYXJtZGF5Lm1vZHVsZXMuY29udGFjdCA9IChmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgcHJpdiA9IHt9O1xyXG5cclxuXHJcbiAgICAvKipcclxuICAgICAqIFByaXZhdGUgaW5pdGlhbGl6YXRpb24gbWV0aG9kXHJcbiAgICAgKi9cclxuICAgIHByaXYuaW5pdCA9IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICAgICAgaWYgKCQoXCIuanMtcGFnZS1pZGVudGlmaWVyLWNvbnRhY3RcIikubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnZhbGlkXCIsIChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgICAgICAgICAvL2UucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInF1ZXJ5XCIpLmZvY3VzKCk7XHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICB9KSgpLCB0cnVlKTtcclxuXHJcbiAgICAgICAgICAgIHZhciBzaXRlVXNlck5hbWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNpdGVVc2VySWRcIikudmFsdWU7XHJcbiAgICAgICAgICAgIGlmICghc2l0ZVVzZXJOYW1lIHx8IHNpdGVVc2VyTmFtZS50cmltKCkubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICQoXCIud29ya3Nob3Atc3RhclwiKS5jbGljayhmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICAgICAgICAgIGlmICghc2l0ZVVzZXJOYW1lIHx8ICFzaXRlVXNlck5hbWUudHJpbSgpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICQoXCJzZWN0aW9uLmxtX19jb250ZW50c1wiKS5hZGRDbGFzcyhcImluYWN0aXZlLXZpZXdcIik7XHJcbiAgICAgICAgICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIHVybDogXCIvYXBpL3dvcmtzaG9wL3NldHN0YXJcIixcclxuICAgICAgICAgICAgICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNpdHk6IGV2ZW50LnRhcmdldC5kYXRhc2V0LmNpdHksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld1N0YXJWYWx1ZTogZXZlbnQudGFyZ2V0LmRhdGFzZXQuc3RhciA9PT0gXCJUcnVlXCIgPyBcIkZhbHNlXCIgOiBcIlRydWVcIlxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YVR5cGU6IFwianNvblwiLFxyXG4gICAgICAgICAgICAgICAgICAgIGNhY2hlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoXCIubWFya2VkXCIpLnRvZ2dsZUNsYXNzKFwibWFya2VkXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKGV2ZW50LnRhcmdldCkudG9nZ2xlQ2xhc3MoXCJtYXJrZWRcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSkuZmFpbChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbG9jYXRpb24ucmVsb2FkKCk7XHJcbiAgICAgICAgICAgICAgICB9KS5hbHdheXMoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCJzZWN0aW9uLmxtX19jb250ZW50c1wiKS5yZW1vdmVDbGFzcyhcImluYWN0aXZlLXZpZXdcIik7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcblxyXG4gICAgLy8gSW5pdGlhbGl6ZSBtb2R1bGVcclxuICAgICQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHByaXYuaW5pdCgpO1xyXG4gICAgfSk7XHJcblxyXG59KSgpO1xyXG4iLCIvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIC8vXHJcbi8vICNTVEFSVFBBR0VcclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAvL1xyXG5cclxuXHJcbndpbmRvdy5mYXJtZGF5ID0gd2luZG93LmZhcm1kYXkgfHwge307XHJcbmZhcm1kYXkubW9kdWxlcyA9IGZhcm1kYXkubW9kdWxlcyB8fCB7fTtcclxuXHJcblxyXG5mYXJtZGF5Lm1vZHVsZXMuc3RhcnRwYWdlID0gKGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBwcml2ID0ge307XHJcblxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUHJpdmF0ZSBpbml0aWFsaXphdGlvbiBtZXRob2RcclxuICAgICAqL1xyXG4gICAgcHJpdi5pbml0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmICgkKFwiLmpzLXBhZ2UtaWRlbnRpZmllci1zdGFydHBhZ2VcIikubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICQoXCIuY3VzdG9tZXItbnVtYmVyXCIpLm9uKFwiaW5wdXRcIiwgZnVuY3Rpb24gKGV2dCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKGV2dC53aGljaCA8IDQ4IHx8IGV2dC53aGljaCA+IDU3KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgdmFyIG9yZ25yID0gJCh0aGlzKS5jbG9zZXN0KFwidHJcIikuZGF0YShcIm9yZ251bWJlclwiKTtcclxuICAgICAgICAgICAgICAgIHZhciB1cGRhdGVCdXR0b24gPSAkKFwiLnVwZGF0ZS1idXR0b25bZGF0YS1mb3JtLWlkPSdvcmdfXCIgKyBvcmduciArIFwiJ11cIik7XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKCQodGhpcykudmFsKCkpIHtcclxuICAgICAgICAgICAgICAgICAgICB1cGRhdGVCdXR0b24ucmVtb3ZlQ2xhc3MoXCJpbnZpc2libGVcIik7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZUJ1dHRvbi5hZGRDbGFzcyhcImludmlzaWJsZVwiKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICB2YXIgdGFibGUgPSAkKFwiI2N1c3RvbWVyLXRhYmxlXCIpO1xyXG4gICAgICAgICAgICB2YXIgZGVsZXRlVGFibGVSb3dXaXRoQW5pbWF0aW9uID0gZnVuY3Rpb24gKGNlbGxCdXR0b24pIHtcclxuICAgICAgICAgICAgICAgIHZhciByb3cgPSAkKGNlbGxCdXR0b24pLmNsb3Nlc3QoXCJ0clwiKS5hZGRDbGFzcyhcImRlbGV0ZWRcIikuY2hpbGRyZW4oXCJ0ZFwiKTtcclxuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICQocm93KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAuYW5pbWF0ZSh7IHBhZGRpbmdUb3A6IDAsIHBhZGRpbmdCb3R0b206IDAgfSwgNTAwKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAud3JhcElubmVyKFwiPGRpdiAvPlwiKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAuY2hpbGRyZW4oKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAuc2xpZGVVcCg1MDAsIGZ1bmN0aW9uICgpIHsgJCh0aGlzKS5jbG9zZXN0KFwidHJcIikucmVtb3ZlKCk7IH0pO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAxMDAwKTtcclxuICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgICQoXCIudXBkYXRlLWJ1dHRvblwiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uIChldikge1xyXG4gICAgICAgICAgICAgICAgdmFyIGJ1dHRvbiA9IGV2LnRhcmdldDtcclxuICAgICAgICAgICAgICAgIHZhciBmb3JtSWQgPSAkKGV2LnRhcmdldCkuZGF0YShcImZvcm1JZFwiKTtcclxuICAgICAgICAgICAgICAgIHZhciBmb3JtID0gJChcIiNcIiArIGZvcm1JZCk7XHJcbiAgICAgICAgICAgICAgICB2YXIgb3JnTnVtYmVyID0gZm9ybS5kYXRhKFwib3JnbnVtYmVyXCIpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGlzQWN0aXZlID0gZm9ybS5maW5kKFwiLmFjdGl2ZS1jdXN0b21lclwiKS5pcyhcIjpjaGVja2VkXCIpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGN1c3RvbWVyTnVtYmVyID0gZm9ybS5maW5kKFwiLmN1c3RvbWVyLW51bWJlclwiKVswXS52YWx1ZTtcclxuICAgICAgICAgICAgICAgIGlmICgoIWN1c3RvbWVyTnVtYmVyIHx8IGN1c3RvbWVyTnVtYmVyLnRyaW0oKS5sZW5ndGggPT09IDApICYmIGlzQWN0aXZlPT10cnVlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIHRhYmxlLmNzcyhcInBvaW50ZXItZXZlbnRzXCIsIFwibm9uZVwiKTtcclxuICAgICAgICAgICAgICAgIHRhYmxlLmNzcyhcIm9wYWNpdHlcIiwgMC42KTtcclxuXHJcbiAgICAgICAgICAgICAgICB2YXIgdHIgPSAkKFwiI29yZ19cIiArIG9yZ051bWJlcik7XHJcbiAgICAgICAgICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIHVybDogXCIvYXBpL2N1c3RvbWVyLXN1cHBvcnQvdXBkYXRlXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBvcmdhbml6YXRpb25OdW1iZXI6IG9yZ051bWJlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgY3VzdG9tZXJOdW1iZXI6IGN1c3RvbWVyTnVtYmVyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpc0FjdGl2ZTogaXNBY3RpdmVcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uICh4aHIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGFibGUuY3NzKFwicG9pbnRlci1ldmVudHNcIiwgXCJhdXRvXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0YWJsZS5jc3MoXCJvcGFjaXR5XCIsIDEpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coeGhyKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHhoci5lcnJvcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHIuY3NzKFwib3V0bGluZVwiLCBcInRoaW4gc29saWQgb3JhbmdlXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHIuZmluZChcIi5pbnB1dC1lcnJcIikuaHRtbCh4aHIuZXJyb3IpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0ci5maW5kKFwiLmlucHV0LWVyclwiKS5odG1sKFwiXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0ci5jc3MoXCJvdXRsaW5lXCIsIFwibm9uZVwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlVGFibGVSb3dXaXRoQW5pbWF0aW9uKGJ1dHRvbik7XHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKHhociwgdGV4dFN0YXR1cywgZXJyb3JUaHJvd24pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGFibGUuY3NzKFwicG9pbnRlci1ldmVudHNcIiwgXCJhdXRvXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0YWJsZS5jc3MoXCJvcGFjaXR5XCIsIDEpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0ci5maW5kKFwiLmlucHV0LWVyclwiKS5odG1sKFwiXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKFwiI2Vycm9yLW1lc3NhZ2VcIikuY3NzKFwiZGlzcGxheVwiLCBcImJsb2NrXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YVR5cGU6IFwianNvblwiXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAkKFwiLmFjdGl2ZS1jdXN0b21lclwiKS5vbihcImNoYW5nZVwiLCBmdW5jdGlvbiAoZXYpIHtcclxuICAgICAgICAgICAgICAgIHZhciBhY3RpdmUgPSAkKGV2LnRhcmdldCkuaXMoXCI6Y2hlY2tlZFwiKTtcclxuICAgICAgICAgICAgICAgIHZhciBvcmdOdW1iZXIgPSAkKGV2LnRhcmdldCkuZGF0YShcIm9yZ251bWJlclwiKTtcclxuICAgICAgICAgICAgICAgIHZhciB1cGRhdGVCdXR0b24gPSAkKFwiLnVwZGF0ZS1idXR0b25bZGF0YS1mb3JtLWlkPSdvcmdfXCIgKyBvcmdOdW1iZXIgKyBcIiddXCIpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGN1c3RvbWVyTnVtYmVyID0gJChcIiNhY3RpdmVfXCIgKyBvcmdOdW1iZXIpLmZpbmQoXCIuY3VzdG9tZXItbnVtYmVyXCIpLnZhbCgpO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmIChhY3RpdmUpIHtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiI2luYWN0aXZlX1wiICsgb3JnTnVtYmVyKS5jc3MoXCJkaXNwbGF5XCIsIFwibm9uZVwiKTtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiI2FjdGl2ZV9cIiArIG9yZ051bWJlcikuY3NzKFwiZGlzcGxheVwiLCBcImJsb2NrXCIpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBpZiAoIWN1c3RvbWVyTnVtYmVyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHVwZGF0ZUJ1dHRvbi5hZGRDbGFzcyhcImludmlzaWJsZVwiKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIjaW5hY3RpdmVfXCIgKyBvcmdOdW1iZXIpLmNzcyhcImRpc3BsYXlcIiwgXCJibG9ja1wiKTtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiI2FjdGl2ZV9cIiArIG9yZ051bWJlcikuY3NzKFwiZGlzcGxheVwiLCBcIm5vbmVcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgdXBkYXRlQnV0dG9uLnJlbW92ZUNsYXNzKFwiaW52aXNpYmxlXCIpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuXHJcbiAgICAvLyBJbml0aWFsaXplIG1vZHVsZVxyXG4gICAgJChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcHJpdi5pbml0KCk7XHJcbiAgICB9KTtcclxuXHJcbn0pKCk7XHJcbiIsIi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gLy9cclxuLy8gI0xPR0lOXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gLy9cclxuXHJcbndpbmRvdy5mYXJtZGF5ID0gd2luZG93LmZhcm1kYXkgfHwge307XHJcbmZhcm1kYXkubW9kdWxlcyA9IGZhcm1kYXkubW9kdWxlcyB8fCB7fTtcclxuXHJcblxyXG5mYXJtZGF5Lm1vZHVsZXMubG9naW4gPSAoZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIHByaXYgPSB7fTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFByaXZhdGUgaW5pdGlhbGl6YXRpb24gbWV0aG9kXHJcbiAgICAgKi9cclxuICAgIHByaXYuaW5pdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBwcml2LnN0YXJ0KCk7XHJcbiAgICAgICAgcHJpdi52YWxpZGF0ZSgpO1xyXG4gICAgfTtcclxuXHJcbiAgICBwcml2LnN0YXJ0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmICgkKFwiLmpzLXBhZ2UtaWRlbnRpZmllci1sb2dpblwiKS5sZW5ndGgpIHtcclxuICAgICAgICAgICAgdmFyIGh0bWxFbCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaHRtbFwiKTtcclxuXHJcbiAgICAgICAgICAgIGlmIChodG1sRWwubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgaHRtbEVsWzBdLmNsYXNzTmFtZSArPSBcIiBpYW0taHRtbFwiO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAkKFwiI2VtYWlsXCIpLm9uKFwiaW52YWxpZFwiLFxyXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhldmVudCk7XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIiNlcnJvci1tZXNzYWdlLWxhYmVsXCIpLnJlbW92ZUNsYXNzKFwiaGlkZGVuXCIpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBwcml2LnZhbGlkYXRlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIFxyXG4gICAgICAgICQoXCIjY2hhbmdlUGFzc3dvcmRTdWJtaXRcIikuY2xpY2soZnVuY3Rpb24gKGUpIHsgICAgICAgICAgICBcclxuXHJcbiAgICAgICAgICAgIHZhciB2YWxpZGF0b3IgPSAkKFwiI2NoYW5nZVBhc3N3b3JkRm9ybVwiKS52YWxpZGF0ZSh7XHJcbiAgICAgICAgICAgICAgICBydWxlczoge1xyXG4gICAgICAgICAgICAgICAgICAgIG5ld1Bhc3N3b3JkOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZWdleDogL15bQS1aYS16MC05XFxkPSFcXC1ALiEjJCUmKCkrPXt9W1xcOjsnPD4/LFxcXV9cXC8qXSokL1xyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0eXBlTmV3UGFzc3dvcmQ6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZXF1YWxUbzogXCIjbmV3UGFzc3dvcmRcIlxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlczoge1xyXG4gICAgICAgICAgICAgICAgICAgIG5ld1Bhc3N3b3JkOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiBcIkR1IG3DpXN0ZSBmeWxsYSBpIGFsbGEgZsOkbHRlbiBmw7ZyIGF0dCBrdW5uYSBieXRhIGzDtnNlbm9yZC5cIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVnZXg6IFwiTMO2c2Vub3JkZXQgw6RyIGludGUgYXYgcsOkdHQgdHlwLiBTZSBrcmF2IGbDtnIgbnl0dCBsw7ZzZW5vcmQuXCJcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHJldHlwZU5ld1Bhc3N3b3JkOiBcIkzDtnNlbm9yZGVuIHN0w6RtbWVyIGludGUgw7Z2ZXJlbnMgbWVkIHZhcmFuZHJhLiBWw6RubGlnZW4gZsO2cnPDtmsgaWdlbi5cIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGVycm9yTGFiZWxDb250YWluZXI6IFwiLmpzLXZhbGlkYXRlLWVycm9yXCIsXHJcbiAgICAgICAgICAgICAgICB3cmFwcGVyOiBcImxpXCJcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGlmICh2YWxpZGF0b3IuZm9ybSgpKSB7XHJcbiAgICAgICAgICAgICAgICAkKFwiI2NoYW5nZVBhc3N3b3JkU3VibWl0XCIpLnN1Ym1pdCgpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJGYWlsZWRcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChcIiNyZXNldFBhc3N3b3JkU3VibWl0XCIpLmNsaWNrKGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoZSk7XHJcblxyXG4gICAgICAgICAgICB2YXIgdmFsaWRhdG9yID0gJChcIiNsb2dpbmZvcm1cIikudmFsaWRhdGUoe1xyXG4gICAgICAgICAgICAgICAgcnVsZXM6IHtcclxuICAgICAgICAgICAgICAgICAgICBwYXNzd29yZDoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVnZXg6IC9eW0EtWmEtejAtOVxcZD0hXFwtQC4hIyQlJigpKz17fVtcXDo7Jzw+PyxcXF1fXFwvKl0qJC8gICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIGNvbmZpcm1wYXNzd29yZDoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBlcXVhbFRvOiBcIiNwYXNzd29yZFwiXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIG1lc3NhZ2VzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFzc3dvcmQ6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IFwiRHUgbcOlc3RlIGZ5bGxhIGkgYWxsYSBmw6RsdGVuIGbDtnIgYXR0IGt1bm5hIGJ5dGEgbMO2c2Vub3JkLlwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZWdleDogXCJMw7ZzZW5vcmRldCDDpHIgaW50ZSBhdiByw6R0dCB0eXAuIFNlIGtyYXYgZsO2ciBueXR0IGzDtnNlbm9yZC5cIlxyXG4gICAgICAgICAgICAgICAgICAgIH0sICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICBjb25maXJtcGFzc3dvcmQ6IFwiTMO2c2Vub3JkZW4gc3TDpG1tZXIgaW50ZSDDtnZlcmVucyBtZWQgdmFyYW5kcmEuIFbDpG5saWdlbiBmw7Zyc8O2ayBpZ2VuLlwiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgZXJyb3JMYWJlbENvbnRhaW5lcjogXCIuanMtdmFsaWRhdGUtZXJyb3JcIixcclxuICAgICAgICAgICAgICAgIHdyYXBwZXI6IFwibGlcIlxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgaWYgKHZhbGlkYXRvci5mb3JtKCkpIHtcclxuICAgICAgICAgICAgICAgICQoXCIjbG9naW5mb3JtXCIpLnN1Ym1pdCgpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJGYWlsZWRcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH07ICAgIFxyXG5cclxuICAgIC8vIEluaXRpYWxpemUgbW9kdWxlXHJcbiAgICAkKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBwcml2LmluaXQoKTtcclxuICAgIH0pO1xyXG5cclxufSkoKTtcclxuIiwiLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAvL1xyXG4vLyAjT1JHQU5JWkFUSU9OXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gLy9cclxuXHJcblxyXG53aW5kb3cuZmFybWRheSA9IHdpbmRvdy5mYXJtZGF5IHx8IHt9O1xyXG5mYXJtZGF5Lm1vZHVsZXMgPSBmYXJtZGF5Lm1vZHVsZXMgfHwge307XHJcblxyXG5cclxuZmFybWRheS5tb2R1bGVzLm9yZ2FuaXphdGlvbiA9IChmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgcHJpdiA9IHt9O1xyXG5cclxuXHJcbiAgICAvKipcclxuICAgICAqIFByaXZhdGUgaW5pdGlhbGl6YXRpb24gbWV0aG9kXHJcbiAgICAgKi9cclxuICAgIHByaXYuaW5pdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgaXNEZWJ1ZztcclxuXHJcbiAgICAgICAgaWYgKCQoXCIuanMtcGFnZS1pZGVudGlmaWVyLW9yZ2FuaXphdGlvbi1hZGQtdXNlclwiKS5sZW5ndGgpIHtcclxuICAgICAgICAgICAgaXNEZWJ1ZyA9ICQoXCIuanMtcGFnZS1pZGVudGlmaWVyLW9yZ2FuaXphdGlvbi1hZGQtdXNlclwiKS5kYXRhKFwiZGVidWdcIik7XHJcblxyXG4gICAgICAgICAgICBpZiAoaXNEZWJ1Zykge1xyXG4gICAgICAgICAgICAgICAgJC5nZXRTY3JpcHQoXCIvU3RhdGljL2Rpc3Qvc2NyaXB0cy9hZGRVc2VyVG9Pcmdhbml6YXRpb24uanNcIik7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAkLmdldFNjcmlwdChcIi9TdGF0aWMvZGlzdC9zY3JpcHRzL2FkZFVzZXJUb09yZ2FuaXphdGlvbi5wcm9kdWN0aW9uLmpzXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoJChcIi5qcy1wYWdlLWlkZW50aWZpZXItb3JnYW5pemF0aW9uLWhhbmRsZS11c2VyXCIpLmxlbmd0aCkge1xyXG4gICAgICAgICAgICBpc0RlYnVnID0gJChcIi5qcy1wYWdlLWlkZW50aWZpZXItb3JnYW5pemF0aW9uLWhhbmRsZS11c2VyXCIpLmRhdGEoXCJkZWJ1Z1wiKTtcclxuXHJcbiAgICAgICAgICAgIGlmIChpc0RlYnVnKSB7XHJcbiAgICAgICAgICAgICAgICAkLmdldFNjcmlwdChcIi9TdGF0aWMvZGlzdC9zY3JpcHRzL2hhbmRsZU9yZ2FuaXphdGlvblVzZXIuanNcIik7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAkLmdldFNjcmlwdChcIi9TdGF0aWMvZGlzdC9zY3JpcHRzL2hhbmRsZU9yZ2FuaXphdGlvblVzZXIucHJvZHVjdGlvbi5qc1wiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKCQoXCIuanMtcGFnZS1pZGVudGlmaWVyLW9yZ2FuaXphdGlvbi1kZWxpdmVyeS1hZGRyZXNzXCIpLmxlbmd0aCkge1xyXG4gICAgICAgICAgICBmdW5jdGlvbiB2YWxpZGF0ZVNpbG9zKCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGlzVmFsaWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgJChcImlucHV0LnNpbG8tbnVtYmVyXCIpLmVhY2goZnVuY3Rpb24gKGlkeCwgaXRlbSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciAkaXRlbSA9ICQoaXRlbSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIG51bWJlclZhbHVlID0gJGl0ZW0udmFsKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHZhbGlkID0gISFudW1iZXJWYWx1ZSAmJiBudW1iZXJWYWx1ZS50b1N0cmluZygpICE9PSBcIlwiO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICghdmFsaWQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaXNWYWxpZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkaXRlbS5hZGRDbGFzcyhcImVycm9yXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoJGl0ZW0uaGFzQ2xhc3MoXCJlcnJvclwiKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkaXRlbS5yZW1vdmVDbGFzcyhcImVycm9yXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGlzVmFsaWQ7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICQoXCJ1bC5lcnJvcnMtbGlzdCBsaVwiKS5lYWNoKGZ1bmN0aW9uIChpZHgsIGl0ZW0pIHtcclxuICAgICAgICAgICAgICAgICQoaXRlbSkuaGlkZSgpO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIGlmIChqUXVlcnkudmFsaWRhdG9yKSB7XHJcbiAgICAgICAgICAgICAgICAkKCcjZWRpdERlbGl2ZXJ5QWRkcmVzcycpLnZhbGlkYXRlKHtcclxuICAgICAgICAgICAgICAgICAgICBpZ25vcmU6IFtdLFxyXG4gICAgICAgICAgICAgICAgICAgIGVycm9yRWxlbWVudENsYXNzOiAnZXJyb3InLFxyXG4gICAgICAgICAgICAgICAgICAgIGVycm9yQ2xhc3M6ICdlcnJvci1pdGVtJyxcclxuICAgICAgICAgICAgICAgICAgICBlcnJvckVsZW1lbnQ6ICdzcGFuJyxcclxuICAgICAgICAgICAgICAgICAgICBydWxlczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBBZHJlc3NTdHJlZXQ6IFwicmVxdWlyZWRcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgWmlwQ29kZToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB6aXBDb2RlOiB0cnVlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFBsYWNlOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBTaWxvc05hbWU6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwic3ViSXRlbVJlcXVpcmVkXCI6IHZhbGlkYXRlU2lsb3NcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgTW9iaWxlTnVtYmVyOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vYmlsZVNFOiB0cnVlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIEFkcmVzc1N0cmVldDogXCJEdSBtw6VzdGUgYW5nZSBHYXR1YWRyZXNzXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFppcENvZGU6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB3aW5kb3dbXCJ2YWxpZGF0aW9uTWVzc2FnZVwiXS56aXBDb2RlLnJlcXVpcmVkLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgemlwQ29kZTogd2luZG93W1widmFsaWRhdGlvbk1lc3NhZ2VcIl0uemlwQ29kZS52YWxpZFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBQbGFjZToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IFwiRHUgbcOlc3RlIGFuZ2UgT3J0XCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgU2lsb3NMaXN0OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE1vYmlsZU51bWJlcjoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHdpbmRvd1tcInZhbGlkYXRpb25NZXNzYWdlXCJdLm1vYmlsZVNFLnJlcXVpcmVkLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9iaWxlU0U6IHdpbmRvd1tcInZhbGlkYXRpb25NZXNzYWdlXCJdLm1vYmlsZVNFLnZhbGlkXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIGhpZ2hsaWdodDogZnVuY3Rpb24gKGVsZW1lbnQsIGVycm9yQ2xhc3MsIHZhbGlkQ2xhc3MpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJqcXVlcnkgdmFsaWRhdGlvblwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJCgndWwuZXJyb3JzLWxpc3QnKS5zaG93KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJ2xpI2xpXycgKyAkKGVsZW1lbnQpLmF0dHIoJ2lkJykpLnNob3coKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJChlbGVtZW50KS5hZGRDbGFzcyh0aGlzLnNldHRpbmdzLmVycm9yRWxlbWVudENsYXNzKS5yZW1vdmVDbGFzcyhlcnJvckNsYXNzKTtcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIHVuaGlnaGxpZ2h0OiBmdW5jdGlvbiAoZWxlbWVudCwgZXJyb3JDbGFzcywgdmFsaWRDbGFzcykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoJChlbGVtZW50KS5oYXNDbGFzcyhcInNpbG8tbnVtYmVyXCIpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgJChlbGVtZW50KS5yZW1vdmVDbGFzcyh0aGlzLnNldHRpbmdzLmVycm9yRWxlbWVudENsYXNzKS5yZW1vdmVDbGFzcyhlcnJvckNsYXNzKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJCgnbGkjbGlfJyArICQoZWxlbWVudCkuYXR0cignaWQnKSkuaGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoJCgndWwuZXJyb3JzLWxpc3QnKS5maW5kKCdsaVtpZF49XCJsaVwiXScpLmlzKFwiOnZpc2libGVcIikgPT09IGZhbHNlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCd1bC5lcnJvcnMtbGlzdCcpLmhpZGUoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcblxyXG4gICAgLy8gSW5pdGlhbGl6ZSBtb2R1bGVcclxuICAgICQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHByaXYuaW5pdCgpO1xyXG4gICAgfSk7XHJcblxyXG59KSgpO1xyXG4iLCIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxyXG4gICAgI01ZLUFHUkVFTUVOVFNcclxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuXHJcblxyXG53aW5kb3cuZ3JvID0gd2luZG93LmdybyB8fCB7fTtcclxuZ3JvLm1vZHVsZXMgPSBncm8ubW9kdWxlcyB8fCB7fTtcclxuXHJcblxyXG5ncm8ubW9kdWxlcy5teUFncmVlbWVudHMgPSAoZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIHByaXYgPSB7fTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFByaXZhdGUgaW5pdGlhbGl6YXRpb24gbWV0aG9kXHJcbiAgICAgKi9cclxuICAgIHByaXYuaW5pdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAvLyBhZ3JlZW1lbnQtZGF0YSBpcyB1c2VkIGZvciBhZ3JlZW1lbnRzLlxyXG4gICAgICAgIC8vJChkb2N1bWVudCkub24oXCJjaGFuZ2VcIiwgXCIuanMtc2hvdy1hZ3JlZW1lbnQtdHlwZVwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgLy8gICAgdmFyIHZhbHVlID0gJCh0aGlzKS52YWwoKTtcclxuICAgICAgICAvLyAgICBjb25zb2xlLmxvZyh2YWx1ZSk7XHJcbiAgICAgICAgLy99KTtcclxuXHJcbiAgICAgICAgLy8kKGRvY3VtZW50KS5vbihcImNoYW5nZVwiLCBcIi5qcy1zaG93LWhhcnZlc3QteWVhclwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgLy8gICAgdmFyIHZhbHVlID0gJCh0aGlzKS52YWwoKTtcclxuICAgICAgICAvLyAgICBjb25zb2xlLmxvZyh2YWx1ZSk7XHJcbiAgICAgICAgLy99KTtcclxuXHJcbiAgICB9O1xyXG5cclxuICAgIC8vIEluaXRpYWxpemUgbW9kdWxlXHJcbiAgICAkKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBwcml2LmluaXQoKTtcclxuICAgIH0pO1xyXG5cclxufSkoKTtcclxuIiwiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcclxuICAgICNNQU5BR0UtRUxFQ1RFRFxyXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5cclxuXHJcbndpbmRvdy5ncm8gPSB3aW5kb3cuZ3JvIHx8IHt9O1xyXG5ncm8ubW9kdWxlcyA9IGdyby5tb2R1bGVzIHx8IHt9O1xyXG5cclxuXHJcbmdyby5tb2R1bGVzLm1hbmFnZUVsZWN0ZWQgPSAoZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIHByaXYgPSB7fTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIFByaXZhdGUgaW5pdGlhbGl6YXRpb24gbWV0aG9kXHJcbiAgICAgKi9cclxuICAgIHByaXYuaW5pdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAoJChcIi5qcy1hZGQtZWxlY3RlZFwiKS5sZW5ndGgpIHtcclxuICAgICAgICAgICAgcHJpdi5hZGRFbWFpbFZhbGlkYXRpb24oKTtcclxuICAgICAgICAgICAgcHJpdi5hZGRDcmVhdGVVc2VyVmFsaWRhdGlvbigpO1xyXG4gICAgICAgICAgICBwcml2LmJpbmRFdmVudHMoKTtcclxuICAgICAgICAgICAgcHJpdi5sb2FkQWxsRGlzdHJpY3RzKCk7XHJcbiAgICAgICAgICAgIHByaXYubG9hZEVsZWN0ZWRGb3JEaXN0cmljdCg0MDApO1xyXG4gICAgICAgICAgICBwcml2LmxvYWREaXN0cmljdHNGb3JFbGVjdGVkKDApO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBCaW5kIGV2ZW50c1xyXG4gICAgICovXHJcbiAgICBwcml2LmJpbmRFdmVudHMgPSBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIENoZWNrIHVzZXJcclxuICAgICAgICAgKi9cclxuICAgICAgICAkKGRvY3VtZW50KS5vbihcInN1Ym1pdFwiLCBcIiNqcy1tZS1jaGVjay11c2VyXCIsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgdmFyIGZvcm0gPSAkKHRoaXMpLmNsb3Nlc3QoXCJmb3JtXCIpO1xyXG4gICAgICAgICAgICBpZiAoZm9ybS52YWxpZCgpKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgZm9ybUFycmF5ID0gZm9ybS5zZXJpYWxpemVBcnJheSgpO1xyXG4gICAgICAgICAgICAgICAgJChcIi5qcy1hbGxyZWFkeS1lbGVjdGVkXCIpLmFkZENsYXNzKFwiaGlkZGVuXCIpO1xyXG4gICAgICAgICAgICAgICAgJChcIi5qcy1leGlzdGluZy11c2VyLWluZm9ybWF0aW9uXCIpLmhpZGUoKTtcclxuICAgICAgICAgICAgICAgICQoXCIuanMtY3JlYXRlLXVzZXJcIikuaGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgICAgICAgICBkYXRhVHlwZTogXCJqc29uXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgdXJsOiBcIi9hcGkvbWFuYWdlLWVsZWN0ZWQvZmluZC1leGlzdGluZ1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwicG9zdFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IGZvcm1BcnJheSxcclxuICAgICAgICAgICAgICAgICAgICBjYWNoZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24oZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YSAmJiAhJC5pc0VtcHR5T2JqZWN0KGRhdGEpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5pc0VsZWN0ZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiLmpzLWFsbHJlYWR5LWVsZWN0ZWRcIikucmVtb3ZlQ2xhc3MoXCJoaWRkZW5cIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCIuanMtZXhpc3RpbmctdXNlci1pbmZvcm1hdGlvblwiKS5zbGlkZURvd24oXCJmYXN0XCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCIuanMtdXNlci1uYW1lXCIpLnRleHQoZGF0YS5maXJzdE5hbWUgKyBcIiBcIiArIGRhdGEubGFzdE5hbWUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCIuanMtdXNlci10ZWxlcGhvbmVcIikudGV4dChkYXRhLnRlbGVwaG9uZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJChcIi5qcy11c2VyLW1vYmlsZVwiKS50ZXh0KGRhdGEubW9iaWxlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiLmpzLXVzZXItZW1haWxcIikudGV4dChkYXRhLmVtYWlsKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyQoXCIuanMtdXNlci1zc25cIikudGV4dChkYXRhLnNzbik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJChcIi5qcy11c2VyLWVtYWlsXCIpLnByb3AoXCJocmVmXCIsIFwibWFpbHRvOlwiICsgZGF0YS5lbWFpbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiLmpzLWNyZWF0ZS11c2VyXCIpLnNsaWRlRG93bihcImZhc3RcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBDcmVhdGUgbmV3IHVzZXJcclxuICAgICAgICAgKi9cclxuICAgICAgICAkKGRvY3VtZW50KS5vbihcInN1Ym1pdFwiLCBcIi5qcy1jcmVhdGUtdXNlclwiLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIHZhciBmb3JtID0gJCh0aGlzKS5jbG9zZXN0KFwiZm9ybVwiKTtcclxuICAgICAgICAgICAgaWYgKGZvcm0udmFsaWQoKSkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGZvcm1BcnJheSA9IGZvcm0uc2VyaWFsaXplQXJyYXkoKTtcclxuICAgICAgICAgICAgICAgIHZhciBlbWFpbCA9ICQoXCIjanMtbWUtY2hlY2stdXNlciAuanMtYWRkLW93bmVyLWVwb3N0XCIpO1xyXG4gICAgICAgICAgICAgICAgZm9ybUFycmF5LnB1c2goe1xyXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiZW1haWxcIixcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZW1haWwudmFsKClcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgICAgICAgICBkYXRhVHlwZTogXCJqc29uXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgdXJsOiBcIi9hcGkvbWFuYWdlLWVsZWN0ZWQvYWRkLW5ldy11c2VyXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJwb3N0XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YTogZm9ybUFycmF5LFxyXG4gICAgICAgICAgICAgICAgICAgIGNhY2hlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YSAmJiAhJC5pc0VtcHR5T2JqZWN0KGRhdGEpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiLmpzLXVzZXItbmFtZVwiKS50ZXh0KGRhdGEuZmlyc3ROYW1lICsgXCIgXCIgKyBkYXRhLmxhc3ROYW1lKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCIuanMtdXNlci10ZWxlcGhvbmVcIikudGV4dChkYXRhLnRlbGVwaG9uZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiLmpzLXVzZXItbW9iaWxlXCIpLnRleHQoZGF0YS5tb2JpbGUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJChcIi5qcy11c2VyLWVtYWlsXCIpLnRleHQoZGF0YS5lbWFpbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiLmpzLXVzZXItZW1haWxcIikucHJvcChcImhyZWZcIiwgXCJtYWlsdG86XCIgKyBkYXRhLmVtYWlsKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCIuanMtY2hlY2stdXNlclwiKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiLmpzLWNyZWF0ZS11c2VyXCIpLmhpZGUoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCIuanMtYWRkLWRpc3RyaWN0XCIpLnNob3coKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoZW1haWwpLnZhbChcIlwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoZm9ybSkudHJpZ2dlcihcInJlc2V0XCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBGaWx0ZXIgdXNlciBsaXN0XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgJChcIi5qcy1maWx0ZXItdXNlci1saXN0XCIpLm9uKFwiaW5wdXQgY2hhbmdlXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIGxpc3QgPSAkKHRoaXMpLmRhdGEoXCJsaXN0XCIpO1xyXG4gICAgICAgICAgICB2YXIgbm9IaXRzID0gJCh0aGlzKS5kYXRhKFwibm8taGl0c1wiKTtcclxuICAgICAgICAgICAgdmFyIHF1ZXJ5ID0gJCh0aGlzKS52YWwoKTtcclxuICAgICAgICAgICAgdmFyIGFueU1hdGNoID0gZmFsc2U7XHJcbiAgICAgICAgICAgIHZhciBhbnlGaWx0ZXJlZCA9IGZhbHNlO1xyXG5cclxuICAgICAgICAgICAgJChcIi5qcy1zZWFyY2gtcXVlcnlcIikudGV4dChxdWVyeSk7XHJcblxyXG4gICAgICAgICAgICAvLyBDb2xsYXBzZSBhbGwgYWNjb3JkaW9uIGVsZW1lbnRzIGJlZm9yZSBmaWx0ZXJpbmdcclxuICAgICAgICAgICAgZmFybWRheS5tb2R1bGVzLnRvZ2dsZS5jb2xsYXBzZUFsbChsaXN0KTtcclxuXHJcbiAgICAgICAgICAgIC8vIExvb3AgdGhyb3VnaCBldmVyeSB0YWJsZSByb3cgYW5kIHNlYXJjaCBmb3IgcXVlcnlcclxuICAgICAgICAgICAgJChsaXN0KS5maW5kKFwiYnV0dG9uOm5vdChcIiArIG5vSGl0cyArIFwiKVwiKS5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHZhciBjb250cm9sID0gJCh0aGlzKTtcclxuICAgICAgICAgICAgICAgIHZhciBjb250cm9sRGF0YSA9IGNvbnRyb2wudGV4dCgpLnRvTG93ZXJDYXNlKCk7XHJcbiAgICAgICAgICAgICAgICB2YXIgcXVlcnlGb3VuZCA9IGNvbnRyb2xEYXRhLmluZGV4T2YocXVlcnkudG9Mb3dlckNhc2UoKSkgIT09IC0xO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmIChxdWVyeUZvdW5kKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYW55TWF0Y2ggPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2wuc2hvdygpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBjb250cm9sLmhpZGUoKTtcclxuICAgICAgICAgICAgICAgICAgICBhbnlGaWx0ZXJlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgLy8gU2hvdyBvciBoaWRlIG5vIGhpdHMgbWVzc2FnZVxyXG4gICAgICAgICAgICBhbnlNYXRjaCA/ICQobm9IaXRzKS5oaWRlKCkgOiAkKG5vSGl0cykuc2hvdygpO1xyXG5cclxuICAgICAgICAgICAgLy8gU2hvdyBvciBoaWRlIHNob3cgbGlzdCBidXR0b25cclxuICAgICAgICAgICAgYW55RmlsdGVyZWQgPyAkKFwiLmpzLXVzZXItbGlzdC1zaG93LWFsbC1idG5cIikuY3NzKFwiZGlzcGxheVwiLCBcImlubGluZS1ibG9ja1wiKSA6ICQoXCIuanMtdXNlci1saXN0LXNob3ctYWxsLWJ0blwiKS5oaWRlKCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFNob3cgZW50aXJlIHVzZXIgbGlzdFxyXG4gICAgICAgICAqL1xyXG4gICAgICAgICQoXCIuanMtdXNlci1saXN0LXNob3ctYWxsLWJ0blwiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgdmFyIHF1ZXJ5RWxlbWVudCA9ICQodGhpcykuZGF0YShcInF1ZXJ5LWVsZW1lbnRcIik7XHJcblxyXG4gICAgICAgICAgICAkKHF1ZXJ5RWxlbWVudCkudmFsKFwiXCIpLnRyaWdnZXIoXCJjaGFuZ2VcIik7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFNob3cgYWRkIGVsZWN0ZWQgZm9ybVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgICQoXCIuanMtc2hvdy1hZGQtZWxlY3RlZC1mb3JtXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAkKFwiLmpzLWFkZC1lbGVjdGVkXCIpLnNsaWRlVG9nZ2xlKFwiZmFzdFwiKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQ2xvc2UgYWRkIGVsZWN0ZWQgZm9ybVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgICQoXCIuanMtY2FuY2VsLWFkZC1lbGVjdGVkXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAkKFwiLmpzLWFkZC1lbGVjdGVkXCIpLnNsaWRlVXAoXCJmYXN0XCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICQoXCIuanMtZXhpc3RpbmctdXNlci1pbmZvcm1hdGlvblwiKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAkKFwiLmpzLWFkZC1kaXN0cmljdFwiKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAkKFwiLmpzLWNyZWF0ZS11c2VyXCIpLmhpZGUoKTtcclxuICAgICAgICAgICAgICAgICQoXCIuanMtY2hlY2stdXNlclwiKS5zaG93KCk7XHJcbiAgICAgICAgICAgICAgICAkKFwiLmpzLWFkZC1vd25lci1lcG9zdFwiKS52YWwoXCJcIik7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBDYW5jZWwgYWRkIGV4aXN0aW5nIHVzZXIgYXMgZWxlY3RlZFxyXG4gICAgICAgICAqL1xyXG4gICAgICAgICQoXCIuanMtY2FuY2VsLWFkZC1lbGVjdGVkLWV4aXN0aW5nLXVzZXJcIikub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICQoXCIuanMtZXhpc3RpbmctdXNlci1pbmZvcm1hdGlvblwiKS5zbGlkZVVwKFwiZmFzdFwiKTtcclxuICAgICAgICAgICAgJChcIi5qcy1hZGQtb3duZXItZXBvc3RcIikudmFsKFwiXCIpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBBZGQgZWxlY3RlZFxyXG4gICAgICAgICAqL1xyXG4gICAgICAgICQoXCIuanMtYWRkLWFzLWVsZWN0ZWRcIikub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICQoXCIuanMtY2hlY2stdXNlclwiKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICQoXCIuanMtYWRkLWRpc3RyaWN0XCIpLnNob3coKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogU2F2ZSBlbGVjdGVkXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgJChcIi5qcy1zYXZlLWFzLWVsZWN0ZWRcIikub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciBlbWFpbCA9ICQoXCIjanMtdXNlci1hZGQtZW1haWxcIik7XHJcbiAgICAgICAgICAgIHZhciBmb3JtID0gJCh0aGlzKS5jbG9zZXN0KFwiZm9ybVwiKTtcclxuICAgICAgICAgICAgdmFyIGRpc3RyaWN0cyA9IGZvcm0uc2VyaWFsaXplQXJyYXkoKTtcclxuICAgICAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgICAgIGRhdGFUeXBlOiBcImpzb25cIixcclxuICAgICAgICAgICAgICAgIHVybDogXCIvYXBpL21hbmFnZS1lbGVjdGVkL2FkZC1leGlzdGluZy11c2VyXCIsXHJcbiAgICAgICAgICAgICAgICB0eXBlOiBcInBvc3RcIixcclxuICAgICAgICAgICAgICAgIGRhdGE6IHtcclxuICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogZW1haWwudGV4dCgpLFxyXG4gICAgICAgICAgICAgICAgICAgIGRpc3RyaWN0czogZGlzdHJpY3RzXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgY2FjaGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKFwiLmpzLWFkZC1lbGVjdGVkXCIpLnNsaWRlVXAoXCJmYXN0XCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCIuanMtZXhpc3RpbmctdXNlci1pbmZvcm1hdGlvblwiKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiLmpzLWFkZC1kaXN0cmljdFwiKS5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGlzdHJpY3QgPSAkKFwiI2pzLWFsbC1kaXN0cmljdHNcIikudmFsKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcml2LmxvYWRFbGVjdGVkRm9yRGlzdHJpY3QocGFyc2VJbnQoZGlzdHJpY3QpKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCIuanMtYWRkLW93bmVyLWVwb3N0XCIpLnZhbChcIlwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCIuanMtY2hlY2stdXNlclwiKS5zaG93KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChkb2N1bWVudCkub24oXCJjbGlja1wiLCBcIi5qcy1zYXZlLWVkaXQtZWxlY3RlZFwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciBmb3JtID0gJCh0aGlzKS5jbG9zZXN0KFwiZm9ybVwiKTtcclxuICAgICAgICAgICAgdmFyIGVtYWlsID0gJChmb3JtKS5maW5kKFwiLmpzLXVzZXItYWRkLWVtYWlsXCIpLnRleHQoKTtcclxuICAgICAgICAgICAgdmFyIGRpc3RyaWN0cyA9IGZvcm0uc2VyaWFsaXplQXJyYXkoKTtcclxuICAgICAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgICAgIGRhdGFUeXBlOiBcImpzb25cIixcclxuICAgICAgICAgICAgICAgIHVybDogXCIvYXBpL21hbmFnZS1lbGVjdGVkL2FkZC1leGlzdGluZy11c2VyXCIsXHJcbiAgICAgICAgICAgICAgICB0eXBlOiBcInBvc3RcIixcclxuICAgICAgICAgICAgICAgIGRhdGE6IHtcclxuICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogZW1haWwsXHJcbiAgICAgICAgICAgICAgICAgICAgZGlzdHJpY3RzOiBkaXN0cmljdHNcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBjYWNoZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkaXN0cmljdCA9ICQoXCIjanMtYWxsLWRpc3RyaWN0c1wiKS52YWwoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJpdi5sb2FkRWxlY3RlZEZvckRpc3RyaWN0KHBhcnNlSW50KGRpc3RyaWN0KSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkKGRvY3VtZW50KS5vbihcImNsaWNrXCIsIFwiLmpzLWNhbmNlbC1lZGl0LWVsZWN0ZWRcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBmYXJtZGF5Lm1vZHVsZXMudG9nZ2xlLmNvbGxhcHNlQWxsKFwiLmpzLXVzZXItbGlzdFwiKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChkb2N1bWVudCkub24oXCJjbGlja1wiLCBcIi5qcy1kZWxldGUtZWxlY3RlZFwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciB1c2VyID0gJCh0aGlzKS5kYXRhKFwidXNlclwiKTtcclxuICAgICAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgICAgIGRhdGFUeXBlOiBcImpzb25cIixcclxuICAgICAgICAgICAgICAgIHVybDogXCIvYXBpL21hbmFnZS1lbGVjdGVkL2RlbGV0ZS1lbGVjdGVkXCIsXHJcbiAgICAgICAgICAgICAgICB0eXBlOiBcInBvc3RcIixcclxuICAgICAgICAgICAgICAgIGRhdGE6IHtcclxuICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlclxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGNhY2hlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGRpc3RyaWN0ID0gJChcIiNqcy1hbGwtZGlzdHJpY3RzXCIpLnZhbCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcml2LmxvYWRFbGVjdGVkRm9yRGlzdHJpY3QocGFyc2VJbnQoZGlzdHJpY3QpKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEdvIGJhY2sgZnJvbSBhZGQgZGlzdHJpY3QgdG8gc2VsZWN0IHVzZXJcclxuICAgICAgICAgKi9cclxuICAgICAgICAkKFwiLmpzLWJhY2stZnJvbS1hZGQtZGlzdHJpY3QtdG8tc2VsZWN0LXVzZXJcIikub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICQoXCIuanMtYWRkLWRpc3RyaWN0XCIpLmhpZGUoKTtcclxuICAgICAgICAgICAgJChcIi5qcy1jaGVjay11c2VyXCIpLnNob3coKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQWRkIGRpc3RyaWN0IHRvIHVzZXJcclxuICAgICAgICAgKi9cclxuICAgICAgICAkKGRvY3VtZW50KS5vbihcImNsaWNrXCIsIFwiLmpzLWFkZC1kaXN0cmljdC10by1lbGVjdGVkXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIGRpc3RyaWN0Q29udGFpbmVyID0gJCh0aGlzKS5jbG9zZXN0KFwiLmpzLWRpc3RyaWN0LWNvbnRhaW5lclwiKTtcclxuICAgICAgICAgICAgdmFyIGRpc3RyaWN0U2VsZWN0ID0gZGlzdHJpY3RDb250YWluZXIuZmluZChcIi5qcy1kaXN0cmljdC1kcm9wZG93blwiKTtcclxuICAgICAgICAgICAgdmFyIGRpc3RyaWN0VGFyZ2V0ID0gZGlzdHJpY3RDb250YWluZXIuZmluZChcIi5qcy1kaXN0cmljdC1saXN0XCIpO1xyXG4gICAgICAgICAgICB2YXIgc2VsZWN0ZWQgPSBkaXN0cmljdFNlbGVjdC5maW5kKFwiOnNlbGVjdGVkXCIpO1xyXG4gICAgICAgICAgICB2YXIgZW1wdHlNZXNzYWdlID0gZGlzdHJpY3RDb250YWluZXIuZmluZChcIi5qcy1uby1kaXN0cmljdC1jaG9zZW5cIik7XHJcbiAgICAgICAgICAgIGlmIChzZWxlY3RlZC52YWwoKSkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGRhdGEgPSB7IE5hbWU6IHNlbGVjdGVkLnZhbCgpLCBSZWFkUm9sZUlkOiBzZWxlY3RlZC5kYXRhKFwicmVhZFwiKSwgV3JpdGVSb2xlSWQ6IHNlbGVjdGVkLmRhdGEoXCJ3cml0ZVwiKSwgV3JpdGVSaWdodHM6IGZhbHNlIH07XHJcbiAgICAgICAgICAgICAgICB2YXIgdGVtcGxhdGUgPSAkLnRlbXBsYXRlcyhcIiNlbGVjdGVkLWRpc3RyaWN0LXRlbXBsYXRlXCIpO1xyXG4gICAgICAgICAgICAgICAgJChzZWxlY3RlZCkucmVtb3ZlKCk7XHJcbiAgICAgICAgICAgICAgICAkKGRpc3RyaWN0VGFyZ2V0KS5hcHBlbmQodGVtcGxhdGUucmVuZGVyKGRhdGEpKTtcclxuICAgICAgICAgICAgICAgIGVtcHR5TWVzc2FnZS5hZGRDbGFzcyhcImlzLWhpZGRlblwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBEZWxldGUgZGlzdHJpY3QgZnJvbSB1c2VyXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgJChkb2N1bWVudCkub24oXCJjbGlja1wiLCBcIi5qcy1kZWxldGUtZGlzdHJpY3RcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgZGVsID0gJCh0aGlzKTtcclxuICAgICAgICAgICAgdmFyIGRhdGEgPSB7IE5hbWU6IGRlbC5kYXRhKFwibmFtZVwiKSwgUmVhZFJvbGVJZDogZGVsLmRhdGEoXCJyZWFkXCIpLCBXcml0ZVJvbGVJZDogZGVsLmRhdGEoXCJ3cml0ZVwiKSB9O1xyXG4gICAgICAgICAgICB2YXIgdGVtcGxhdGUgPSAkLnRlbXBsYXRlcyhcIiNlbGVjdGVkLWFkZC1kaXN0cmljdC1kcm9wZG93bi10ZW1wbGF0ZVwiKTtcclxuICAgICAgICAgICAgdmFyIGRpc3RyaWN0Q29udGFpbmVyID0gJCh0aGlzKS5jbG9zZXN0KFwiLmpzLWRpc3RyaWN0LWNvbnRhaW5lclwiKTtcclxuICAgICAgICAgICAgdmFyIGRpc3RyaWN0U2VsZWN0ID0gZGlzdHJpY3RDb250YWluZXIuZmluZChcIi5qcy1kaXN0cmljdC1kcm9wZG93blwiKTtcclxuICAgICAgICAgICAgdmFyIGxpc3QgPSBkaXN0cmljdENvbnRhaW5lci5maW5kKFwiLmpzLWRpc3RyaWN0LWxpc3RcIik7XHJcblxyXG4gICAgICAgICAgICBkaXN0cmljdFNlbGVjdC5hcHBlbmQodGVtcGxhdGUucmVuZGVyKGRhdGEpKTtcclxuXHJcbiAgICAgICAgICAgICQodGhpcykuY2xvc2VzdChcImxpXCIpLnJlbW92ZSgpO1xyXG5cclxuICAgICAgICAgICAgdmFyIGRpc3RyaWN0Q291bnQgPSBsaXN0LmNoaWxkcmVuKCkubGVuZ3RoO1xyXG5cclxuICAgICAgICAgICAgaWYgKGRpc3RyaWN0Q291bnQgPT09IDApIHtcclxuICAgICAgICAgICAgICAgIHZhciBlbXB0eU1lc3NhZ2UgPSBkaXN0cmljdENvbnRhaW5lci5maW5kKFwiLmpzLW5vLWRpc3RyaWN0LWNob3NlblwiKTtcclxuICAgICAgICAgICAgICAgIGVtcHR5TWVzc2FnZS5yZW1vdmVDbGFzcyhcImlzLWhpZGRlblwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBTaG93IGFsbCBkaXN0cmljdHNcclxuICAgICAgICAgKi9cclxuICAgICAgICAkKGRvY3VtZW50KS5vbihcImNoYW5nZVwiLCBcIiNqcy1hbGwtZGlzdHJpY3RzXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIGlkID0gJCh0aGlzKS52YWwoKTtcclxuICAgICAgICAgICAgcHJpdi5sb2FkRWxlY3RlZEZvckRpc3RyaWN0KHBhcnNlSW50KGlkKSk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEV4cGFuZCBlbGVjdGVkIGluIGxpc3RcclxuICAgICAgICAgKi9cclxuICAgICAgICAkKGRvY3VtZW50KS5vbihcImNsaWNrXCIsIFwiLmpzLWV4cGFuZC1lbGVjdGVkXCIsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgdmFyIHJvdyA9ICQodGhpcykuY2xvc2VzdChcIi5qcy1lbGVjdGVkXCIpO1xyXG4gICAgICAgICAgICB2YXIgZGV0YWlscyA9IHJvdy5maW5kKFwiLmpzLWVsZWN0ZWQtZGV0YWlsc1wiKTtcclxuICAgICAgICAgICAgdmFyIHNob3dEZXRhaWxzID0gcm93LmZpbmQoXCIuc2hvdy1kZXRhaWxzXCIpO1xyXG4gICAgICAgICAgICB2YXIgaGlkZURldGFpbHMgPSByb3cuZmluZChcIi5qcy1oaWRlLWRldGFpbHNcIik7XHJcbiAgICAgICAgICAgIHZhciBpc0V4cGFuZGVkID0gZGV0YWlscy5oYXNDbGFzcyhcImlzLWV4cGFuZGVkXCIpO1xyXG5cclxuICAgICAgICAgICAgaWYgKGlzRXhwYW5kZWQpIHtcclxuICAgICAgICAgICAgICAgIGRldGFpbHMucmVtb3ZlQ2xhc3MoXCJpcy1leHBhbmRlZFwiKS5zbGlkZVVwKFwiZmFzdFwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgc2hvd0RldGFpbHMuYXR0cihcImNvbHNwYW5cIiwgXCIxXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJvdy5yZW1vdmVDbGFzcyhcImlzLWV4cGFuZGVkXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGhpZGVEZXRhaWxzLnNob3coKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcm93LmFkZENsYXNzKFwiaXMtZXhwYW5kZWRcIik7XHJcbiAgICAgICAgICAgICAgICBoaWRlRGV0YWlscy5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICBzaG93RGV0YWlscy5hdHRyKFwiY29sc3BhblwiLCBcIjJcIik7XHJcbiAgICAgICAgICAgICAgICBkZXRhaWxzLmFkZENsYXNzKFwiaXMtZXhwYW5kZWRcIikuc2xpZGVEb3duKFwiZmFzdFwiKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICB9KTtcclxuICAgICAgXHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgICAqIEZpbGwgZHJvcGRvd24gYW5kIGxpc3Qgd2l0aCBkYXRhIHdoZW4gcHJlc3NpbmcgdG9nZ2xlXHJcbiAgICAgICAqL1xyXG4gICAgICAgICQoZG9jdW1lbnQpLm9uKFwiY2xpY2tcIiwgXCIuanMtZWxlY3RlZC10b2dnbGVcIiwgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICBpZiAoJCh0aGlzKS5oYXNDbGFzcyhcImlzLWFjdGl2ZVwiKSkgeyBcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHZhciB1c2VySWQgPSAkKHRoaXMpLmRhdGEoXCJ1c2VyXCIpO1xyXG4gICAgICAgICAgICAgICAgJC53aGVuKHByaXYubG9hZERpc3RyaWN0c0ZvckVsZWN0ZWRBamF4KHVzZXJJZCksIHByaXYubG9hZERpc3RyaWN0c0ZvckVsZWN0ZWRBamF4KDApKS5kb25lKGZ1bmN0aW9uICh1c2VyLCBhbGwpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgZGlzdHJpY3RDb250YWluZXIgPSAkKFwiI2VsZWN0ZWQtY29udGFpbmVyLVwiICt1c2VySWQpO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBkcm9wRG93biA9IGRpc3RyaWN0Q29udGFpbmVyLmZpbmQoXCIuanMtZGlzdHJpY3QtZHJvcGRvd25cIik7XHJcbiAgICAgICAgICAgICAgICAgICAgJChkcm9wRG93bikuZW1wdHkoKTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgbGlzdCA9IGRpc3RyaWN0Q29udGFpbmVyLmZpbmQoXCIuanMtZGlzdHJpY3QtbGlzdFwiKTtcclxuICAgICAgICAgICAgICAgICAgICAkKGxpc3QpLmVtcHR5KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGZpbHRlcmVkRGlzdHJpY3RzID0gJC5ncmVwKGFsbFswXSwgZnVuY3Rpb24gKGVsLCBpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBzYXZlID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJC5lYWNoKHVzZXJbMF0sIGZ1bmN0aW9uKHVpLCBkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZWwuTmFtZSA9PSBkLk5hbWUpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2F2ZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNhdmU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGRyb3Bkb3duVGVtcGxhdGUgPSAkLnRlbXBsYXRlcyhcIiNlbGVjdGVkLWFkZC1kaXN0cmljdC1kcm9wZG93bi10ZW1wbGF0ZVwiKTtcclxuICAgICAgICAgICAgICAgICAgICAkLmVhY2goZmlsdGVyZWREaXN0cmljdHMsIGZ1bmN0aW9uIChpLCB0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoZHJvcERvd24pLmFwcGVuZChkcm9wZG93blRlbXBsYXRlLnJlbmRlcih0KSk7XHJcbn0pO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICB2YXIgbGlzdFRlbXBsYXRlID0gJC50ZW1wbGF0ZXMoXCIjZWxlY3RlZC1kaXN0cmljdC10ZW1wbGF0ZVwiKTtcclxuICAgICAgICAgICAgICAgICAgICAkLmVhY2godXNlclswXSwgZnVuY3Rpb24gKGksIHQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJChsaXN0KS5hcHBlbmQobGlzdFRlbXBsYXRlLnJlbmRlcih0KSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHZhciBkaXN0cmljdENvdW50ID0gdXNlclswXS5sZW5ndGg7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGVtcHR5TWVzc2FnZSA9IGRpc3RyaWN0Q29udGFpbmVyLmZpbmQoXCIuanMtbm8tZGlzdHJpY3QtY2hvc2VuXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChkaXN0cmljdENvdW50ID09PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVtcHR5TWVzc2FnZS5yZW1vdmVDbGFzcyhcImlzLWhpZGRlblwiKTtcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbXB0eU1lc3NhZ2UuYWRkQ2xhc3MoXCJpcy1oaWRkZW5cIik7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgLyoqXHJcbiAqIExvYWQgYWxsIGRpc3RyaWN0cyBhbmQgZmlsbCBmaWx0ZXIgZHJvcGRvd25cclxuICovXHJcblxyXG4gICAgcHJpdi5sb2FkQWxsRGlzdHJpY3RzID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQoXCIjanMtYWRkLWRpc3RyaWN0c1wiKS5lbXB0eSgpO1xyXG4gICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgIGRhdGFUeXBlOiBcImpzb25cIixcclxuICAgICAgICAgICAgdXJsOiBcIi9hcGkvbWFuYWdlLWVsZWN0ZWQvZGlzdHJpY3QtZ3JvdXBzXCIsXHJcbiAgICAgICAgICAgIHR5cGU6IFwiZ2V0XCIsXHJcbiAgICAgICAgICAgIGNhY2hlOiBmYWxzZSxcclxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgIGlmIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRlbXBsYXRlID0gJC50ZW1wbGF0ZXMoXCIjZWxlY3RlZC1hbGwtZGlzdHJpY3QtZHJvcGRvd24tdGVtcGxhdGVcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgJC5lYWNoKGRhdGEsIGZ1bmN0aW9uIChpLCB0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoXCIjanMtYWxsLWRpc3RyaWN0c1wiKS5hcHBlbmQodGVtcGxhdGUucmVuZGVyKHQpKTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIExvYWQgZGlzdHJpY3RzIGZvciBlbGVjdGVkIGFuZCBmaWxsIGFkZCBkcm9wZG93blxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGlkXHJcbiAgICAgKi9cclxuICAgIHByaXYubG9hZERpc3RyaWN0c0ZvckVsZWN0ZWQgPSBmdW5jdGlvbiAoaWQpIHtcclxuICAgICAgICAkKFwiI2pzLWFkZC1kaXN0cmljdC1kcm9wZG93blwiKS5lbXB0eSgpO1xyXG4gICAgICAgICQud2hlbihwcml2LmxvYWREaXN0cmljdHNGb3JFbGVjdGVkQWpheChpZCkpLmRvbmUoZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgaWYgKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgIHZhciB0ZW1wbGF0ZSA9ICQudGVtcGxhdGVzKFwiI2VsZWN0ZWQtYWRkLWRpc3RyaWN0LWRyb3Bkb3duLXRlbXBsYXRlXCIpO1xyXG4gICAgICAgICAgICAgICAgJC5lYWNoKGRhdGEsIGZ1bmN0aW9uIChpLCB0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIiNqcy1hZGQtZGlzdHJpY3QtZHJvcGRvd25cIikuYXBwZW5kKHRlbXBsYXRlLnJlbmRlcih0KSk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIExvYWQgZWxlY3RlZCBmb3IgZGlzdHJpY3QgYW5kIGZpbGwgdGhlIGxpc3RcclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBpZFxyXG4gICAgICovXHJcbiAgICBwcml2LmxvYWRFbGVjdGVkRm9yRGlzdHJpY3QgPSBmdW5jdGlvbiAoaWQpIHtcclxuICAgICAgICAkKFwiLmpzLXVzZXItbGlzdFwiKS5lbXB0eSgpO1xyXG4gICAgICAgICQud2hlbihwcml2LmxvYWRFbGVjdGVkRm9yRGlzdHJpY3RBamF4KGlkKSkuZG9uZShmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICBpZiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgdmFyIHRlbXBsYXRlID0gJC50ZW1wbGF0ZXMoXCIjZWxlY3RlZC11c2VyLWxpc3QtdGVtcGxhdGVcIik7XHJcbiAgICAgICAgICAgICAgICAkLmVhY2goZGF0YSwgZnVuY3Rpb24gKGluZGV4LCB1c2VyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdXNlci5JbmRleCA9IGluZGV4O1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIuanMtdXNlci1saXN0XCIpLmFwcGVuZCh0ZW1wbGF0ZS5yZW5kZXIodXNlcikpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH07XHJcblxyXG4gICAgcHJpdi5sb2FkRGlzdHJpY3RzRm9yRWxlY3RlZEFqYXggPSBmdW5jdGlvbiAoaWQpIHtcclxuICAgICAgICByZXR1cm4gJC5hamF4KHtcclxuICAgICAgICAgICAgZGF0YVR5cGU6IFwianNvblwiLFxyXG4gICAgICAgICAgICB1cmw6IFwiL2FwaS9tYW5hZ2UtZWxlY3RlZC9kaXN0cmljdHMtZm9yLWVsZWN0ZWRcIixcclxuICAgICAgICAgICAgdHlwZTogXCJwb3N0XCIsXHJcbiAgICAgICAgICAgIGRhdGE6IHsgaWQ6IGlkIH0sXHJcbiAgICAgICAgICAgIGNhY2hlOiBmYWxzZSxcclxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbiAgICBwcml2LmxvYWRFbGVjdGVkRm9yRGlzdHJpY3RBamF4ID0gZnVuY3Rpb24gKGlkKSB7XHJcbiAgICAgICAgcmV0dXJuICQuYWpheCh7XHJcbiAgICAgICAgICAgIGRhdGFUeXBlOiBcImpzb25cIixcclxuICAgICAgICAgICAgdXJsOiBcIi9hcGkvbWFuYWdlLWVsZWN0ZWQvZWxlY3RlZC1kaXN0cmljdFwiLFxyXG4gICAgICAgICAgICB0eXBlOiBcInBvc3RcIixcclxuICAgICAgICAgICAgZGF0YTogeyBpZDogaWQgfSxcclxuICAgICAgICAgICAgY2FjaGU6IGZhbHNlLFxyXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIHByaXYuYWRkQ3JlYXRlVXNlclZhbGlkYXRpb24gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKCQoKS52YWxpZGF0ZSkge1xyXG4gICAgICAgICAgICAkKFwiLmpzLWNyZWF0ZS11c2VyXCIpLnZhbGlkYXRlKHtcclxuICAgICAgICAgICAgICAgIGVycm9yRWxlbWVudENsYXNzOiBcImVycm9yXCIsXHJcbiAgICAgICAgICAgICAgICBlcnJvckNsYXNzOiBcImVycm9yLWl0ZW1cIixcclxuICAgICAgICAgICAgICAgIGVycm9yRWxlbWVudDogXCJzcGFuXCIsXHJcbiAgICAgICAgICAgICAgICAvL2Vycm9yTGFiZWxDb250YWluZXI6IFwiLmpzLXZhbGlkYXRlLWVycm9yXCIsXHJcbiAgICAgICAgICAgICAgICAvL3dyYXBwZXI6IFwibGlcIixcclxuICAgICAgICAgICAgICAgIHJ1bGVzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgZmlyc3ROYW1lOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBsYXN0TmFtZToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgbW9iaWxlOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBtb2JpbGVTRTogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgdGVsZXBob25lOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBob25lU0U6IHRydWVcclxuICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgbWVzc2FnZXM6IHsgIFxyXG4gICAgICAgICAgICAgICAgICAgIGZpcnN0TmFtZToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogIFwiRHUgbcOlc3RlIGFuZ2UgZsO2cm5hbW5cIlxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgbGFzdE5hbWU6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IFwiRHUgbcOlc3RlIGFuZ2UgZWZ0ZXJuYW1uXCJcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIG1vYmlsZToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogd2luZG93W1widmFsaWRhdGlvbk1lc3NhZ2VcIl0ubW9iaWxlU0UucmVxdWlyZWQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1vYmlsZVNFOiB3aW5kb3dbXCJ2YWxpZGF0aW9uTWVzc2FnZVwiXS5tb2JpbGVTRS52YWxpZFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgdGVsZXBob25lOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBob25lU0U6IHdpbmRvd1tcInZhbGlkYXRpb25NZXNzYWdlXCJdLnBob25lU0UudmFsaWRcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgIHByaXYuYWRkRW1haWxWYWxpZGF0aW9uID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmICgkKCkudmFsaWRhdGUpIHtcclxuICAgICAgICAgICAgJChcIiNqcy1tZS1jaGVjay11c2VyXCIpLnZhbGlkYXRlKHtcclxuICAgICAgICAgICAgICAgIGVycm9yRWxlbWVudENsYXNzOiBcImVycm9yXCIsXHJcbiAgICAgICAgICAgICAgICBlcnJvckNsYXNzOiBcImVycm9yLWl0ZW1cIixcclxuICAgICAgICAgICAgICAgIGVycm9yRWxlbWVudDogXCJzcGFuXCIsXHJcbiAgICAgICAgICAgICAgICBydWxlczoge1xyXG4gICAgICAgICAgICAgICAgICAgIGVtYWlsOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbWFpbDogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlczoge1xyXG4gICAgICAgICAgICAgICAgICAgIGVtYWlsOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiBcIkR1IG3DpXN0ZSBhbmdlIGVuIEUtcG9zdGFkcmVzc1wiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbWFpbDogXCJBbmdlIGVuIGtvcnJla3QgZXBvc3RcIlxyXG5cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgLy8gSW5pdGlhbGl6ZSBtb2R1bGVcclxuICAgICQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHByaXYuaW5pdCgpO1xyXG4gICAgfSk7XHJcbn0pKCk7XHJcbiIsIi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gLy9cclxuLy8gI0RPQ1VNRU5ULU1BTkFHRU1FTlRcclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAvL1xyXG5cclxuXHJcbndpbmRvdy5mYXJtZGF5ID0gd2luZG93LmZhcm1kYXkgfHwge307XHJcbmZhcm1kYXkubW9kdWxlcyA9IGZhcm1kYXkubW9kdWxlcyB8fCB7fTtcclxuXHJcblxyXG5mYXJtZGF5Lm1vZHVsZXMuZG9jdW1lbnRNYW5hZ2VtZW50ID0gKGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBwcml2ID0ge307XHJcblxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUHJpdmF0ZSBpbml0aWFsaXphdGlvbiBtZXRob2RcclxuICAgICAqL1xyXG4gICAgcHJpdi5pbml0ID0gZnVuY3Rpb24gKCkge1xyXG5cclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBBZGQgZmlsZVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgICQoZG9jdW1lbnQpLm9uKFwiY2hhbmdlXCIsIFwiLmpzLW5ldy1maWxlLXVwbG9hZFwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciB0ZW1wbGF0ZSA9ICQudGVtcGxhdGVzKFwiI25ldy1maWxlLWNyZWF0ZWQtdGVtcGxhdGVcIik7XHJcbiAgICAgICAgICAgIHZhciB0YXJnZXQgPSAkKHRoaXMpLmRhdGEoXCJ0YXJnZXRcIik7XHJcbiAgICAgICAgICAgIHZhciBmaWxlTmFtZSA9ICQodGhpcykudmFsKCk7XHJcbiAgICAgICAgICAgIHZhciBpdGVtQ29udGFpbmVyID0gJCh0YXJnZXQpLnByZXYoXCIuZG9jdW1lbnQtbWFuYWdlbWVudF9faXRlbS1jb250YWluZXJcIik7XHJcbiAgICAgICAgICAgIHZhciBjb2xsYXBzZUNvbnRyb2wgPSAkKHRoaXMpLmNsb3Nlc3QoXCJsaVwiKS5maW5kKFwiLmpzLXRvZ2dsZVwiKS5maXJzdCgpO1xyXG5cclxuICAgICAgICAgICAgdmFyIGRhdGEgPSB7XHJcbiAgICAgICAgICAgICAgICB1cmw6IFwiL1wiLFxyXG4gICAgICAgICAgICAgICAgbmFtZTogZmlsZU5hbWUsXHJcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU6IFwiaWNvbi0tZG9jdW1lbnRcIlxyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgaXRlbUNvbnRhaW5lci5yZW1vdmVDbGFzcyhcImlzLWVtcHR5XCIpO1xyXG4gICAgICAgICAgICAkKHRhcmdldCkucHJlcGVuZCh0ZW1wbGF0ZS5yZW5kZXIoZGF0YSkpO1xyXG4gICAgICAgICAgICBmYXJtZGF5Lm1vZHVsZXMudG9nZ2xlLnNob3coY29sbGFwc2VDb250cm9sKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQWRkIGZvbGRlclxyXG4gICAgICAgICAqL1xyXG4gICAgICAgICQoZG9jdW1lbnQpLm9uKFwiY2xpY2tcIiwgXCIuanMtYWRkLWZvbGRlclwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciB0ZW1wbGF0ZSA9ICQudGVtcGxhdGVzKFwiI2NyZWF0ZS1uZXctZm9sZGVyLXRlbXBsYXRlXCIpO1xyXG4gICAgICAgICAgICB2YXIgdGFyZ2V0ID0gJCh0aGlzKS5kYXRhKFwidGFyZ2V0XCIpO1xyXG4gICAgICAgICAgICB2YXIgaXRlbUNvbnRhaW5lciA9ICQodGFyZ2V0KS5wcmV2KFwiLmRvY3VtZW50LW1hbmFnZW1lbnRfX2l0ZW0tY29udGFpbmVyXCIpO1xyXG4gICAgICAgICAgICB2YXIgY29sbGFwc2VDb250cm9sID0gJCh0aGlzKS5jbG9zZXN0KFwibGlcIikuZmluZChcIi5qcy10b2dnbGVcIikuZmlyc3QoKTtcclxuXHJcbiAgICAgICAgICAgIGl0ZW1Db250YWluZXIucmVtb3ZlQ2xhc3MoXCJpcy1lbXB0eVwiKTtcclxuICAgICAgICAgICAgJCh0YXJnZXQpLnByZXBlbmQodGVtcGxhdGUucmVuZGVyKCkpO1xyXG4gICAgICAgICAgICBmYXJtZGF5Lm1vZHVsZXMudG9nZ2xlLnNob3coY29sbGFwc2VDb250cm9sKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogU2F2ZSBmb2xkZXJcclxuICAgICAgICAgKi9cclxuICAgICAgICAkKGRvY3VtZW50KS5vbihcInN1Ym1pdFwiLCBcIi5qcy1uZXctZm9sZGVyLWZvcm1cIiwgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgdmFyIGZvcm0gPSB0aGlzO1xyXG4gICAgICAgICAgICB2YXIgdGVtcGxhdGUgPSAkLnRlbXBsYXRlcyhcIiNuZXctZm9sZGVyLWNyZWF0ZWQtdGVtcGxhdGVcIik7XHJcbiAgICAgICAgICAgIHZhciBmb2xkZXJJbnB1dFJvdyA9ICQodGhpcykuY2xvc2VzdChcImxpXCIpO1xyXG4gICAgICAgICAgICB2YXIgdGFyZ2V0ID0gJCh0aGlzKS5jbG9zZXN0KFwidWxcIik7XHJcbiAgICAgICAgICAgIHZhciBmb2xkZXJOYW1lID0gJCh0aGlzKS5maW5kKFwiLm5ldy1mb2xkZXItaW5wdXRcIikudmFsKCk7XHJcblxyXG4gICAgICAgICAgICB2YXIgZGF0YSA9IHtcclxuICAgICAgICAgICAgICAgIGlkOiBuZXcgRGF0ZSgpLmdldFVUQ01pbGxpc2Vjb25kcygpLFxyXG4gICAgICAgICAgICAgICAgbmFtZTogZm9sZGVyTmFtZVxyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICAgICAgICAgICAgJChmb3JtKS52YWxpZGF0ZSgpO1xyXG5cclxuICAgICAgICAgICAgaWYgKCQoZm9ybSkudmFsaWQoKSkge1xyXG4gICAgICAgICAgICAgICAgZm9sZGVySW5wdXRSb3cucmVtb3ZlKCk7XHJcbiAgICAgICAgICAgICAgICAkKHRhcmdldCkucHJlcGVuZCh0ZW1wbGF0ZS5yZW5kZXIoZGF0YSkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIERlbGV0ZSBmaWxlXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgJChkb2N1bWVudCkub24oXCJjbGlja1wiLCBcIi5qcy1kZWxldGUtZmlsZVwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICQodGhpcykuY2xvc2VzdChcImxpXCIpLnJlbW92ZSgpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgIH07XHJcblxyXG5cclxuICAgIC8vIEluaXRpYWxpemUgbW9kdWxlXHJcbiAgICAkKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBwcml2LmluaXQoKTtcclxuICAgIH0pO1xyXG59KSgpO1xyXG4iXX0=
